-- phpMyAdmin SQL Dump
-- version 4.9.0.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: Apr 03, 2020 at 05:16 PM
-- Server version: 10.4.6-MariaDB
-- PHP Version: 7.1.32

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `springbatch`
--

-- --------------------------------------------------------

--
-- Table structure for table `acapplicationnotes`
--

CREATE TABLE `acapplicationnotes` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acapplicationnotes`
--

INSERT INTO `acapplicationnotes` (`id`, `testo`, `ida`) VALUES
('1104.8310481064648', '', 'ALC'),
('1158.9495530782608', '', 'AGD'),
('171.31340004508468', '', 'ACO'),
('342.0485143364158', '', 'ATE'),
('371.1010074808851', '', 'ADV'),
('44.62438350307797', 'Generally, the vulnerability assessment activity covers various\n            vulnerabilities in the development and operation of the\n            TOE. Development vulnerabilities take advantage of some property\n            of the TOE which was introduced during its development,\n            e.g. defeating the TSF self protection through tampering, direct\n            attack or monitoring of the TSF, defeating the TSF domain\n            separation through monitoring or direct attack the TSF, or\n            defeating non-bypassability through circumventing (bypassing)\n            the TSF.  Operational vulnerabilities take advantage of\n            weaknesses in non-technical countermeasures to violate the TOE\n            SFRs, e.g. misuse or incorrect configuration. Misuse\n            investigates whether the TOE can be configured or used in a\n            manner that is insecure, but that an administrator or user of\n            the TOE would reasonably believe to be secure.\n\n            Assessment of development vulnerabilities is covered by the\n            assurance family, AVA_VAN, . Basically,\n            all development vulnerabilities can be considered in the\n            context of, AVA_VAN, due to the fact,\n            that this family allows application of a wide range of\n            assessment methodologies being unspecific to the kind of an\n            attack scenario. These unspecific assessment methodologies\n            comprise, among other, also the specific methodologies for\n            those TSF where covert channels are to be considered (a\n            channel capacity estimation can be done using informal\n            engineering measurements, as well as actual test measurements)\n            or can be overcome by the use of sufficient resources in the\n            form of a direct attack (underlying technical concept of those\n            TSF is based on probabilistic or permutational mechanisms; a\n            qualification of their security behaviour and the effort\n            required to overcome them can be made using a quantitative or\n            statistical analysis).\n\n            If there are security objectives specified in the ST to either\n            to prevent one user of the TOE from observing activity\n            associated with another user of the TOE, or to ensure that\n            information flows cannot be used to achieve enforced illicit\n            data signals, covert channel analysis should be considered\n            during the conduct of the vulnerability analysis.  This is often\n            reflected by the inclusion of, FPR_UNO, and multilevel access control policies specified through, FDP_ACC, and/or, FDP_IFC, requirements in the ST.', 'AVA'),
('793.8252597915649', '', 'APE'),
('866.4513523223318', '', 'ACE'),
('922.652307816508', '', 'ASE');

-- --------------------------------------------------------

--
-- Table structure for table `acintroduction`
--

CREATE TABLE `acintroduction` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acintroduction`
--

INSERT INTO `acintroduction` (`id`, `testo`, `ida`) VALUES
('1109.2155188360794', 'The requirements of the Development class provide information\n            about the TOE. The knowledge obtained by this information is\n            used as the basis for conducting vulnerability analysis and\n            testing upon the TOE, as described in the, AVA, and, ATE, classes.\n\n\n            The Development class encompasses six families of requirements\n            for structuring and representing the TSF at various levels and\n            varying forms of abstraction. These families include:, ADV, When documenting the security functionality of a TOE, there\n            are two properties that need to be demonstrated.  The first\n            property is that the security functionality works correctly;\n            that is, it performs as specified. The second property, and\n            one that is arguably harder to demonstrate, is that the TOE\n            cannot be used in a way such that the security functionality\n            can be corrupted or bypassed. These two properties require\n            somewhat different approaches in analysis, and so the families\n            in, ADV_FSP, are structured to support these\n            different approaches. The families, ADV_TDS, ,, ADV_IMP, ,, ADV_SPM, , and, ADV_ARC, deal with the first property: the specification\n            of the security functionality. The families, ADV_INT, and, ADV-RELATIONSHIPS, deal with\n            the second property: the specification of the design of the\n            TOE demonstrating the security functionality cannot be\n            corrupted or bypassed. It should be noted that both properties\n            need to be realised: the more confidence one has that the\n            properties are satisfied, the more trustworthy the TOE is. The\n            components in the families are designed so that more assurance\n            can be gained as the components hierarchically\n            increase.\n\n            The paradigm for the families targeted at the first property\n            is one of design decomposition. At the highest level, there is\n            a functional specification of the TSF in terms of its\n            interfaces (describing\n            what\n            the TSF does in\n            terms of requests to the TSF for services and resulting\n            responses), decomposing the TSF into smaller units (dependent\n            on the assurance desired and the complexity of the TOE) and\n            describing\n            how\n            the TSF accomplishes its\n            functions (to a level of detail commensurate with the\n            assurance level), and showing the implementation of the TSF. A\n            formal model of the security behaviour also may be given. All\n            levels of decomposition are used in determining the\n            completeness and accuracy of all other levels, ensuring that\n            the levels are mutually supportive. The requirements for the\n            various TSF representations are separated into different\n            families, to allow the PP/ST author to specify which TSF\n            representations are required. The level chosen will dictate\n            the assurance desired/gained.\n\n            Figure, ADV, indicates the\n            relationships among the various TSF representations of the, APE, class, as well as their\n            relationships with other classes. As the figure indicates, the, ASE, and, ASE, classes define the requirements for the correspondence between\n            the SFRs and the security objectives for the TOE. Class, ALC_CMC.5.2E, also defines requirements for the\n            correspondence between both the security objectives and SFRs,\n            and for the TOE summary specification which explains how the\n            TOE meets its SFRs.  The activities of, ATE, include the verification that the TSF that is\n            tested under the, AVA, and, ADV, classes is in fact the one described by all of the, ADV-RELATIONSHIPS, decomposition levels., ADV, The requirements for all other correspondence shown in Figure, ADV_SPM, are defined in the, ADV_FSP, class. The, ADV_TDS, family defines the requirements for formally\n            modelling selected SFRs, and providing correspondence between\n            the functional specification and the formal model.  Each\n            assurance family specific to a TSF representation (i.e.,, ADV_IMP, ,, ADV_INT, and, ADV_ARC, ) defines requirements\n            relating that TSF representation to the SFRs. All\n            decompositions must accurately reflect all other\n            decompositions (i.e., be mutually supportive); the developer\n            supplies the tracings in the last .C elements of the\n            components. Assurance relating to this factor is obtained\n            during the analysis for each of the levels of decomposition by\n            referring to other levels of decomposition (in a recursive\n            fashion) while the analysis of a particular level of\n            decomposition is being performed; the evaluator verifies the\n            correspondence as part of the second E element. The\n            understanding gained from these levels of decomposition form\n            the basis of the functional and penetration testing\n            efforts.\n\n            The, ADV_INT, family is not represented\n            in this figure, as it is related to the internal structure of\n            the TSF, and is only indirectly related to the process of\n            refinement of the TSF representations. Similarly, the, ADV_ARC, family is not represented in the\n            figure because it relates to the architectural soundness,\n            rather than representation, of the TSF. Both, ADV, and, ADV_FSP, relate to the analysis of the property that the TOE cannot be\n            made to circumvent or corrupt its security\n            functionality.\n\n            The TOE security functionality (TSF) consists of all parts of\n            the TOE that have to be relied upon for enforcement of the\n            SFRs. The TSF includes both functionality that directly\n            enforces the SFRs, as well as functionality that, while not\n            directly enforcing the SFRs, contributes to their enforcement\n            in a more indirect manner, including functionality with the\n            capability to cause the SFRs to be violated. This includes\n            portions of the TOE that are invoked on start-up that are\n            responsible for putting the TSF into its initial secure\n            state.\n\n            Several important concepts were used in the development of the\n            components of the, ADV_TDS, families. These\n            concepts, while introduced briefly here, are explained more\n            fully in the application notes for the families.\n\n            One over-riding notion is that, as more information becomes\n            available, greater assurance can be obtained that the security\n            functionality 1) is correctly implemented; 2) cannot be\n            corrupted; and 3) cannot be bypassed. This is done through the\n            verification that the documentation is correct and consistent\n            with other documentation, and by providing information that\n            can be used to ensure that the testing activities (both\n            functional and penetration testing) are comprehensive. This is\n            reflected in the levelling of the components of the\n            families. In general, components are levelled based on the\n            amount of information that is to be provided (and subsequently\n            analysed).\n\n            While not true for all TOEs, it is generally the case that the\n            TSF is sufficiently complex that there are portions of the TSF\n            that deserve more intense examination than other portions of\n            the TSF. Determining those portions is unfortunately somewhat\n            subjective, thus terminology and components have been defined\n            such that as the level of assurance increases, the\n            responsibility for determining what portions of the TSF need\n            to be examined in detail shifts from the developer to the\n            evaluator. To aid in expressing this concept, the following\n            terminology is introduced. It should be noted that in the\n            families of the class, this terminology is used when\n            expressing SFR-related portions of the TOE (that is, elements\n            and work units embodied in the, ADV_IMP, ,, ADV_ARC, , and, ADV, families). While the general\n            concept (that some portions of the TOE are more\n\n            interesting\n            than others) applies to other\n            families, the criteria are expressed differently in order to\n            obtain the assurance required.\n\n            All portions of the TSF are\n            security\n            relevant\n            , meaning that they must preserve the\n            security of the TOE as expressed by the SFRs and\n            requirements for domain separation and\n            non-bypassability. One aspect of security relevance is the\n            degree to which a portion of the TSF enforces a security\n            requirement. Since different portions of the TOE play\n            different roles (or no apparent role at all) in enforcing\n            security requirements, this creates a continuum of SFR\n            relevance: at one end of this continuum are portions of the\n            TOE that are termed\n            SFR-enforcing\n            . Such\n            portions play a direct role in implementing any SFR on the\n            TOE. Such SFRs refer to any functionality provided by one of\n            the SFRs contained in the ST. It should be noted that the\n            definition of\n            plays a role in\n            for\n            SFR-enforcing functionality is impossible to express\n            quantitatively. For example, in the implementation of a\n            Discretionary Access Control (DAC) mechanism, a very narrow\n            view of\n            SFR-enforcing\n            might be the several\n            lines of code that actually perform the check of a subject\'s\n            attributes against the object\'s attributes. A broader view\n            would include the software entity (e.g., C function) that\n            contained the several lines of code. A broader view still\n            would include callers of the C function, since they would be\n            responsible for enforcing the decision returned by the\n            attribute check. A still broader view would include any code\n            in the call tree (or programming equivalent for the\n            implementation language used) for that C function (e.g., a\n            sort function that sorted access control list entries in a\n            first-match algorithm implementation). At some point, the\n            component is not so much\n            enforcing\n            the\n            security policy but rather plays a\n\n            supporting\n            role; such components are termed\n\n            SFR supporting\n            .\n\n            One of the characteristics of SFR-supporting functionality is\n            that it is trusted to preserve the correctness of the SFR\n            implementation by operating without error. Such functionality\n            may be depended on by SFR-enforcing functionality, but the\n            dependence is generally at a functional level; for example,\n            memory management, buffer management, etc. Further down on the\n            security relevance continuum is functionality termed\n\n            SFR non-interfering\n            . Such functionality has\n            no role in implementing the SFRs, and is likely part of the\n            TSF because of its environment; for example, any code running\n            in a privileged hardware mode on an operating system. It needs\n            to be considered part of the TSF because, if compromised (or\n            replaced by malicious code), it could compromise the correct\n            operation of an SFR by virtue of its operating in the\n            privileged hardware mode. An example of SFR non-interfering\n            functionality might be a set of mathematical floating point\n            operations implemented in kernel mode for speed\n            considerations.\n\n            The architecture family (, ADV_ARC, )\n            provides for requirements and analysis of the TOE based on\n            properties of domain separation, self-protection, and\n            non-bypassability. These properties relate to the SFRs in\n            that, if these properties are not present, it will likely lead\n            to the failure of mechanisms implementing SFRs. Functionality\n            and design relating to these properties\n            is\n            not\n            considered a part of the continuum described\n            above, but instead is treated separately due to its\n            fundamentally different nature and analysis\n            requirements.\n\n            The difference in analysis of the implementation of SFRs\n            (SFR-enforcing and SFR-supporting functionality) and the\n            implementation of somewhat fundamental security properties of\n            the TOE, which include the initialisation, self-protection,\n            and non-bypassability concerns, is that the SFR-related\n            functionality is more or less directly visible and relatively\n            easy to test, while the above-mentioned properties require\n            varying degrees of analysis on a much broader set of\n            functionality. Further, the depth of analysis for such\n            properties will vary depending on the design of the TOE. The, families are constructed to address\n            this by a separate family (, )\n            devoted to analysis of the initialisation, self-protection,\n            and non-bypassability requirements, while the other families\n            are concerned with analysis of the functionality supporting\n            SFRs.\n\n            Even in cases where different descriptions are necessary for\n            the multiple levels of abstraction, it is not absolutely\n            necessary for each and every TSF representation to be in a\n            separate document. Indeed, it may be the case that a single\n            document meets the documentation requirements for more than\n            one TSF representation, since it is the information about each\n            of these TSF representations that is required, rather than the\n            resulting document structure. In cases where multiple TSF\n            representations are combined within a single document, the\n            developer should indicate which portions of the documents meet\n            which requirements.\n\n            Three types of specification style are mandated by this class:\n            informal, semiformal and formal. The functional specification\n            and TOE design documentation are always written in either\n            informal or semiformal style. A semiformal style reduces the\n            ambiguity in these documents over an informal presentation. A\n            formal specification may also be required\n            in addition\n            to\n            the semi-formal presentation; the value is that a\n            description of the TSF in more than one way will add increased\n            assurance that the TSF has been completely and accurately\n            specified.\n\n            An informal specification is written as prose in natural\n            language. Natural language is used here as meaning\n            communication in any commonly spoken tongue (e.g. Spanish,\n            German, French, English, Dutch). An informal specification is\n            not subject to any notational or special restrictions other\n            than those required as ordinary conventions for that language\n            (e.g. grammar and syntax). While no notational restrictions\n            apply, the informal specification is also required to provide\n            defined meanings for terms that are used in a context other\n            than that accepted by normal usage.\n\n            The difference between semiformal and informal documents is\n            only a matter of formatting or presentation: a semiformal\n            notation includes such things as an explicit glossary of\n            terms, a standardised presentation format, etc. A semiformal\n            specification is written to a standard presentation\n            template. The presentation should use terms consistently if\n            written in a natural language. The presentation may also use\n            more structured languages/diagrams (e.g. data-flow diagrams,\n            state transition diagrams, entity-relationship diagrams, data\n            structure diagrams, and process or program structure\n            diagrams). Whether based on diagrams or natural language, a\n            set of conventions must be used in the presentation. The\n            glossary explicitly identifies the words that are being used\n            in a precise and constant manner; similarly, the standardised\n            format implies that extreme care has been taken in\n            methodically preparing the document in a manner that maximises\n            clarity. It should be noted that fundamentally different\n            portions of the TSF may have different semiformal notation\n            conventions and presentation styles (as long as the number of\n            different ``semiformal notations\'\' is small); this still\n            conforms to the concept of a\n            semiformal\n            presentation\n            .\n\n            A formal specification is written in a notation based upon\n            well-established mathematical concepts, and is typically\n            accompanied by supporting explanatory (informal) prose. These\n            mathematical concepts are used to define the syntax and\n            semantics of the notation and the proof rules that support\n            logical reasoning. The syntactic and semantic rules supporting\n            a formal notation should define how to recognise constructs\n            unambiguously and determine their meaning. There needs to be\n            evidence that it is impossible to derive contradictions, and\n            all rules supporting the notation need to be defined or\n            referenced.', 'ADV'),
('1202.106183646945', 'Evaluating an ST is required to demonstrate that the ST is\n            sound and internally consistent, and, if the ST is based on\n            one or more PPs or packages, that the ST is a correct\n            instantiation of these PPs and packages. These properties are\n            necessary for the ST to be suitable for use as the basis for a\n            TOE evaluation.\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.', 'ASE'),
('1254.8398034222962', 'Evaluating a PP is required to demonstrate that the PP is\n            sound and internally consistent, and, if the PP is based on\n            one or more other PPs or on packages, that the PP is a correct\n            instantiation of these PPs and packages. These properties are\n            necessary for the PP to be suitable for use as the basis for\n            writing an ST or another PP.\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.\n\n            This standard defines two assurance packages for PP evaluation as follows:, TABLE-PP-ASSURANCE, The assurance components for these packages are defined by table, ., ', 'APE'),
('302.48593500455087', 'The, AVA, class addresses the\n            possibility of exploitable vulnerabilities introduced in the\n            development or the operation of the TOE.', 'AVA'),
('418.48522541944806', 'The class, ACO, encompasses five\n            families. These families specify assurance requirements that\n            are designed to provide confidence that a composed TOE will\n            operate securely when relying upon security functionality\n            provided by previously evaluated software, firmware or\n            hardware components.\n\n            Composition involves taking two or more IT entities\n            successfully evaluated against CC security assurance\n            requirements packages (base components and dependent\n            components, see, ACO-ANNEX, ) and\n            combining them for use, with no further development of either\n            IT entity. The development of additional IT entities is not\n            included (entities that have not previously been the subject\n            of a component evaluation). The composed TOE forms a new\n            product that can be installed and integrated into any specific\n            environment instance that meets the objectives for the\n            environment.\n\n            This approach does not provide an alternative approach for the\n            evaluation of components. Composition under, ACO, provides a composed TOE integrator a method, which\n            can be used as an alternative to other assurance levels\n            specified in the CC, to gain confidence in a TOE that is the\n            combination of two or more successfully evaluated components\n            without having to re-evaluate the composite TSF. (The composed\n            TOE integrator is referred to as ``developer\'\' throughout the, ACO, class, with any references to the\n            developer of the base or dependent components clarified as\n            such.)\n\n            Composed Assurance Packages, as defined in Clauses, CAPCLAUSE, and, ASSURANCE-REQUIREMENTS-CAP-STRUCTURE, , is an\n            assurance scale for composed TOEs. This assurance scale is\n            required in addition to EALs because to combine components\n            evaluated against EALs and gain a resulting EAL assurance, all\n            SARs in the EAL have to be applied to the composed\n            TOE. Although reuse can be made of the component TOE\n            evaluation results, there are often additional aspects of the\n            components that have to be considered in the composed TOE, as\n            described in Annex, ACO-INTERACTIONS-IT-ENTITIES, . Due to the different parties involved in a\n            composed TOE evaluation activity it is generally not possible\n            to gain all necessary evidence about these additional aspects\n            of the components to apply the appropriate EAL. Hence, CAPs\n            have been defined to address the issue of combining evaluated\n            components and gaining a meaningful result. This is discussed\n            further in, ACO-ANNEX, ., ACO, In a composed TOE it is generally the case that one component\n            relies on the services provided by another component. The\n            component requiring services is termed the dependent component\n            and the component providing the services is termed the base\n            component. This interaction and distinct is discussed further\n            in Annex B. It is assumed to be the case that the developer of\n            the dependent component is supporting the composed TOE\n            evaluation in some manner (as developer, sponsor, or just\n            cooperating and providing the necessary evaluation evidence\n            from the dependent component evaluation) The, ACO, components included in the CAP assurance packages\n            should not be used as augmentations for component TOE\n            evaluations, as this would provide no meaningful assurance for\n            the component.\n\n            The families within the, ADV, class\n            interact in a similar manner to the, ATE, ,, AVA, and, ACO_REL, classes in a component TOE evaluation and hence\n            leverage from the specification of requirements from those\n            classes where applicable. There are however a few items\n            specific to composed TOE evaluations. To determine how the\n            components interact and identify any deviations from the\n            evaluations of the components, the dependencies that the\n            dependent component has upon the underlying base component are\n            identified (, ACO_DEV, ). This reliance on\n            the base component is specified in terms of the interfaces\n            through which the dependent component makes calls for services\n            in support of the dependent component SFRs. The interfaces,\n            and at higher levels the supporting behaviour, provided by the\n            base component in response to those service requests are\n            analysed in, ACO_DEV, . The, ADV_TDS, family is based on the, ACO_DEV, family, as at the simplest level the\n            TSF of each component can be viewed as a subsystem of the\n            composed TOE, with additional portions of each component seen\n            as additional subsystems. Therefore, the interfaces between\n            the components are seen as interactions between subsystems in\n            a component TOE evaluation.\n\n            It is possible that the interfaces and supporting behaviour\n            descriptions provided for, ACO_COR, are\n            incomplete. This is determined during the conduct of, ACO_COR, . The, ACO_REL, family takes the outputs of, ACO_DEV, and, ACO_CTT, and determines whether the\n            components are being used in their evaluated configuration and\n            identifies where any specifications are incomplete, which are\n            then identified as inputs into testing (, ACO_VUL, ) and vulnerability analysis (, ACO, ) activities of the composed TOE.\n\n            Testing of the composed TOE is performed to determine that the\n            composed TOE exhibits the expected behaviour as determined by\n            the composed TOE SFRs, and at higher levels demonstrates the\n            compatibility of the interfaces between the components of the\n            composed TOE.\n\n            The vulnerability analysis of the composed TOE leverages from\n            the outputs of the vulnerability analysis of the component\n            evaluations. The composed TOE vulnerability analysis considers\n            any residual vulnerabilities from the component evaluations to\n            determine that the residual vulnerabilities are not applicable\n            to the composed TOE. A search of publicly available\n            information relating to the components is also performed to\n            identify any issues reported in the components since the\n            completion of the respective evaluations.\n\n            The interaction between the, ACO-FAMILY-INTERACTION, families is depicted in Figure, ACO-ANNEX, below. This shows by solid arrowed lines where\n            the evidence and understanding gained in one family feeds into\n            the next activity and the dashed arrows identify where an\n            activity explicitly traces back to the composed TOE SFRs, as\n            described above., Further discussion of the definition and interactions within\n            composed TOEs is provided in, .', 'ACO'),
('622.5019269319597', '\n\n            The guidance documents class provides the requirements for\n            guidance documentation for all user roles. For the secure\n            preparation and operation of the TOE it is necessary to\n            describe all relevant aspects for the secure handling of the\n            TOE. The class also addresses the possibility of unintended\n            incorrect configuration or handling of the TOE.\n\n            In many cases it may be appropriate that guidance is provided\n            in separate documents for preparation and operation of the\n            TOE, or even separate for different user roles as end-users,\n            administrators, application programmers using software or\n            hardware interfaces, etc.\n\n            The guidance documents class is subdivided into two families\n            which are concerned with the preparative user guidance (what\n            has to be done to transform the delivered TOE into its\n            evaluated configuration in the operational environment as\n            described in the ST) and with the operational user guidance\n            (what has to be done during the operation of the TOE in its\n            evaluated configuration).\n        ', 'AGD'),
('63.24082286903901', 'The class ``Tests\'\' encompasses four families:, ATE_COV, ,, ATE_DPT, ,, ATE_IND, (i.e. functional testing\n            performed by evaluators), and, ATE_FUN, .  Testing provides assurance that the TSF\n            behaves as described (in the functional specification, TOE\n            design, and implementation representation).\n\n            The emphasis in this class is on confirmation that the TSF\n            operates according to its design descriptions. This class does\n            not address penetration testing, which is based upon an\n            analysis of the TSF that specifically seeks to identify\n            vulnerabilities in the design and implementation of the\n            TSF. Penetration testing is addressed separately as an aspect\n            of vulnerability assessment in the, AVA, class.\n\n            The, ATE, class separates testing into\n            developer testing and evaluator testing. The, ATE_COV, and, ATE_DPT, families address the completeness of developer\n            testing., ATE_COV, addresses the rigour\n            with which the functional specification is tested;, ATE_DPT, addresses whether testing against\n            other design descriptions (security architecture, TOE design,\n            implementation representation) is required., ATE_FUN, addresses the performing of\n            the tests by the developer and how this testing should be\n            documented. Finally,, ATE_IND, then\n            addresses evaluator testing: whether the evaluator should\n            repeat part or all of the developer testing and how much\n            independent testing the evaluator should do.', 'ATE'),
('67.12481182250254', 'Evaluating a PP-Configuration is required to demonstrate that the PP-Configuration is\n            sound and consistent. These properties are necessary for the PP-Configuration to be\n            suitable for use as the basis for writing an ST or another PP or PP-Configuration.\n\n            The class ACE is defined for the evaluation of a PP-Configuration composed of one or\n            more PPs and one PP-Module.\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC Part 1, as these Annexes clarify the concepts here and provide many examples.\n\n            This standard does not define low assurance PP-Configuration evaluation package.\n            There is only one assurance package for PP-Configuration evaluation, equivalent to\n            Standard PP evaluation package.\n\n            Figure, ACE-CLASS-DECOMPOSITION, shows the families within this class, and the hierarchy of components within\n            the families., The ACE class is based on APE.', 'ACE'),
('928.5079212818108', 'Life-cycle support is an aspect of establishing discipline and\n            control in the processes of refinement of the TOE during its\n            development and maintenance. Confidence in the correspondence\n            between the TOE security requirements and the TOE is greater\n            if security analysis and the production of the evidence are\n            done on a regular basis as an integral part of the development\n            and maintenance activities.\n\n            In the product life-cycle it is distinguished whether the TOE\n            is under the responsibility of the developer or the user\n            rather than whether it is located in the development or user\n            environment. The point of transition is the moment where the\n            TOE is handed over to the user. This is also the point of\n            transition from the, ALC, to the, AGD, class.\n\n            The, ALC, class consists of seven\n            families., ALC_LCD, is the high-level\n            description of the TOE life-cycle;, ALC_CMC, a more detailed description of the management\n            of the configuration items., ALC_CMS, requires a minimum set of configuration items to be managed in\n            the defined way., ALC_DVS, is\n            concerned with the developer\'s physical, procedural,\n            personnel, and other security measures;, ALC_TAT, with the development tools and implementation\n            standards used by the developer;, ALC_FLR, with the handling of security flaws., ALC_DEL, defines the procedures used for\n            the delivery of the TOE to the consumer. Delivery processes\n            occurring during the development of the TOE are denoted rather\n            as transportations, and are handled in the context of\n            integration and acceptance procedures in other families of\n            this class.\n\n            Throughout this class, development and related terms\n            (developer, develop) are meant in the more general sense to\n            comprise development\n            and production\n            , whereas\n            production specifically means the process of transforming the\n            implementation representation into the final TOE.', 'ALC');

-- --------------------------------------------------------

--
-- Table structure for table `aclass`
--

CREATE TABLE `aclass` (
  `id` varchar(4) NOT NULL,
  `name` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aclass`
--

INSERT INTO `aclass` (`id`, `name`) VALUES
('ACE', 'Protection Profile Configuration evaluation'),
('ACO', 'Composition'),
('ADV', 'Development'),
('AGD', 'Guidance documents'),
('ALC', 'Life-cycle support'),
('APE', 'Protection Profile evaluation'),
('ASE', 'Security Target evaluation'),
('ATE', 'Tests'),
('AVA', 'Vulnerability assessment');

-- --------------------------------------------------------

--
-- Table structure for table `acoapplicationnotes`
--

CREATE TABLE `acoapplicationnotes` (
  `id_acoapplicationnotes` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acoapplicationnotes`
--

INSERT INTO `acoapplicationnotes` (`id_acoapplicationnotes`, `testo`, `ida`, `idf`) VALUES
('-1295275426', '\n\n                    The intent is that the developer should provide the\n                    evaluator with materials necessary for the efficient\n                    reproduction of developer tests. This may include such\n                    things as machine-readable test documentation, test\n                    programs, etc.\n\n                    In this component the evaluator must repeat all of the\n                    developer\'s tests as part of the programme of testing. As\n                    in the previous component the evaluator will also conduct\n                    tests that aim to exercise the TSF in a different manner\n                    from that achieved by the developer. In cases where\n                    developer testing has been exhaustive, there may remain\n                    little scope for this.\n                ', 'ate', 'ate_ind'),
('-1315373296', '\n\n            All content and presentation elements of APE_INT.1 hold with PP-Module instead of PP.\n\n        ', 'ace', 'ace_int'),
('-1664556433', ', ALC_CMS.2.1C, introduces the\n                    requirement that the parts that comprise the TOE (all\n                    parts that are delivered to the consumer, for example\n                    hardware parts or executable files) be included in the\n                    configuration list and hence be subject to the CM\n                    requirements of, ALC_CMC, ., ALC_CMS.2.3C, introduces the\n                    requirement that the configuration list indicate the\n                    developer of each TSF relevant configuration\n                    item. ``Developer\'\' here does not refer to a person, but\n                    to the organisation responsible for the development of the\n                    item.', 'alc', 'alc_cms'),
('-2070085380', 'This component requires the PP or ST author to fill in an\n                    assignment with the subset of the TSF. This subset may be\n                    identified in terms of the internals of the TSF at any\n                    layer of abstraction. For example:, FPR_ANO.2, It is likely this would not be readily accomplished by\n                    referencing the claimed SFRs (e.g. ``The developer shall\n                    design and implement\n                    the portion of the TSF that\n                    provide anonymity as defined in, such that it has well-structured\n                    internals.\'\') because this does not indicate where to\n                    focus the analysis.\n\n                    This component has limited value and would be suitable in cases\n                    where potentially-malicious users/subjects have limited or\n                    strictly controlled access to the TSFIs or where there is\n                    another means of protection (e.g., domain separation) that\n                    ensures the chosen subset of the TSF cannot be adversely\n                    affected by the rest of the TSF (e.g., the cryptographic\n                    functionality, which is isolated from the rest of the TSF, is\n                    well-structured).', 'adv', 'adv_int'),
('-233737214', '\n\n                    Judgements on the adequacy of the structure and complexity\n                    are expected to be derived from the specific technologies\n                    used in the TOE. This component calls for identifying the\n                    standards for measuring the structure and\n                    complexity.\n                ', 'adv', 'adv_int'),
('-602027905', ', ALC_CMS.3.1C, introduces the\n                    requirement that the TOE implementation representation be\n                    included in the list of configuration items and hence be\n                    subject to the CM requirements of, ALC_CMC, .', 'alc', 'alc_cms'),
('-688581755', ', ALC_CMS.4.1C, introduces the\n                    requirement that security flaws be included in the\n                    configuration list and hence be subject to the CM\n                    requirements of, ALC_CMC, . This\n                    requires that information regarding previous security\n                    flaws and their resolution be maintained, as well as\n                    details regarding current security flaws.', 'alc', 'alc_cms'),
('-742293741', ', ALC_CMS.5.1C, introduces the\n                    requirement that development tools and other related\n                    information be included in the list of configuration items\n                    and hence be subject to the CM requirements of, ALC_CMC, . Examples of development tools\n                    are programming languages and compilers. Information\n                    pertaining to TOE generation items (such as compiler\n                    options, generation options, and build options) is an\n                    example of information relating to development\n                    tools.', 'alc', 'alc_cms'),
('-826764141', '\n\n                    In this component the developer confirms that tests in the\n                    test documentation correspond to all of the TSFIs in the\n                    functional specification. This can be achieved by a\n                    statement of correspondence, perhaps using a table, but\n                    the developer also provides an analysis of the test\n                    coverage.\n                ', 'ate', 'ate_cov'),
('-987538582', '\n\n                    In this component the developer shows how tests in the\n                    test documentation correspond to TSFIs in the functional\n                    specification. This can be achieved by a statement of\n                    correspondence, perhaps using a table.\n                ', 'ate', 'ate_cov'),
('1', '', 'aco', 'aco_cor'),
('163007032', '\n\n                    Judgements on the adequacy of the structure are expected to\n                    be derived from the specific technologies used in the TOE.\n                    This component calls for identifying the standards for\n                    measuring the characteristic of being\n                    well-structured.\n                ', 'adv', 'adv_int'),
('1640400688', '\n\n                    Although the test procedures may state pre-requisite\n                    initial test conditions in terms of ordering of tests,\n                    they may not provide a rationale for the ordering. An\n                    analysis of test ordering is an important factor in\n                    determining the adequacy of testing, as there is a\n                    possibility of faults being concealed by the ordering of\n                    tests.\n                ', 'ate', 'ate_fun'),
('1657749278', ', ALC_CMS.1.1C, introduces the\n                    requirement that the TOE itself and the evaluation\n                    evidence required by the other SARs in the ST be included\n                    in the configuration list and hence be subject to the CM\n                    requirements of, ALC_CMC, .', 'alc', 'alc_cms'),
('1719579760', '\n\n                    All content and presentation elements of APE_SPD.1 hold.\n                ', 'ace', 'ace_spd'),
('1899718475', '\n\n                    This component does not address the use of developer test\n                    results. It is applicable where such results are not\n                    available, and also in cases where the developer\'s testing\n                    is accepted without validation. The evaluator is required\n                    to devise and conduct tests with the objective of\n                    confirming that the TOE operates in accordance with its\n                    design representations, including but not limited to the\n                    functional specification. The approach is to gain\n                    confidence in correct operation through representative\n                    testing, rather than to conduct every possible test. The\n                    extent of testing to be planned for this purpose is a\n                    methodology issue, and needs to be considered in the\n                    context of a particular TOE and the balance of other\n                    evaluation activities.\n                ', 'ate', 'ate_ind'),
('392745333', '\n                All content and presentation elements of APE_OBJ.2 hold.\n            ', 'ace', 'ace_obj'),
('691442905', '\n\n                    In this component the developer is required to show how\n                    tests in the test documentation correspond to all of the\n                    TSFIs in the functional specification. This can be\n                    achieved by a statement of correspondence, perhaps using a\n                    table, but in addition the developer is required to\n                    demonstrate that the tests exercise all of the parameters\n                    of all TSFIs. This additional requirement includes bounds\n                    testing (i.e. verifying that errors are generated when\n                    stated limits are exceeded) and negative testing\n                    (e.g. when access is given to User A, verifying not only\n                    that User A now has access, but also that User B did not\n                    suddenly gain access). This kind of testing is not,\n                    strictly speaking,\n                    exhaustive\n                    because not\n                    every possible value of the parameters is expected to be\n                    checked.\n                ', 'ate', 'ate_cov'),
('725586675', '\n\n                    The intent is that the developer should provide the\n                    evaluator with materials necessary for the efficient\n                    reproduction of developer tests. This may include such\n                    things as machine-readable test documentation, test\n                    programs, etc.\n\n                    This component contains a requirement that the evaluator\n                    has available test results from the developer to\n                    supplement the programme of testing. The evaluator will\n                    repeat a sample of the developer\'s tests to gain\n                    confidence in the results obtained. Having established\n                    such confidence the evaluator will build upon the\n                    developer\'s testing by conducting additional tests that\n                    exercise the TOE in a different manner. By using a\n                    platform of validated developer test results the evaluator\n                    is able to gain confidence that the TOE operates correctly\n                    in a wider range of conditions than would be possible\n                    purely using the developer\'s own efforts, given a fixed\n                    level of resource. Having gained confidence that the\n                    developer has tested the TOE, the evaluator will also have\n                    more freedom, where appropriate, to concentrate testing in\n                    areas where examination of documentation or specialist\n                    knowledge has raised particular concerns.\n                ', 'ate', 'ate_ind');

-- --------------------------------------------------------

--
-- Table structure for table `acodependsoncomponent`
--

CREATE TABLE `acodependsoncomponent` (
  `id_acodependsoncomponent` varchar(100) NOT NULL,
  `acomponent` varchar(100) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acodependsoncomponent`
--

INSERT INTO `acodependsoncomponent` (`id_acodependsoncomponent`, `acomponent`, `ida`, `idf`) VALUES
('0.23424147398046435', 'adv_imp.1', 'adv', 'adv_fsp'),
('0.3551810144909411', 'adv_arc.1', 'ase', 'ase_tss'),
('0.3946585130648268', 'agd_pre.1', 'ate', 'ate_ind'),
('0.5749837680615649', 'ate_fun.1', 'ate', 'ate_cov'),
('0.7045505350962069', 'adv_imp.1', 'alc', 'alc_tat'),
('0.8467294280189271', 'ase_ecd.1', 'ase', 'ase_req'),
('1.0334969159427039', 'adv_tds.1', 'adv', 'adv_fsp'),
('1.1721789072799573', 'adv_arc.1', 'ava', 'ava_van'),
('1.421933107199076', 'aco_dev.1', 'aco', 'aco_cor'),
('1.431622962982054', 'adv_fsp.2', 'ate', 'ate_cov'),
('1.5853691619723027', 'alc_cms.1', 'alc', 'alc_cmc'),
('1.9280914283796362', 'agd_ope.1', 'ava', 'ava_van'),
('10.00511934404213', 'alc_cms.1', 'alc', 'alc_cmc'),
('10.213891993904618', 'ace_int.1', 'ace', 'ace_ccl'),
('10.480229385319317', 'adv_fsp.4', 'ava', 'ava_van'),
('10.4806469500328', 'adv_tds.4', 'ate', 'ate_dpt'),
('10.713330251791572', 'alc_lcd.1', 'alc', 'alc_cmc'),
('10.935235688979349', 'aco_rel.2', 'aco', 'aco_dev'),
('10.958255313089495', 'aco_dev.2', 'aco', 'aco_vul'),
('11.364615130605577', 'ase_spd.1', 'ase', 'ase_obj'),
('11.387324867551973', 'adv_fsp.4', 'ate', 'ate_ind'),
('11.855212507378104', 'adv_arc.1', 'ate', 'ate_dpt'),
('12.07358485247269', 'agd_ope.1', 'ava', 'ava_van'),
('12.302522051921391', 'ace_obj.1', 'ace', 'ace_mco'),
('12.374216052178244', 'agd_pre.1', 'ate', 'ate_ind'),
('12.461623280522286', 'ate_dpt.1', 'ava', 'ava_van'),
('12.545725609809528', 'adv_tds.3', 'adv', 'adv_imp'),
('12.61916176756146', 'adv_tds.3', 'ava', 'ava_van'),
('13.171923905446572', 'alc_cmc.1', 'aco', 'aco_cor'),
('13.348888277691989', 'adv_fsp.2', 'ava', 'ava_van'),
('13.390245462049288', 'adv_tds.1', 'adv', 'adv_fsp'),
('13.47763295073185', 'adv_tds.1', 'adv', 'adv_arc'),
('13.48960538923986', 'adv_fsp.2', 'ate', 'ate_ind'),
('13.500041080267025', 'ate_cov.1', 'ate', 'ate_ind'),
('13.752012231916186', 'ape_ecd.1', 'ape', 'ape_req'),
('13.842649577535031', 'alc_tat.1', 'adv', 'adv_int'),
('14.029116769972335', 'ase_ecd.1', 'ase', 'ase_req'),
('14.09539564450575', 'adv_tds.3', 'adv', 'adv_int'),
('14.160918651722438', 'adv_fsp.6', 'adv', 'adv_tds'),
('14.251035370980984', 'adv_fsp.4', 'ava', 'ava_van'),
('14.261110143714985', 'adv_imp.1', 'ava', 'ava_van'),
('14.352146737875364', 'adv_tds.4', 'ate', 'ate_dpt'),
('14.427303141642286', 'ace_ecd.1', 'ace', 'ace_req'),
('14.562774340442267', 'adv_tds.1', 'adv', 'adv_fsp'),
('14.569216063777597', 'adv_fsp.1', 'agd', 'agd_ope'),
('14.573058407338797', 'ace_int.1', 'ace', 'ace_cco'),
('14.700263249964136', 'agd_ope.1', 'ava', 'ava_van'),
('15.093417508031122', 'alc_tat.1', 'adv', 'adv_int'),
('15.097839787797248', 'agd_pre.1', 'ava', 'ava_van'),
('15.40905769075644', 'ace_int.1', 'ace', 'ace_mco'),
('15.46088173460369', 'adv_fsp.1', 'ate', 'ate_ind'),
('15.505596744666068', 'ase_req.1', 'ase', 'ase_tss'),
('15.650355095084745', 'adv_tds.2', 'ate', 'ate_dpt'),
('15.663780708279242', 'ate_dpt.1', 'ava', 'ava_van'),
('15.922717924070742', 'adv_fsp.1', 'ase', 'ase_tss'),
('16.061512511709758', 'agd_ope.1', 'ate', 'ate_ind'),
('16.099836781762864', 'ase_int.1', 'ase', 'ase_ccl'),
('16.23197726841278', 'adv_fsp.1', 'adv', 'adv_arc'),
('16.39577246505173', 'adv_arc.1', 'ate', 'ate_dpt'),
('16.628884699891483', 'adv_arc.1', 'ate', 'ate_dpt'),
('16.997433712568068', 'ate_fun.1', 'ate', 'ate_cov'),
('17.25321788637055', 'ase_int.1', 'ase', 'ase_tss'),
('17.257168789516165', 'adv_imp.1', 'ate', 'ate_dpt'),
('17.259050297717224', 'aco_rel.1', 'aco', 'aco_cor'),
('17.343733746405462', 'adv_fsp.5', 'adv', 'adv_tds'),
('17.472893800302614', 'aco_dev.2', 'aco', 'aco_ctt'),
('17.494048081958564', 'adv_arc.1', 'ate', 'ate_dpt'),
('17.549439036688884', 'adv_tds.1', 'adv', 'adv_fsp'),
('17.62030631718439', 'ace_req.1', 'ace', 'ace_cco'),
('17.627318061785143', 'adv_imp.1', 'alc', 'alc_tat'),
('17.645228288604862', 'alc_cms.1', 'alc', 'alc_cmc'),
('17.919072577745286', 'aco_dev.3', 'aco', 'aco_vul'),
('18.08394657071521', 'ace_ecd.1', 'ace', 'ace_ccl'),
('18.212686074776006', 'ape_int.1', 'ape', 'ape_ccl'),
('18.230893080792026', 'aco_dev.1', 'aco', 'aco_ctt'),
('18.241897779888813', 'adv_tds.3', 'adv', 'adv_int'),
('18.440412136011616', 'ace_mco.1', 'ace', 'ace_cco'),
('18.476244535582463', 'alc_tat.1', 'adv', 'adv_imp'),
('18.50690140552344', 'ape_req.1', 'ape', 'ape_ccl'),
('18.629460316225714', 'adv_fsp.4', 'adv', 'adv_tds'),
('18.692320178744257', 'ate_dpt.1', 'ava', 'ava_van'),
('18.918959255586827', 'adv_tds.3', 'adv', 'adv_imp'),
('19.124558265130602', 'adv_imp.1', 'ava', 'ava_van'),
('19.24742880436322', 'ape_obj.2', 'ape', 'ape_req'),
('19.315067636325946', 'ate_dpt.1', 'ava', 'ava_van'),
('19.385425008641164', 'agd_pre.1', 'ava', 'ava_van'),
('19.44303999725844', 'adv_fsp.2', 'adv', 'adv_tds'),
('19.602413400431583', 'ase_req.1', 'ase', 'ase_tss'),
('19.774203003447155', 'ase_int.1', 'ase', 'ase_tss'),
('2.069482482368972', 'adv_fsp.1', 'ava', 'ava_van'),
('2.0735045856150927', 'ate_fun.1', 'ate', 'ate_ind'),
('2.090825060057754', 'agd_pre.1', 'ava', 'ava_van'),
('2.0948617165792096', 'aco_dev.3', 'aco', 'aco_vul'),
('2.3581748655257533', 'aco_rel.1', 'aco', 'aco_dev'),
('2.4139598985374056', 'adv_imp.1', 'ava', 'ava_van'),
('2.6330751556547796', 'ate_fun.1', 'ate', 'ate_ind'),
('2.6882243168643125', 'alc_lcd.1', 'alc', 'alc_cmc'),
('2.785652882022085', 'alc_tat.1', 'adv', 'adv_int'),
('20.08449534666915', 'adv_fsp.4', 'ava', 'ava_van'),
('20.26455119571176', 'ate_cov.1', 'ate', 'ate_fun'),
('20.295052780681896', 'ate_fun.1', 'ate', 'ate_ind'),
('20.44433249691647', 'adv_fsp.3', 'adv', 'adv_tds'),
('20.460951929184233', 'adv_imp.1', 'alc', 'alc_tat'),
('20.588440214246315', 'adv_arc.1', 'ava', 'ava_van'),
('20.658335572204766', 'adv_fsp.2', 'ate', 'ate_cov'),
('20.879523059878096', 'ace_spd.1', 'ace', 'ace_mco'),
('21.207411039881908', 'adv_imp.1', 'adv', 'adv_int'),
('21.367255680396116', 'alc_cms.1', 'alc', 'alc_cmc'),
('21.67379348973231', 'aco_rel.1', 'aco', 'aco_dev'),
('21.727800230716213', 'alc_lcd.1', 'alc', 'alc_cmc'),
('21.843641891908483', 'alc_dvs.1', 'alc', 'alc_cmc'),
('21.895891365431822', 'alc_cmc.5', 'adv', 'adv_imp'),
('21.94140066679334', 'adv_arc.1', 'ava', 'ava_van'),
('22.05228746524499', 'ace_obj.1', 'ace', 'ace_req'),
('22.398752798259054', 'ape_spd.1', 'ape', 'ape_obj'),
('22.478498203926275', 'aco_dev.1', 'aco', 'aco_vul'),
('22.73967561988934', 'alc_dvs.2', 'alc', 'alc_cmc'),
('3.1366066724428077', 'ace_req.1', 'ace', 'ace_mco'),
('3.1564748322591383', 'agd_pre.1', 'ava', 'ava_van'),
('3.1594431832594516', 'aco_rel.1', 'aco', 'aco_ctt'),
('3.2463233626462498', 'ace_req.1', 'ace', 'ace_ccl'),
('3.2971523010995147', 'adv_tds.1', 'ava', 'ava_van'),
('3.4701402218363953', 'adv_imp.1', 'adv', 'adv_int'),
('3.797424733209522', 'adv_fsp.2', 'ate', 'ate_cov'),
('4.241761884371105', 'adv_arc.1', 'ava', 'ava_van'),
('4.324037079912804', 'agd_pre.1', 'ava', 'ava_van'),
('4.590901273213851', 'agd_ope.1', 'ate', 'ate_ind'),
('4.617998866970259', 'ase_ecd.1', 'ase', 'ase_ccl'),
('4.63519026276719', 'alc_tat.1', 'adv', 'adv_imp'),
('4.71037733605701', 'ase_req.1', 'ase', 'ase_ccl'),
('5.389313705572127', 'ase_obj.2', 'ase', 'ase_req'),
('5.525835811785152', 'agd_ope.1', 'ate', 'ate_ind'),
('5.72667789913983', 'ate_fun.1', 'ate', 'ate_cov'),
('5.781881693809606', 'adv_imp.1', 'alc', 'alc_tat'),
('5.803791626902959', 'agd_ope.1', 'ava', 'ava_van'),
('5.9288284837215866', 'ate_fun.1', 'ate', 'ate_dpt'),
('5.95080622856937', 'adv_fsp.6', 'adv', 'adv_tds'),
('5.953291621684111', 'ate_fun.1', 'ate', 'ate_dpt'),
('6.008292742295964', 'adv_imp.1', 'adv', 'adv_int'),
('6.0194072515238135', 'adv_arc.1', 'ase', 'ase_tss'),
('6.215002079615836', 'ate_fun.1', 'ate', 'ate_dpt'),
('6.420348150138062', 'ape_ecd.1', 'ape', 'ape_req'),
('6.565230056204071', 'ate_cov.1', 'ate', 'ate_fun'),
('6.968412221611605', 'adv_tds.3', 'ate', 'ate_dpt'),
('7.002561318241426', 'adv_imp.1', 'adv', 'adv_fsp'),
('7.9182947964501444', 'adv_tds.3', 'ava', 'ava_van'),
('7.963406018009', 'ape_ecd.1', 'ape', 'ape_req'),
('8.227310149842198', 'ate_fun.1', 'ate', 'ate_dpt'),
('8.459652822235334', 'alc_cms.1', 'alc', 'alc_cmc'),
('8.50334115487779', 'agd_pre.1', 'ate', 'ate_ind'),
('8.538060617163548', 'aco_rel.2', 'aco', 'aco_ctt'),
('8.69671828147618', 'alc_dvs.1', 'alc', 'alc_cmc'),
('8.939571904645646', 'adv_tds.3', 'adv', 'adv_int'),
('9.035980064183642', 'ape_ecd.1', 'ape', 'ape_ccl'),
('9.136208284786745', 'ate_cov.1', 'ate', 'ate_ind'),
('9.158722971556598', 'adv_fsp.4', 'adv', 'adv_spm'),
('9.347669945278417', 'ace_mco.1', 'ace', 'ace_cco'),
('9.596844024800024', 'adv_fsp.5', 'adv', 'adv_tds'),
('9.824692486899574', 'adv_tds.3', 'ava', 'ava_van'),
('9.836941099056013', 'adv_fsp.1', 'agd', 'agd_ope'),
('9.842612327472466', 'adv_tds.1', 'adv', 'adv_fsp'),
('9.926642169278919', 'agd_ope.1', 'ava', 'ava_van');

-- --------------------------------------------------------

--
-- Table structure for table `acohierarchical`
--

CREATE TABLE `acohierarchical` (
  `id_acohierarchical` varchar(100) NOT NULL,
  `acomponent` varchar(100) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acohierarchical`
--

INSERT INTO `acohierarchical` (`id_acohierarchical`, `acomponent`, `ida`, `idf`) VALUES
('0.781752118799286', 'ate_dpt.3', 'ate', 'ate_dpt'),
('10.097780067833916', 'alc_cmc.1', 'alc', 'alc_cmc'),
('10.719778962243382', 'ape_obj.1', 'ape', 'ape_obj'),
('11.07057410036823', 'ate_dpt.1', 'ate', 'ate_dpt'),
('11.796708169868122', 'ate_cov.1', 'ate', 'ate_cov'),
('12.65838269525938', 'adv_fsp.4', 'adv', 'adv_fsp'),
('12.881468483782577', 'alc_tat.2', 'alc', 'alc_tat'),
('13.088121619996954', 'ava_van.2', 'ava', 'ava_van'),
('13.479595695188955', 'alc_cms.2', 'alc', 'alc_cms'),
('13.791788422318938', 'adv_int.2', 'adv', 'adv_int'),
('14.702922880030755', 'alc_cmc.3', 'alc', 'alc_cmc'),
('15.484068797480813', 'adv_fsp.5', 'adv', 'adv_fsp'),
('16.372260881275675', 'aco_dev.2', 'aco', 'aco_dev'),
('17.619006529572324', 'adv_tds.2', 'adv', 'adv_tds'),
('17.95124639159904', 'ape_req.1', 'ape', 'ape_req'),
('18.633508580244403', 'ate_ind.2', 'ate', 'ate_ind'),
('2.2117683380795903', 'adv_int.1', 'adv', 'adv_int'),
('20.688205600008132', 'ase_req.1', 'ase', 'ase_req'),
('21.49754075230693', 'alc_lcd.1', 'alc', 'alc_lcd'),
('21.651358164809913', 'alc_tat.1', 'alc', 'alc_tat'),
('21.72211951265311', 'ate_fun.1', 'ate', 'ate_fun'),
('21.86477604620047', 'ava_van.4', 'ava', 'ava_van'),
('22.485013705122725', 'adv_fsp.3', 'adv', 'adv_fsp'),
('22.930498173450413', 'alc_cms.1', 'alc', 'alc_cms'),
('23.514547901851156', 'ate_dpt.2', 'ate', 'ate_dpt'),
('24.01534814832954', 'adv_fsp.1', 'adv', 'adv_fsp'),
('24.735127106348987', 'adv_tds.4', 'adv', 'adv_tds'),
('24.750617230861092', 'ava_van.4', 'ava', 'ava_van'),
('25.503557319784093', 'adv_tds.5', 'adv', 'adv_tds'),
('26.21163292865475', 'alc_flr.1', 'alc', 'alc_flr'),
('27.329784440464092', 'alc_flr.2', 'alc', 'alc_flr'),
('27.567887847420867', 'adv_imp.1', 'adv', 'adv_imp'),
('27.791991206466847', 'adv_tds.3', 'adv', 'adv_tds'),
('28.60400098567395', 'aco_dev.1', 'aco', 'aco_dev'),
('3.095504124980433', 'aco_rel.1', 'aco', 'aco_rel'),
('3.6331769899260244', 'ate_cov.2', 'ate', 'ate_cov'),
('3.868673809514142', 'ava_van.1', 'ava', 'ava_van'),
('3.9391940882075467', 'alc_cms.3', 'alc', 'alc_cms'),
('30.060993950472227', 'ase_tss.1', 'ase', 'ase_tss'),
('30.279302347516854', 'adv_fsp.2', 'adv', 'adv_fsp'),
('30.35784301156843', 'ate_ind.1', 'ate', 'ate_ind'),
('30.832681529493176', 'alc_cms.4', 'alc', 'alc_cms'),
('31.361287114635438', 'alc_dvs.1', 'alc', 'alc_dvs'),
('4.262806710479314', 'alc_cmc.4', 'alc', 'alc_cmc'),
('6.117618337803449', 'aco_vul.2', 'aco', 'aco_vul'),
('6.119587753705503', 'ava_van.3', 'ava', 'ava_van'),
('6.431109841703428', 'aco_vul.1', 'aco', 'aco_vul'),
('6.791866006958692', 'adv_tds.1', 'adv', 'adv_tds'),
('7.545840146229395', 'ase_obj.1', 'ase', 'ase_obj'),
('9.810198986545107', 'aco_ctt.1', 'aco', 'aco_ctt'),
('9.87380224967539', 'alc_cmc.2', 'alc', 'alc_cmc');

-- --------------------------------------------------------

--
-- Table structure for table `acomponent`
--

CREATE TABLE `acomponent` (
  `id_acomponent` varchar(100) NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acomponent`
--

INSERT INTO `acomponent` (`id_acomponent`, `name`, `ida`, `idf`) VALUES
('ace_ccl.1', 'PP-Module conformance claims', 'ace', 'ace_ccl'),
('ace_cco.1', 'PP-Configuration consistency', 'ace', 'ace_cco'),
('ace_ecd.1', 'PP-Module extended components definition', 'ace', 'ace_ecd'),
('ace_int.1', 'PP-Module introduction', 'ace', 'ace_int'),
('ace_mco.1', 'PP-Module consistency', 'ace', 'ace_mco'),
('ace_obj.1', 'PP-Module Security objectives', 'ace', 'ace_obj'),
('ace_req.1', 'PP-Module security requirements', 'ace', 'ace_req'),
('ace_spd.1', 'PP-Module Security problem definition', 'ace', 'ace_spd'),
('aco_cor.1', 'Composition rationale', 'aco', 'aco_cor'),
('aco_ctt.1', 'Interface testing', 'aco', 'aco_ctt'),
('aco_ctt.2', 'Rigorous interface testing', 'aco', 'aco_ctt'),
('aco_dev.1', 'Functional Description', 'aco', 'aco_dev'),
('aco_dev.2', 'Basic evidence of design', 'aco', 'aco_dev'),
('aco_dev.3', 'Detailed evidence of design', 'aco', 'aco_dev'),
('aco_rel.1', 'Basic reliance information', 'aco', 'aco_rel'),
('aco_rel.2', 'Reliance information', 'aco', 'aco_rel'),
('aco_vul.1', 'Composition vulnerability review', 'aco', 'aco_vul'),
('aco_vul.2', 'Composition vulnerability analysis', 'aco', 'aco_vul'),
('aco_vul.3', 'Enhanced-Basic Composition vulnerability analysis', 'aco', 'aco_vul'),
('adv_arc.1', 'Security architecture description', 'adv', 'adv_arc'),
('adv_fsp.1', 'Basic functional specification', 'adv', 'adv_fsp'),
('adv_fsp.2', 'Security-enforcing functional specification', 'adv', 'adv_fsp'),
('adv_fsp.3', 'Functional specification with complete summary', 'adv', 'adv_fsp'),
('adv_fsp.4', 'Complete functional specification', 'adv', 'adv_fsp'),
('adv_fsp.5', 'Complete semi-formal functional specification                 with additional error information', 'adv', 'adv_fsp'),
('adv_fsp.6', 'Complete semi-formal functional specification                 with additional formal specification', 'adv', 'adv_fsp'),
('adv_imp.1', 'Implementation representation of the TSF', 'adv', 'adv_imp'),
('adv_imp.2', 'Complete mapping of the implementation representation of the TSF', 'adv', 'adv_imp'),
('adv_int.1', 'Well-structured subset of TSF internals', 'adv', 'adv_int'),
('adv_int.2', 'Well-structured internals', 'adv', 'adv_int'),
('adv_int.3', 'Minimally complex internals', 'adv', 'adv_int'),
('adv_spm.1', 'Formal TOE security policy model', 'adv', 'adv_spm'),
('adv_tds.1', 'Basic design', 'adv', 'adv_tds'),
('adv_tds.2', 'Architectural design', 'adv', 'adv_tds'),
('adv_tds.3', 'Basic modular design', 'adv', 'adv_tds'),
('adv_tds.4', 'Semiformal modular design', 'adv', 'adv_tds'),
('adv_tds.5', 'Complete semiformal modular design', 'adv', 'adv_tds'),
('adv_tds.6', 'Complete semiformal modular design with formal             high-level design presentation', 'adv', 'adv_tds'),
('agd_ope.1', 'Operational user guidance', 'agd', 'agd_ope'),
('agd_pre.1', 'Preparative procedures', 'agd', 'agd_pre'),
('alc_cmc.1', 'Labelling of the TOE', 'alc', 'alc_cmc'),
('alc_cmc.2', 'Use of a CM system', 'alc', 'alc_cmc'),
('alc_cmc.3', 'Authorisation controls', 'alc', 'alc_cmc'),
('alc_cmc.4', 'Production support, acceptance procedures and           automation', 'alc', 'alc_cmc'),
('alc_cmc.5', 'Advanced support', 'alc', 'alc_cmc'),
('alc_cms.1', 'TOE CM coverage', 'alc', 'alc_cms'),
('alc_cms.2', 'Parts of the TOE CM coverage', 'alc', 'alc_cms'),
('alc_cms.3', 'Implementation representation CM coverage', 'alc', 'alc_cms'),
('alc_cms.4', 'Problem tracking CM coverage', 'alc', 'alc_cms'),
('alc_cms.5', 'Development tools CM coverage', 'alc', 'alc_cms'),
('alc_del.1', 'Delivery procedures', 'alc', 'alc_del'),
('alc_dvs.1', 'Identification of security measures', 'alc', 'alc_dvs'),
('alc_dvs.2', 'Sufficiency of security measures', 'alc', 'alc_dvs'),
('alc_flr.1', 'Basic flaw remediation', 'alc', 'alc_flr'),
('alc_flr.2', 'Flaw reporting procedures', 'alc', 'alc_flr'),
('alc_flr.3', 'Systematic flaw remediation', 'alc', 'alc_flr'),
('alc_lcd.1', 'Developer defined life-cycle model', 'alc', 'alc_lcd'),
('alc_lcd.2', 'Measurable life-cycle model', 'alc', 'alc_lcd'),
('alc_tat.1', 'Well-defined development tools', 'alc', 'alc_tat'),
('alc_tat.2', 'Compliance with implementation standards', 'alc', 'alc_tat'),
('alc_tat.3', 'Compliance with implementation standards -         all parts', 'alc', 'alc_tat'),
('ape_ccl.1', 'Conformance claims', 'ape', 'ape_ccl'),
('ape_ecd.1', 'Extended components definition', 'ape', 'ape_ecd'),
('ape_int.1', 'PP introduction', 'ape', 'ape_int'),
('ape_obj.1', 'Security objectives for the operational environment', 'ape', 'ape_obj'),
('ape_obj.2', 'Security objectives', 'ape', 'ape_obj'),
('ape_req.1', 'Stated security requirements', 'ape', 'ape_req'),
('ape_req.2', 'Derived security requirements', 'ape', 'ape_req'),
('ape_spd.1', 'Security problem definition', 'ape', 'ape_spd'),
('ase_ccl.1', 'Conformance claims', 'ase', 'ase_ccl'),
('ase_ecd.1', 'Extended components definition', 'ase', 'ase_ecd'),
('ase_int.1', 'ST introduction', 'ase', 'ase_int'),
('ase_obj.1', 'Security objectives for the operational           environment', 'ase', 'ase_obj'),
('ase_obj.2', 'Security objectives', 'ase', 'ase_obj'),
('ase_req.1', 'Stated security requirements', 'ase', 'ase_req'),
('ase_req.2', 'Derived security requirements', 'ase', 'ase_req'),
('ase_spd.1', 'Security problem definition', 'ase', 'ase_spd'),
('ase_tss.1', 'TOE summary specification', 'ase', 'ase_tss'),
('ase_tss.2', 'TOE summary specification with architectural               design summary', 'ase', 'ase_tss'),
('ate_cov.1', 'Evidence of coverage', 'ate', 'ate_cov'),
('ate_cov.2', 'Analysis of coverage', 'ate', 'ate_cov'),
('ate_cov.3', 'Rigorous analysis of coverage', 'ate', 'ate_cov'),
('ate_dpt.1', 'Testing: basic design', 'ate', 'ate_dpt'),
('ate_dpt.2', 'Testing: security enforcing modules', 'ate', 'ate_dpt'),
('ate_dpt.3', 'Testing: modular design', 'ate', 'ate_dpt'),
('ate_dpt.4', 'Testing: implementation representation', 'ate', 'ate_dpt'),
('ate_fun.1', 'Functional testing', 'ate', 'ate_fun'),
('ate_fun.2', 'Ordered functional testing', 'ate', 'ate_fun'),
('ate_ind.1', 'Independent testing - conformance', 'ate', 'ate_ind'),
('ate_ind.2', 'Independent testing - sample', 'ate', 'ate_ind'),
('ate_ind.3', 'Independent testing - complete', 'ate', 'ate_ind'),
('ava_van.1', 'Vulnerability survey', 'ava', 'ava_van'),
('ava_van.2', 'Vulnerability analysis', 'ava', 'ava_van'),
('ava_van.3', 'Focused vulnerability analysis', 'ava', 'ava_van'),
('ava_van.4', 'Methodical vulnerability analysis', 'ava', 'ava_van'),
('ava_van.5', 'Advanced methodical vulnerability analysis', 'ava', 'ava_van');

-- --------------------------------------------------------

--
-- Table structure for table `acoobjectives`
--

CREATE TABLE `acoobjectives` (
  `id_acoobjectives` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acoobjectives`
--

INSERT INTO `acoobjectives` (`id_acoobjectives`, `testo`, `ida`, `idf`) VALUES
('0.35574859424632777', '\n\n                    A description of the interfaces in the base component, on\n                    which the dependent component relies, is required. This is\n                    examined to determine whether or not it is consistent with\n                    the description of interfaces on which the dependent\n                    component relies, as provided in the reliance\n                    information.\n\n                    In addition, the security behaviour of the base component\n                    that supports the dependent component TSF is\n                    described.\n                ', 'aco', 'aco_dev'),
('0.41117431410660676', '\n\n                    The objective of this component is to confirm that all of\n                    the TSFIs have been tested.\n                ', 'ate', 'ate_cov'),
('0.4197834063768132', '\n\n                    The subsystem and module descriptions of the TSF provide a\n                    high-level description of the internal workings, and a\n                    description of the interfaces of the modules, of the\n                    TSF. Testing at this level of TOE description provides\n                    assurance that the TSF subsystems and modules behave and\n                    interact as described in the TOE design and the security\n                    architecture description.\n                ', 'ate', 'ate_dpt'),
('0.5372494255654685', '\n\n                    A description of the interfaces in the base component, on\n                    which the dependent component relies, is required. This is\n                    examined to determine whether or not it is consistent with\n                    the description of interfaces on which the dependent\n                    component relies, as provided in the reliance\n                    information.\n                ', 'aco', 'aco_dev'),
('0.6051724517484128', '\n\n                    A vulnerability analysis is performed by the evaluator to\n                    ascertain the presence of potential\n                    vulnerabilities.\n\n                    The evaluator performs penetration testing, to confirm\n                    that the potential vulnerabilities cannot be exploited in\n                    the operational environment for the TOE. Penetration\n                    testing is performed by the evaluator assuming an attack\n                    potential of Enhanced-Basic.\n                ', 'ava', 'ava_van'),
('0.7349304513471857', '\n\n                    A CM system can control changes only to those items that\n                    have been placed under CM (i.e., the configuration items\n                    identified in the configuration list). Placing the TOE\n                    itself and the evaluation evidence required by the other\n                    SARs in the ST under CM provides assurance that they have\n                    been modified in a controlled manner with proper\n                    authorisations.\n                ', 'alc', 'alc_cms'),
('1.2259317035287491', '\n\n                    A methodical vulnerability analysis is performed by the\n                    evaluator to ascertain the presence of potential\n                    vulnerabilities.\n\n                    The evaluator performs penetration testing, to confirm\n                    that the potential vulnerabilities cannot be exploited in\n                    the operational environment for the TOE. Penetration\n                    testing is performed by the evaluator assuming an attack\n                    potential of High.\n                ', 'ava', 'ava_van'),
('1.688179973044067', '\n\n                    A unique reference is required to ensure that there is no\n                    ambiguity in terms of which instance of the TOE is being\n                    evaluated. Labelling the TOE with its reference ensures\n                    that users of the TOE can be aware of which instance of\n                    the TOE they are using.\n\n                    Unique identification of the configuration items leads to\n                    a clearer understanding of the composition of the TOE,\n                    which in turn helps to determine those items which are\n                    subject to the evaluation requirements for the TOE.\n\n                    The use of a CM system increases assurance that the\n                    configuration items are maintained in a controlled\n                    manner.\n\n                    Providing controls to ensure that unauthorised\n                    modifications are not made to the TOE (``CM access\n                    control\'\'), and ensuring proper functionality and use of\n                    the CM system, helps to maintain the integrity of the\n                    TOE.\n\n                    The purpose of the acceptance procedures is to ensure that\n                    the parts of the TOE are of adequate quality and to\n                    confirm that any creation or modification of configuration\n                    items is authorised. Acceptance procedures are an\n                    essential element in integration processes and in the\n                    life-cycle management of the TOE.\n\n                    In development environments where the configuration items\n                    are complex, it is difficult to control changes without\n                    the support of automated tools. In particular, these\n                    automated tools need to be able to support the numerous\n                    changes that occur during development and ensure that\n                    those changes are authorised. It is an objective of this\n                    component to ensure that the configuration items are\n                    controlled through automated means. If the TOE is\n                    developed by multiple developers, i.e. integration has to\n                    take place, the use of automatic tools is adequate.\n\n                    Production support procedures help to ensure that the\n                    generation of the TOE from a managed set of configuration\n                    items is correctly performed in an authorised manner,\n                    particularly in the case when different developers are\n                    involved and integration processes have to be carried\n                    out.\n\n                    Requiring that the CM system be able to identify the\n                    version of the implementation representation from which\n                    the TOE is generated helps to ensure that the integrity of\n                    this material is preserved by the appropriate technical,\n                    physical and procedural safeguards.\n\n                    Providing an automated means of ascertaining changes\n                    between versions of the TOE and identifying which\n                    configuration items are affected by modifications to other\n                    configuration items assists in determining the impact of\n                    the changes between successive versions of the TOE. This\n                    in turn can provide valuable information in determining\n                    whether changes to the TOE result in all configuration\n                    items being consistent with one another.\n                ', 'alc', 'alc_cmc'),
('1.9613481138986826', '\n                    In this component, the objective is to demonstrate\n                    that the TOE operates in accordance with its design\n                    representations and guidance documents. Evaluator testing\n                    includes repeating all of the developer tests.\n                ', 'ate', 'ate_ind'),
('2.0342561073758767', '\n\n                    The objective of this component is to provide a means for\n                    requiring specific portions of the TSF to be\n                    well-structured.  The intent is that the entire TSF has\n                    been designed and implemented using sound engineering\n                    principles, but the analysis is performed upon only a\n                    specific subset.\n                ', 'adv', 'adv_int'),
('2.1421132091103594', '\n\n                    A methodical vulnerability analysis is performed by the\n                    evaluator to ascertain the presence of potential\n                    vulnerabilities.\n\n                    The evaluator performs penetration testing, to confirm\n                    that the potential vulnerabilities cannot be exploited in\n                    the operational environment for the TOE. Penetration\n                    testing is performed by the evaluator assuming an attack\n                    potential of High.\n                ', 'ava', 'ava_van'),
('2.168709059321502', '\n\n                    A description of the interfaces in the base component, on\n                    which the dependent component relies, is required. This is\n                    examined to determine whether or not it is consistent with\n                    the description of interfaces on which the dependent\n                    component relies, as provided in the reliance\n                    information.\n\n                    The interface description of the architecture of the base\n                    component is provided to enable the evaluator to determine\n                    whether or not that interface formed part of the TSF of\n                    the base component.\n                ', 'aco', 'aco_dev'),
('2.1808889441910315', '\n\n                    In this component, the objective is to demonstrate that\n                    the TOE operates in accordance with its design\n                    representations and guidance documents.\n                ', 'ate', 'ate_ind'),
('2.252438778243686', '\n\n                    The objective of this component is to ensure that each\n                    interface of the base component, on which the dependent\n                    component relies, is tested.\n                ', 'aco', 'aco_ctt'),
('2.454691761502527', '\n\n                    The objective of this component is to establish that some\n                    of the TSFIs have been tested.\n                ', 'ate', 'ate_cov'),
('2.506564861778264', '\n\n                    A CM system can control changes only to those items that\n                    have been placed under CM (i.e., the configuration items\n                    identified in the configuration list). Placing the TOE\n                    itself, the parts that comprise the TOE, the TOE\n                    implementation representation and the evaluation evidence\n                    required by the other SARs under CM provides assurance\n                    that they have been modified in a controlled manner with\n                    proper authorisations.\n\n                    Placing security flaws under CM ensures that security flaw\n                    reports are not lost or forgotten, and allows a developer\n                    to track security flaws to their resolution.\n\n                    Development tools play an important role in ensuring the\n                    production of a quality version of the TOE. Therefore, it\n                    is important to control modifications to these\n                    tools.\n                ', 'alc', 'alc_cms'),
('2.51514673262651', '\n\n                    A unique reference is required to ensure that there is no\n                    ambiguity in terms of which instance of the TOE is being\n                    evaluated. Labelling the TOE with its reference ensures\n                    that users of the TOE can be aware of which instance of\n                    the TOE they are using.\n\n                    Unique identification of the configuration items leads to\n                    a clearer understanding of the composition of the TOE,\n                    which in turn helps to determine those items which are\n                    subject to the evaluation requirements for the TOE.\n\n                    The use of a CM system increases assurance that the\n                    configuration items are maintained in a controlled\n                    manner.\n\n                    Providing controls to ensure that unauthorised\n                    modifications are not made to the TOE (``CM access\n                    control\'\'), and ensuring proper functionality and use of\n                    the CM system, helps to maintain the integrity of the\n                    TOE.\n\n                    The purpose of the acceptance procedures is to ensure that\n                    the parts of the TOE are of adequate quality and to\n                    confirm that any creation or modification of configuration\n                    items is authorised. Acceptance procedures are an\n                    essential element in integration processes and in the\n                    life-cycle management of the TOE.\n\n                    In development environments where the configuration items\n                    are complex, it is difficult to control changes without\n                    the support of automated tools. In particular, these\n                    automated tools need to be able to support the numerous\n                    changes that occur during development and ensure that\n                    those changes are authorised. It is an objective of this\n                    component to ensure that the configuration items are\n                    controlled through automated means. If the TOE is\n                    developed by multiple developers, i.e. integration has to\n                    take place, the use of automatic tools is adequate.\n\n                    Production support procedures help to ensure that the\n                    generation of the TOE from a managed set of configuration\n                    items is correctly performed in an authorised manner,\n                    particularly in the case when different developers are\n                    involved and integration processes have to be carried\n                    out.\n                ', 'alc', 'alc_cmc'),
('2.9277481518936277', '\n\n                    A CM system can control changes only to those items that\n                    have been placed under CM (i.e., the configuration items\n                    identified in the configuration list). Placing the TOE\n                    itself, the parts that comprise the TOE, the TOE\n                    implementation representation and the evaluation evidence\n                    required by the other SARs under CM provides assurance\n                    that they have been modified in a controlled manner with\n                    proper authorisations.\n\n                    Placing security flaws under CM ensures that security flaw\n                    reports are not lost or forgotten, and allows a developer\n                    to track security flaws to their resolution.\n                ', 'alc', 'alc_cms'),
('3.1865690490225127', '\n\n                    A unique reference is required to ensure that there is no\n                    ambiguity in terms of which instance of the TOE is being\n                    evaluated. Labelling the TOE with its reference ensures\n                    that users of the TOE can be aware of which instance of\n                    the TOE they are using.\n\n                    Unique identification of the configuration items leads to\n                    a clearer understanding of the composition of the TOE,\n                    which in turn helps to determine those items which are\n                    subject to the evaluation requirements for the TOE.\n\n                    The use of a CM system increases assurance that the\n                    configuration items are maintained in a controlled\n                    manner.\n                ', 'alc', 'alc_cmc'),
('3.311023159348619', '\n\n                    The subsystem descriptions of the TSF provide a high-level\n                    description of the internal workings of the TSF. Testing\n                    at the level of the TOE subsystems provides assurance that\n                    the TSF subsystems behave and interact as described in the\n                    TOE design and the security architecture\n                    description.\n                ', 'ate', 'ate_dpt'),
('3.3355494655866704', '\n\n                    A CM system can control changes only to those items that\n                    have been placed under CM (i.e., the configuration items\n                    identified in the configuration list). Placing the TOE\n                    itself, the parts that comprise the TOE, and the\n                    evaluation evidence required by the other SARs under CM\n                    provides assurance that they have been modified in a\n                    controlled manner with proper authorisations.\n                ', 'alc', 'alc_cms'),
('3.8567670668195655', '\n\n                    The objectives are for the developer to demonstrate that\n                    the tests in the test documentation are performed and\n                    documented correctly, and to ensure that testing is\n                    structured such as to avoid circular arguments about the\n                    correctness of the interfaces being tested.\n                ', 'ate', 'ate_fun'),
('3.9362142564486056', '\n\n                    In order for the developer to be able to act appropriately\n                    upon security flaw reports from TOE users, and to know to\n                    whom to send corrective fixes, TOE users need to\n                    understand how to submit security flaw reports to the\n                    developer, and how to register themselves with the\n                    developer so that they may receive these corrective\n                    fixes. Flaw remediation guidance from the developer to the\n                    TOE user ensures that TOE users are aware of this\n                    important information.\n                ', 'alc', 'alc_flr'),
('4.083587487094719', '\n\n                    The objective is for the developer to demonstrate that the\n                    tests in the test documentation are performed and\n                    documented correctly.\n                ', 'ate', 'ate_fun'),
('4.282595290748162', '\n\n                    In this component, the objective is to confirm that the\n                    developer performed exhaustive tests of all interfaces in\n                    the functional specification.\n\n                    The objective of this component is to confirm that all\n                    parameters of all of the TSFIs have been tested.\n                ', 'ate', 'ate_cov'),
('4.557785376595817', '\n                    In this component, the objective is to demonstrate\n                    that the TOE operates in accordance with its design\n                    representations and guidance documents. Evaluator testing\n                    includes repeating all of the developer tests.\n                ', 'ate', 'ate_ind'),
('5.256291465493726', '\n\n                    A vulnerability analysis is performed by the evaluator to\n                    ascertain the presence of potential\n                    vulnerabilities.\n\n                    The evaluator performs penetration testing, to confirm\n                    that the potential vulnerabilities cannot be exploited in\n                    the operational environment for the TOE. Penetration\n                    testing is performed by the evaluator assuming an attack\n                    potential of Basic.\n                ', 'ava', 'ava_van'),
('5.432894456889885', '\n\n                    The objective of this component is to provide a means for\n                    requiring the TSF to be well-structured. The intent is\n                    that the entire TSF has been designed and implemented\n                    using sound engineering principles.\n                ', 'adv', 'adv_int'),
('5.975696573667195', '\n\n                    The subsystem and module descriptions of the TSF provide a\n                    high-level description of the internal workings, and a\n                    description of the interfaces of the modules, of the\n                    TSF. Testing at this level of TOE description provides\n                    assurance that the TSF subsystems and modules behave and\n                    interact as described in the TOE design and the security\n                    architecture description, and in accordance with the\n                    implementation representation.\n                ', 'ate', 'ate_dpt'),
('6.016123346070669', '\n\n                    A vulnerability survey of information available in the\n                    public domain is performed by the evaluator to ascertain\n                    potential vulnerabilities that may be easily found by an\n                    attacker.\n\n                    The evaluator performs penetration testing, to confirm\n                    that the potential vulnerabilities cannot be exploited in\n                    the operational environment for the TOE. Penetration\n                    testing is performed by the evaluator assuming an attack\n                    potential of Basic.\n                ', 'ava', 'ava_van'),
('6.118552724601333', '\n\n                    The objective of this component is to provide a means for\n                    requiring the TSF to be well-structured and of minimal\n                    complexity. The intent is that the entire TSF has been\n                    designed and implemented using sound engineering\n                    principles.\n                ', 'adv', 'adv_int'),
('6.1702108281337305', '\n\n                    A unique reference is required to ensure that there is no\n                    ambiguity in terms of which instance of the TOE is being\n                    evaluated. Labelling the TOE with its reference ensures\n                    that users of the TOE can be aware of which instance of\n                    the TOE they are using.\n                ', 'alc', 'alc_cmc'),
('6.277270964234252', '\n\n                    The objective of this component is to ensure that each\n                    interface of the base component, on which the dependent\n                    component relies, is tested.\n                ', 'aco', 'aco_ctt'),
('6.313694595306593', '\n\n                    A unique reference is required to ensure that there is no\n                    ambiguity in terms of which instance of the TOE is being\n                    evaluated. Labelling the TOE with its reference ensures\n                    that users of the TOE can be aware of which instance of\n                    the TOE they are using.\n\n                    Unique identification of the configuration items leads to\n                    a clearer understanding of the composition of the TOE,\n                    which in turn helps to determine those items which are\n                    subject to the evaluation requirements for the TOE.\n\n                    The use of a CM system increases assurance that the\n                    configuration items are maintained in a controlled\n                    manner.\n\n                    Providing controls to ensure that unauthorised\n                    modifications are not made to the TOE (``CM access\n                    control\'\'), and ensuring proper functionality and use of\n                    the CM system, helps to maintain the integrity of the\n                    TOE.\n                ', 'alc', 'alc_cmc'),
('6.410088126404533', '\n\n                    In this component, the objective is to demonstrate that\n                    the TOE operates in accordance with its design\n                    representations and guidance documents. Evaluator testing\n                    confirms that the developer performed some tests of some\n                    interfaces in the functional specification.\n                ', 'ate', 'ate_ind'),
('6.580704197364981', '\n\n                    A CM system can control changes only to those items that\n                    have been placed under CM (i.e., the configuration items\n                    identified in the configuration list). Placing the TOE\n                    itself, the parts that comprise the TOE, the TOE\n                    implementation representation and the evaluation evidence\n                    required by the other SARs under CM provides assurance\n                    that they have been modified in a controlled manner with\n                    proper authorisations.\n                ', 'alc', 'alc_cms'),
('6.664229555691003', '\n\n                    A methodical vulnerability analysis is performed by the\n                    evaluator to ascertain the presence of potential\n                    vulnerabilities.\n\n                    The evaluator performs penetration testing, to confirm\n                    that the potential vulnerabilities cannot be exploited in\n                    the operational environment for the TOE. Penetration\n                    testing is performed by the evaluator assuming an attack\n                    potential of Moderate.\n                ', 'ava', 'ava_van'),
('6.701574579128496', '\n\n                    The subsystem and module descriptions of the TSF provide a\n                    high-level description of the internal workings, and a\n                    description of the interfaces of the SFR-enforcing\n                    modules, of the TSF. Testing at this level of TOE\n                    description provides assurance that the TSF subsystems and\n                    SFR-enforcing modules behave and interact as described in\n                    the TOE design and the security architecture\n                    description.\n                ', 'ate', 'ate_dpt'),
('6.960389408657643', '\n\n                    In order for the developer to be able to act appropriately\n                    upon security flaw reports from TOE users, and to know to\n                    whom to send corrective fixes, TOE users need to\n                    understand how to submit security flaw reports to the\n                    developer. Flaw remediation guidance from the developer to\n                    the TOE user ensures that TOE users are aware of this\n                    important information.\n                ', 'alc', 'alc_flr');

-- --------------------------------------------------------

--
-- Table structure for table `acoverview`
--

CREATE TABLE `acoverview` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `acoverview`
--

INSERT INTO `acoverview` (`id`, `testo`, `ida`) VALUES
('0.35193854676484904', 'The class, ACO, encompasses five\n            families. These families specify assurance requirements that\n            are designed to provide confidence that a composed TOE will\n            operate securely when relying upon security functionality\n            provided by previously evaluated software, firmware or\n            hardware components.\n\n            Composition involves taking two or more IT entities\n            successfully evaluated against CC security assurance\n            requirements packages (base components and dependent\n            components, see, ACO-ANNEX, ) and\n            combining them for use, with no further development of either\n            IT entity. The development of additional IT entities is not\n            included (entities that have not previously been the subject\n            of a component evaluation). The composed TOE forms a new\n            product that can be installed and integrated into any specific\n            environment instance that meets the objectives for the\n            environment.\n\n            This approach does not provide an alternative approach for the\n            evaluation of components. Composition under, ACO, provides a composed TOE integrator a method, which\n            can be used as an alternative to other assurance levels\n            specified in the CC, to gain confidence in a TOE that is the\n            combination of two or more successfully evaluated components\n            without having to re-evaluate the composite TSF. (The composed\n            TOE integrator is referred to as ``developer\'\' throughout the, ACO, class, with any references to the\n            developer of the base or dependent components clarified as\n            such.)\n\n            Composed Assurance Packages, as defined in Clauses, CAPCLAUSE, and, ASSURANCE-REQUIREMENTS-CAP-STRUCTURE, , is an\n            assurance scale for composed TOEs. This assurance scale is\n            required in addition to EALs because to combine components\n            evaluated against EALs and gain a resulting EAL assurance, all\n            SARs in the EAL have to be applied to the composed\n            TOE. Although reuse can be made of the component TOE\n            evaluation results, there are often additional aspects of the\n            components that have to be considered in the composed TOE, as\n            described in Annex, ACO-INTERACTIONS-IT-ENTITIES, . Due to the different parties involved in a\n            composed TOE evaluation activity it is generally not possible\n            to gain all necessary evidence about these additional aspects\n            of the components to apply the appropriate EAL. Hence, CAPs\n            have been defined to address the issue of combining evaluated\n            components and gaining a meaningful result. This is discussed\n            further in, ACO-ANNEX, ., ACO, In a composed TOE it is generally the case that one component\n            relies on the services provided by another component. The\n            component requiring services is termed the dependent component\n            and the component providing the services is termed the base\n            component. This interaction and distinct is discussed further\n            in Annex B. It is assumed to be the case that the developer of\n            the dependent component is supporting the composed TOE\n            evaluation in some manner (as developer, sponsor, or just\n            cooperating and providing the necessary evaluation evidence\n            from the dependent component evaluation) The, ACO, components included in the CAP assurance packages\n            should not be used as augmentations for component TOE\n            evaluations, as this would provide no meaningful assurance for\n            the component.\n\n            The families within the, ADV, class\n            interact in a similar manner to the, ATE, ,, AVA, and, ACO_REL, classes in a component TOE evaluation and hence\n            leverage from the specification of requirements from those\n            classes where applicable. There are however a few items\n            specific to composed TOE evaluations. To determine how the\n            components interact and identify any deviations from the\n            evaluations of the components, the dependencies that the\n            dependent component has upon the underlying base component are\n            identified (, ACO_DEV, ). This reliance on\n            the base component is specified in terms of the interfaces\n            through which the dependent component makes calls for services\n            in support of the dependent component SFRs. The interfaces,\n            and at higher levels the supporting behaviour, provided by the\n            base component in response to those service requests are\n            analysed in, ACO_DEV, . The, ADV_TDS, family is based on the, ACO_DEV, family, as at the simplest level the\n            TSF of each component can be viewed as a subsystem of the\n            composed TOE, with additional portions of each component seen\n            as additional subsystems. Therefore, the interfaces between\n            the components are seen as interactions between subsystems in\n            a component TOE evaluation.\n\n            It is possible that the interfaces and supporting behaviour\n            descriptions provided for, ACO_COR, are\n            incomplete. This is determined during the conduct of, ACO_COR, . The, ACO_REL, family takes the outputs of, ACO_DEV, and, ACO_CTT, and determines whether the\n            components are being used in their evaluated configuration and\n            identifies where any specifications are incomplete, which are\n            then identified as inputs into testing (, ACO_VUL, ) and vulnerability analysis (, ACO, ) activities of the composed TOE.\n\n            Testing of the composed TOE is performed to determine that the\n            composed TOE exhibits the expected behaviour as determined by\n            the composed TOE SFRs, and at higher levels demonstrates the\n            compatibility of the interfaces between the components of the\n            composed TOE.\n\n            The vulnerability analysis of the composed TOE leverages from\n            the outputs of the vulnerability analysis of the component\n            evaluations. The composed TOE vulnerability analysis considers\n            any residual vulnerabilities from the component evaluations to\n            determine that the residual vulnerabilities are not applicable\n            to the composed TOE. A search of publicly available\n            information relating to the components is also performed to\n            identify any issues reported in the components since the\n            completion of the respective evaluations.\n\n            The interaction between the, ACO-FAMILY-INTERACTION, families is depicted in Figure, ACO-ANNEX, below. This shows by solid arrowed lines where\n            the evidence and understanding gained in one family feeds into\n            the next activity and the dashed arrows identify where an\n            activity explicitly traces back to the composed TOE SFRs, as\n            described above., Further discussion of the definition and interactions within\n            composed TOEs is provided in, .', 'ACO'),
('1129.9326633654466', 'Evaluating a PP-Configuration is required to demonstrate that the PP-Configuration is\n            sound and consistent. These properties are necessary for the PP-Configuration to be\n            suitable for use as the basis for writing an ST or another PP or PP-Configuration.\n\n            The class ACE is defined for the evaluation of a PP-Configuration composed of one or\n            more PPs and one PP-Module.\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC Part 1, as these Annexes clarify the concepts here and provide many examples.\n\n            This standard does not define low assurance PP-Configuration evaluation package.\n            There is only one assurance package for PP-Configuration evaluation, equivalent to\n            Standard PP evaluation package.\n\n            Figure, ACE-CLASS-DECOMPOSITION, shows the families within this class, and the hierarchy of components within\n            the families., The ACE class is based on APE.', 'ACE'),
('1212.3125201441906', '\n\n            The guidance documents class provides the requirements for\n            guidance documentation for all user roles. For the secure\n            preparation and operation of the TOE it is necessary to\n            describe all relevant aspects for the secure handling of the\n            TOE. The class also addresses the possibility of unintended\n            incorrect configuration or handling of the TOE.\n\n            In many cases it may be appropriate that guidance is provided\n            in separate documents for preparation and operation of the\n            TOE, or even separate for different user roles as end-users,\n            administrators, application programmers using software or\n            hardware interfaces, etc.\n\n            The guidance documents class is subdivided into two families\n            which are concerned with the preparative user guidance (what\n            has to be done to transform the delivered TOE into its\n            evaluated configuration in the operational environment as\n            described in the ST) and with the operational user guidance\n            (what has to be done during the operation of the TOE in its\n            evaluated configuration).\n        ', 'AGD'),
('125.33025266314651', 'Evaluating a PP is required to demonstrate that the PP is\n            sound and internally consistent, and, if the PP is based on\n            one or more other PPs or on packages, that the PP is a correct\n            instantiation of these PPs and packages. These properties are\n            necessary for the PP to be suitable for use as the basis for\n            writing an ST or another PP.\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.\n\n            This standard defines two assurance packages for PP evaluation as follows:, TABLE-PP-ASSURANCE, The assurance components for these packages are defined by table, ., ', 'APE'),
('1285.9109016890109', 'The requirements of the Development class provide information\n            about the TOE. The knowledge obtained by this information is\n            used as the basis for conducting vulnerability analysis and\n            testing upon the TOE, as described in the, AVA, and, ATE, classes.\n\n\n            The Development class encompasses six families of requirements\n            for structuring and representing the TSF at various levels and\n            varying forms of abstraction. These families include:, ADV, When documenting the security functionality of a TOE, there\n            are two properties that need to be demonstrated.  The first\n            property is that the security functionality works correctly;\n            that is, it performs as specified. The second property, and\n            one that is arguably harder to demonstrate, is that the TOE\n            cannot be used in a way such that the security functionality\n            can be corrupted or bypassed. These two properties require\n            somewhat different approaches in analysis, and so the families\n            in, ADV_FSP, are structured to support these\n            different approaches. The families, ADV_TDS, ,, ADV_IMP, ,, ADV_SPM, , and, ADV_ARC, deal with the first property: the specification\n            of the security functionality. The families, ADV_INT, and, ADV-RELATIONSHIPS, deal with\n            the second property: the specification of the design of the\n            TOE demonstrating the security functionality cannot be\n            corrupted or bypassed. It should be noted that both properties\n            need to be realised: the more confidence one has that the\n            properties are satisfied, the more trustworthy the TOE is. The\n            components in the families are designed so that more assurance\n            can be gained as the components hierarchically\n            increase.\n\n            The paradigm for the families targeted at the first property\n            is one of design decomposition. At the highest level, there is\n            a functional specification of the TSF in terms of its\n            interfaces (describing\n            what\n            the TSF does in\n            terms of requests to the TSF for services and resulting\n            responses), decomposing the TSF into smaller units (dependent\n            on the assurance desired and the complexity of the TOE) and\n            describing\n            how\n            the TSF accomplishes its\n            functions (to a level of detail commensurate with the\n            assurance level), and showing the implementation of the TSF. A\n            formal model of the security behaviour also may be given. All\n            levels of decomposition are used in determining the\n            completeness and accuracy of all other levels, ensuring that\n            the levels are mutually supportive. The requirements for the\n            various TSF representations are separated into different\n            families, to allow the PP/ST author to specify which TSF\n            representations are required. The level chosen will dictate\n            the assurance desired/gained.\n\n            Figure, ADV, indicates the\n            relationships among the various TSF representations of the, APE, class, as well as their\n            relationships with other classes. As the figure indicates, the, ASE, and, ASE, classes define the requirements for the correspondence between\n            the SFRs and the security objectives for the TOE. Class, ALC_CMC.5.2E, also defines requirements for the\n            correspondence between both the security objectives and SFRs,\n            and for the TOE summary specification which explains how the\n            TOE meets its SFRs.  The activities of, ATE, include the verification that the TSF that is\n            tested under the, AVA, and, ADV, classes is in fact the one described by all of the, ADV-RELATIONSHIPS, decomposition levels., ADV, The requirements for all other correspondence shown in Figure, ADV_SPM, are defined in the, ADV_FSP, class. The, ADV_TDS, family defines the requirements for formally\n            modelling selected SFRs, and providing correspondence between\n            the functional specification and the formal model.  Each\n            assurance family specific to a TSF representation (i.e.,, ADV_IMP, ,, ADV_INT, and, ADV_ARC, ) defines requirements\n            relating that TSF representation to the SFRs. All\n            decompositions must accurately reflect all other\n            decompositions (i.e., be mutually supportive); the developer\n            supplies the tracings in the last .C elements of the\n            components. Assurance relating to this factor is obtained\n            during the analysis for each of the levels of decomposition by\n            referring to other levels of decomposition (in a recursive\n            fashion) while the analysis of a particular level of\n            decomposition is being performed; the evaluator verifies the\n            correspondence as part of the second E element. The\n            understanding gained from these levels of decomposition form\n            the basis of the functional and penetration testing\n            efforts.\n\n            The, ADV_INT, family is not represented\n            in this figure, as it is related to the internal structure of\n            the TSF, and is only indirectly related to the process of\n            refinement of the TSF representations. Similarly, the, ADV_ARC, family is not represented in the\n            figure because it relates to the architectural soundness,\n            rather than representation, of the TSF. Both, ADV, and, ADV_FSP, relate to the analysis of the property that the TOE cannot be\n            made to circumvent or corrupt its security\n            functionality.\n\n            The TOE security functionality (TSF) consists of all parts of\n            the TOE that have to be relied upon for enforcement of the\n            SFRs. The TSF includes both functionality that directly\n            enforces the SFRs, as well as functionality that, while not\n            directly enforcing the SFRs, contributes to their enforcement\n            in a more indirect manner, including functionality with the\n            capability to cause the SFRs to be violated. This includes\n            portions of the TOE that are invoked on start-up that are\n            responsible for putting the TSF into its initial secure\n            state.\n\n            Several important concepts were used in the development of the\n            components of the, ADV_TDS, families. These\n            concepts, while introduced briefly here, are explained more\n            fully in the application notes for the families.\n\n            One over-riding notion is that, as more information becomes\n            available, greater assurance can be obtained that the security\n            functionality 1) is correctly implemented; 2) cannot be\n            corrupted; and 3) cannot be bypassed. This is done through the\n            verification that the documentation is correct and consistent\n            with other documentation, and by providing information that\n            can be used to ensure that the testing activities (both\n            functional and penetration testing) are comprehensive. This is\n            reflected in the levelling of the components of the\n            families. In general, components are levelled based on the\n            amount of information that is to be provided (and subsequently\n            analysed).\n\n            While not true for all TOEs, it is generally the case that the\n            TSF is sufficiently complex that there are portions of the TSF\n            that deserve more intense examination than other portions of\n            the TSF. Determining those portions is unfortunately somewhat\n            subjective, thus terminology and components have been defined\n            such that as the level of assurance increases, the\n            responsibility for determining what portions of the TSF need\n            to be examined in detail shifts from the developer to the\n            evaluator. To aid in expressing this concept, the following\n            terminology is introduced. It should be noted that in the\n            families of the class, this terminology is used when\n            expressing SFR-related portions of the TOE (that is, elements\n            and work units embodied in the, ADV_IMP, ,, ADV_ARC, , and, ADV, families). While the general\n            concept (that some portions of the TOE are more\n\n            interesting\n            than others) applies to other\n            families, the criteria are expressed differently in order to\n            obtain the assurance required.\n\n            All portions of the TSF are\n            security\n            relevant\n            , meaning that they must preserve the\n            security of the TOE as expressed by the SFRs and\n            requirements for domain separation and\n            non-bypassability. One aspect of security relevance is the\n            degree to which a portion of the TSF enforces a security\n            requirement. Since different portions of the TOE play\n            different roles (or no apparent role at all) in enforcing\n            security requirements, this creates a continuum of SFR\n            relevance: at one end of this continuum are portions of the\n            TOE that are termed\n            SFR-enforcing\n            . Such\n            portions play a direct role in implementing any SFR on the\n            TOE. Such SFRs refer to any functionality provided by one of\n            the SFRs contained in the ST. It should be noted that the\n            definition of\n            plays a role in\n            for\n            SFR-enforcing functionality is impossible to express\n            quantitatively. For example, in the implementation of a\n            Discretionary Access Control (DAC) mechanism, a very narrow\n            view of\n            SFR-enforcing\n            might be the several\n            lines of code that actually perform the check of a subject\'s\n            attributes against the object\'s attributes. A broader view\n            would include the software entity (e.g., C function) that\n            contained the several lines of code. A broader view still\n            would include callers of the C function, since they would be\n            responsible for enforcing the decision returned by the\n            attribute check. A still broader view would include any code\n            in the call tree (or programming equivalent for the\n            implementation language used) for that C function (e.g., a\n            sort function that sorted access control list entries in a\n            first-match algorithm implementation). At some point, the\n            component is not so much\n            enforcing\n            the\n            security policy but rather plays a\n\n            supporting\n            role; such components are termed\n\n            SFR supporting\n            .\n\n            One of the characteristics of SFR-supporting functionality is\n            that it is trusted to preserve the correctness of the SFR\n            implementation by operating without error. Such functionality\n            may be depended on by SFR-enforcing functionality, but the\n            dependence is generally at a functional level; for example,\n            memory management, buffer management, etc. Further down on the\n            security relevance continuum is functionality termed\n\n            SFR non-interfering\n            . Such functionality has\n            no role in implementing the SFRs, and is likely part of the\n            TSF because of its environment; for example, any code running\n            in a privileged hardware mode on an operating system. It needs\n            to be considered part of the TSF because, if compromised (or\n            replaced by malicious code), it could compromise the correct\n            operation of an SFR by virtue of its operating in the\n            privileged hardware mode. An example of SFR non-interfering\n            functionality might be a set of mathematical floating point\n            operations implemented in kernel mode for speed\n            considerations.\n\n            The architecture family (, ADV_ARC, )\n            provides for requirements and analysis of the TOE based on\n            properties of domain separation, self-protection, and\n            non-bypassability. These properties relate to the SFRs in\n            that, if these properties are not present, it will likely lead\n            to the failure of mechanisms implementing SFRs. Functionality\n            and design relating to these properties\n            is\n            not\n            considered a part of the continuum described\n            above, but instead is treated separately due to its\n            fundamentally different nature and analysis\n            requirements.\n\n            The difference in analysis of the implementation of SFRs\n            (SFR-enforcing and SFR-supporting functionality) and the\n            implementation of somewhat fundamental security properties of\n            the TOE, which include the initialisation, self-protection,\n            and non-bypassability concerns, is that the SFR-related\n            functionality is more or less directly visible and relatively\n            easy to test, while the above-mentioned properties require\n            varying degrees of analysis on a much broader set of\n            functionality. Further, the depth of analysis for such\n            properties will vary depending on the design of the TOE. The, families are constructed to address\n            this by a separate family (, )\n            devoted to analysis of the initialisation, self-protection,\n            and non-bypassability requirements, while the other families\n            are concerned with analysis of the functionality supporting\n            SFRs.\n\n            Even in cases where different descriptions are necessary for\n            the multiple levels of abstraction, it is not absolutely\n            necessary for each and every TSF representation to be in a\n            separate document. Indeed, it may be the case that a single\n            document meets the documentation requirements for more than\n            one TSF representation, since it is the information about each\n            of these TSF representations that is required, rather than the\n            resulting document structure. In cases where multiple TSF\n            representations are combined within a single document, the\n            developer should indicate which portions of the documents meet\n            which requirements.\n\n            Three types of specification style are mandated by this class:\n            informal, semiformal and formal. The functional specification\n            and TOE design documentation are always written in either\n            informal or semiformal style. A semiformal style reduces the\n            ambiguity in these documents over an informal presentation. A\n            formal specification may also be required\n            in addition\n            to\n            the semi-formal presentation; the value is that a\n            description of the TSF in more than one way will add increased\n            assurance that the TSF has been completely and accurately\n            specified.\n\n            An informal specification is written as prose in natural\n            language. Natural language is used here as meaning\n            communication in any commonly spoken tongue (e.g. Spanish,\n            German, French, English, Dutch). An informal specification is\n            not subject to any notational or special restrictions other\n            than those required as ordinary conventions for that language\n            (e.g. grammar and syntax). While no notational restrictions\n            apply, the informal specification is also required to provide\n            defined meanings for terms that are used in a context other\n            than that accepted by normal usage.\n\n            The difference between semiformal and informal documents is\n            only a matter of formatting or presentation: a semiformal\n            notation includes such things as an explicit glossary of\n            terms, a standardised presentation format, etc. A semiformal\n            specification is written to a standard presentation\n            template. The presentation should use terms consistently if\n            written in a natural language. The presentation may also use\n            more structured languages/diagrams (e.g. data-flow diagrams,\n            state transition diagrams, entity-relationship diagrams, data\n            structure diagrams, and process or program structure\n            diagrams). Whether based on diagrams or natural language, a\n            set of conventions must be used in the presentation. The\n            glossary explicitly identifies the words that are being used\n            in a precise and constant manner; similarly, the standardised\n            format implies that extreme care has been taken in\n            methodically preparing the document in a manner that maximises\n            clarity. It should be noted that fundamentally different\n            portions of the TSF may have different semiformal notation\n            conventions and presentation styles (as long as the number of\n            different ``semiformal notations\'\' is small); this still\n            conforms to the concept of a\n            semiformal\n            presentation\n            .\n\n            A formal specification is written in a notation based upon\n            well-established mathematical concepts, and is typically\n            accompanied by supporting explanatory (informal) prose. These\n            mathematical concepts are used to define the syntax and\n            semantics of the notation and the proof rules that support\n            logical reasoning. The syntactic and semantic rules supporting\n            a formal notation should define how to recognise constructs\n            unambiguously and determine their meaning. There needs to be\n            evidence that it is impossible to derive contradictions, and\n            all rules supporting the notation need to be defined or\n            referenced.', 'ADV'),
('477.6770343049977', 'Evaluating an ST is required to demonstrate that the ST is\n            sound and internally consistent, and, if the ST is based on\n            one or more PPs or packages, that the ST is a correct\n            instantiation of these PPs and packages. These properties are\n            necessary for the ST to be suitable for use as the basis for a\n            TOE evaluation.\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.', 'ASE'),
('589.0062907362311', 'Life-cycle support is an aspect of establishing discipline and\n            control in the processes of refinement of the TOE during its\n            development and maintenance. Confidence in the correspondence\n            between the TOE security requirements and the TOE is greater\n            if security analysis and the production of the evidence are\n            done on a regular basis as an integral part of the development\n            and maintenance activities.\n\n            In the product life-cycle it is distinguished whether the TOE\n            is under the responsibility of the developer or the user\n            rather than whether it is located in the development or user\n            environment. The point of transition is the moment where the\n            TOE is handed over to the user. This is also the point of\n            transition from the, ALC, to the, AGD, class.\n\n            The, ALC, class consists of seven\n            families., ALC_LCD, is the high-level\n            description of the TOE life-cycle;, ALC_CMC, a more detailed description of the management\n            of the configuration items., ALC_CMS, requires a minimum set of configuration items to be managed in\n            the defined way., ALC_DVS, is\n            concerned with the developer\'s physical, procedural,\n            personnel, and other security measures;, ALC_TAT, with the development tools and implementation\n            standards used by the developer;, ALC_FLR, with the handling of security flaws., ALC_DEL, defines the procedures used for\n            the delivery of the TOE to the consumer. Delivery processes\n            occurring during the development of the TOE are denoted rather\n            as transportations, and are handled in the context of\n            integration and acceptance procedures in other families of\n            this class.\n\n            Throughout this class, development and related terms\n            (developer, develop) are meant in the more general sense to\n            comprise development\n            and production\n            , whereas\n            production specifically means the process of transforming the\n            implementation representation into the final TOE.', 'ALC'),
('667.906563592838', 'The, AVA, class addresses the\n            possibility of exploitable vulnerabilities introduced in the\n            development or the operation of the TOE.', 'AVA'),
('845.7730239725668', 'The class ``Tests\'\' encompasses four families:, ATE_COV, ,, ATE_DPT, ,, ATE_IND, (i.e. functional testing\n            performed by evaluators), and, ATE_FUN, .  Testing provides assurance that the TSF\n            behaves as described (in the functional specification, TOE\n            design, and implementation representation).\n\n            The emphasis in this class is on confirmation that the TSF\n            operates according to its design descriptions. This class does\n            not address penetration testing, which is based upon an\n            analysis of the TSF that specifically seeks to identify\n            vulnerabilities in the design and implementation of the\n            TSF. Penetration testing is addressed separately as an aspect\n            of vulnerability assessment in the, AVA, class.\n\n            The, ATE, class separates testing into\n            developer testing and evaluator testing. The, ATE_COV, and, ATE_DPT, families address the completeness of developer\n            testing., ATE_COV, addresses the rigour\n            with which the functional specification is tested;, ATE_DPT, addresses whether testing against\n            other design descriptions (security architecture, TOE design,\n            implementation representation) is required., ATE_FUN, addresses the performing of\n            the tests by the developer and how this testing should be\n            documented. Finally,, ATE_IND, then\n            addresses evaluator testing: whether the evaluator should\n            repeat part or all of the developer testing and how much\n            independent testing the evaluator should do.', 'ATE');

-- --------------------------------------------------------

--
-- Table structure for table `aecontent`
--

CREATE TABLE `aecontent` (
  `id_aecontent` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL,
  `id_acomponent` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aecontent`
--

INSERT INTO `aecontent` (`id_aecontent`, `testo`, `ida`, `idf`, `id_acomponent`) VALUES
('ace_ccl.1.1c', ' The conformance claim shall contain a CC conformance claim that identifies the version of the CC to which the PP-Module claims conformance. ', 'ace', 'ace_ccl', 'ace_ccl.1'),
('ace_ccl.1.2c', ' The CC conformance claim shall describe the conformance of the PP-Module to CC Part 2 as either CC Part 2 conformant or CC Part 2 extended. ', 'ace', 'ace_ccl', 'ace_ccl.1'),
('ace_ccl.1.3c', ' The conformance claim shall identify all security functional requirement packages to which the PP-Module claims conformance', 'ace', 'ace_ccl', 'ace_ccl.1'),
('ace_ccl.1.4c', ' The CC conformance claim shall be consistent with the extended components definition.', 'ace', 'ace_ccl', 'ace_ccl.1'),
('ace_cco.1.1c', 'The PP-Configuration reference shall uniquely identify the PP-Configuration.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.2c', 'The components statements shall uniquely identify the Protection Profiles and the PP-Modules that compose the PP-Configuration.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.3c', 'The conformance statement shall specify the kind of conformity of the PP-Configuration, either strict or demonstrable. The conformance claim shall contain a CC conformance claim that identifies the version of the CC to which the PP-Configuration and its underlying Base-PP(s) and PP-Module claim conformance.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.4c', 'The SAR statement shall specify the set of SAR or predefined EAL that applies to this PP-Configuration.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.5c', 'The Base-PP(s) on which the PP-Modules relies shall belong the Protection Profiles identified in the components statement of the PP-Configuration.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_ecd.1.1c', ' The statement of security functional requirements shall identify all extended security functional requirements. ', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_ecd.1.2c', ' The extended functional components definition shall define an extended functional component for each extended security functional requirement.', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_ecd.1.3c', ' The extended functional components definition shall describe how each extended functional component is related to the existing CC Part 2 components, families, and classes.', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_ecd.1.4c', ' The extended functional components definition shall use the existing CC Part 2 components, families, classes, and methodology as a model for presentation.', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_ecd.1.5c', ' The extended functional components shall consist of measurable and objective elements such that conformance or nonconformance to these elements can be demonstrated.', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_int.1.1c', ' The PP-Module introduction shall uniquely identify all the Base-PPs on which the PP-Module relies, including their logical structuring and relationship to the PP-Module according to CC Part 1, section B.14.3.2.', 'ace', 'ace_int', 'ace_int.1'),
('ace_int.1.2c', ' The TOE overview shall identify the differences introduced by the PP-Module with respect to the TOE overview of its Base-PP(s).', 'ace', 'ace_int', 'ace_int.1'),
('ace_mco.1.1c', 'The consistency rationale shall demonstrate that the TOE type of the PP-Module is consistent with the TOE type(s) in the Base-PPs identified in the PP-Module introduction.', 'ace', 'ace_mco', 'ace_mco.1'),
('ace_mco.1.2c', 'The consistency rationale shall demonstrate that the statement of the security problem definition is consistent with the statement of the security problem definition in the Base-PPs identified in the PP-Module introduction.', 'ace', 'ace_mco', 'ace_mco.1'),
('ace_mco.1.3c', 'The consistency rationale shall demonstrate that the statement of security objectives is consistent with the statement of security objectives in the Base-PPs identified in the PP-Module introduction.', 'ace', 'ace_mco', 'ace_mco.1'),
('ace_mco.1.4c', 'The consistency rationale shall demonstrate that the statement of security requirements is consistent with the statement of security requirements in the Base-PPs identified in the PP-Module introduction.', 'ace', 'ace_mco', 'ace_mco.1'),
('ace_req.1.1c', 'The statement of security requirements shall describe the SFRs that hold on the TOE.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.2c', 'All subjects, objects, operations, security attributes, external entities and other terms that are used in the SFRs shall be defined.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.3c', 'The statement of security functional requirements shall identify all operations on the security functional requirements.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.4c', 'All operations shall be performed correctly.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.5c', 'Each dependency of the security functional requirements shall either be satisfied, or the security functional requirements rationale shall justify the dependency not being satisfied.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.6c', 'The security functional requirements rationale shall trace each SFR back to the security objectives for the TOE.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.7c', 'The security functional requirements rationale shall demonstrate that the SFRs meet all security objectives for the TOE.', 'ace', 'ace_req', 'ace_req.1'),
('aco_cor.1.1c', '\n                    The composition rationale shall demonstrate that a level of\n                    assurance at least as high as that of the dependent\n                    component has been obtained for the support functionality of\n                    the base component, when the base component is configured as\n                    required to support the TSF of the dependent component.\n                ', 'aco', 'aco_cor', 'aco_cor.1'),
('aco_ctt.1.1c', '\n                    The composed TOE and base component interface test\n                    documentation shall consist of test plans, expected test\n                    results and actual test results.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.2c', '\n                    The test documentation from the developer execution of the\n                    composed TOE tests shall demonstrate that the TSF behaves as\n                    specified.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.3c', '\n                    The test documentation from the developer execution of the\n                    base component interface tests shall demonstrate that the\n                    base component interface relied upon by the dependent\n                    component behaves as specified.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.4c', '\n                    The base component shall be suitable for testing.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.2.1c', '\n                    The composed TOE and base component interface test\n                    documentation shall consist of test plans, expected test\n                    results and actual test results.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.2c', '\n                    The test documentation from the developer execution of the\n                    composed TOE tests shall demonstrate that the TSF behaves as\n                    specified and is complete.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.3c', '\n                    The test documentation from the developer execution of the\n                    base component interface tests shall demonstrate that the\n                    base component interface relied upon by the dependent\n                    component behaves as specified and is complete.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.4c', '\n                    The base component shall be suitable for testing.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_dev.1.1c', '\n                    The development information shall describe the purpose of\n                    each interface of the base component used in the composed\n                    TOE.\n                ', 'aco', 'aco_dev', 'aco_dev.1'),
('aco_dev.1.2c', '\n                    The development information shall show correspondence\n                    between the interfaces, used in the composed TOE, of the\n                    base component and the dependent component to support the\n                    TSF of the dependent component.\n                ', 'aco', 'aco_dev', 'aco_dev.1'),
('aco_dev.2.1c', '\n                    The development information shall describe the purpose and\n                    method of use of each interface of the base component used\n                    in the composed TOE.\n                ', 'aco', 'aco_dev', 'aco_dev.2'),
('aco_dev.2.2c', '\n                    The development information shall provide a high-level\n                    description of the behaviour of the base component, which\n                    supports the enforcement of the dependent component SFRs.\n                ', 'aco', 'aco_dev', 'aco_dev.2'),
('aco_dev.2.3c', '\n                    The development information shall show correspondence\n                    between the interfaces, used in the composed TOE, of the\n                    base component and the dependent component to support the\n                    TSF of the dependent component.\n                ', 'aco', 'aco_dev', 'aco_dev.2'),
('aco_dev.3.1c', '\n                    The development information shall describe the purpose and\n                    method of use of each interface of the base component used\n                    in the composed TOE.\n                ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_dev.3.2c', '\n                    The development information shall identify the subsystems of\n                    the base component that provide interfaces of the base\n                    component used in the composed TOE.\n                ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_dev.3.3c', '\n                    The development information shall provide a high-level\n                    description of the behaviour of the base component\n                    subsystems, which support the enforcement of the dependent\n                    component SFRs.\n                ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_dev.3.4c', '\n                    The development information shall provide a mapping from the\n                    interfaces to the subsystems of the base component.\n                ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_dev.3.5c', '\n                    The development information shall show correspondence\n                    between the interfaces, used in the composed TOE, of the\n                    base component and the dependent component to support the\n                    TSF of the dependent component.\n                ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_rel.1.1c', '\n                    The reliance information shall describe the functionality of\n                    the base component hardware, firmware and/or software that\n                    is relied upon by the dependent component TSF.\n                ', 'aco', 'aco_rel', 'aco_rel.1'),
('aco_rel.1.2c', '\n                    The reliance information shall describe all interactions\n                    through which the dependent component TSF requests services\n                    from the base component.\n                ', 'aco', 'aco_rel', 'aco_rel.1'),
('aco_rel.1.3c', '\n                    The reliance information shall describe how the dependent\n                    TSF protects itself from interference and tampering by the\n                    base component.\n                ', 'aco', 'aco_rel', 'aco_rel.1'),
('aco_rel.2.1c', '\n                    The reliance information shall describe the functionality of\n                    the base component hardware, firmware and/or software that\n                    is relied upon by the dependent component TSF.\n                ', 'aco', 'aco_rel', 'aco_rel.2'),
('aco_rel.2.2c', '\n                    The reliance information shall describe all interactions\n                    through which the dependent component TSF requests services\n                    from the base component.\n                ', 'aco', 'aco_rel', 'aco_rel.2'),
('aco_rel.2.3c', '\n                    The reliance information shall describe each interaction in\n                    terms of the interface used and the return values from those\n                    interfaces.\n                ', 'aco', 'aco_rel', 'aco_rel.2'),
('aco_rel.2.4c', '\n                    The reliance information shall describe how the dependent\n                    TSF protects itself from interference and tampering by the\n                    base component.\n                ', 'aco', 'aco_rel', 'aco_rel.2'),
('aco_vul.1.1c', '\n                    The composed TOE shall be suitable for testing.\n                ', 'aco', 'aco_vul', 'aco_vul.1'),
('aco_vul.2.1c', '\n                    The composed TOE shall be suitable for testing.\n                ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.3.1c', '\n                    The composed TOE shall be suitable for testing.\n                ', 'aco', 'aco_vul', 'aco_vul.3'),
('adv_arc.1.1c', '\n                    The security architecture description shall be at a level of\n                    detail commensurate with the description of the\n                    SFR-enforcing abstractions described in the TOE design\n                    document.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_arc.1.2c', '\n                    The security architecture description shall describe the\n                    security domains maintained by the TSF consistently with the\n                    SFRs.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_arc.1.3c', '\n                    The security architecture description shall describe how the\n                    TSF initialisation process is secure.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_arc.1.4c', '\n                    The security architecture description shall demonstrate that\n                    the TSF protects itself from tampering.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_arc.1.5c', '\n                    The security architecture description shall demonstrate that\n                    the TSF prevents bypass of the SFR-enforcing functionality.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_fsp.1.1c', '\n                    The functional specification shall describe the purpose and\n                    method of use for each SFR-enforcing and SFR-supporting\n                    TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.1.2c', '\n                    The functional specification shall identify all parameters\n                    associated with each SFR-enforcing and SFR-supporting TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.1.3c', '\n                    The functional specification shall provide rationale for the\n                    implicit categorisation of interfaces as\n                    SFR-non-interfering.\n                ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.1.4c', '\n                    The tracing shall demonstrate that the SFRs trace to TSFIs\n                    in the functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.2.1c', '\n                    The functional specification shall completely represent the\n                    TSF.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.2c', '\n                    The functional specification shall describe the purpose and\n                    method of use for all TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.3c', '\n                    The functional specification shall identify and describe all\n                    parameters associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.4c', '\n                    For each SFR-enforcing TSFI, the functional specification shall\n                    describe the SFR-enforcing actions associated with the TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.5c', '\n                    For each SFR-enforcing TSFI, the functional specification shall\n                    describe direct error messages resulting from processing\n                    associated with the SFR-enforcing actions.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.6c', '\n                    The tracing shall demonstrate that the SFRs trace to TSFIs\n                    in the functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.3.1c', '\n                    The functional specification shall completely represent the\n                    TSF.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.2c', '\n                    The functional specification shall describe the purpose and\n                    method of use for all TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.3c', '\n                    The functional specification shall identify and describe all\n                    parameters associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.4c', '\n                    For each SFR-enforcing TSFI, the functional specification shall\n                    describe the SFR-enforcing actions associated with the TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.5c', '\n                    For each SFR-enforcing TSFI, the functional specification shall\n                    describe direct error messages resulting from SFR-enforcing\n                    actions and exceptions associated with invocation of the TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.6c', '\n                    The functional specification shall summarise the SFR-supporting\n                    and SFR-non-interfering actions associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.7c', '\n                    The tracing shall demonstrate that the SFRs trace to TSFIs\n                    in the functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.4.1c', '\n                    The functional specification shall completely represent the\n                    TSF.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.2c', '\n                    The functional specification shall describe the purpose and\n                    method of use for all TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.3c', '\n                    The functional specification shall identify and describe all\n                    parameters associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.4c', '\n                    The functional specification shall describe all actions\n                    associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.5c', '\n                    The functional specification shall describe all direct error\n                    messages that may result from an invocation of each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.6c', '\n                    The tracing shall demonstrate that the SFRs trace to TSFIs\n                    in the functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.5.1c', '\n                    The functional specification shall completely represent the\n                    TSF.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.2c', '\n                    The functional specification shall describe the TSFI using a\n                    semi-formal style.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.3c', '\n                    The functional specification shall describe the purpose and\n                    method of use for all TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.4c', '\n                    The functional specification shall identify and describe all\n                    parameters associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.5c', '\n                    The functional specification shall describe all actions\n                    associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.6c', '\n                    The functional specification shall describe all direct error\n                    messages that may result from an invocation of each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.7c', ' The functional specification\n                    shall describe all error messages that do not result from an\n                    invocation of a TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.8c', '\n                    The functional specification shall provide a rationale for\n                    each error message contained in the TSF implementation yet\n                    does not result from an invocation of a TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.9c', '\n                    The tracing shall demonstrate that the SFRs trace to TSFIs\n                    in the functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.6.10c', '\n                    The tracing shall demonstrate that the SFRs trace to TSFIs\n                    in the functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.1c', '\n                    The functional specification shall completely represent the\n                    TSF.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.2c', '\n                    The functional specification shall describe the TSFI using a\n                    formal style.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.3c', '\n                    The functional specification shall describe the purpose and\n                    method of use for all TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.4c', '\n                    The functional specification shall identify and describe all\n                    parameters associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.5c', '\n                    The functional specification shall describe all actions\n                    associated with each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.6c', '\n                    The functional specification shall describe all direct error\n                    messages that may result from an invocation of each TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.7c', '\n                    The functional specification shall describe all error messages\n                    contained in the TSF implementation representation.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.8c', '\n                    The functional specification shall provide a rationale for\n                    each error message contained in the TSF implementation that\n                    is not otherwise described in the functional specification\n                    justifying why it is not associated with a TSFI.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.9c', '\n                    The formal presentation of the functional specification of\n                    the TSF shall describe the TSFI using a formal style,\n                    supported by informal, explanatory text where appropriate.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_imp.1.1c', '\n                    The implementation representation shall define the TSF to a\n                    level of detail such that the TSF can be generated without\n                    further design decisions.\n                ', 'adv', 'adv_imp', 'adv_imp.1'),
('adv_imp.1.2c', '\n                    The implementation representation shall be in the form used\n                    by the development personnel.\n                ', 'adv', 'adv_imp', 'adv_imp.1'),
('adv_imp.1.3c', '\n                    The mapping between the TOE design description and the\n                    sample of the implementation representation shall\n                    demonstrate their correspondence.\n                ', 'adv', 'adv_imp', 'adv_imp.1'),
('adv_imp.2.1c', '\n                    The implementation representation shall define the TSF to a\n                    level of detail such that the TSF can be generated without\n                    further design decisions.\n                ', 'adv', 'adv_imp', 'adv_imp.2'),
('adv_imp.2.2c', '\n                    The implementation representation shall be in the form used\n                    by the development personnel.\n                ', 'adv', 'adv_imp', 'adv_imp.2'),
('adv_imp.2.3c', '\n                    The mapping between the TOE design description and the\n                    entire implementation representation shall demonstrate their\n                    correspondence.\n                ', 'adv', 'adv_imp', 'adv_imp.2'),
('adv_int.1.1c', '\n                    The justification shall explain the characteristics used to\n                    judge the meaning of ``well-structured\'\'.\n                ', 'adv', 'adv_int', 'adv_int.1'),
('adv_int.1.2c', '\n                    The TSF internals description shall demonstrate that the\n                    assigned subset of the TSF is well-structured.\n                ', 'adv', 'adv_int', 'adv_int.1'),
('adv_int.2.1c', '\n                    The justification shall describe the characteristics used to\n                    judge the meaning of ``well-structured\'\'.\n                ', 'adv', 'adv_int', 'adv_int.2'),
('adv_int.2.2c', '\n                    The TSF internals description shall demonstrate that the\n                    entire TSF is well-structured.\n                ', 'adv', 'adv_int', 'adv_int.2'),
('adv_int.3.1c', '\n                    The justification shall describe the characteristics used to\n                    judge the meaning of ``well-structured\'\' and ``complex\'\'.\n                ', 'adv', 'adv_int', 'adv_int.3'),
('adv_int.3.2c', '\n                    The TSF internals description shall demonstrate that the\n                    entire TSF is well-structured and is not overly complex.\n                ', 'adv', 'adv_int', 'adv_int.3'),
('adv_spm.1.1c', '\n                    The model shall be in a formal style, supported by\n                    explanatory text as required, and identify the security\n                    policies of the TSF that are modelled.\n                ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_spm.1.2c', '\n                    For all policies that are modelled, the model shall define\n                    security for the TOE and provide a formal proof that the TOE\n                    cannot reach a state that is not secure.\n                ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_spm.1.3c', '\n                    The correspondence between the model and the functional\n                    specification shall be at the correct level of formality.\n                ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_spm.1.4c', '\n                    The correspondence shall show that the functional\n                    specification is consistent and complete with respect to the\n                    model.\n                ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_tds.1.1c', '\n                    The design shall describe the structure of the TOE in terms\n                    of subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.2c', '\n                    The design shall identify all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.3c', '\n                    The design shall describe the behaviour of each\n                    SFR-supporting or SFR-non-interfering TSF subsystem in\n                    sufficient detail to determine that it is not SFR-enforcing.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.4c', '\n                    The design shall summarise the SFR-enforcing behaviour of\n                    the SFR-enforcing subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.5c', '\n                    The design shall provide a description of the interactions\n                    among SFR-enforcing subsystems of the TSF, and between the\n                    SFR-enforcing subsystems of the TSF and other subsystems of\n                    the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.6c', '\n                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.2.1c', '\n                    The design shall describe the structure of the TOE in terms\n                    of subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.2c', '\n                    The design shall identify all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.3c', '\n                    The design shall describe the behaviour of each SFR\n                    non-interfering subsystem of the TSF in detail sufficient to\n                    determine that it is SFR non-interfering.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.4c', '\n                    The design shall describe the SFR-enforcing behaviour of the\n                    SFR-enforcing subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.5c', '\n                    The design shall summarise the SFR-supporting and\n                    SFR-non-interfering behaviour of the SFR-enforcing subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.6c', '\n                    The design shall summarise the behaviour of the\n                    SFR-supporting subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.7c', '\n                    The design shall provide a description of the interactions\n                    among all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.8c', '\n                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.3.10c', '\n                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.1c', '\n                    The design shall describe the structure of the TOE in terms\n                    of subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.2c', '\n                    The design shall describe the TSF in terms of modules.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.3c', '\n                    The design shall identify all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.4c', '\n                    The design shall provide a description of each subsystem of\n                    the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.5c', '\n                    The design shall provide a description of the interactions\n                    among all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.6c', '\n                    The design shall provide a mapping from the subsystems of\n                    the TSF to the modules of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.7c', '\n                    The design shall describe each SFR-enforcing module in terms of\n                    its purpose and relationship with other modules.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.8c', '\n                    The design shall describe each SFR-enforcing module in terms of\n                    its SFR-related interfaces, return values from those interfaces,\n                    interaction with other modules and called\n                    SFR-related interfaces to other SFR-enforcing modules.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.9c', '\n                    The design shall describe each SFR-supporting or\n                    SFR-non-interfering module in terms of its purpose and\n                    interaction with other modules.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.4.10c', '\n                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.1c', '\n                    The design shall describe the structure of the TOE in terms\n                    of subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.2c', '\n                    The design shall describe the TSF in terms of modules,\n                    designating each module as SFR-enforcing,\n                    SFR-supporting, or SFR-non-interfering.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.3c', '\n                    The design shall identify all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.4c', '\n                    The design shall provide a semiformal description of each subsystem of\n                    the TSF, supported by informal, explanatory text where appropriate.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.5c', '\n                    The design shall provide a description of the interactions\n                    among all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.6c', '\n                    The design shall provide a mapping from the subsystems of\n                    the TSF to the modules of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.7c', '\n                    The design shall describe each SFR-enforcing and SFR-supporting\n                    module in terms of its purpose and relationship with other\n                    modules.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.8c', '\n                    The design shall describe each SFR-enforcing and SFR-supporting module\n                    in terms of its SFR-related interfaces, return values from those interfaces,\n                    interaction with other modules and called SFR-related\n                    interfaces to other SFR-enforcing or SFR-supporting modules.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.9c', '\n                    The design shall describe each SFR-non-interfering module in\n                    terms of its purpose and interaction with other modules.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.5.1c', '\n                    The design shall describe the structure of the TOE in terms\n                    of subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.2c', '\n                    The design shall describe the TSF in terms of modules,\n                    designating each module as SFR-enforcing,\n                    SFR-supporting, or SFR-non-interfering.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.3c', '\n                    The design shall identify all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.4c', '\n                    The design shall provide a semiformal description of each\n                    subsystem of the TSF, supported by informal, explanatory text where\n                    appropriate.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.5c', '\n                    The design shall provide a description of the interactions among all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.6c', '\n                    The design shall provide a mapping from the subsystems of\n                    the TSF to the modules of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.7c', '\n                    The design shall provide a semiformal description of each module\n                    in terms of its purpose, interaction, interfaces, return values\n                    from those interfaces, and called interfaces to other modules,\n                    supported by informal, explanatory text where appropriate.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.8c', '\n                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.6.10c', '\n                    The proof of correspondence between the formal\n                    specifications of the TSF subsystems and of the functional\n                    specification shall demonstrate that all behaviour described\n                    in the TOE design is a correct and complete refinement of\n                    the TSFI that invoked it.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.1c', '\n                    The design shall describe the structure of the TOE in terms\n                    of subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.2c', '\n                    The design shall describe the TSF in terms of modules,\n                    designating each module as SFR-enforcing,\n                    SFR-supporting, or SFR-non-interfering.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.3c', '\n                    The design shall identify all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.4c', '\n                    The design shall provide a semiformal description of each\n                    subsystem of the TSF, supported by informal, explanatory text where\n                    appropriate.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.5c', '\n                    The design shall provide a description of the interactions among all subsystems of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.6c', '\n                    The design shall provide a mapping from the subsystems of\n                    the TSF to the modules of the TSF.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.7c', '\n                    The design shall describe each module in semiformal style in terms\n                    of its purpose, interaction, interfaces, return values from those interfaces,\n                    and called interfaces to other modules, supported by informal, explanatory\n                    text where appropriate.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.8c', '\n                    The formal specification of the TSF subsystems shall\n                    describe the TSF using a formal style, supported by\n                    informal, explanatory text where appropriate.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.9c', '\n                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('agd_ope.1.1c', '\n                    The operational user guidance shall describe, for each user\n                    role, the user-accessible functions and privileges that\n                    should be controlled in a secure processing environment,\n                    including appropriate warnings.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_ope.1.2c', '\n                    The operational user guidance shall describe, for each user\n                    role, how to use the available interfaces provided by the\n                    TOE in a secure manner.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_ope.1.3c', '\n                    The operational user guidance shall describe, for each user\n                    role, the available functions and interfaces, in particular\n                    all security parameters under the control of the user,\n                    indicating secure values as appropriate.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_ope.1.4c', '\n                    The operational user guidance shall, for each user role,\n                    clearly present each type of security-relevant event\n                    relative to the user-accessible functions that need to be\n                    performed, including changing the security characteristics\n                    of entities under the control of the TSF.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_ope.1.5c', '\n                    The operational user guidance shall identify all possible\n                    modes of operation of the TOE (including operation following\n                    failure or operational error), their consequences and\n                    implications for maintaining secure operation.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_ope.1.6c', '\n                    The operational user guidance shall, for each user role,\n                    describe the security measures to be followed in order to\n                    fulfil the security objectives for the operational\n                    environment as described in the ST.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_ope.1.7c', '\n                    The operational user guidance shall be clear and reasonable.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_pre.1.1c', ' The preparative procedures\n                    shall describe all the steps necessary for secure acceptance\n                    of the delivered TOE in accordance with the developer\'s\n                    delivery procedures.\n                ', 'agd', 'agd_pre', 'agd_pre.1'),
('agd_pre.1.2c', ' The preparative procedures\n                    shall describe all the steps necessary for secure\n                    installation of the TOE and for the secure preparation of\n                    the operational environment in accordance with the security\n                    objectives for the operational environment as described in\n                    the ST.\n                ', 'agd', 'agd_pre', 'agd_pre.1'),
('alc_cmc.1.1c', '\n                    The TOE shall be labelled with its unique reference.\n                ', 'alc', 'alc_cmc', 'alc_cmc.1'),
('alc_cmc.2.1c', '\n                    The TOE shall be labelled with its unique reference.\n                ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.2.2c', '\n                    The CM documentation shall describe the method used to\n                    uniquely identify the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.2.3c', '\n                    The CM system shall uniquely identify all configuration\n                    items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.3.1c', '\n                    The TOE shall be labelled with its unique reference.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.2c', '\n                    The CM documentation shall describe the method used to\n                    uniquely identify the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.3c', '\n                    The CM system shall uniquely identify all configuration\n                    items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.4c', '\n                    The CM system shall provide measures such that only\n                    authorised changes are made to the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.5c', '\n                    The CM documentation shall include a CM plan.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.6c', '\n                    The CM plan shall describe how the CM system is used for the\n                    development of the TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.7c', '\n                    The evidence shall demonstrate that all configuration items\n                    are being maintained under the CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.8c', '\n                    The evidence shall demonstrate that the CM system is being\n                    operated in accordance with the CM plan.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.4.10c', '\n                    The evidence shall demonstrate that the CM system is being\n                    operated in accordance with the CM plan.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.1c', '\n                    The TOE shall be labelled with its unique reference.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.2c', '\n                    The CM documentation shall describe the method used to\n                    uniquely identify the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.3c', '\n                    The CM system shall uniquely identify all configuration\n                    items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.4c', '\n                    The CM system shall provide automated measures such that\n                    only authorised changes are made to the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.5c', '\n                    The CM system shall support the production of the TOE by\n                    automated means.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.6c', '\n                    The CM documentation shall include a CM plan.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.7c', '\n                    The CM plan shall describe how the CM system is used for the\n                    development of the TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.8c', '\n                    The CM plan shall describe the procedures used to accept\n                    modified or newly created configuration items as part of the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.9c', '\n                    The evidence shall demonstrate that all configuration items\n                    are being maintained under the CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.5.10c', '\n                    The CM system shall provide an automated means to identify\n                    all other configuration items that are affected by the\n                    change of a given configuration item.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.11c', '\n                    The CM system shall be able to identify the version of the\n                    implementation representation from which the TOE is\n                    generated.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.12c', '\n                    The CM documentation shall include a CM plan.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.13c', '\n                    The CM plan shall describe how the CM system is used for the\n                    development of the TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.14c', '\n                    The CM plan shall describe the procedures used to accept\n                    modified or newly created configuration items as part of the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.15c', '\n                    The evidence shall demonstrate that all configuration items\n                    are being maintained under the CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.16c', '\n                    The evidence shall demonstrate that the CM system is being\n                    operated in accordance with the CM plan.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.1c', '\n                    The TOE shall be labelled with its unique reference.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.2c', '\n                    The CM documentation shall describe the method used to\n                    uniquely identify the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.3c', '\n                    The CM documentation shall justify that the acceptance\n                    procedures provide for an adequate and appropriate review of\n                    changes to all configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.4c', '\n                    The CM system shall uniquely identify all configuration\n                    items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.5c', '\n                    The CM system shall provide automated measures such that\n                    only authorised changes are made to the configuration items.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.6c', '\n                    The CM system shall support the production of the TOE by\n                    automated means.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.7c', '\n                    The CM system shall ensure that the person responsible for\n                    accepting a configuration item into CM is not the person who\n                    developed it.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5');
INSERT INTO `aecontent` (`id_aecontent`, `testo`, `ida`, `idf`, `id_acomponent`) VALUES
('alc_cmc.5.8c', '\n                    The CM system shall identify the configuration items that\n                    comprise the TSF.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.9c', '\n                    The CM system shall support the audit of all changes to the\n                    TOE by automated means, including the originator, date, and\n                    time in the audit trail.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cms.1.1c', '\n                    The configuration list shall include the following: the TOE\n                    itself; and the evaluation evidence required by the SARs.\n                ', 'alc', 'alc_cms', 'alc_cms.1'),
('alc_cms.1.2c', '\n                    The configuration list shall uniquely identify the\n                    configuration items.\n                ', 'alc', 'alc_cms', 'alc_cms.1'),
('alc_cms.2.1c', '\n                    The configuration list shall include the following: the TOE\n                    itself; the evaluation evidence required by the SARs; and\n                    the parts that comprise the TOE.\n                ', 'alc', 'alc_cms', 'alc_cms.2'),
('alc_cms.2.2c', '\n                    The configuration list shall uniquely identify the\n                    configuration items.\n                ', 'alc', 'alc_cms', 'alc_cms.2'),
('alc_cms.2.3c', '\n                    For each TSF relevant configuration item, the configuration\n                    list shall indicate the developer of the item.\n                ', 'alc', 'alc_cms', 'alc_cms.2'),
('alc_cms.3.1c', '\n                    The configuration list shall include the following: the TOE\n                    itself; the evaluation evidence required by the SARs; the\n                    parts that comprise the TOE; and the implementation\n                    representation.\n                ', 'alc', 'alc_cms', 'alc_cms.3'),
('alc_cms.3.2c', '\n                    The configuration list shall uniquely identify the\n                    configuration items.\n                ', 'alc', 'alc_cms', 'alc_cms.3'),
('alc_cms.3.3c', '\n                    For each TSF relevant configuration item, the configuration\n                    list shall indicate the developer of the item.\n                ', 'alc', 'alc_cms', 'alc_cms.3'),
('alc_cms.4.1c', '\n                    The configuration list shall include the following: the TOE\n                    itself; the evaluation evidence required by the SARs; the\n                    parts that comprise the TOE; the implementation\n                    representation; and security flaw reports and resolution\n                    status.\n                ', 'alc', 'alc_cms', 'alc_cms.4'),
('alc_cms.4.2c', '\n                    The configuration list shall uniquely identify the\n                    configuration items.\n                ', 'alc', 'alc_cms', 'alc_cms.4'),
('alc_cms.4.3c', '\n                    For each TSF relevant configuration item, the configuration\n                    list shall indicate the developer of the item.\n                ', 'alc', 'alc_cms', 'alc_cms.4'),
('alc_cms.5.1c', '\n                    The configuration list shall include the following: the TOE\n                    itself; the evaluation evidence required by the SARs; the\n                    parts that comprise the TOE; the implementation\n                    representation; security flaw reports and resolution status;\n                    and development tools and related information.\n                ', 'alc', 'alc_cms', 'alc_cms.5'),
('alc_cms.5.2c', '\n                    The configuration list shall uniquely identify the\n                    configuration items.\n                ', 'alc', 'alc_cms', 'alc_cms.5'),
('alc_cms.5.3c', '\n                    For each TSF relevant configuration item, the configuration\n                    list shall indicate the developer of the item.\n                ', 'alc', 'alc_cms', 'alc_cms.5'),
('alc_del.1.1c', '\n                    The delivery documentation shall describe all procedures\n                    that are necessary to maintain security when distributing\n                    versions of the TOE to the consumer.\n                ', 'alc', 'alc_del', 'alc_del.1'),
('alc_dvs.1.1c', '\n                    The development security documentation shall describe all\n                    the physical, procedural, personnel, and other security\n                    measures that are necessary to protect the confidentiality\n                    and integrity of the TOE design and implementation in its\n                    development environment.\n                ', 'alc', 'alc_dvs', 'alc_dvs.1'),
('alc_dvs.2.1c', '\n                    The development security documentation shall describe all\n                    the physical, procedural, personnel, and other security\n                    measures that are necessary to protect the confidentiality\n                    and integrity of the TOE design and implementation in its\n                    development environment.\n                ', 'alc', 'alc_dvs', 'alc_dvs.2'),
('alc_dvs.2.2c', '\n                    The development security documentation shall justify that\n                    the security measures provide the necessary level of\n                    protection to maintain the confidentiality and integrity of\n                    the TOE.\n                ', 'alc', 'alc_dvs', 'alc_dvs.2'),
('alc_flr.1.1c', '\n                    The flaw remediation procedures documentation shall describe\n                    the procedures used to track all reported security flaws in\n                    each release of the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.1'),
('alc_flr.1.2c', '\n                    The flaw remediation procedures shall require that a\n                    description of the nature and effect of each security flaw\n                    be provided, as well as the status of finding a correction\n                    to that flaw.\n                ', 'alc', 'alc_flr', 'alc_flr.1'),
('alc_flr.1.3c', '\n                    The flaw remediation procedures shall require that\n                    corrective actions be identified for each of the security\n                    flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.1'),
('alc_flr.1.4c', '\n                    The flaw remediation procedures documentation shall describe\n                    the methods used to provide flaw information, corrections\n                    and guidance on corrective actions to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.1'),
('alc_flr.2.1c', '\n                    The flaw remediation procedures documentation shall describe\n                    the procedures used to track all reported security flaws in\n                    each release of the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.2c', '\n                    The flaw remediation procedures shall require that a\n                    description of the nature and effect of each security flaw\n                    be provided, as well as the status of finding a correction\n                    to that flaw.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.3c', '\n                    The flaw remediation procedures shall require that\n                    corrective actions be identified for each of the security\n                    flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.4c', '\n                    The flaw remediation procedures documentation shall describe\n                    the methods used to provide flaw information, corrections\n                    and guidance on corrective actions to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.5c', '\n                    The flaw remediation procedures shall describe a means by\n                    which the developer receives from TOE users reports and\n                    enquiries of suspected security flaws in the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.6c', '\n                    The procedures for processing reported security flaws shall\n                    ensure that any reported flaws are remediated and the\n                    remediation procedures issued to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.7c', '\n                    The procedures for processing reported security flaws shall\n                    provide safeguards that any corrections to these security\n                    flaws do not introduce any new flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.8c', '\n                    The flaw remediation guidance shall describe a means by\n                    which TOE users report to the developer any suspected\n                    security flaws in the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.3.10c', '\n                    The flaw remediation guidance shall describe a means by\n                    which TOE users may register with the developer, to be\n                    eligible to receive security flaw reports and corrections.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.11c', '\n                    The flaw remediation guidance shall identify the specific\n                    points of contact for all reports and enquiries about\n                    security issues involving the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.1c', '\n                    The flaw remediation procedures documentation shall describe\n                    the procedures used to track all reported security flaws in\n                    each release of the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.2c', '\n                    The flaw remediation procedures shall require that a\n                    description of the nature and effect of each security flaw\n                    be provided, as well as the status of finding a correction\n                    to that flaw.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.3c', '\n                    The flaw remediation procedures shall require that\n                    corrective actions be identified for each of the security\n                    flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.4c', '\n                    The flaw remediation procedures documentation shall describe\n                    the methods used to provide flaw information, corrections\n                    and guidance on corrective actions to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.5c', '\n                    The flaw remediation procedures shall describe a means by\n                    which the developer receives from TOE users reports and\n                    enquiries of suspected security flaws in the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.6c', '\n                    The flaw remediation procedures shall include a procedure\n                    requiring timely response and the automatic distribution of\n                    security flaw reports and the associated corrections to\n                    registered users who might be affected by the security flaw.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.7c', '\n                    The procedures for processing reported security flaws shall\n                    ensure that any reported flaws are remediated and the\n                    remediation procedures issued to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.8c', '\n                    The procedures for processing reported security flaws shall\n                    provide safeguards that any corrections to these security\n                    flaws do not introduce any new flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.9c', '\n                    The flaw remediation guidance shall describe a means by\n                    which TOE users report to the developer any suspected\n                    security flaws in the TOE.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_lcd.1.1c', '\n                    The life-cycle definition documentation shall describe the\n                    model used to develop and maintain the TOE.\n                ', 'alc', 'alc_lcd', 'alc_lcd.1'),
('alc_lcd.1.2c', '\n                    The life-cycle model shall provide for the necessary control\n                    over the development and maintenance of the TOE.\n                ', 'alc', 'alc_lcd', 'alc_lcd.1'),
('alc_lcd.2.1c', '\n                    The life-cycle definition documentation shall describe the\n                    model used to develop and maintain the TOE, including the\n                    details of its arithmetic parameters and/or metrics used to\n                    measure the quality of the TOE and/or its development.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_lcd.2.2c', '\n                    The life-cycle model shall provide for the necessary control\n                    over the development and maintenance of the TOE.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_lcd.2.3c', '\n                    The life-cycle output documentation shall provide the\n                    results of the measurements of the TOE development using the\n                    measurable life-cycle model.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_tat.1.1c', '\n                    Each development tool used for implementation shall be\n                    well-defined.\n                ', 'alc', 'alc_tat', 'alc_tat.1'),
('alc_tat.1.2c', '\n                    The documentation of each development tool shall\n                    unambiguously define the meaning of all statements as well\n                    as all conventions and directives used in the\n                    implementation.\n                ', 'alc', 'alc_tat', 'alc_tat.1'),
('alc_tat.1.3c', '\n                    The documentation of each development tool shall\n                    unambiguously define the meaning of all\n                    implementation-dependent options.\n                ', 'alc', 'alc_tat', 'alc_tat.1'),
('alc_tat.2.1c', '\n                    Each development tool used for implementation shall be\n                    well-defined.\n                ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.2.2c', '\n                    The documentation of each development tool shall\n                    unambiguously define the meaning of all statements as well\n                    as all conventions and directives used in the\n                    implementation.\n                ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.2.3c', '\n                    The documentation of each development tool shall\n                    unambiguously define the meaning of all\n                    implementation-dependent options.\n                ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.3.1c', '\n                    Each development tool used for implementation shall be\n                    well-defined.\n                ', 'alc', 'alc_tat', 'alc_tat.3'),
('alc_tat.3.2c', '\n                    The documentation of each development tool shall\n                    unambiguously define the meaning of all statements as well\n                    as all conventions and directives used in the\n                    implementation.\n                ', 'alc', 'alc_tat', 'alc_tat.3'),
('alc_tat.3.3c', '\n                    The documentation of each development tool shall\n                    unambiguously define the meaning of all\n                    implementation-dependent options.\n                ', 'alc', 'alc_tat', 'alc_tat.3'),
('ape_ccl.1.10c', '\n                    The conformance claim rationale shall demonstrate that the\n                    statement of security requirements is consistent with the\n                    statement of security requirements in the PPs for which\n                    conformance is being claimed.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.11c', '\n                    The conformance statement shall describe the conformance\n                    required of any PPs/STs to the PP as strict-PP or\n                    demonstrable-PP conformance.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.1c', '\n                    The conformance claim shall contain a CC conformance claim\n                    that identifies the version of the CC to which the PP claims\n                    conformance.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.2c', '\n                    The CC conformance claim shall describe the conformance of\n                    the PP to CC Part 2 as either CC Part 2 conformant or CC\n                    Part 2 extended.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.3c', '\n                    The CC conformance claim shall describe the conformance of\n                    the PP to CC Part 3 as either CC Part 3 conformant or CC\n                    Part 3 extended.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.4c', '\n                    The CC conformance claim shall be consistent with the\n                    extended components definition.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.5c', '\n                    The conformance claim shall identify all PPs and security\n                    requirement packages to which the PP claims conformance.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.6c', '\n                    The conformance claim shall describe any conformance of the\n                    PP to a package as either package-conformant or\n                    package-augmented.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.7c', '\n                    The conformance claim rationale shall demonstrate that the\n                    TOE type is consistent with the TOE type in the PPs for\n                    which conformance is being claimed.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.8c', '\n                    The conformance claim rationale shall demonstrate that the\n                    statement of the security problem definition is consistent\n                    with the statement of the security problem definition in the\n                    PPs for which conformance is being claimed.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.9c', '\n                    The conformance claim rationale shall demonstrate that the\n                    statement of security objectives is consistent with the\n                    statement of security objectives in the PPs for which\n                    conformance is being claimed.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ecd.1.1c', '\n                    The statement of security requirements shall identify all\n                    extended security requirements.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_ecd.1.2c', '\n                    The extended components definition shall define an extended\n                    component for each extended security requirement.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_ecd.1.3c', '\n                    The extended components definition shall describe how each\n                    extended component is related to the existing CC components,\n                    families, and classes.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_ecd.1.4c', '\n                    The extended components definition shall use the existing CC\n                    components, families, classes, and methodology as a model\n                    for presentation.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_ecd.1.5c', '\n                    The extended components shall consist of measurable and\n                    objective elements such that conformance or nonconformance\n                    to these elements can be demonstrated.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_int.1.1c', '\n                    The PP introduction shall contain a PP reference and a TOE\n                    overview.\n                ', 'ape', 'ape_int', 'ape_int.1'),
('ape_int.1.2c', '\n                    The PP reference shall uniquely identify the PP.\n                ', 'ape', 'ape_int', 'ape_int.1'),
('ape_int.1.3c', '\n                    The TOE overview shall summarise the usage and major\n                    security features of the TOE.\n                ', 'ape', 'ape_int', 'ape_int.1'),
('ape_int.1.4c', '\n                    The TOE overview shall identify the TOE type.\n                ', 'ape', 'ape_int', 'ape_int.1'),
('ape_int.1.5c', '\n                    The TOE overview shall identify any non-TOE\n                    hardware/software/firmware available to the TOE.\n                ', 'ape', 'ape_int', 'ape_int.1'),
('ape_obj.1.1c', '\n                    The statement of security objectives shall describe the\n                    security objectives for the operational environment.\n                ', 'ape', 'ape_obj', 'ape_obj.1'),
('ape_obj.2.1c', '\n                    The statement of security objectives shall describe the\n                    security objectives for the TOE and the security objectives\n                    for the operational environment.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_obj.2.2c', '\n                    The security objectives rationale shall trace each security\n                    objective for the TOE back to threats countered by that\n                    security objective and OSPs enforced by that security\n                    objective.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_obj.2.3c', '\n                    The security objectives rationale shall trace each security\n                    objective for the operational environment back to threats\n                    countered by that security objective, OSPs enforced by that\n                    security objective, and assumptions upheld by that security\n                    objective.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_obj.2.4c', '\n                    The security objectives rationale shall demonstrate that the\n                    security objectives counter all threats.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_obj.2.5c', '\n                    The security objectives rationale shall demonstrate that the\n                    security objectives enforce all OSPs.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_obj.2.6c', '\n                    The security objectives rationale shall demonstrate that the\n                    security objectives for the operational environment uphold\n                    all assumptions.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_req.1.1c', '\n                    The statement of security requirements shall describe the\n                    SFRs and the SARs.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.1.2c', '\n                    All subjects, objects, operations, security attributes,\n                    external entities and other terms that are used in the SFRs\n                    and the SARs shall be defined.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.1.3c', '\n                    The statement of security requirements shall identify all\n                    operations on the security requirements.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.1.4c', '\n                    All operations shall be performed correctly.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.1.5c', '\n                    Each dependency of the security requirements shall either be\n                    satisfied, or the security requirements rationale shall\n                    justify the dependency not being satisfied.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.1.6c', '\n                    The statement of security requirements shall be internally\n                    consistent.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.2.1c', '\n                    The statement of security requirements shall describe the\n                    SFRs and the SARs.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.2c', '\n                    All subjects, objects, operations, security attributes,\n                    external entities and other terms that are used in the SFRs\n                    and the SARs shall be defined.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.3c', '\n                    The statement of security requirements shall identify all\n                    operations on the security requirements.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.4c', '\n                    All operations shall be performed correctly.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.5c', '\n                    Each dependency of the security requirements shall either be\n                    satisfied, or the security requirements rationale shall\n                    justify the dependency not being satisfied.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.6c', '\n                    The security requirements rationale shall trace each SFR\n                    back to the security objectives for the TOE.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.7c', '\n                    The security requirements rationale shall demonstrate that\n                    the SFRs meet all security objectives for the TOE.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.8c', '\n                    The security requirements rationale shall explain why the\n                    SARs were chosen.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.9c', '\n                    The statement of security requirements shall be internally\n                    consistent.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_spd.1.1c', '\n                    The security problem definition shall describe the threats.\n                ', 'ape', 'ape_spd', 'ape_spd.1'),
('ape_spd.1.2c', '\n                    All threats shall be described in terms of a threat agent,\n                    an asset, and an adverse action.\n                ', 'ape', 'ape_spd', 'ape_spd.1'),
('ape_spd.1.3c', '\n                    The security problem definition shall describe the OSPs.\n                ', 'ape', 'ape_spd', 'ape_spd.1'),
('ape_spd.1.4c', '\n                    The security problem definition shall describe the\n                    assumptions about the operational environment of the TOE.\n                ', 'ape', 'ape_spd', 'ape_spd.1'),
('ase_ccl.1.10c', '\n                    The conformance claim rationale shall demonstrate that the\n                    statement of security requirements is consistent with the\n                    statement of security requirements in the PPs for which\n                    conformance is being claimed.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.1c', '\n                    The conformance claim shall contain a CC conformance claim\n                    that identifies the version of the CC to which the ST and\n                    the TOE claim conformance.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.2c', '\n                    The CC conformance claim shall describe the conformance of\n                    the ST to CC Part 2 as either CC Part 2 conformant or CC\n                    Part 2 extended.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.3c', '\n                    The CC conformance claim shall describe the conformance of\n                    the ST to CC Part 3 as either CC Part 3 conformant or CC\n                    Part 3 extended.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.4c', '\n                    The CC conformance claim shall be consistent with the\n                    extended components definition.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.5c', '\n                    The conformance claim shall identify all PPs and security\n                    requirement packages to which the ST claims conformance.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.6c', '\n                    The conformance claim shall describe any conformance of the\n                    ST to a package as either package-conformant or\n                    package-augmented.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.7c', '\n                    The conformance claim rationale shall demonstrate that the\n                    TOE type is consistent with the TOE type in the PPs for\n                    which conformance is being claimed.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.8c', '\n                    The conformance claim rationale shall demonstrate that the\n                    statement of the security problem definition is consistent\n                    with the statement of the security problem definition in the\n                    PPs for which conformance is being claimed.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.9c', '\n                    The conformance claim rationale shall demonstrate that the\n                    statement of security objectives is consistent with the\n                    statement of security objectives in the PPs for which\n                    conformance is being claimed.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ecd.1.1c', '\n                    The statement of security requirements shall identify all\n                    extended security requirements.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_ecd.1.2c', '\n                    The extended components definition shall define an extended\n                    component for each extended security requirement.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_ecd.1.3c', '\n                    The extended components definition shall describe how each\n                    extended component is related to the existing CC components,\n                    families, and classes.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_ecd.1.4c', '\n                    The extended components definition shall use the existing CC\n                    components, families, classes, and methodology as a model\n                    for presentation.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_ecd.1.5c', '\n                    The extended components shall consist of measurable and\n                    objective elements such that conformance or nonconformance\n                    to these elements can be demonstrated.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_int.1.1c', '\n                    The ST introduction shall contain an ST reference, a TOE\n                    reference, a TOE overview and a TOE description.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.2c', '\n                    The ST reference shall uniquely identify the ST.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.3c', '\n                    The TOE reference shall identify the TOE.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.4c', '\n                    The TOE overview shall summarise the usage and major\n                    security features of the TOE.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.5c', '\n                    The TOE overview shall identify the TOE type.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.6c', '\n                    The TOE overview shall identify any non-TOE\n                    hardware/software/firmware required by the TOE.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.7c', '\n                    The TOE description shall describe the physical scope of the\n                    TOE.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.8c', '\n                    The TOE description shall describe the logical scope of the\n                    TOE.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_obj.1.1c', '\n                    The statement of security objectives shall describe the\n                    security objectives for the operational environment.\n                ', 'ase', 'ase_obj', 'ase_obj.1'),
('ase_obj.2.1c', '\n                    The statement of security objectives shall describe the\n                    security objectives for the TOE and the security objectives\n                    for the operational environment.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_obj.2.2c', '\n                    The security objectives rationale shall trace each security\n                    objective for the TOE back to threats countered by that\n                    security objective and OSPs enforced by that security\n                    objective.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_obj.2.3c', '\n                    The security objectives rationale shall trace each security\n                    objective for the operational environment back to threats\n                    countered by that security objective, OSPs enforced by that\n                    security objective, and assumptions upheld by that security\n                    objective.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_obj.2.4c', '\n                    The security objectives rationale shall demonstrate that the\n                    security objectives counter all threats.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_obj.2.5c', '\n                    The security objectives rationale shall demonstrate that the\n                    security objectives enforce all OSPs.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_obj.2.6c', '\n                    The security objectives rationale shall demonstrate that the\n                    security objectives for the operational environment uphold\n                    all assumptions.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_req.1.1c', '\n                    The statement of security requirements shall describe the\n                    SFRs and the SARs.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.1.2c', '\n                    All subjects, objects, operations, security attributes,\n                    external entities and other terms that are used in the SFRs\n                    and the SARs shall be defined.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.1.3c', '\n                    The statement of security requirements shall identify all\n                    operations on the security requirements.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.1.4c', '\n                    All operations shall be performed correctly.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.1.5c', '\n                    Each dependency of the security requirements shall either be\n                    satisfied, or the security requirements rationale shall\n                    justify the dependency not being satisfied.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.1.6c', '\n                    The statement of security requirements shall be internally\n                    consistent.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.2.1c', '\n                    The statement of security requirements shall describe the\n                    SFRs and the SARs.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.2c', ' All subjects, objects,\n                    operations, security attributes, external entities and other\n                    terms that are used in the SFRs and the SARs shall be\n                    defined.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.3c', '\n                    The statement of security requirements shall identify all\n                    operations on the security requirements.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.4c', '\n                    All operations shall be performed correctly.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.5c', '\n                    Each dependency of the security requirements shall either be\n                    satisfied, or the security requirements rationale shall\n                    justify the dependency not being satisfied.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.6c', '\n                    The security requirements rationale shall trace each SFR\n                    back to the security objectives for the TOE.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.7c', '\n                    The security requirements rationale shall demonstrate that\n                    the SFRs meet all security objectives for the TOE.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.8c', '\n                    The security requirements rationale shall explain why the\n                    SARs were chosen.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.9c', '\n                    The statement of security requirements shall be internally\n                    consistent.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_spd.1.1c', '\n                    The security problem definition shall describe the threats.\n                ', 'ase', 'ase_spd', 'ase_spd.1'),
('ase_spd.1.2c', '\n                    All threats shall be described in terms of a threat agent,\n                    an asset, and an adverse action.\n                ', 'ase', 'ase_spd', 'ase_spd.1'),
('ase_spd.1.3c', '\n                    The security problem definition shall describe the OSPs.\n                ', 'ase', 'ase_spd', 'ase_spd.1'),
('ase_spd.1.4c', '\n                    The security problem definition shall describe the\n                    assumptions about the operational environment of the TOE.\n                ', 'ase', 'ase_spd', 'ase_spd.1'),
('ase_tss.1.1c', '\n                    The TOE summary specification shall describe how the TOE\n                    meets each SFR.\n                ', 'ase', 'ase_tss', 'ase_tss.1'),
('ase_tss.2.1c', '\n                    The TOE summary specification shall describe how the TOE\n                    meets each SFR.\n                ', 'ase', 'ase_tss', 'ase_tss.2'),
('ase_tss.2.2c', '\n                    The TOE summary specification shall describe how the TOE\n                    protects itself against interference and logical tampering.\n                ', 'ase', 'ase_tss', 'ase_tss.2'),
('ase_tss.2.3c', '\n                    The TOE summary specification shall describe how the TOE\n                    protects itself against bypass.\n                ', 'ase', 'ase_tss', 'ase_tss.2'),
('ate_cov.1.1c', '\n                    The evidence of the test coverage shall show the\n                    correspondence between the tests in the test documentation\n                    and the TSFIs in the functional specification.\n                ', 'ate', 'ate_cov', 'ate_cov.1'),
('ate_cov.2.1c', '\n                    The analysis of the test coverage shall demonstrate the\n                    correspondence between the tests in the test documentation\n                    and the TSFIs in the functional specification.\n                ', 'ate', 'ate_cov', 'ate_cov.2'),
('ate_cov.2.2c', '\n                    The analysis of the test coverage shall demonstrate that all\n                    TSFIs in the functional specification have been tested.\n                ', 'ate', 'ate_cov', 'ate_cov.2'),
('ate_cov.3.1c', '\n                    The analysis of the test coverage shall demonstrate the\n                    correspondence between the tests in the test documentation\n                    and the TSFIs in the functional specification.\n                ', 'ate', 'ate_cov', 'ate_cov.3'),
('ate_cov.3.2c', '\n                    The analysis of the test coverage shall demonstrate that all\n                    TSFIs in the functional specification have been completely\n                    tested.\n                ', 'ate', 'ate_cov', 'ate_cov.3'),
('ate_dpt.1.1c', '\n                    The analysis of the depth of testing shall demonstrate the\n                    correspondence between the tests in the test documentation\n                    and the TSF subsystems in the TOE design.\n                ', 'ate', 'ate_dpt', 'ate_dpt.1'),
('ate_dpt.1.2c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    all TSF subsystems in the TOE design have been tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.1'),
('ate_dpt.2.1c', '\n                    The analysis of the depth of testing shall demonstrate the\n                    correspondence between the tests in the test documentation and\n                    the TSF subsystems and SFR-enforcing modules in the TOE design.\n                ', 'ate', 'ate_dpt', 'ate_dpt.2'),
('ate_dpt.2.2c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    all TSF subsystems in the TOE design have been tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.2'),
('ate_dpt.2.3c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    the SFR-enforcing modules in the TOE design have been\n                    tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.2'),
('ate_dpt.3.1c', '\n                    The analysis of the depth of testing shall demonstrate the\n                    correspondence between the tests in the test documentation\n                    and the TSF subsystems and modules in the TOE design.\n                ', 'ate', 'ate_dpt', 'ate_dpt.3'),
('ate_dpt.3.2c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    all TSF subsystems in the TOE design have been tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.3'),
('ate_dpt.3.3c', '\n                    The analysis of the depth of testing shall demonstrate that all\n                    TSF modules in the TOE design have been tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.3'),
('ate_dpt.4.1c', '\n                    The analysis of the depth of testing shall demonstrate the\n                    correspondence between the tests in the test documentation\n                    and the TSF subsystems and modules in the TOE design.\n                ', 'ate', 'ate_dpt', 'ate_dpt.4'),
('ate_dpt.4.2c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    all TSF subsystems in the TOE design have been tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.4'),
('ate_dpt.4.3c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    all modules in the TOE design have been tested.\n                ', 'ate', 'ate_dpt', 'ate_dpt.4'),
('ate_dpt.4.4c', '\n                    The analysis of the depth of testing shall demonstrate that\n                    the TSF operates in accordance with its implementation\n                    representation.\n                ', 'ate', 'ate_dpt', 'ate_dpt.4'),
('ate_fun.1.1c', '\n                    The test documentation shall consist of test plans, expected\n                    test results and actual test results.\n                ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.1.2c', '\n                    The test plans shall identify the tests to be performed and\n                    describe the scenarios for performing each test. These\n                    scenarios shall include any ordering dependencies on the\n                    results of other tests.\n                ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.1.3c', '\n                    The expected test results shall show the anticipated outputs\n                    from a successful execution of the tests.\n                ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.1.4c', '\n                    The actual test results shall be consistent with the\n                    expected test results.\n                ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.2.1c', '\n                    The test documentation shall consist of test plans, expected\n                    test results and actual test results.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_fun.2.2c', '\n                    The test plans shall identify the tests to be performed and\n                    describe the scenarios for performing each test. These\n                    scenarios shall include any ordering dependencies on the\n                    results of other tests.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_fun.2.3c', '\n                    The expected test results shall show the anticipated outputs\n                    from a successful execution of the tests.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_fun.2.4c', '\n                    The actual test results shall be consistent with the\n                    expected test results.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_fun.2.5c', '\n                    The test documentation shall include an analysis of the test\n                    procedure ordering dependencies.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_ind.1.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ate', 'ate_ind', 'ate_ind.1'),
('ate_ind.2.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ate', 'ate_ind', 'ate_ind.2'),
('ate_ind.2.2c', '\n                    The developer shall provide an equivalent set of resources\n                    to those that were used in the developer\'s functional\n                    testing of the TSF.\n                ', 'ate', 'ate_ind', 'ate_ind.2'),
('ate_ind.3.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ate', 'ate_ind', 'ate_ind.3'),
('ate_ind.3.2c', '\n                    The developer shall provide an equivalent set of resources\n                    to those that were used in the developer\'s functional\n                    testing of the TSF.\n                ', 'ate', 'ate_ind', 'ate_ind.3'),
('ava_van.1.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ava', 'ava_van', 'ava_van.1'),
('ava_van.2.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ava', 'ava_van', 'ava_van.2'),
('ava_van.3.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ava', 'ava_van', 'ava_van.3'),
('ava_van.4.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ava', 'ava_van', 'ava_van.4'),
('ava_van.5.1c', '\n                    The TOE shall be suitable for testing.\n                ', 'ava', 'ava_van', 'ava_van.5');

-- --------------------------------------------------------

--
-- Table structure for table `aedcelement`
--

CREATE TABLE `aedcelement` (
  `id_aedcelement` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `aedeveloper`
--

CREATE TABLE `aedeveloper` (
  `id_aedeveloper` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL,
  `id_acomponent` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aedeveloper`
--

INSERT INTO `aedeveloper` (`id_aedeveloper`, `testo`, `ida`, `idf`, `id_acomponent`) VALUES
('ace_ccl.1.1d', ' The developer shall provide a conformance claim. ', 'ace', 'ace_ccl', 'ace_ccl.1'),
('ace_cco.1.1d', 'The developer shall provide the reference of the PP-Configuration.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.2d', 'The developer shall provide a components statement.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.3d', 'The developer shall provide a conformance statement and a conformance claim.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.4d', 'The developer shall provide a SAR statement.', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_ecd.1.1d', ' The developer shall provide a statement of security functional requirements. ', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_ecd.1.2d', ' The developer shall provide an extended functional components definition. ', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_int.1.1d', ' The developer shall provide a PP-Module introduction. ', 'ace', 'ace_int', 'ace_int.1'),
('ace_mco.1.1d', 'The developer shall provide a consistency rationale of the PP-Module with respect to its Base-PP(s) identified in the PP-Module introduction. If the PP-Module specifies alternate sets of Base-PPs, the developer shall provide as many consistency rationales as the number of alternate set of Base-PPs.', 'ace', 'ace_mco', 'ace_mco.1'),
('ace_req.1.1d', 'The developer shall provide a statement of security functional requirements.', 'ace', 'ace_req', 'ace_req.1'),
('ace_req.1.2d', 'The developer shall provide a security requirements rationale.', 'ace', 'ace_req', 'ace_req.1'),
('aco_cor.1.1d', '\n                    The developer shall provide composition rationale for the\n                    base component.\n                ', 'aco', 'aco_cor', 'aco_cor.1'),
('aco_ctt.1.1d', '\n                    The developer shall provide composed TOE test documentation.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.2d', '\n                    The developer shall provide base component interface test\n                    documentation.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.3d', '\n                    The developer shall provide the composed TOE for testing.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.4d', '\n                    The developer shall provide an equivalent set of resources\n                    to those that were used in the base component developer\'s\n                    functional testing of the base component.\n                ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.2.1d', '\n                    The developer shall provide composed TOE test documentation.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.2d', '\n                    The developer shall provide base component interface test\n                    documentation.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.3d', '\n                    The developer shall provide the composed TOE for testing.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.4d', '\n                    The developer shall provide an equivalent set of resources\n                    to those that were used in the base component developer\'s\n                    functional testing of the base component.\n                ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_dev.1.1d', '\n                    The developer shall provide development information for the\n                    base component.\n                ', 'aco', 'aco_dev', 'aco_dev.1'),
('aco_dev.2.1d', '\n                    The developer shall provide development information for the\n                    base component.\n                ', 'aco', 'aco_dev', 'aco_dev.2'),
('aco_dev.3.1d', '\n                    The developer shall provide development information for the\n                    base component.\n                ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_rel.1.1d', '\n                    The developer shall provide reliance information of the\n                    dependent component.\n                ', 'aco', 'aco_rel', 'aco_rel.1'),
('aco_rel.2.1d', '\n                    The developer shall provide reliance information of the\n                    dependent component.\n                ', 'aco', 'aco_rel', 'aco_rel.2'),
('aco_vul.1.1d', '\n                    The developer shall provide the composed TOE for testing.\n                ', 'aco', 'aco_vul', 'aco_vul.1'),
('aco_vul.2.1d', '\n                    The developer shall provide the composed TOE for testing.\n                ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.3.1d', '\n                    The developer shall provide the composed TOE for testing.\n                ', 'aco', 'aco_vul', 'aco_vul.3'),
('adv_arc.1.1d', '\n                    The developer shall design and implement the TOE so that the\n                    security features of the TSF cannot be bypassed.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_arc.1.2d', '\n                    The developer shall design and implement the TSF so that it\n                    is able to protect itself from tampering by untrusted active\n                    entities.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_arc.1.3d', '\n                    The developer shall provide a security architecture\n                    description of the TSF.\n                ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_fsp.1.1d', '\n                    The developer shall provide a functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.1.2d', '\n                    The developer shall provide a tracing from the functional\n                    specification to the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.2.1d', '\n                    The developer shall provide a functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.2d', '\n                    The developer shall provide a tracing from the functional\n                    specification to the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.3.1d', '\n                    The developer shall provide a functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.2d', '\n                    The developer shall provide a tracing from the functional\n                    specification to the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.4.1d', '\n                    The developer shall provide a functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.2d', '\n                    The developer shall provide a tracing from the functional\n                    specification to the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.5.1d', '\n                    The developer shall provide a functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.2d', '\n                    The developer shall provide a tracing from the functional\n                    specification to the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.6.1d', '\n                    The developer shall provide a functional specification.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.2d', '\n                    The developer shall provide a formal presentation of the\n                    functional specification of the TSF.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.3d', '\n                    The developer shall provide a tracing from the functional\n                    specification to the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_imp.1.1d', '\n                    The developer shall make available the implementation\n                    representation for the entire TSF.\n                ', 'adv', 'adv_imp', 'adv_imp.1'),
('adv_imp.1.2d', '\n                    The developer shall provide a mapping between the TOE design\n                    description and the sample of the implementation\n                    representation.\n                ', 'adv', 'adv_imp', 'adv_imp.1'),
('adv_imp.2.1d', '\n                    The developer shall make available the implementation\n                    representation for the entire TSF.\n                ', 'adv', 'adv_imp', 'adv_imp.2'),
('adv_imp.2.2d', '\n                    The developer shall provide a mapping between the TOE design\n                    description and the entire implementation representation.\n                ', 'adv', 'adv_imp', 'adv_imp.2'),
('adv_int.1.1d', 'The developer shall design and implement, such that it has well-structured\n                    internals.', 'adv', 'adv_int', 'adv_int.1'),
('adv_int.1.2d', '\n                    The developer shall provide an internals description and\n                    justification.\n                ', 'adv', 'adv_int', 'adv_int.1'),
('adv_int.2.1d', '\n                    The developer shall design and implement the entire TSF such\n                    that it has well-structured internals.\n                ', 'adv', 'adv_int', 'adv_int.2'),
('adv_int.2.2d', '\n                    The developer shall provide an internals description and\n                    justification.\n                ', 'adv', 'adv_int', 'adv_int.2'),
('adv_int.3.1d', '\n                    The developer shall design and implement the entire TSF such\n                    that it has well-structured internals.\n                ', 'adv', 'adv_int', 'adv_int.3'),
('adv_int.3.2d', '\n                    The developer shall provide an internals description and\n                    justification.\n                ', 'adv', 'adv_int', 'adv_int.3'),
('adv_spm.1.1d', 'The developer shall provide a formal security policy model for\n                    the, .', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_spm.1.2d', '\n                For each policy covered by the formal security policy model, the\n                model shall identify the relevant portions of the statement of\n                SFRs that make up that policy.\n            ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_spm.1.3d', '\n                    The developer shall provide a formal proof of correspondence\n                    between the model and any formal functional specification.\n                ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_spm.1.4d', '\n                    The developer shall provide a demonstration of\n                    correspondence between the model and the functional\n                    specification.\n                ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_tds.1.1d', '\n                    The developer shall provide the design of the TOE.\n                ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.2d', '\n                    The developer shall provide a mapping from the TSFI of the\n                    functional specification to the lowest level of\n                    decomposition available in the TOE design.  ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.2.1d', '\n                    The developer shall provide the design of the TOE.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.2d', '\n                    The developer shall provide a mapping from the TSFI of the\n                    functional specification to the lowest level of\n                    decomposition available in the TOE design.\n                ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.3.1d', '\n                    The developer shall provide the design of the TOE.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.2d', '\n                    The developer shall provide a mapping from the TSFI of the\n                    functional specification to the lowest level of\n                    decomposition available in the TOE design.\n                ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.4.1d', '\n                    The developer shall provide the design of the TOE.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.2d', '\n                    The developer shall provide a mapping from the TSFI of the\n                    functional specification to the lowest level of\n                    decomposition available in the TOE design.\n                ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.5.1d', '\n                    The developer shall provide the design of the TOE.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.2d', '\n                    The developer shall provide a mapping from the TSFI of the\n                    functional specification to the lowest level of\n                    decomposition available in the TOE design.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.6.1d', '\n                    The developer shall provide the design of the TOE.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.2d', '\n                    The developer shall provide a mapping from the TSFI of the\n                    functional specification to the lowest level of\n                    decomposition available in the TOE design.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.3d', '\n                    The developer shall provide a formal specification of the\n                    TSF subsystems.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.4d', '\n                    The developer shall provide a proof of correspondence\n                    between the formal specifications of the TSF subsystems and\n                    of the functional specification.\n                ', 'adv', 'adv_tds', 'adv_tds.6'),
('agd_ope.1.1d', '\n                    The developer shall provide operational user guidance.\n                ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_pre.1.1d', '\n                    The developer shall provide the TOE including its\n                    preparative procedures.\n                ', 'agd', 'agd_pre', 'agd_pre.1'),
('alc_cmc.1.1d', '\n                    The developer shall provide the TOE and a reference for the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.1'),
('alc_cmc.2.1d', '\n                    The developer shall provide the TOE and a reference for the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.2.2d', '\n                    The developer shall provide the CM documentation.\n                ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.2.3d', '\n                    The developer shall use a CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.3.1d', '\n                    The developer shall provide the TOE and a reference for the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.2d', '\n                    The developer shall provide the CM documentation.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.3.3d', '\n                    The developer shall use a CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.4.1d', '\n                    The developer shall provide the TOE and a reference for the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.2d', '\n                    The developer shall provide the CM documentation.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.4.3d', '\n                    The developer shall use a CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.5.1d', '\n                    The developer shall provide the TOE and a reference for the\n                    TOE.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.2d', '\n                    The developer shall provide the CM documentation.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.3d', '\n                    The developer shall use a CM system.\n                ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cms.1.1d', '\n                    The developer shall provide a configuration list for the\n                    TOE.\n                ', 'alc', 'alc_cms', 'alc_cms.1'),
('alc_cms.2.1d', '\n                    The developer shall provide a configuration list for the\n                    TOE.\n                ', 'alc', 'alc_cms', 'alc_cms.2'),
('alc_cms.3.1d', '\n                    The developer shall provide a configuration list for the\n                    TOE.\n                ', 'alc', 'alc_cms', 'alc_cms.3'),
('alc_cms.4.1d', '\n                    The developer shall provide a configuration list for the\n                    TOE.\n                ', 'alc', 'alc_cms', 'alc_cms.4'),
('alc_cms.5.1d', '\n                    The developer shall provide a configuration list for the\n                    TOE.\n                ', 'alc', 'alc_cms', 'alc_cms.5'),
('alc_del.1.1d', '\n                    The developer shall document and provide procedures for delivery of the\n                    TOE or parts of it to the consumer.\n                ', 'alc', 'alc_del', 'alc_del.1'),
('alc_del.1.2d', 'The developer shall use the delivery procedures., ', 'alc', 'alc_del', 'alc_del.1'),
('alc_dvs.1.1d', '\n                    The developer shall produce and provide development security\n                    documentation.\n                ', 'alc', 'alc_dvs', 'alc_dvs.1'),
('alc_dvs.2.1d', '\n                    The developer shall produce and provide development security\n                    documentation.\n                ', 'alc', 'alc_dvs', 'alc_dvs.2'),
('alc_flr.1.1d', '\n                    The developer shall document and provide flaw remediation procedures\n                    addressed to TOE developers.\n                ', 'alc', 'alc_flr', 'alc_flr.1'),
('alc_flr.2.1d', '\n                    The developer shall document and provide flaw remediation procedures\n                    addressed to TOE developers.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.2d', '\n                    The developer shall establish a procedure for accepting and\n                    acting upon all reports of security flaws and requests for\n                    corrections to those flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.2.3d', '\n                    The developer shall provide flaw remediation guidance\n                    addressed to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.3.1d', '\n                    The developer shall document and provide flaw remediation procedures\n                    addressed to TOE developers.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.2d', '\n                    The developer shall establish a procedure for accepting and\n                    acting upon all reports of security flaws and requests for\n                    corrections to those flaws.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_flr.3.3d', '\n                    The developer shall provide flaw remediation guidance\n                    addressed to TOE users.\n                ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_lcd.1.1d', '\n                    The developer shall establish a life-cycle model to be used\n                    in the development and maintenance of the TOE.\n                ', 'alc', 'alc_lcd', 'alc_lcd.1'),
('alc_lcd.1.2d', '\n                    The developer shall provide life-cycle definition\n                    documentation.\n                ', 'alc', 'alc_lcd', 'alc_lcd.1'),
('alc_lcd.2.1d', '\n                    The developer shall establish a life-cycle model to be used\n                    in the development and maintenance of the TOE, that is based\n                    on a measurable life-cycle model.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_lcd.2.2d', '\n                    The developer shall provide life-cycle definition\n                    documentation.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_lcd.2.3d', '\n                    The developer shall measure the TOE development using the\n                    measurable life-cycle model.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_lcd.2.4d', '\n                    The developer shall provide life-cycle output documentation.\n                ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_tat.1.1d', '\n                    The developer shall provide the documentation identifying each development tool being\n                    used for the TOE.\n                ', 'alc', 'alc_tat', 'alc_tat.1'),
('alc_tat.1.2d', '\n                    The developer shall document and provide the selected\n                    implementation-dependent options of each development tool.\n                ', 'alc', 'alc_tat', 'alc_tat.1'),
('alc_tat.2.1d', '\n                    The developer shall provide the documentation identifying each development tool being\n                    used for the TOE.\n                ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.2.2d', '\n                    The developer shall document and provide the selected\n                    implementation-dependent options of each development tool.\n                ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.2.3d', '\n                    The developer shall describe and provide the implementation standards\n                    that are being applied by the developer.\n                ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.3.1d', '\n                    The developer shall provide the documentation identifying each development tool being\n                    used for the TOE.\n                ', 'alc', 'alc_tat', 'alc_tat.3'),
('alc_tat.3.2d', '\n                    The developer shall document and provide the selected\n                    implementation-dependent options of each development tool.\n                ', 'alc', 'alc_tat', 'alc_tat.3'),
('alc_tat.3.3d', '\n                    The developer shall describe and provide the implementation standards\n                    that are being applied by the developer and by any\n                    third-party providers for all parts of the TOE.\n                ', 'alc', 'alc_tat', 'alc_tat.3'),
('ape_ccl.1.1d', '\n                    The developer shall provide a conformance claim.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.2d', '\n                    The developer shall provide a conformance claim rationale.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ccl.1.3d', '\n                    The developer shall provide a conformance statement.\n                ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ecd.1.1d', '\n                    The developer shall provide a statement of security\n                    requirements.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_ecd.1.2d', '\n                    The developer shall provide an extended components\n                    definition.\n                ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_int.1.1d', '\n                    The developer shall provide a PP introduction.\n                ', 'ape', 'ape_int', 'ape_int.1'),
('ape_obj.1.1d', '\n                    The developer shall provide a statement of security\n                    objectives.\n                ', 'ape', 'ape_obj', 'ape_obj.1'),
('ape_obj.2.1d', '\n                    The developer shall provide a statement of security\n                    objectives.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_obj.2.2d', '\n                    The developer shall provide a security objectives rationale.\n                ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_req.1.1d', '\n                    The developer shall provide a statement of security requirements.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.1.2d', '\n                    The developer shall provide a security requirements\n                    rationale.\n                ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.2.1d', '\n                    The developer shall provide a statement of security requirements.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_req.2.2d', '\n                    The developer shall provide a security requirements\n                    rationale.\n                ', 'ape', 'ape_req', 'ape_req.2'),
('ape_spd.1.1d', '\n                    The developer shall provide a security problem definition.\n                ', 'ape', 'ape_spd', 'ape_spd.1'),
('ase_apd.1.1d', '\n                    The developer shall provide a security problem definition.\n                ', 'ase', 'ase_spd', 'ase_spd.1'),
('ase_ccl.1.1d', '\n                    The developer shall provide a conformance claim.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ccl.1.2d', '\n                    The developer shall provide a conformance claim rationale.\n                ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ecd.1.1d', '\n                    The developer shall provide a statement of security\n                    requirements.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_ecd.1.2d', '\n                    The developer shall provide an extended components\n                    definition.\n                ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_int.1.1d', '\n                    The developer shall provide an ST introduction.\n                ', 'ase', 'ase_int', 'ase_int.1'),
('ase_obj.1.1d', '\n                    The developer shall provide a statement of security\n                    objectives.\n                ', 'ase', 'ase_obj', 'ase_obj.1'),
('ase_obj.2.1d', '\n                    The developer shall provide a statement of security\n                    objectives.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_obj.2.2d', '\n                    The developer shall provide a security objectives rationale.\n                ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_req.1.1d', '\n                    The developer shall provide a statement of security requirements.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.1.2d', '\n                    The developer shall provide a security requirements\n                    rationale.\n                ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.2.1d', '\n                    The developer shall provide a statement of security requirements.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_req.2.2d', '\n                    The developer shall provide a security requirements\n                    rationale.\n                ', 'ase', 'ase_req', 'ase_req.2'),
('ase_tss.1.1d', '\n                    The developer shall provide a TOE summary specification.\n                ', 'ase', 'ase_tss', 'ase_tss.1'),
('ase_tss.2.1d', '\n                    The developer shall provide a TOE summary specification.\n                ', 'ase', 'ase_tss', 'ase_tss.2'),
('ate_cov.1.1d', '\n                    The developer shall provide evidence of the test coverage.\n                ', 'ate', 'ate_cov', 'ate_cov.1'),
('ate_cov.2.1d', '\n                    The developer shall provide an analysis of the test\n                    coverage.\n                ', 'ate', 'ate_cov', 'ate_cov.2'),
('ate_cov.3.1d', '\n                    The developer shall provide an analysis of the test\n                    coverage.\n                ', 'ate', 'ate_cov', 'ate_cov.3'),
('ate_dpt.1.1d', '\n                    The developer shall provide the analysis of the depth of\n                    testing.\n                ', 'ate', 'ate_dpt', 'ate_dpt.1'),
('ate_dpt.2.1d', '\n                    The developer shall provide the analysis of the depth of\n                    testing.\n                ', 'ate', 'ate_dpt', 'ate_dpt.2'),
('ate_dpt.3.1d', '\n                    The developer shall provide the analysis of the depth of\n                    testing.\n                ', 'ate', 'ate_dpt', 'ate_dpt.3'),
('ate_dpt.4.1d', '\n                    The developer shall provide the analysis of the depth of\n                    testing.\n                ', 'ate', 'ate_dpt', 'ate_dpt.4'),
('ate_fun.1.1d', '\n                    The developer shall test the TSF and document the results.\n                ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.1.2d', '\n                    The developer shall provide test documentation.\n                ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.2.1d', '\n                    The developer shall test the TSF and document the results.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_fun.2.2d', '\n                    The developer shall provide test documentation.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_ind.1.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ate', 'ate_ind', 'ate_ind.1'),
('ate_ind.2.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ate', 'ate_ind', 'ate_ind.2'),
('ate_ind.3.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ate', 'ate_ind', 'ate_ind.3'),
('ava_van.1.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ava', 'ava_van', 'ava_van.1'),
('ava_van.2.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ava', 'ava_van', 'ava_van.2'),
('ava_van.3.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ava', 'ava_van', 'ava_van.3'),
('ava_van.4.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ava', 'ava_van', 'ava_van.4'),
('ava_van.5.1d', '\n                    The developer shall provide the TOE for testing.\n                ', 'ava', 'ava_van', 'ava_van.5');

-- --------------------------------------------------------

--
-- Table structure for table `aeevaluator`
--

CREATE TABLE `aeevaluator` (
  `id_aeevaluator` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL,
  `id_acomponent` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aeevaluator`
--

INSERT INTO `aeevaluator` (`id_aeevaluator`, `testo`, `ida`, `idf`, `id_acomponent`) VALUES
('ace_ccl.1.1e', '\n            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.\n            ', 'ace', 'ace_ccl', 'ace_ccl.1'),
('ace_cco.1.1e', '\n            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.\n            ', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_cco.1.2e', 'The evaluator shall check that the PP-Configuration made up of all the Protection Profiles and PP-Modules identified in the components statement of the PP-Configuration is consistent., ', 'ace', 'ace_cco', 'ace_cco.1'),
('ace_ecd.1.1e', '\n            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.\n        ', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_ecd.1.2e', '\n            The evaluator shall confirm that no extended functional component may be clearly expressed using existing components.\n        ', 'ace', 'ace_ecd', 'ace_ecd.1'),
('ace_int.1.1e', '\n            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.\n            ', 'ace', 'ace_int', 'ace_int.1'),
('ace_mco.1.1e', '\n            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence. If the PP-Module specifies alternate sets of Base-PPs, the evaluator shall perform this action for each consistency rationale with its related Base-PPs in the alternate set of Base-PPs of the PP-Module.\n            ', 'ace', 'ace_mco', 'ace_mco.1'),
('ace_req.1.1e', '\n            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.\n        ', 'ace', 'ace_req', 'ace_req.1'),
('aco_cor.1.1e', 'The evaluator shall confirm that the information meets all\n                    requirements for content and presentation of evidence., , , ', 'aco', 'aco_cor', 'aco_cor.1'),
('aco_ctt.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.2e', 'The evaluator shall execute a sample of test in the test\n                    documentation to verify the developer test results., ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.1.3e', 'The evaluator shall test a subset of the TSF interfaces of\n                    the composed TOE to confirm that the composed TSF operates\n                    as specified., ', 'aco', 'aco_ctt', 'aco_ctt.1'),
('aco_ctt.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.2e', 'The evaluator shall execute a sample of test in the test\n                    documentation to verify the developer test results., ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_ctt.2.3e', 'The evaluator shall test a subset of the TSF interfaces of\n                    the composed TOE to confirm that the composed TSF operates\n                    as specified., , ', 'aco', 'aco_ctt', 'aco_ctt.2'),
('aco_dev.1.1e', 'The evaluator shall confirm that the information meets all\n                    requirements for content and presentation of evidence., , ', 'aco', 'aco_dev', 'aco_dev.1'),
('aco_dev.1.2e', 'The evaluator shall determine that the interface description\n                    provided is consistent with the reliance information\n                    provided for the dependent component., ', 'aco', 'aco_dev', 'aco_dev.1'),
('aco_dev.2.1e', 'The evaluator shall confirm that the information meets all\n                    requirements for content and presentation of evidence., , , , ', 'aco', 'aco_dev', 'aco_dev.2'),
('aco_dev.2.2e', 'The evaluator shall determine that the interface description\n                    provided is consistent with the reliance information\n                    provided for the dependent component., ', 'aco', 'aco_dev', 'aco_dev.2'),
('aco_dev.3.1e', 'The evaluator shall confirm that the information meets all\n                    requirements for content and presentation of evidence., , , , , , ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_dev.3.2e', 'The evaluator shall determine that the interface description\n                    provided is consistent with the reliance information\n                    provided for the dependent component., ', 'aco', 'aco_dev', 'aco_dev.3'),
('aco_rel.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , ', 'aco', 'aco_rel', 'aco_rel.1'),
('aco_rel.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , ', 'aco', 'aco_rel', 'aco_rel.2'),
('aco_vul.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'aco', 'aco_vul', 'aco_vul.1'),
('aco_vul.1.2e', 'The evaluator shall perform an analysis to determine that\n                    any residual vulnerabilities identified for the base and\n                    dependent components are not exploitable in the composed TOE\n                    in its operational environment., , ', 'aco', 'aco_vul', 'aco_vul.1'),
('aco_vul.1.3e', 'The evaluator shall perform a search of public domain\n                    sources to identify possible vulnerabilities arising from\n                    use of the base and dependent components in the composed TOE\n                    operational environment., , , ', 'aco', 'aco_vul', 'aco_vul.1'),
('aco_vul.1.4e', 'The evaluator shall conduct penetration testing, based on\n                    the identified vulnerabilities, to demonstrate that the\n                    composed TOE is resistant to attacks by an attacker with\n                    basic attack potential., ', 'aco', 'aco_vul', 'aco_vul.1'),
('aco_vul.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.2.2e', 'The evaluator shall perform an analysis to determine that\n                    any residual vulnerabilities identified for the base and\n                    dependent components are not exploitable in the composed TOE\n                    in its operational environment., , ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.2.3e', 'The evaluator shall perform a search of public domain\n                    sources to identify possible vulnerabilities arising from\n                    use of the base and dependent components in the composed TOE\n                    operational environment., , , ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.2.4e', 'The evaluator shall perform an independent vulnerability\n                    analysis of the composed TOE, using the guidance\n                    documentation, reliance information and composition\n                    rationale to identify potential vulnerabilities in the\n                    composed TOE., ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.2.5e', 'The evaluator shall conduct penetration testing, based on\n                    the identified vulnerabilities, to demonstrate that the\n                    composed TOE is resistant to attacks by an attacker with\n                    basic attack potential., ', 'aco', 'aco_vul', 'aco_vul.2'),
('aco_vul.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'aco', 'aco_vul', 'aco_vul.3'),
('aco_vul.3.2e', 'The evaluator shall perform an analysis to determine that\n                    any residual vulnerabilities identified for the base and\n                    dependent components are not exploitable in the composed TOE\n                    in its operational environment., , ', 'aco', 'aco_vul', 'aco_vul.3'),
('aco_vul.3.3e', 'The evaluator shall perform a search of public domain\n                    sources to identify possible vulnerabilities arising from\n                    use of the base and dependent components in the composed TOE\n                    operational environment., , , ', 'aco', 'aco_vul', 'aco_vul.3'),
('aco_vul.3.4e', 'The evaluator shall perform an independent vulnerability\n                    analysis of the composed TOE, using the guidance\n                    documentation, reliance information and composition\n                    rationale to identify potential vulnerabilities in the\n                    composed TOE., ', 'aco', 'aco_vul', 'aco_vul.3'),
('aco_vul.3.5e', '\n                    The evaluator shall conduct penetration testing, based on the\n                    identified vulnerabilities, to demonstrate that the composed TOE\n                    is resistant to attacks by an attacker with Enhanced-Basic\n                    attack potential.\n                    ', 'aco', 'aco_vul', 'aco_vul.3'),
('adv_arc.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , ', 'adv', 'adv_arc', 'adv_arc.1'),
('adv_fsp.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.1.2e', 'The evaluator shall determine that the functional\n                    specification is an accurate and complete instantiation of\n                    the SFRs., , ', 'adv', 'adv_fsp', 'adv_fsp.1'),
('adv_fsp.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.2.2e', 'The evaluator shall determine that the functional\n                    specification is an accurate and complete instantiation of\n                    the SFRs., , ', 'adv', 'adv_fsp', 'adv_fsp.2'),
('adv_fsp.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.3.2e', 'The evaluator shall determine that the functional\n                    specification is an accurate and complete instantiation of\n                    the SFRs., , ', 'adv', 'adv_fsp', 'adv_fsp.3'),
('adv_fsp.4.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.4.2e', 'The evaluator shall determine that the functional\n                    specification is an accurate and complete instantiation of\n                    the SFRs., , ', 'adv', 'adv_fsp', 'adv_fsp.4'),
('adv_fsp.5.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.5.2e', 'The evaluator shall determine that the functional\n                    specification is an accurate and complete instantiation of\n                    the SFRs., , ', 'adv', 'adv_fsp', 'adv_fsp.5'),
('adv_fsp.6.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_fsp.6.2e', '\n                    The evaluator shall determine that the functional\n                    specification is an accurate and complete instantiation of\n                    the SFRs.\n                ', 'adv', 'adv_fsp', 'adv_fsp.6'),
('adv_imp.1.1e', 'The evaluator shall confirm that, for the selected sample of\n                    the implementation representation, the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'adv', 'adv_imp', 'adv_imp.1'),
('adv_imp.2.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'adv', 'adv_imp', 'adv_imp.2'),
('adv_int.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'adv', 'adv_int', 'adv_int.1'),
('adv_int.1.2e', 'The evaluator shall perform an internals analysis on the\n                    assigned subset of the TSF., , ', 'adv', 'adv_int', 'adv_int.1'),
('adv_int.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'adv', 'adv_int', 'adv_int.2'),
('adv_int.2.2e', 'The evaluator shall perform an internals analysis on the\n                    TSF., , ', 'adv', 'adv_int', 'adv_int.2'),
('adv_int.3.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'adv', 'adv_int', 'adv_int.3'),
('adv_int.3.2e', '\n                    The evaluator shall perform an internals analysis on the\n                    entire TSF.\n                ', 'adv', 'adv_int', 'adv_int.3'),
('adv_spm.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , ', 'adv', 'adv_spm', 'adv_spm.1'),
('adv_tds.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.1.2e', 'The evaluator shall determine that the design is an accurate\n                    and complete instantiation of all security functional\n                    requirements., , ', 'adv', 'adv_tds', 'adv_tds.1'),
('adv_tds.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.2.2e', 'The evaluator shall determine that the design is an accurate\n                    and complete instantiation of all security functional\n                    requirements., , ', 'adv', 'adv_tds', 'adv_tds.2'),
('adv_tds.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.3.2e', 'The evaluator shall determine that the design is an accurate\n                    and complete instantiation of all security functional\n                    requirements., , ', 'adv', 'adv_tds', 'adv_tds.3'),
('adv_tds.4.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , , ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.4.2e', 'The evaluator shall determine that the design is an accurate\n                    and complete instantiation of all security functional\n                    requirements., , ', 'adv', 'adv_tds', 'adv_tds.4'),
('adv_tds.5.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.5.2e', '\n                    The evaluator shall determine that the design is an accurate\n                    and complete instantiation of all security functional\n                    requirements.  ', 'adv', 'adv_tds', 'adv_tds.5'),
('adv_tds.6.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.  ', 'adv', 'adv_tds', 'adv_tds.6'),
('adv_tds.6.2e', '\n                    The evaluator shall determine that the design is an accurate\n                    and complete instantiation of all security functional\n                    requirements.  ', 'adv', 'adv_tds', 'adv_tds.6'),
('agd_ope.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , ', 'agd', 'agd_ope', 'agd_ope.1'),
('agd_pre.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'agd', 'agd_pre', 'agd_pre.1'),
('agd_pre.1.2e', 'The evaluator shall apply the preparative procedures to\n                    confirm that the TOE can be prepared securely for operation., ', 'agd', 'agd_pre', 'agd_pre.1'),
('alc_cmc.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'alc', 'alc_cmc', 'alc_cmc.1'),
('alc_cmc.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , ', 'alc', 'alc_cmc', 'alc_cmc.2'),
('alc_cmc.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , ', 'alc', 'alc_cmc', 'alc_cmc.3'),
('alc_cmc.4.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , ', 'alc', 'alc_cmc', 'alc_cmc.4'),
('alc_cmc.5.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , , , , , , , ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cmc.5.2e', 'The evaluator shall determine that the application of the\n                    production support procedures results in a TOE as provided\n                    by the developer for testing activities., ', 'alc', 'alc_cmc', 'alc_cmc.5'),
('alc_cms.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'alc', 'alc_cms', 'alc_cms.1'),
('alc_cms.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_cms', 'alc_cms.2'),
('alc_cms.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_cms', 'alc_cms.3'),
('alc_cms.4.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_cms', 'alc_cms.4'),
('alc_cms.5.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_cms', 'alc_cms.5'),
('alc_del.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., ', 'alc', 'alc_del', 'alc_del.1'),
('alc_dvs.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'alc', 'alc_dvs', 'alc_dvs.1'),
('alc_dvs.1.2e', 'The evaluator shall confirm that the security measures are\n                    being applied., ', 'alc', 'alc_dvs', 'alc_dvs.1'),
('alc_dvs.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_dvs', 'alc_dvs.2'),
('alc_dvs.2.2e', 'The evaluator shall confirm that the security measures are\n                    being applied., ', 'alc', 'alc_dvs', 'alc_dvs.2'),
('alc_flr.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , ', 'alc', 'alc_flr', 'alc_flr.1'),
('alc_flr.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , ', 'alc', 'alc_flr', 'alc_flr.2'),
('alc_flr.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , , ', 'alc', 'alc_flr', 'alc_flr.3'),
('alc_lcd.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'alc', 'alc_lcd', 'alc_lcd.1'),
('alc_lcd.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_lcd', 'alc_lcd.2'),
('alc_tat.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_tat', 'alc_tat.1'),
('alc_tat.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.2.2e', 'The evaluator shall confirm that the implementation\n                    standards have been applied., ', 'alc', 'alc_tat', 'alc_tat.2'),
('alc_tat.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'alc', 'alc_tat', 'alc_tat.3'),
('alc_tat.3.2e', 'The evaluator shall confirm that the implementation\n                    standards have been applied., ', 'alc', 'alc_tat', 'alc_tat.3'),
('ape_ccl.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , ', 'ape', 'ape_ccl', 'ape_ccl.1'),
('ape_ecd.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_ecd.1.2e', 'The evaluator shall confirm that no extended component may\n                    be clearly expressed using existing components., ', 'ape', 'ape_ecd', 'ape_ecd.1'),
('ape_int.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , ', 'ape', 'ape_int', 'ape_int.1'),
('ape_obj.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., ', 'ape', 'ape_obj', 'ape_obj.1'),
('ape_obj.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , ', 'ape', 'ape_obj', 'ape_obj.2'),
('ape_req.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , ', 'ape', 'ape_req', 'ape_req.1'),
('ape_req.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , ', 'ape', 'ape_req', 'ape_req.2'),
('ape_spd.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , ', 'ape', 'ape_spd', 'ape_spd.1'),
('ase_ccl.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , ', 'ase', 'ase_ccl', 'ase_ccl.1'),
('ase_ecd.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_ecd.1.2e', 'The evaluator shall confirm that no extended component can\n                    be clearly expressed using existing components., ', 'ase', 'ase_ecd', 'ase_ecd.1'),
('ase_int.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , ', 'ase', 'ase_int', 'ase_int.1'),
('ase_int.1.2e', 'The evaluator shall confirm that the TOE reference, the TOE\n                    overview, and the TOE description are consistent with each\n                    other., ', 'ase', 'ase_int', 'ase_int.1'),
('ase_obj.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., ', 'ase', 'ase_obj', 'ase_obj.1'),
('ase_obj.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , ', 'ase', 'ase_obj', 'ase_obj.2'),
('ase_req.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , ', 'ase', 'ase_req', 'ase_req.1'),
('ase_req.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , , , , , , , ', 'ase', 'ase_req', 'ase_req.2'),
('ase_spd.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , ', 'ase', 'ase_spd', 'ase_spd.1'),
('ase_tss.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., ', 'ase', 'ase_tss', 'ase_tss.1'),
('ase_tss.1.2e', 'The evaluator shall confirm that the TOE summary\n                    specification is consistent with the TOE overview and the\n                    TOE description., ', 'ase', 'ase_tss', 'ase_tss.1'),
('ase_tss.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'ase', 'ase_tss', 'ase_tss.2'),
('ase_tss.2.2e', 'The evaluator shall confirm that the TOE summary\n                    specification is consistent with the TOE overview and the\n                    TOE description., ', 'ase', 'ase_tss', 'ase_tss.2'),
('ate_cov.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., ', 'ate', 'ate_cov', 'ate_cov.1'),
('ate_cov.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , ', 'ate', 'ate_cov', 'ate_cov.2'),
('ate_cov.3.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'ate', 'ate_cov', 'ate_cov.3'),
('ate_dpt.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , ', 'ate', 'ate_dpt', 'ate_dpt.1'),
('ate_dpt.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , ', 'ate', 'ate_dpt', 'ate_dpt.2'),
('ate_dpt.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , ', 'ate', 'ate_dpt', 'ate_dpt.3'),
('ate_dpt.4.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'ate', 'ate_dpt', 'ate_dpt.4'),
('ate_fun.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , , , , , ', 'ate', 'ate_fun', 'ate_fun.1'),
('ate_fun.2.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'ate', 'ate_fun', 'ate_fun.2'),
('ate_ind.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'ate', 'ate_ind', 'ate_ind.1'),
('ate_ind.1.2e', '\n                    The evaluator shall test a subset of the TSF to confirm that\n                    the TSF operates as specified.\n                    ', 'ate', 'ate_ind', 'ate_ind.1'),
('ate_ind.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , , ', 'ate', 'ate_ind', 'ate_ind.2'),
('ate_ind.2.2e', 'The evaluator shall execute a sample of tests in the test\n                    documentation to verify the developer test results., , ', 'ate', 'ate_ind', 'ate_ind.2'),
('ate_ind.2.3e', '\n                    The evaluator shall test a subset of the TSF to confirm that the\n                    TSF operates as specified.\n                    ', 'ate', 'ate_ind', 'ate_ind.2'),
('ate_ind.3.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'ate', 'ate_ind', 'ate_ind.3'),
('ate_ind.3.2e', '\n                    The evaluator shall execute all tests in the test\n                    documentation to verify the developer test results.\n                ', 'ate', 'ate_ind', 'ate_ind.3'),
('ate_ind.3.3e', '\n                    The evaluator shall test the TSF to confirm that the entire\n                    TSF operates as specified.\n                ', 'ate', 'ate_ind', 'ate_ind.3'),
('ava_van.1.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'ava', 'ava_van', 'ava_van.1'),
('ava_van.1.2e', 'The evaluator shall perform a search of public domain\n                    sources to identify potential vulnerabilities in the TOE., , ', 'ava', 'ava_van', 'ava_van.1'),
('ava_van.1.3e', 'The evaluator shall conduct penetration testing, based on\n                    the identified potential vulnerabilities, to determine that\n                    the TOE is resistant to attacks performed by an attacker\n                    possessing Basic attack potential., , , , , , , ', 'ava', 'ava_van', 'ava_van.1'),
('ava_van.2.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'ava', 'ava_van', 'ava_van.2'),
('ava_van.2.2e', 'The evaluator shall perform a search of public domain\n                    sources to identify potential vulnerabilities in the TOE., ', 'ava', 'ava_van', 'ava_van.2'),
('ava_van.2.3e', 'The evaluator shall perform an independent vulnerability\n                    analysis of the TOE using the guidance documentation,\n                    functional specification, TOE design and security\n                    architecture description to identify potential\n                    vulnerabilities in the TOE., , ', 'ava', 'ava_van', 'ava_van.2'),
('ava_van.2.4e', 'The evaluator shall conduct penetration testing, based on\n                    the identified potential vulnerabilities, to determine that\n                    the TOE is resistant to attacks performed by an attacker\n                    possessing Basic attack potential., , , , , , , ', 'ava', 'ava_van', 'ava_van.2'),
('ava_van.3.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'ava', 'ava_van', 'ava_van.3'),
('ava_van.3.2e', 'The evaluator shall perform a search of public domain\n                    sources to identify potential vulnerabilities in the TOE., ', 'ava', 'ava_van', 'ava_van.3'),
('ava_van.3.3e', '\n                    The evaluator shall perform an independent, focused vulnerability analysis of the\n                    TOE using the guidance documentation, functional specification, TOE design, security\n                    architecture description and implementation representation to identify potential\n                    vulnerabilities in the TOE.\n                    ', 'ava', 'ava_van', 'ava_van.3'),
('ava_van.3.4e', 'The evaluator shall conduct penetration testing, based on\n                    the identified potential vulnerabilities, to determine that\n                    the TOE is resistant to attacks performed by an attacker\n                    possessing Enhanced-Basic attack potential., , , , , , , ', 'ava', 'ava_van', 'ava_van.3'),
('ava_van.4.1e', 'The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence., , ', 'ava', 'ava_van', 'ava_van.4'),
('ava_van.4.2e', 'The evaluator shall perform a search of public domain\n                    sources to identify potential vulnerabilities in the TOE., ', 'ava', 'ava_van', 'ava_van.4'),
('ava_van.4.3e', 'The evaluator shall perform an independent, methodical\n                    vulnerability analysis of the TOE using the guidance\n                    documentation, functional specification, TOE design,\n                    security architecture description and implementation\n                    representation to identify potential vulnerabilities in the\n                    TOE., , ', 'ava', 'ava_van', 'ava_van.4'),
('ava_van.4.4e', 'The evaluator shall conduct penetration testing based on the\n                    identified potential vulnerabilities to determine that the\n                    TOE is resistant to attacks performed by an attacker\n                    possessing Moderate attack potential., , , , , , , ', 'ava', 'ava_van', 'ava_van.4'),
('ava_van.5.1e', '\n                    The evaluator shall confirm that the information provided\n                    meets all requirements for content and presentation of\n                    evidence.\n                ', 'ava', 'ava_van', 'ava_van.5'),
('ava_van.5.2e', '\n                    The evaluator shall perform a search of public domain\n                    sources to identify potential vulnerabilities in the TOE.\n                ', 'ava', 'ava_van', 'ava_van.5'),
('ava_van.5.3e', '\n                    The evaluator shall perform an independent, methodical\n                    vulnerability analysis of the TOE using the guidance\n                    documentation, functional specification, TOE design,\n                    security architecture description and implementation\n                    representation to identify potential vulnerabilities in the\n                    TOE.\n                ', 'ava', 'ava_van', 'ava_van.5'),
('ava_van.5.4e', '\n                    The evaluator shall conduct penetration testing based on the\n                    identified potential vulnerabilities to determine that the\n                    TOE is resistant to attacks performed by an attacker\n                    possessing High attack potential.\n                ', 'ava', 'ava_van', 'ava_van.5');

-- --------------------------------------------------------

--
-- Table structure for table `afamily`
--

CREATE TABLE `afamily` (
  `id_afamily` varchar(100) NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `afamily`
--

INSERT INTO `afamily` (`id_afamily`, `name`, `ida`) VALUES
('ace_ccl', 'PP-Module conformance claims', 'ace'),
('ace_cco', 'PP-Configuration consistency', 'ace'),
('ace_ecd', 'PP-Module extended components definition', 'ace'),
('ace_int', 'PP-Module introduction', 'ace'),
('ace_mco', 'PP-Module consistency', 'ace'),
('ace_obj', 'PP-Module Security objectives', 'ace'),
('ace_req', 'PP-Module security requirements', 'ace'),
('ace_spd', 'PP-Module Security problem definition', 'ace'),
('aco_cor', 'Composition rationale', 'aco'),
('aco_ctt', 'Composed TOE testing', 'aco'),
('aco_dev', 'Development evidence', 'aco'),
('aco_rel', 'Reliance of dependent component', 'aco'),
('aco_vul', 'Composition vulnerability analysis', 'aco'),
('adv_arc', 'Security Architecture', 'adv'),
('adv_fsp', 'Functional specification', 'adv'),
('adv_imp', 'Implementation representation', 'adv'),
('adv_int', 'TSF internals', 'adv'),
('adv_spm', 'Security policy modelling', 'adv'),
('adv_tds', 'TOE design', 'adv'),
('agd_ope', 'Operational user guidance', 'agd'),
('agd_pre', 'Preparative procedures', 'agd'),
('alc_cmc', 'CM capabilities', 'alc'),
('alc_cms', 'CM scope', 'alc'),
('alc_del', 'Delivery', 'alc'),
('alc_dvs', 'Development security', 'alc'),
('alc_flr', 'Flaw remediation', 'alc'),
('alc_lcd', 'Life-cycle definition', 'alc'),
('alc_tat', 'Tools and techniques', 'alc'),
('ape_ccl', 'Conformance claims', 'ape'),
('ape_ecd', 'Extended components definition', 'ape'),
('ape_int', 'PP introduction', 'ape'),
('ape_obj', 'Security objectives', 'ape'),
('ape_req', 'Security requirements', 'ape'),
('ape_spd', 'Security problem definition', 'ape'),
('ase_ccl', 'Conformance claims', 'ase'),
('ase_ecd', 'Extended components definition', 'ase'),
('ase_int', 'ST introduction', 'ase'),
('ase_obj', 'Security objectives', 'ase'),
('ase_req', 'Security requirements', 'ase'),
('ase_spd', 'Security problem definition', 'ase'),
('ase_tss', 'TOE summary specification', 'ase'),
('ate_cov', 'Coverage', 'ate'),
('ate_dpt', 'Depth', 'ate'),
('ate_fun', 'Functional tests', 'ate'),
('ate_ind', 'Independent testing', 'ate'),
('ava_van', 'Vulnerability analysis', 'ava');

-- --------------------------------------------------------

--
-- Table structure for table `afapplicationnotes`
--

CREATE TABLE `afapplicationnotes` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `afapplicationnotes`
--

INSERT INTO `afapplicationnotes` (`id`, `testo`, `ida`, `idf`) VALUES
('1068.002804062071', 'Inadequacies in a TOE can result either from a failure in\n                understanding the security requirements or from a flawed\n                implementation of those security requirements. Defining the\n                security requirements adequately to ensure their\n                understanding may be problematic because the definition must\n                be sufficiently precise to prevent undesired results or\n                subtle flaws during implementation of the TOE. Throughout\n                the design, implementation, and review processes, the\n                modelled security requirements may be used as precise design\n                and implementation guidance, thereby providing increased\n                assurance that the modelled security requirements are\n                satisfied by the TOE. The precision of the model and\n                resulting guidance is significantly improved by casting the\n                model in a formal language and verifying the security\n                requirements by formal proof.\n\n                The creation of a formal security policy model helps to\n                identify and eliminate ambiguous, inconsistent,\n                contradictory, or unenforceable security policy\n                elements. Once the TOE has been built, the formal model\n                serves the evaluation effort by contributing to the\n                evaluator\'s judgement of how well the developer has\n                understood the security functionality being implemented and\n                whether there are inconsistencies between the security\n                requirements and the TOE design. The confidence in the model\n                is accompanied by a proof that it contains no\n                inconsistencies.\n\n                A formal security model is a precise formal presentation of\n                the important aspects of security and their relationship to\n                the behaviour of the TOE; it identifies the set of rules and\n                practises that regulates how the TSF manages, protects, and\n                otherwise controls the system resources. The model includes\n                the set of restrictions and properties that specify how\n                information and computing resources are prevented from being\n                used to violate the SFRs, accompanied by a persuasive set of\n                engineering arguments showing that these restrictions and\n                properties play a key role in the enforcement of the SFRs.\n                It consists both of the formalisms that express the security\n                functionality, as well as ancillary text to explain the\n                model and to provide it with context. The security behaviour\n                of the TSF is modelled both in terms of external behaviour\n                (i.e. how the TSF interacts with the rest of the TOE and\n                with its operational environment), as well as its internal\n                behaviour.\n\n                The Security Policy Model of the TOE is informally\n                abstracted from its realisation by considering the proposed\n                security requirements of the ST. The informal abstraction is\n                taken to be successful if the TOE\'s principles (also termed\n                ``invariants\'\') turn out to be enforced by its\n                characteristics. The purpose of formal methods lies within\n                the enhancement of the rigour of enforcement. Informal\n                arguments are always prone to fallacies; especially if\n                relationships among subjects, objects and operations get\n                more and more involved. In order to minimise the risk of\n                insecure state arrivals the rules and characteristics of the\n                security policy model are mapped to respective properties\n                and features within some formal system, whose rigour and\n                strength can afterwards be used to obtain the security\n                properties by means of theorems and formal proof.\n\n                While the term ``formal security policy model\'\' is used in\n                academic circles, the CC\'s approach has no fixed definition\n                of ``security\'\'; it would equate to whatever SFRs are being\n                claimed. Therefore, the formal security policy model is\n                merely a formal representation of the set of SFRs being\n                claimed.\n\n                The term\n                security policy\n                has\n                traditionally been associated with only access control\n                policies, whether label-based (mandatory access control) or\n                user-based (discretionary access control). However, a\n                security policy is not limited to access control; there are\n                also audit policies, identification policies, authentication\n                policies, encryption policies, management policies, and any\n                other security policies that are enforced by the TOE, as\n                described in the PP/ST., ADV_SPM.1.1D, contains an assignment for identifying these\n                policies that are formally modelled.', 'ADV', 'adv_spm'),
('1082.470690032378', '\n\n\n            ', 'ATE', 'ate_cov'),
('109.11737397121993', 'The developer will provide details of any residual\n                vulnerabilities reported during evaluation of the\n                components.  These may be gained from the component\n                developers or evaluation reports for the components.  These\n                will be used as inputs into the evaluator\'s vulnerability\n                analysis of the composed TOE in the operational\n                environment.\n                \n\n                The operational environment of the composed TOE is examined\n                to ensure that the assumptions and objectives for the\n                component operational environment (specified in each\n                component ST) are satisfied in the composed TOE. An initial\n                analysis of the consistency of assumptions and objectives\n                between the components and the composed TOE STs will have\n                been performed during the conduct of the, ASE, activities for the composed TOE. However, this\n                analysis is revisited with the knowledge acquired during the, ACO_REL, ,, ACO_DEV, and the, ACO_COR, activities to ensure that, for example, assumptions of the\n                dependent component that were addressed by the environment\n                in the dependent component ST are not reintroduced as a\n                result of composition (i.e. that the base component\n                adequately addresses the assumptions of the dependent\n                component ST in the composed TOE).\n\n                A search by the evaluator for issues in each component will\n                identify potential vulnerabilities reported in the public\n                domain since completion of the evaluation of the components.\n                Any potential vulnerabilities will then be subject to\n                testing.\n\n                If the base component used in the composed TOE has been the\n                subject of assurance continuity activities since\n                certification, the evaluator will consider during the\n                composed TOE vulnerability analysis activities the changes\n                made in base component.', 'ACO', 'aco_vul'),
('1183.078339771924', '\n\n                These requirements, when applied to the internal structure\n                of the TSF, typically result in improvements that aid both\n                the developer and the evaluator in understanding the TSF,\n                and also provide the basis for designing and evaluating test\n                suites. Further, improving understandability of the TSF\n                should assist the developer in simplifying its\n                maintainability.\n\n                The requirements in this family are presented at a fairly\n                abstract level. The wide variety of TOEs makes it impossible\n                to codify anything more specific than ``well-structured\'\' or\n                ``minimum complexity\'\'. Judgements on structure and\n                complexity are expected to be derived from the specific\n                technologies used in the TOE. For example, software is\n                likely to be considered well-structured if it exhibits the\n                characteristics cited in the software engineering\n                disciplines. The components within this family call for\n                identifying the standards for measuring the characteristic\n                of being well-structured and not overly-complex.\n            ', 'ADV', 'adv_int'),
('1197.053340499639', 'Once the TSFIs are determined (see, TSFI-DETERMINATION, for guidance and\n                examples of determining TSFI), they are described. At\n                lower-level components, developers focus their documentation\n                (and evaluators focus their analysis) on the more\n                security-relevant aspects of the TOE. Three categories of\n                TSFIs are defined, based upon the relevance the services\n                available through them have to the SFRs being claimed:, FDP_RIP, It should be noted that in order for an interface to be\n                SFR-supporting or SFR non-interfering it must have\n\n                no\n                SFR-enforcing services or results. In\n                contrast, an SFR-enforcing interface may have SFR-supporting\n                services (for example, the ability to set the system clock\n                may be an SFR-enforcing service of an interface, but if that\n                same interface is used to display the system date that\n                service may be only SFR-supporting).  An example of a purely\n                SFR-supporting interface is a system call interface that is\n                used both by users and by a portion of the TSF that is\n                running on behalf of users.\n\n                As more information about the TSFIs becomes available, the\n                greater the assurance that can be gained that the interfaces are\n                correctly categorised/analysed. The requirements are structured\n                such that, at the lowest level, the information required for SFR\n                non-interfering interfaces is the minimum necessary in order for\n                the evaluator to make this determination in an effective\n                manner. At higher levels, more information becomes available so\n                that the evaluator has greater confidence in the\n                designation.\n\n                The purpose in defining these labels (SFR-enforcing,\n                SFR-supporting, and SFR-non-interfering) and for levying\n                different requirements upon each (at the lower assurance\n                components) is to provide a first approximation of where to\n                focus the analysis and the evidence upon which that analysis\n                is performed. If the developer\'s documentation of the TSF\n                interfaces describes all of the interfaces to the degree\n                specified in the requirements for the SFR-enforcing\n                interfaces (that is, if the documentation exceeds the\n                requirements), there is no need for the developer to create\n                new evidence to match the requirements. Similarly, because\n                the labels are merely a means of differentiating the\n                interface types within the requirements, there is no need\n                for the developer to update the evidence solely to label the\n                interfaces as SFR-enforcing, SFR-supporting, and\n                SFR-non-interfering. The primary purpose of this labelling\n                is to allow developers with less mature development\n                methodologies (and associated artifacts, such as detailed\n                interface and design documentation) to provide only the\n                necessary evidence without undue cost.\n\n                The last C element of each component within this family provides\n                a direct correspondence between the SFRs and the functional\n                specification; that is, an indication of which interfaces are\n                used to invoke each of the claimed SFRs. In the cases where the\n                ST contains such functional requirements as, , whose functionality may not manifest itself at\n                the TSFIs, the functional specification and/or the tracing is\n                expected to identify these SFRs; including them in the functional\n                specification helps to ensure that they are not lost at lower\n                levels of decomposition, where they will be relevant., , ', 'ADV', 'adv_fsp'),
('12.403135737890555', 'A life-cycle model encompasses the procedures, tools and\n                techniques used to develop and maintain the TOE. Aspects of\n                the process that may be covered by such a model include\n                design methods, review procedures, project management\n                controls, change control procedures, test methods and\n                acceptance procedures. An effective life-cycle model will\n                address these aspects of the development and maintenance\n                process within an overall management structure that assigns\n                responsibilities and monitors progress.\n\n                There are different types of acceptance situations that are\n                dealt with at different locations in the criteria:\n                acceptance of parts delivered by subcontractors\n                (``integration\'\') should be treated in this family, ALC_LCD, , acceptance subsequent to\n                internal transportations in, ALC_DVS, , acceptance of parts into the CM system in, ALC_CMC, , and acceptance of the\n                delivered TOE by the consumer in, ALC_DEL, . The first three types may overlap.\n\n                Although life-cycle definition deals with the maintenance of\n                the TOE and hence with aspects becoming relevant after the\n                completion of the evaluation, its evaluation adds assurance\n                through an analysis of the life-cycle information for the\n                TOE provided at the time of the evaluation.\n\n                A life-cycle model provides for the necessary control over\n                the development and maintenance of the TOE, if the model\n                enables sufficient minimisation of the danger that the TOE\n                will not meet its security requirement.\n\n                A measurable life-cycle model is a model using some\n                quantitative valuation (arithmetic parameters and/or\n                metrics) of the managed product in order to measure\n                development properties of the product. Typical metrics are\n                source code complexity metrics, defect density (errors per\n                size of code) or mean time to failure. For the security\n                evaluation all those metrics are of relevance, which are\n                used to increase quality by decreasing the probability of\n                faults and thereby in turn increasing assurance in the\n                security of the TOE.\n\n                One should take into account that there exist standardised\n                life cycle models on the one hand (like the waterfall model)\n                and standardised metrics on the other hand (like error\n                density), which may be combined. The CC does not require the\n                life cycle to follow exactly one standard defining both\n                aspects.', 'ALC', 'alc_lcd'),
('1247.0145073229785', 'This family deals with the degree to which there is\n                independent functional testing of the TSF. Independent\n                functional testing may take the form of repeating the\n                developer\'s functional tests (in whole or in part) or of\n                extending the scope or the depth of the developer\'s\n                tests. These activities are complementary, and an\n                appropriate mix must be planned for each TOE, which takes\n                into account the availability and coverage of test results,\n                and the functional complexity of the TSF.\n\n                Sampling of developer tests is intended to provide\n                confirmation that the developer has carried out his planned\n                test programme on the TSF, and has correctly recorded the\n                results. The size of sample selected will be influenced by\n                the detail and quality of the developer\'s functional test\n                results. The evaluator will also need to consider the scope\n                for devising additional tests, and the relative benefit that\n                may be gained from effort in these two areas. It is\n                recognised that repetition of all developer tests may be\n                feasible and desirable in some cases, but may be very\n                arduous and less productive in others. The highest component\n                in this family should therefore be used with\n                caution. Sampling will address the whole range of test\n                results available, including those supplied to meet the\n                requirements of both, ATE_COV, and, ATE_DPT, .\n\n                There is also a need to consider the different\n                configurations of the TOE that are included within the\n                evaluation. The evaluator will need to assess the\n                applicability of the results provided, and to plan his own\n                testing accordingly.\n\n                The suitability of the TOE for testing is based on the\n                access to the TOE, and the supporting documentation and\n                information required (including any test software or tools)\n                to run tests. The need for such support is addressed by the\n                dependencies to other assurance families.\n\n                Additionally, suitability of the TOE for testing may be\n                based on other considerations. For example, the version of\n                the TOE submitted by the developer may not be the final\n                version.\n\n                The term\n                interfaces\n                refers to interfaces\n                described in the functional specification and TOE design,\n                and parameters passed through invocations identified in the\n                implementation representation. The exact set of interfaces\n                to be used is selected through, ATE_COV, and the, ATE_DPT, components.\n\n                References to a subset of the interfaces are intended to\n                allow the evaluator to design an appropriate set of tests\n                which is consistent with the objectives of the evaluation\n                being conducted.', 'ATE', 'ate_ind'),
('1275.3844255011406', 'The TSF of the base component is often defined without\n                knowledge of the dependencies of the possible applications\n                with which it may by composed. The TSF of this base\n                component is defined to include all parts of the base\n                component that have to be relied upon for enforcement of the\n                base component SFRs. This will include all parts of the base\n                component required to implement the base component\n                SFRs.\n\n                The functional specification of the base component will\n                describe the TSFI in terms of the interfaces the base\n                component provides to allow an external entity to invoke\n                operations of the TSF.  This includes interfaces to the\n                human user to permit interaction with the operation of the\n                TSF invoking SFRs and also interfaces allowing an external\n                IT entity to make calls into the TSF.\n\n                The functional specification only provides a description of\n                what the TSF provides at its interface and the means by\n                which that TSF functionality are invoked. Therefore, the\n                functional specification does not necessarily provide a\n                complete interface specification of all possible interfaces\n                available between an external entity and the base\n                component. It does not include what the TSF expects/requires\n                from the operational environment. The description of what a\n                dependent component TSF relies upon of a base component is\n                considered in, ACO_REL, and the\n                development information evidence provides a response to the\n                interfaces specified.\n\n                The development information evidence includes a\n                specification of the base component. This may be the\n                evidence used during evaluation of the base component to\n                satisfy the, ADV, requirements, or may\n                be another form of evidence produced by either the base\n                component developer or the composed TOE developer. This\n                specification of the base component is used during, ACO_DEV, to gain confidence that the\n                appropriate security functionality is provided to support\n                the requirements of the dependent component.  The level of\n                detail required of this evidence increases to reflect the\n                level of required assurance in the composed TOE.  This is\n                expected to broadly reflect the increasing confidence gained\n                from the application of the assurance packages to the\n                components. The evaluator determines that this description\n                of the base component is consistent with the reliance\n                information provided for the dependent component.', 'ACO', 'aco_dev'),
('212.92125468552928', '\n\n                This family provides assurance that the TOE will be\n                maintained and supported in the future, requiring the TOE\n                developer to track and correct flaws in the\n                TOE. Additionally, requirements are included for the\n                distribution of flaw corrections. However, this family does\n                not impose evaluation requirements beyond the current\n                evaluation.\n\n                The TOE user is considered to be the focal point in the user\n                organisation that is responsible for receiving and\n                implementing fixes to security flaws. This is not\n                necessarily an individual user, but may be an organisational\n                representative who is responsible for the handling of\n                security flaws. The use of the term TOE user recognises that\n                different organisations have different procedures for\n                handling flaw reporting, which may be done either by an\n                individual user, or by a central administrative body.\n\n                The flaw remediation procedures should describe the methods\n                for dealing with all types of flaws encountered. These flaws\n                may be reported by the developer, by users of the TOE, or by\n                other parties with familiarity with the TOE. Some flaws may\n                not be reparable immediately. There may be some occasions\n                where a flaw cannot be fixed and other (e.g. procedural)\n                measures must be taken. The documentation provided should\n                cover the procedures for providing the operational sites\n                with fixes, and providing information on flaws where fixes\n                are delayed (and what to do in the interim) or when fixes\n                are not possible.\n\n                Changes applied to a TOE after its release render it\n                unevaluated; although some information from the original\n                evaluation may still apply. The phrase ``release of the\n                TOE\'\' used in this family therefore refers to a version of a\n                product that is a release of a certified TOE, to which\n                changes have been applied.\n            ', 'ALC', 'alc_flr'),
('312.0339889260882', 'This family deals with measures to remove or reduce threats\n                existing at the developer\'s site.\n\n                The evaluator should visit the site(s) in order to assess\n                evidence for development security. This may include sites of\n                subcontractors involved in the TOE development and\n                production. Any decision not to visit shall be agreed with\n                the evaluation authority.\n\n                Although development security deals with the maintenance of\n                the TOE and hence with aspects becoming relevant after the\n                completion of the evaluation, the, ALC_DVS, requirements specify only that the\n                development security measures be in place at the time of\n                evaluation. Furthermore,, ALC_DVS, does not contain any requirements related to the sponsor\'s\n                intention to apply the development security measures in the\n                future, after completion of the evaluation.\n\n                It is recognised that confidentiality may not always be an\n                issue for the protection of the TOE in its development\n                environment. The use of the word ``necessary\'\' allows for\n                the selection of appropriate safeguards.', 'ALC', 'alc_dvs'),
('338.7536760269541', 'The properties of self-protection, domain separation, and\n                non-bypassability are distinct from security functionality\n                expressed by Part 2 SFRs because self-protection and\n                non-bypassability largely have no directly observable\n                interface at the TSF. Rather, they are properties of the TSF\n                that are achieved through the design of the TOE and TSF, and\n                enforced by the correct implementation of that\n                design.\n\n                The approach used in this family is for the developer to\n                design and provide a TSF that exhibits the above-mentioned\n                properties, and to provide evidence (in the form of\n                documentation) that explains these properties of the\n                TSF. This explanation is provided at the same level of\n                detail as the description of the SFR-enforcing elements of\n                the TOE in the TOE design document. The evaluator has the\n                responsibility for looking at the evidence and, coupled with\n                other evidence delivered for the TOE and TSF, determining\n                that the properties are achieved.\n\n                Specification of security functionality implementing the\n                SFRs (in the, ADV_FSP, and, ADV_TDS, ) will not necessarily describe\n                mechanisms employed in implementing self-protection and\n                non-bypassability (e.g.  memory management\n                mechanisms). Therefore, the material needed to provide the\n                assurance that these requirements are being achieved is\n                better suited to a presentation separate from the design\n                decomposition of the TSF as embodied in, ADV_FSP, and, ADV_TDS, . This is not\n                to imply that the security architecture description called\n                for by this component cannot reference or make use of the\n                design decomposition material; but it is likely that much of\n                the detail present in the decomposition documentation will\n                not be relevant to the argument being provided for the\n                security architecture description document.\n\n                The description of architectural soundness can be thought of\n                as a developer\'s vulnerability analysis, in that it provides\n                the justification for why the TSF is sound and enforces all\n                of its SFRs. Where the soundness is achieved through\n                specific security mechanisms, these will be tested as part\n                of the, ATE_DPT, requirements; where\n                the soundness is achieved solely through the architecture,\n                the behaviour will be tested as part of the, AVA, requirements.\n\n                This family consists of requirements for a security\n                architecture description that describes the self-protection,\n                domain separation, non-bypassability principles, including a\n                description of how these principles are supported by the\n                parts of the TOE that are used for TSF\n                initialisation.\n                Additional information on the security architecture\n                properties of self-protection, domain separation, and\n                non-bypassability can be found in Annex, ARC_ANNEX, .', 'ADV', 'adv_arc'),
('375.4971813960166', 'There is a requirement for well-defined development\n                tools. These are tools that are clearly and completely\n                described. For example, programming languages and computer\n                aided design (CAD) systems that are based on a standard\n                published by standards bodies are considered to be\n                well-defined. Self-made tools would need further\n                investigation to clarify whether they are\n                well-defined.\n\n                The requirement in, ALC_TAT.1.2C, is\n                especially applicable to programming languages so as to\n                ensure that all statements in the source code have an\n                unambiguous meaning.\n\n                In, ALC_TAT.2, and, ALC_TAT.3, , implementation guidelines may be accepted\n                as an implementation standard if they have been approved by\n                some group of experts (e.g. academic experts, standards\n                bodies). Implementation standards are normally public, well\n                accepted and common practise in a specific industry, but\n                developer-specific implementation guidelines may also be\n                accepted as a standard; the emphasis is on the\n                expertise.\n                Tools and techniques distinguishes between the\n                implementation standards applied by the developer (, ALC_TAT.2.3D, ) and the implementation\n                standards for ``all parts of the TOE\'\' (, ALC_TAT.3.3D, ) which include third party software,\n                hardware, or firmware. The configuration list introduced in, ALC_CMS, requires that for each TSF\n                relevant configuration item to indicate if it has been\n                generated by the TOE developer or by third party\n                developers.', 'ALC', 'alc_tat'),
('394.3230807022385', 'It is recognised that the application of these requirements\n                will vary depending on aspects such as whether the TOE is\n                delivered in an operational state, or whether it has to be\n                installed at the TOE owner\'s site, etc.\n\n                The first process covered by the preparative procedures is\n                the consumer\'s secure acceptance of the received TOE in\n                accordance with the developer\'s delivery procedures. If the\n                developer has not defined delivery procedures, security of\n                the acceptance has to be ensured otherwise.\n\n                Installation of the TOE includes transforming its\n                operational environment into a state that conforms to the\n                security objectives for the operational environment provided\n                in the ST.\n\n                It might also be the case that no installation is necessary,\n                for example a smart card. In this case it may be\n                inappropriate to require and analyse installation\n                procedures.\n\n                The requirements in this assurance family are presented\n                separately from those in the, AGD_OPE, family, due to the infrequent, possibly\n                one-time use of the preparative procedures.', 'AGD', 'agd_pre'),
('515.4766962186116', 'Transportations from subcontractors to the developer or\n                between different development sites are not considered here,\n                but in the family, ALC_DVS, .\n\n                The end of the delivery phase is marked by the transfer of\n                the TOE into the responsibility of the user. This does not\n                necessarily coincide with the arrival of the TOE at the\n                user\'s location.\n\n                The delivery procedures should consider, if applicable,\n                issues such as:, AGD_PRE, The delivery procedures should include the recipient\'s\n                actions implied by these issues. The consistent description\n                of these implied actions is examined in the, family, if present.', 'ALC', 'alc_del'),
('57.11860056509876', '\n\n                Procedures for performing tests are expected to provide\n                instructions for using test programs and test suites,\n                including the test environment, test conditions, test data\n                parameters and values. The test procedures should also show\n                how the test results are derived from the test\n                inputs.\n\n                Ordering dependencies are relevant when the successful\n                execution of a particular test depends upon the existence of\n                a particular state. For example, this might require that\n                test A be executed immediately before test B, since the\n                state resulting from the successful execution of test A is a\n                prerequisite for the successful execution of test B. Thus,\n                failure of test B could be related to a problem with the\n                ordering dependencies. In the above example, test B could\n                fail because test C (rather than test A) was executed\n                immediately before it, or the failure of test B could be\n                related to a failure of test A.\n            ', 'ATE', 'ate_fun'),
('573.9565270032901', 'There are two distinct aspects of testing associated with\n                this family:, ATE, If the test configurations used during evaluation of the\n                dependent component included use of the base component as a\n                ``platform\'\' and the test analysis sufficiently demonstrates\n                that the TSF behaves in accordance with the SFRs, the\n                developer need perform no further testing of the composed\n                TOE functionality. However, if the base component was not\n                used in the testing of the dependent component, or the\n                configuration of either component varied, then the developer\n                is to perform testing of the composed TOE.  This may take\n                the form of repeating the dependent component developer\n                testing of the dependent component, provided this adequately\n                demonstrates the composed TOE TSF behaves in accordance with\n                the SFRs.\n\n                The developer is to provide evidence of testing the base\n                component interfaces used in the composition. The operation\n                of base component TSFIs would have been tested as part of\n                the, ACO_COR, activities during\n                evaluation of the base component. Therefore, provided the\n                appropriate interfaces were included within the test sample\n                of the base component evaluation and it was determined in, ACO_CTT.1.1E, that the base component is\n                operating in accordance with the base component evaluated\n                configuration, with all security functionality required by\n                the dependent component included in the TSF, the evaluator\n                action, ATE, may be met\n                through reuse of the base component, ACO_REL, verdicts.\n\n                If this is not the case, the base component interfaces used\n                relevant to the composition that are affected by any\n                variations to the evaluated configuration and any additional\n                security functionally will be tested to ensure they\n                demonstrate the expected behaviour. The expected behaviour\n                to be tested is that described in the reliance information\n                (, evidence).', 'ACO', 'aco_ctt'),
('746.3697569135476', 'The, ACO_REL, family considers the\n                interactions between the components where the dependent\n                component relies upon a service from the base component to\n                support the operation of security functionality of the\n                dependent component. The interfaces into these services of\n                the base component may not have been considered during\n                evaluation of the base component because the service in the\n                base component was not considered security-relevant in the\n                component evaluation, either because of the inherent purpose\n                of the service (e.g., adjust type font) or because\n                associated CC SFRs are not being claimed in the base\n                component\'s ST (e.g. the login interface when no, FIA, SFRs are claimed). These interfaces\n                into the base component are often viewed as functional\n                interfaces in the evaluation of the base component, and are\n                in addition to the security interfaces (TSFI) considered in\n                the functional specification.\n\n                In summary, the TSFIs described in the functional\n                specification only include the calls made into a TSF by\n                external entities and responses to those calls. Calls made\n                by a TSF, which were not explicitly considered during\n                evaluation of the components, are described by the reliance\n                information provided to satisfy, ACO_REL, .', 'ACO', 'aco_rel'),
('775.3846708506624', 'The TOE design describes the internal components\n                (e.g. subsystems) and, perhaps, modules of the TSF, together\n                with a description of the interfaces among these components and\n                modules. Evidence of testing of this TOE design must show that\n                the internal interfaces have been exercised and seen to behave\n                as described.  This may be achieved through testing via the\n                external interfaces of the TSF, or by testing of the TOE\n                subsystem or module interfaces in isolation, perhaps employing a\n                test harness. In cases where some aspects of an internal\n                interface cannot be tested via the external interfaces, there\n                should either be justification that these aspects need not be\n                tested, or the internal interface needs to be tested\n                directly. In the latter case the TOE design needs to be\n                sufficiently detailed in order to facilitate direct\n                testing.\n\n                In cases where the description of the TSF\'s architectural\n                soundness (in, ADV_ARC, ) cites\n                specific mechanisms, the tests performed by the developer\n                must show that the mechanisms have been exercised and seen\n                to behave as described.\n\n                At the highest component of this family, the testing is\n                performed not only against the TOE design, but also against\n                the implementation representation.', 'ATE', 'ate_dpt'),
('802.2242813285385', 'There may be different user roles or groups that are\n                recognised by the TOE and that can interact with the\n                TSF. These user roles and groups should be taken into\n                consideration by the operational user guidance. They may be\n                roughly grouped into administrators and non-administrative\n                users, or more specifically grouped into persons responsible\n                for receiving, accepting, installing and maintaining the\n                TOE, application programmers, revisors, auditors,\n                daily-management, end-users. Each role can encompass an\n                extensive set of capabilities, or can be a single\n                one.\n\n                The requirement, AGD_OPE.1.1C, encompasses the aspect that any warnings to the users during\n                operation of a TOE with regard to the security problem\n                definition and the security objectives for the operational\n                environment described in the PP/ST are appropriately covered\n                in the user guidance.\n\n                The concept of secure values, as employed in, AGD_OPE.1.3C, , has relevance where a user\n                has control over security parameters. Guidance needs to be\n                provided on secure and insecure settings for such\n                parameters., AGD_OPE.1.4C, requires that the\n                user guidance describes the appropriate reactions to all\n                security-relevant events. Although many security-relevant\n                events are the result of performing functions, this need not\n                always be the case (e.g. the audit log fills up, an\n                intrusion is detected).  Furthermore, a security-relevant\n                event may happen as a result of a specific chain of\n                functions or, conversely, several security-relevant events\n                may be triggered by one function., AGD_OPE.1.7C, requires that the\n                user guidance is clear and reasonable. Misleading or\n                unreasonable guidance may result in a user of the TOE\n                believing that the TOE is secure when it is not.\n\n                An example of misleading guidance would be the description\n                of a single guidance instruction that could be parsed in\n                more than one way, one of which may result in an insecure\n                state.\n\n                An example of unreasonable guidance would be a\n                recommendation to follow a procedure that is so complicated\n                that it cannot reasonably be expected that users will follow\n                this guidance.', 'AGD', 'agd_ope'),
('879.8125394341855', 'While, ALC_CMS, mandates a list of\n                configuration items and that each item on this list be under\n                CM,, ALC_CMC, leaves the contents of\n                the configuration list to the discretion of the\n                developer., ALC_CMS, narrows this\n                discretion by identifying items that must be included in the\n                configuration list, and hence come under the CM requirements\n                of, ALC_CMC, .', 'ALC', 'alc_cms'),
('906.8080300061832', 'While it is desired that CM be applied from the early design\n                stages and continue into the future, this family requires\n                that CM be in place and in use prior to the end of the\n                evaluation.\n\n                In the case where the TOE is a subset of a product, the\n                requirements of this family apply only to the TOE\n                configuration items, not to the product as a whole.\n\n                For developers that have separate CM systems for different\n                life-cycle phases (for example development, production\n                and/or the final product), it is required to document all of\n                them. For evaluation purposes, the separate CM systems\n                should be regarded as parts of an overall CM system which is\n                addressed in the criteria.\n\n                Similarly, if parts of the TOE are produced by different\n                developers or at different sites, the CM systems being in\n                use at the different places should be regarded as parts of\n                an overall CM system which is addressed in the criteria.  In\n                this situation, integration aspects have also to be taken\n                into account.\n\n                Several elements of this family refer to configuration\n                items. These elements identify CM requirements to be imposed\n                on all items identified in the configuration list, but leave\n                the contents of the list to the discretion of the\n                developer., ALC_CMS, can be used to\n                narrow this discretion by identifying specific items that\n                must be included in the configuration list, and hence\n                covered by CM., ALC_CMC.2.3C, introduces a\n                requirement that the CM system uniquely identify all\n                configuration items. This also requires that modifications\n                to configuration items result in a new, unique identifier\n                being assigned to the configuration item., ALC_CMC.3.8C, introduces the\n                requirement that the evidence shall demonstrate that the CM\n                system operates in accordance with the CM plan. Examples of\n                such evidence might be documentation such as screen\n                snapshots or audit trail output from the CM system, or a\n                detailed demonstration of the CM system by the\n                developer. The evaluator is responsible for determining that\n                this evidence is sufficient to show that the CM system\n                operates in accordance with the CM plan., ALC_CMC.4.5C, introduces a\n                requirement that the CM system provide an automated means to\n                support the production of the TOE. This requires that the CM\n                system provide an automated means to assist in determining\n                that the correct configuration items are used in generating\n                the TOE., ALC_CMC.5.10C, introduces a\n                requirement that the CM system provide an automated means to\n                ascertain the changes between the TOE and its preceding\n                version. If no previous version of the TOE exists, the\n                developer still needs to provide an automated means to\n                ascertain the changes between the TOE and a future version\n                of the TOE.', 'ALC', 'alc_cmc');
INSERT INTO `afapplicationnotes` (`id`, `testo`, `ida`, `idf`) VALUES
('909.9671912605351', 'The goal of design documentation is to provide sufficient\n                information to determine the TSF boundary, and to describe\n\n                how\n                the TSF implements the Security\n                Functional Requirements. The amount and structure of the\n                design documentation will depend on the complexity of the\n                TOE and the number of SFRs; in general, a very complex TOE\n                with a large number of SFRs will require more design\n                documentation than a very simple TOE implementing only a few\n                SFRs. Very complex TOEs will benefit (in terms of the\n                assurance provided) from the production of differing levels\n                of decomposition in describing the design, while very simple\n                TOEs do not require both high-level and low-level\n                descriptions of its implementation.\n\n                This family uses two levels of decomposition: the\n\n                subsystem\n                and the\n                module\n                .\n                A module is the most specific description of functionality:\n                it is a description of the implementation. A developer\n                should be able to implement the part of the TOE described by\n                the module with no further design decisions. A subsystem is\n                a description of the design of the TOE; it helps to provide\n                a high-level description of what a portion of the TOE is\n                doing and how. As such, a subsystem may be further divided\n                into lower-level subsystems, or into modules.  Very complex\n                TOEs might require several levels of subsystems in order to\n                adequately convey a useful description of how the TOE works.\n                Very simple TOEs, in contrast, might not require a subsystem\n                level of description; the module might clearly describe how\n                the TOE works.\n\n                The general approach adopted for design documentation is\n                that, as the level of assurance increases, the emphasis of\n                description shifts from the general (subsystem level) to\n                more (module level) detail.  In cases where a module-level\n                of abstraction is appropriate because the TOE is simple\n                enough to be described at the module level, yet the level of\n                assurance calls for a subsystem level of description, the\n                module-level description alone will suffice. For complex\n                TOEs, however, this is not the case: an enormous amount of\n                (module-level) detail would be incomprehensible without an\n                accompanying subsystem level of description.\n\n                This approach follows the general paradigm that providing\n                additional detail about the implementation of the TSF will\n                result in greater assurance that the SFRs are implemented\n                correctly, and provide information that can be used to\n                demonstrate this in testing (, ATE, ).\n\n                In the requirements for this family, the term\n\n                interface\n                is used as the means of\n                communication (between two subsystems or modules). It\n                describes how the communication is invoked; this is similar\n                to the details of TSFI (see, ADV_FSP, ).  The term\n                interaction\n                is\n                used to identify the purpose for communication; it\n                identifies why two subsystems or modules are\n                communicating., ', 'ADV', 'adv_tds'),
('952.3513058790038', '\n\n                Source code or hardware diagrams and/or IC hardware design\n                language code or layout data that are used to build the\n                actual hardware are examples of parts of an implementation\n                representation. It is important to note that while the\n                implementation representation must be made available to the\n                evaluator, this does not imply that the evaluator needs to\n                possess that representation. For instance, the developer may\n                require that the evaluator review the implementation\n                representation at a site of the developer\'s choosing.\n\n                The entire implementation representation is made available\n                to ensure that analysis activities are not curtailed due to\n                lack of information. This does not, however, imply that all\n                of the representation is examined when the analysis\n                activities are being performed. This is likely impractical\n                in almost all cases, in addition to the fact that it most\n                likely will not result in a higher-assurance TOE\n                vs. targeted sampling of the implementation\n                representation. The implementation representation is made\n                available to allow analysis of other TOE design\n                decompositions (e.g., functional specification, TOE design),\n                and to gain confidence that the security functionality\n                described at a higher level in the design actually appear to\n                be implemented in the TOE. Conventions in some forms of the\n                implementation representation may make it difficult or\n                impossible to determine from just the implementation\n                representation itself what the actual result of the\n                compilation or run-time interpretation will be. For example,\n                compiler directives for C language compilers will cause the\n                compiler to exclude or include entire portions of the\n                code. For this reason, it is important that such ``extra\'\'\n                information or related tools (scripts, compilers, etc.)  be\n                provided so that the implementation representation can be\n                accurately determined.\n\n                The purpose of the mapping between the implementation\n                representation and the TOE design description is to aid the\n                evaluator\'s analysis. The internal workings of the TOE may\n                be better understood when the TOE design is analysed with\n                corresponding portions of the implementation representation.\n                The mapping serves as an index into the implementation\n                representation. At the lower component, only a subset of the\n                implementation representation is mapped to the TOE design\n                description. Because of the uncertainty of which portions of\n                the implementation representation will need such a mapping,\n                the developer may choose either to map the entire\n                implementation representation beforehand, or to wait to see\n                which portions of the implementation representation the\n                evaluator requires to be mapped.\n\n                The implementation representation is manipulated by the\n                developer in a form that is suitable for transformation to\n                the actual implementation. For instance, the developer may\n                work with files containing source code, which is eventually\n                compiled to become part of the TSF. The developer makes\n                available the implementation representation in the form used\n                by the developer, so that the evaluator may use automated\n                techniques in the analysis. This also increases the\n                confidence that the implementation representation examined\n                is actually the one used in the production of the TSF (as\n                opposed to the case where it is supplied in an alternate\n                presentation format, such as a word processor document). It\n                should be noted that other forms of the implementation\n                representation may also be used by the developer; these\n                forms are supplied as well. The overall goal is to supply\n                the evaluator with the information that will maximise the\n                effectiveness of the evaluator\'s analysis efforts.\n\n                Some forms of the implementation representation may require\n                additional information because they introduce significant\n                barriers to understanding and analysis. Examples include\n                ``shrouded\'\' source code or source code that has been\n                obfuscated in other ways such that it prevents understanding\n                and/or analysis. These forms of implementation\n                representation typically result from the TOE developer\n                taking a version of the implementation representation and\n                running a shrouding or obfuscation program on it. While the\n                shrouded representation is what is compiled and may be\n                closer to the implementation (in terms of structure) than\n                the original, un-shrouded representation, supplying such\n                obfuscated code may cause significantly more time to be\n                spent in analysis tasks involving the representation. When\n                such forms of representation are created, the components\n                require details on the shrouding tools/algorithms used so\n                that the un-shrouded representation can be supplied, and the\n                additional information can be used to gain confidence that\n                the shrouding process does not compromise any security\n                functionality.\n            ', 'ADV', 'adv_imp');

-- --------------------------------------------------------

--
-- Table structure for table `aflevellingcriteria`
--

CREATE TABLE `aflevellingcriteria` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `aflevellingcriteria`
--

INSERT INTO `aflevellingcriteria` (`id`, `testo`, `ida`, `idf`) VALUES
('1063.852592133336', '\n\n                The components in this family are levelled on the amount of\n                implementation that is mapped to the TOE design\n                description.\n            ', 'ADV', 'adv_imp'),
('1142.1432962957572', '\n\n                This family contains only one component.\n            ', 'AGD', 'agd_pre'),
('115.93711829881109', '\n\n                There is only a single component in this family.\n            ', 'ACO', 'aco_cor'),
('1171.8229242726109', '\n\n                Levelling is based upon the amount of developer test\n                documentation and test support and the amount of evaluator\n                testing.\n            ', 'ATE', 'ate_ind'),
('1251.6083679301455', '\n\n                The components in this family are levelled on whether they\n                prescribe only security objectives for the operational\n                environment, or also security objectives for the TOE.\n            ', 'APE', 'ape_obj'),
('1264.5876722294986', '\n\n                This family contains only one component.\n            ', 'AGD', 'agd_ope'),
('1268.1326726605103', '\n\n                This family contains only one component.\n            ', 'ADV', 'adv_arc'),
('163.93200451580725', '\n\n                The components in this family are levelled on the basis of\n                increasing scrutiny of vulnerability information from the\n                public domain and independent vulnerability analysis.\n            ', 'ACO', 'aco_vul'),
('187.97345171645273', '\n\n                The components in this family are levelled on whether they\n                are stated as is, or whether the SFRs are derived from\n                security objectives for the TOE.\n            ', 'APE', 'ape_req'),
('199.89760897464333', '\n\n                The components in this family are levelled on the basis of\n                specification.\n            ', 'ATE', 'ate_cov'),
('257.7855492706118', '\n\n                The components in this family are levelled on the basis of\n                increasing requirements on the description and scope of the\n                implementation standards and the documentation of\n                implementation-dependent options.\n            ', 'ALC', 'alc_tat'),
('400.8187077714134', '\n\n                The components in this family are levelled on the basis of\n                the CM system capabilities, the scope of the CM\n                documentation and the evidence provided by the\n                developer.\n            ', 'ALC', 'alc_cmc'),
('431.9076808829863', '\n\n                This family contains two components, the higher requiring\n                that ordering dependencies are analysed.\n            ', 'ATE', 'ate_fun'),
('452.43204891999494', '\n\n                Levelling is based on an increasing rigour of vulnerability\n                analysis by the evaluator and increased levels of attack\n                potential required by an attacker to identify and exploit\n                the potential vulnerabilities.\n            ', 'AVA', 'ava_van'),
('504.83857702244956', '\n\n                The components in this family are levelled on whether they\n                are stated as is.\n            ', 'ASE', 'ase_req'),
('508.8763096436733', '\n\n                The components in this family are levelled on the basis of\n                the amount of information that is required to be presented\n                with respect to the TSF, and on the degree of formalism\n                required of the design description.\n            ', 'ADV', 'adv_tds'),
('540.6294984017558', '\n\n                The components are levelled on the basis of increasing\n                amounts of detail about the interfaces provided, and how\n                they are implemented.\n            ', 'ACO', 'aco_dev'),
('594.4104605799865', '\n\n                The components in this family are levelled on the basis of\n                whether justification of the sufficiency of the security\n                measures is required.\n            ', 'ALC', 'alc_dvs'),
('610.4762852430594', '\n\n                The components in this family are levelled on the basis of\n                increasing requirements for measurability of the life-cycle\n                model, and for compliance with that model.\n            ', 'ALC', 'alc_lcd'),
('7.059915523876164', '\n\n                The components in this family are levelled on whether they\n                prescribe only security objectives for the operational\n                environment, or also security objectives for the TOE.\n            ', 'ASE', 'ase_obj'),
('756.8786160428949', '\n\n                The components in this family are levelled on the degree of\n                detail required of the description of the TSFIs, and the degree\n                of formalism required of the description of the TSFIs.\n            ', 'ADV', 'adv_fsp'),
('782.4607772326254', 'The components in this family are levelled on the basis of\n                the amount of structure and minimisation of complexity\n                required., ADV_INT.1, places\n                requirements for well-structured internals on only selected\n                parts of the TSF. This component is not included in an EAL\n                because this component is viewed for use in special\n                circumstances (e.g., the sponsor has a specific concern\n                regarding a cryptographic module, which is isolated from the\n                rest of the TSF) and would not be widely applicable.\n\n                At the next level, the requirements for well-structured\n                internals are placed on the entire TSF. Finally,\n                minimisation of complexity is introduced in the highest\n                component.', 'ADV', 'adv_int'),
('801.7636508325921', '\n\n                The components in this family are levelled on the basis of\n                the increasing extent in scope of the flaw remediation\n                procedures and the rigour of the flaw remediation\n                policies.\n            ', 'ALC', 'alc_flr'),
('818.9779445705017', '\n\n                The components in this family are levelled on the basis of\n                increasing rigour of interface testing and increasing rigour\n                of the analysis of the sufficiency of the tests to\n                demonstrate that the composed TSF operates in accordance\n                with the reliance information and the composed TOE\n                SFRs.\n            ', 'ACO', 'aco_ctt'),
('849.5818265374888', 'The components in this family are levelled on the basis of\n                increasing detail provided in the TSF representations, from\n                the TOE design to the implementation representation.  This\n                levelling reflects the TSF representations presented in the, ADV, class.', 'ATE', 'ate_dpt'),
('878.0499971929555', '\n\n                This family contains only one component.\n            ', 'ADV', 'adv_spm'),
('905.7526967669845', 'This family contains only one component. An increasing level\n                of protection is established by requiring commensurability\n                of the delivery procedures with the assumed attack potential\n                in the family, AVA_VAN, .', 'ALC', 'alc_del'),
('93.47516951325098', '\n\n                The components in this family are levelled on the basis of\n                which of the following are required to be included as\n                configuration items: the TOE and the evaluation evidence\n                required by the SARs; the parts of the TOE; the\n                implementation representation; security flaws; and\n                development tools and related information.\n            ', 'ALC', 'alc_cms'),
('960.8000340946478', '\n\n                The components in this family are levelled on whether the\n                TOE summary specification only needs to describe how the TOE\n                meets the SFRs, or whether the TOE summary specification\n                also needs to describe how the TOE protects itself against\n                logical tampering and bypass. This additional description\n                may be used in special circumstances where there might be a\n                specific concern regarding the TOE security architecture.\n            ', 'ASE', 'ase_tss'),
('999.1711362255078', '\n\n                The components in this family are levelled according to the\n                amount of detail provided in the description of the reliance\n                by the dependent component upon the base component.\n            ', 'ACO', 'aco_rel');

-- --------------------------------------------------------

--
-- Table structure for table `afobjectives`
--

CREATE TABLE `afobjectives` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `afobjectives`
--

INSERT INTO `afobjectives` (`id`, `testo`, `ida`, `idf`) VALUES
('1001.7147515644224', '\n\n                The objective of this family is to describe the TOE in a narrative way.\n                The objective of this sub-activity is to determine whether the PP-Module is correctly identified, and whether the PP-Module reference and TOE overview are consistent with each other.', 'ACE', 'ace_int'),
('1012.5288732524997', '\n\n                Extended security requirements are requirements that are not\n                based on components from CC Part 2 or CC Part 3, but are\n                based on extended components: components defined by the PP\n                author.\n\n                Evaluation of the definition of extended components is\n                necessary to determine that they are clear and unambiguous,\n                and that they are necessary, i.e. they may not be clearly\n                expressed using existing CC Part 2 or CC Part 3\n                components.\n            ', 'APE', 'ape_ecd'),
('1028.4928480918811', '\n\n                The concern of this family is the secure transfer of the\n                finished TOE from the development environment into the\n                responsibility of the user.\n\n                The requirements for delivery call for system control and\n                distribution facilities and procedures that detail the\n                measures necessary to provide assurance that the security of\n                the TOE is maintained during distribution of the TOE to the\n                user. For a valid distribution of the TOE, the procedures\n                used for the distribution of the TOE address the objectives\n                identified in the PP/ST relating to the security of the TOE\n                during delivery.\n            ', 'ALC', 'alc_del'),
('1056.6675741113388', 'The objectives of this family are built upon the assurances\n                achieved in the, ATE_FUN, ,, ATE_COV, , and, ATE_DPT, families by verifying the developer testing and performing\n                additional tests by the evaluator.', 'ATE', 'ate_ind'),
('1126.8553410602988', '\n\n                Development security is concerned with physical, procedural,\n                personnel, and other security measures that may be used in\n                the development environment to protect the TOE and its\n                parts. It includes the physical security of the development\n                location and any procedures used to select development\n                staff.\n            ', 'ALC', 'alc_dvs'),
('1180.42090832052', '\n\n                The SFRs form a clear, unambiguous and well-defined\n                description of the expected security behaviour of the\n                TOE. The SARs form a clear, unambiguous and canonical\n                description of the expected activities that will be\n                undertaken to gain assurance in the TOE.\n\n                Evaluation of the security requirements is required to\n                ensure that they are clear, unambiguous and\n                well-defined.\n            ', 'ASE', 'ase_req'),
('1218.8887935900004', 'The security objectives are a concise statement of the\n                intended response to the security problem defined through\n                the, APE_SPD, family.\n\n                Evaluation of the security objectives is required to\n                demonstrate that the security objectives adequately and\n                completely address the security problem definition and that\n                the division of this problem between the TOE and its\n                operational environment is clearly defined.', 'APE', 'ape_obj'),
('1228.3316097840402', '\n\n                The objective of this family is to determine the validity of\n                the conformance claim. In addition, this family specifies\n                how STs are to claim conformance with the PP.\n            ', 'ASE', 'ase_ccl'),
('1271.1842575182104', '\n\n                This family sets out requirements for a specification of the\n                base component in increasing levels of detail. Such\n                information is required to gain confidence that the\n                appropriate security functionality is provided to support\n                the requirements of the dependent component (as identified\n                in the reliance information).\n            ', 'ACO', 'aco_dev'),
('1271.284683025613', '\n\n                It is the objective of this family to provide additional\n                assurance from the development of a formal\n                security\n                policy model\n                of the TSF, and establishing a\n                correspondence between the functional specification and this\n                security policy model. Preserving internal consistency the\n                security policy model is expected to formally establish the\n                security principles from its characteristics by means of a\n                mathematical proof.\n            ', 'ADV', 'adv_spm'),
('144.13193353624328', '\n\n                Preparative procedures are useful for ensuring that the TOE\n                has been received and installed in a secure manner as\n                intended by the developer. The requirements for preparation\n                call for a secure transition from the delivered TOE to its\n                initial operational environment. This includes investigating\n                whether the TOE can be configured or installed in a manner\n                that is insecure but that the user of the TOE would\n                reasonably believe to be secure.\n            ', 'AGD', 'agd_pre'),
('145.66107243895982', 'This family levies requirements upon the functional specification,\n                which describes the TSF interfaces (TSFIs).\n                The TSFI consists of all means by which external entities (or\n                subjects in the TOE but outside of the TSF) supply data to the TSF,\n                receive data from the TSF and invoke services from the TSF.\n                It does\n                not\n                describe how the TSF processes those service\n                requests, nor does it describe the communication when the TSF invokes services\n                from its operational environment; this information is addressed by the, ADV_TDS, and, ACO_REL, families, respectively.\n\n                This family provides assurance directly by allowing the\n                evaluator to understand how the TSF meets the claimed SFRs. It\n                also provides assurance indirectly, as input to other assurance\n                families and classes:, ', 'ADV', 'adv_fsp'),
('164.2036113583723', '\n\n                This family calls for an analysis of vulnerability\n                information available in the public domain and of\n                vulnerabilities that may be introduced as a result of the\n                composition.\n            ', 'ACO', 'aco_vul'),
('211.2332352358903', 'The function of the, ADV_IMP, family\n                is for the developer to make available the implementation\n                representation (and, at higher levels, the implementation\n                itself) of the TOE in a form that can be analysed by the\n                evaluator. The implementation representation is used in\n                analysis activities for other families (analysing the TOE\n                design, for instance) to demonstrate that the TOE conforms\n                its design and to provide a basis for analysis in other\n                areas of the evaluation (e.g., the search for\n                vulnerabilities). The implementation representation is\n                expected to be in a form that captures the detailed internal\n                workings of the TSF. This may be software source code,\n                firmware source code, hardware diagrams and/or IC hardware\n                design language code or layout data.', 'ADV', 'adv_imp'),
('283.519282855031', '\n\n                The objective of this family is to determine the well-formedness and the consistency of the PP-Configuration.', 'ACE', 'ace_cco'),
('30.696163403957048', '\n\n                The objective of this family is to determine the validity of the PP-Module.', 'ACE', 'ace_mco'),
('311.3114421082409', 'Configuration management (CM) is one means for increasing\n                assurance that the TOE meets the SFRs. CM establishes this\n                by requiring discipline and control in the processes of\n                refinement and modification of the TOE and the related\n                information. CM systems are put in place to ensure the\n                integrity of the portions of the TOE that they control, by\n                providing a method of tracking any changes, and by ensuring\n                that all changes are authorised.\n\n                The objective of this family is to require the developer\'s\n                CM system to have certain capabilities. These are meant to\n                reduce the likelihood that accidental or unauthorised\n                modifications of the configuration items will occur. The CM\n                system should ensure the integrity of the TOE from the early\n                design stages through all subsequent maintenance\n                efforts.\n\n                The objective of introducing automated CM tools is to\n                increase the effectiveness of the CM system. While both\n                automated and manual CM systems can be bypassed, ignored, or\n                proven insufficient to prevent unauthorised modification,\n                automated systems are less susceptible to human error or\n                negligence.\n\n                The objectives of this family include the following:, ', 'ALC', 'alc_cmc'),
('329.59213092737264', '\n\n                The SFRs form a clear, unambiguous and well-defined description of the expected security behaviour of the TOE.\n                Evaluation of the security functional requirements is required to ensure that they are clear, unambiguous and well-defined.', 'ACE', 'ace_req'),
('360.67194529889787', '\n\n                Tools and techniques is an aspect of selecting tools that\n                are used to develop, analyse and implement the TOE. It\n                includes requirements to prevent ill-defined, inconsistent\n                or incorrect development tools from being used to develop\n                the TOE. This includes, but is not limited to, programming\n                languages, documentation, implementation standards, and\n                other parts of the TOE such as supporting runtime\n                libraries.\n            ', 'ALC', 'alc_tat'),
('40.3028617059487', '\n\n                This family addresses the assessment of the internal\n                structure of the TSF. A TSF whose internals are\n                well-structured is easier to implement and less likely to\n                contain flaws that could lead to vulnerabilities; it is also\n                easier to maintain without the introduction of flaws.\n            ', 'ADV', 'adv_int'),
('425.07986680236877', '\n\n                The objective of this family is to determine the validity of the conformance claim. Unlike standard Protection Profiles, a PP-Module cannot claim conformance to another PP or PP-Module, nor to CC part 3 or any SAR package.', 'ACE', 'ace_ccl'),
('425.8373981872279', '\n\n                This family addresses the requirement to demonstrate that\n                the base component can provide an appropriate level of\n                assurance for use in composition.\n            ', 'ACO', 'aco_cor'),
('425.8653565049346', '\n\n                This family establishes that the TSF has been tested against\n                its functional specification. This is achieved through an\n                examination of developer evidence of correspondence.\n            ', 'ATE', 'ate_cov'),
('442.3124501760734', '\n\n                The SFRs form a clear, unambiguous and well-defined\n                description of the expected security behaviour of the\n                TOE. The SARs form a clear, unambiguous and well-defined\n                description of the expected activities that will be\n                undertaken to gain assurance in the TOE.\n\n                Evaluation of the security requirements is required to\n                ensure that they are clear, unambiguous and\n                well-defined.\n            ', 'APE', 'ape_req'),
('444.5208654130852', '\n\n                The objective of this family is to describe the TOE in a\n                narrative way.\n\n                Evaluation of the PP introduction is required to demonstrate\n                that the PP is correctly identified, and that the PP\n                reference and TOE overview are consistent with each\n                other.\n            ', 'APE', 'ape_int'),
('454.9325173259335', 'The objective of this family is to identify items to be\n                included as configuration items and hence placed under the\n                CM requirements of, ALC_CMC, .\n                Applying configuration management to these additional items\n                provides additional assurance that the integrity of TOE is\n                maintained.', 'ALC', 'alc_cms'),
('465.5371771252039', '\n\n                Extended security requirements are requirements that are not\n                based on components from CC Part 2 or CC Part 3, but are\n                based on extended components: components defined by the ST\n                author.\n\n                Evaluation of the definition of extended components is\n                necessary to determine that they are clear and unambiguous,\n                and that they are necessary, i.e. they may not be clearly\n                expressed using existing CC Part 2 or CC Part 3\n                components.\n            ', 'ASE', 'ase_ecd'),
('534.8003047866318', '\n\n                Extended security functional requirements are requirements that are not based on components from CC Part 2, but are based on extended components: components defined by the PP-Module author.\n                Evaluation of the definition of extended functional components is necessary to determine that they are clear and unambiguous, and that they are necessary, i.e. they may not be clearly expressed using existing CC Part 2 components.', 'ACE', 'ace_ecd'),
('613.1423423767045', '\n\n                This family requires that testing of composed TOE and\n                testing of the base component, as used in the composed TOE,\n                is performed.\n            ', 'ACO', 'aco_ctt'),
('615.4690844305106', '\n\n                This part of the ST defines the security problem to be\n                addressed by the TOE and the operational environment of the\n                TOE.\n\n                Evaluation of the security problem definition is required to\n                demonstrate that the security problem intended to be\n                addressed by the TOE and its operational environment, is\n                clearly defined.\n            ', 'ASE', 'ase_spd'),
('657.0590665952368', '\n\n                The objective of this family is for the developer to provide\n                a description of the security architecture of the TSF. This\n                will allow analysis of the information that, when coupled\n                with the other evidence presented for the TSF, will confirm\n                the TSF achieves the desired properties. The security\n                architecture descriptions supports the implicit claim that\n                security analysis of the TOE can be achieved by examining\n                the TSF; without a sound architecture, the entire TOE\n                functionality would have to be examined.\n            ', 'ADV', 'adv_arc'),
('659.266517509466', '\n\n                The objective of this family is to describe the TOE in a\n                narrative way on three levels of abstraction: TOE reference,\n                TOE overview and TOE description.\n\n                Evaluation of the ST introduction is required to demonstrate\n                that the ST and the TOE are correctly identified, that the\n                TOE is correctly described at three levels of abstraction\n                and that these three descriptions are consistent with each\n                other.\n            ', 'ASE', 'ase_int'),
('681.194889872022', '\n\n                The components in this family deal with the level of detail\n                to which the TSF is tested by the developer. Testing of the\n                TSF is based upon increasing depth of information derived\n                from additional design representations and descriptions (TOE\n                design, implementation representation, and security\n                architecture description).\n\n                The objective is to counter the risk of missing an error in\n                the development of the TOE.  Testing that exercises specific\n                internal interfaces can provide assurance not only that the\n                TSF exhibits the desired external security behaviour, but\n                also that this behaviour stems from correctly operating\n                internal functionality.\n            ', 'ATE', 'ate_dpt'),
('699.1691152058145', 'The TOE summary specification enables evaluators and\n                potential consumers to gain a general understanding of how\n                the TOE is implemented.\n\n                Evaluation of the TOE summary specification is necessary to\n                determine whether it is adequately described how the TOE:, and whether the TOE\n                summary specification is consistent with other narrative\n                descriptions of the TOE.', 'ASE', 'ase_tss'),
('714.8818313539397', '\n\n                This part of the PP defines the security problem to be\n                addressed by the TOE and the operational environment of the\n                TOE.\n\n                Evaluation of the security problem definition is required to\n                demonstrate that the security problem intended to be\n                addressed by the TOE and its operational environment, is\n                clearly defined.\n            ', 'APE', 'ape_spd'),
('774.0896710448696', '\n\n                Vulnerability analysis is an assessment to determine whether\n                potential vulnerabilities identified, during the evaluation\n                of the development and anticipated operation of the TOE or\n                by other methods (e.g. by flaw hypotheses or quantitative or\n                statistical analysis of the security behaviour of the\n                underlying security mechanisms), could allow attackers to\n                violate the SFRs.\n\n                Vulnerability analysis deals with the threats that an\n                attacker will be able to discover flaws that will allow\n                unauthorised access to data and functionality, allow the\n                ability to interfere with or alter the TSF, or interfere\n                with the authorised capabilities of other users.\n            ', 'AVA', 'ava_van'),
('82.94759899171537', '\n\n                The purpose of this family is to provide evidence that\n                describes the reliance that a dependent component has upon\n                the base component. This information is useful to persons\n                responsible for integrating the component with other\n                evaluated IT components to form the composed TOE, and for\n                providing insight into the security properties of the\n                resulting composition.\n\n                This provides a description of the interface between the\n                dependent and base components of the composed TOE that may\n                not have been analysed during evaluation of the individual\n                components, as the interfaces were not TSFIs of the\n                individual component TOEs.\n            ', 'ACO', 'aco_rel'),
('841.0828646117045', '\n\n                The objective of this family is to determine the validity of\n                the conformance claim. In addition, this family specifies\n                how STs and other PPs are to claim conformance with the\n                PP.\n            ', 'APE', 'ape_ccl'),
('846.5782553848117', '\n\n                Poorly controlled development and maintenance of the TOE can\n                result in a TOE that does not meet all of its\n                SFRs. Therefore, it is important that a model for the\n                development and maintenance of a TOE be established as early\n                as possible in the TOE\'s life-cycle.\n\n                Using a model for the development and maintenance of a TOE\n                does not guarantee that the TOE meets all of its SFRs. It is\n                possible that the model chosen will be insufficient or\n                inadequate and therefore no benefits in the quality of the\n                TOE can be observed. Using a life-cycle model that has been\n                approved by a group of experts (e.g. academic experts,\n                standards bodies) improves the chances that the development\n                and maintenance models will contribute to the TOE meeting\n                its SFRs. The use of a life-cycle model including some\n                quantitative valuation adds further assurance in the overall\n                quality of the TOE development process.\n            ', 'ALC', 'alc_lcd'),
('911.7375874210063', '\n\n                Flaw remediation requires that discovered security flaws be\n                tracked and corrected by the developer. Although future\n                compliance with flaw remediation procedures cannot be\n                determined at the time of the TOE evaluation, it is possible\n                to evaluate the policies and procedures that a developer has\n                in place to track and correct flaws, and to distribute the\n                flaw information and corrections.\n            ', 'ALC', 'alc_flr'),
('943.0182707108988', '\n\n                The design description of a TOE provides both context for a\n                description of the TSF, and a thorough description of the\n                TSF. As assurance needs increase, the level of detail\n                provided in the description also increases. As the size and\n                complexity of the TSF increase, multiple levels of\n                decomposition are appropriate. The design requirements are\n                intended to provide information (commensurate with the given\n                assurance level) so that a determination can be made that\n                the security functional requirements are realised.\n            ', 'ADV', 'adv_tds'),
('944.7866128343245', '\n\n                Operational user guidance refers to written material that is\n                intended to be used by all types of users of the TOE in its\n                evaluated configuration: end-users, persons responsible for\n                maintaining and administering the TOE in a correct manner\n                for maximum security, and by others (e.g. programmers) using\n                the TOE\'s external interfaces. Operational user guidance\n                describes the security functionality provided by the TSF,\n                provides instructions and guidelines (including warnings),\n                helps to understand the TSF and includes the\n                security-critical information, and the security-critical\n                actions required, for its secure use.  Misleading and\n                unreasonable guidance should be absent from the guidance\n                documentation, and secure procedures for all modes of\n                operation should be addressed.  Insecure states should be\n                easy to detect.\n\n                The operational user guidance provides a measure of\n                confidence that non-malicious users, administrators,\n                application providers and others exercising the external\n                interfaces of the TOE will understand the secure operation\n                of the TOE and will use it as intended. The evaluation of\n                the user guidance includes investigating whether the TOE can\n                be used in a manner that is insecure but that the user of\n                the TOE would reasonably believe to be secure. The objective\n                is to minimise the risk of human or other errors in\n                operation that may deactivate, disable, or fail to activate\n                security functionality, resulting in an undetected insecure\n                state.\n            ', 'AGD', 'agd_ope'),
('963.2586222895782', 'The security objectives are a concise statement of the\n                intended response to the security problem defined through\n                the, ASE_SPD, family.\n\n                Evaluation of the security objectives is required to\n                demonstrate that the security objectives adequately and\n                completely address the security problem definition, that the\n                division of this problem between the TOE and its operational\n                environment is clearly defined.', 'ASE', 'ase_obj'),
('971.0053643857194', 'Functional testing performed by the developer provides\n                assurance that the tests in the test documentation are\n                performed and documented correctly. The correspondence of\n                these tests to the design descriptions of the TSF is\n                achieved through the, ATE_COV, and, ATE_DPT, families.\n\n                This family contributes to providing assurance that the\n                likelihood of undiscovered flaws is relatively small.\n\n                The families, ATE_COV, ,, ATE_DPT, and, ATE_FUN, are used in combination to define the evidence\n                of testing to be supplied by a developer. Independent\n                functional testing by the evaluator is specified by, ATE_IND, .', 'ATE', 'ate_fun');

-- --------------------------------------------------------

--
-- Table structure for table `afoverview`
--

CREATE TABLE `afoverview` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `afoverview`
--

INSERT INTO `afoverview` (`id`, `testo`, `ida`, `idf`) VALUES
('1019.5484136117324', '\n\n                The security objectives are a concise statement of the\n                intended response to the security problem.\n            ', 'APE', 'ape_obj'),
('1120.342079277212', '\n\n                The SFRs form a clear, unambiguous and well-defined\n                description of the expected security behaviour of the\n                TOE. The SARs form a clear, unambiguous and well-defined\n                description of the expected activities that will be\n                undertaken to gain assurance in the TOE.\n            ', 'ASE', 'ase_req'),
('1122.808600277645', '\n\n                Delivery covers the procedures used to maintain security\n                during transfer of the TOE to the user, both on initial\n                delivery and as part of subsequent modification. It includes\n                special procedures or operations required to demonstrate the\n                authenticity of the delivered TOE. Such procedures and\n                measures are the basis for ensuring that the security\n                protection offered by the TOE is not compromised during\n                transfer. While compliance with the delivery requirements\n                cannot always be determined when a TOE is evaluated, it is\n                possible to evaluate the procedures that a developer has\n                developed to distribute the TOE to users.\n            ', 'ALC', 'alc_del'),
('1194.1124804773303', 'The family, ACO_CTT, details\n                requirements for testing to demonstrate that the composed\n                TOE operates as specified in the composed TOE SFRs and the\n                base component interfaces match the design descriptions as\n                provided in the development information (, ACO_DEV, ). Testing evidence is to be provided of all\n                SFRs specified in the composed TOE ST and to exercise all\n                base component interfaces used by the dependent component,\n                as identified in, ACO_REL, .', 'ACO', 'aco_ctt'),
('1196.259109180523', '\n\n                The design description provides a further-refined\n                description of the TSF from that presented in the functional\n                specification. The functional specification provides a\n                description of\n                what\n                the TSF does at its\n                interface; the design description provides more insight into\n                the TSF by describing\n                how\n                the TSF works in\n                order to perform the functions supporting the SFRs. At lower\n                assurance levels, complete details relating to all portions\n                of the TSF are not required. As the desired assurance\n                increases, more detail is made available so that analysis\n                can be performed that supports the assurance claims being\n                made.\n            ', 'ADV', 'adv_tds'),
('1217.5471727033528', '\n\n                The information presented in the functional specification\n                describes the interfaces through which the TSF services are\n                invoked. At the lower levels of assurance, there is an\n                effort to reduce the amount of information that must be\n                supplied by requiring only the most security-critical\n                information.\n            ', 'ADV', 'adv_fsp'),
('1245.0003071049669', '\n\n                Conformance claims describes how the Protection Profile\n                conforms to CC Part 2 and CC Part 3, to Protection Profiles\n                and to packages.\n            ', 'APE', 'ape_ccl'),
('1280.4048144289552', '\n\n                The PP introduction describes the TOE in a narrative\n                way.\n            ', 'APE', 'ape_int'),
('187.97157141533546', '\n\n                Requirements for operational user guidance help ensure that\n                all types of users are able to operate the TOE in a secure\n                manner (e.g. the usage constraints assumed by the PP or ST\n                must be clearly explained and illustrated). It should be\n                excluded that the TOE can be used in a manner that is\n                insecure but that the user of the TOE would reasonably\n                believe to be secure. Operational user guidance is the\n                primary vehicle available to the developer for providing the\n                TOE users with the necessary background and specific\n                information on how to correctly use the TOE\'s protection\n                functions.\n\n                Operational user guidance must do two things. First, it\n                needs to explain what the security functionality accessible\n                by the user does and how it is to be used, so that users are\n                able to consistently and effectively protect their\n                information.  Second, it needs to explain the user\'s role in\n                maintaining the TOE\'s security.\n            ', 'AGD', 'agd_ope'),
('191.3527463690475', '\n\n                Configuration management scope indicates the TOE items that\n                need to be controlled by the configuration management\n                system.\n            ', 'ALC', 'alc_cms'),
('218.88469307357917', '\n\n                The SFRs form a clear, unambiguous and well-defined\n                description of the expected security behaviour of the\n                TOE. The SARs form a clear, unambiguous and well-defined\n                description of the expected activities that will be\n                undertaken to gain assurance in the TOE.\n            ', 'APE', 'ape_req'),
('228.45226341336115', '\n\n                Tools and techniques addresses the need to define the\n                development tools being used to analyse and implement the\n                TOE. It includes requirements concerning the development\n                tools and implementation dependent options of those\n                tools.\n            ', 'ALC', 'alc_tat'),
('242.0325120986543', '\n\n                Extended components are defined wherever it is impossible to\n                clearly express requirements using only components from CC\n                Part 2 and/or CC Part 3.\n            ', 'ASE', 'ase_ecd'),
('250.16782517808286', '\n\n                A formal security model precisely describes important\n                aspects of security and their relationship to the behaviour\n                of the TSF.  Formalism helps to prove mathematically the\n                thoroughness of the security.\n            ', 'ADV', 'adv_spm'),
('306.71030922612726', '\n\n                Functional testing establishes that the tests performed by\n                the developer are performed and documented correctly.\n            ', 'ATE', 'ate_fun'),
('330.8534828083168', '\n\n                Extended security requirements are requirements that are not\n                based on components from CC Part 2 or CC Part 3, but are\n                based on extended components: components defined by the PP\n                author. This family is used to determine that these extended\n                components are defined similarly to the existing CC Part 2\n                or CC Part 3 components.\n\n                Evaluation of the definition of extended components is\n                necessary to determine that they are clear and unambiguous,\n                and that they are necessary, i.e. they may not be clearly\n                expressed using existing CC Part 2 or CC Part 3\n                components.\n            ', 'APE', 'ape_ecd'),
('331.8228537961003', '\n\n                Configuration management capabilities define the\n                characteristics of the configuration management\n                system.\n            ', 'ALC', 'alc_cmc'),
('362.98610172588604', '\n\n                Flaw remediation ensures that flaws discovered by the TOE\n                consumers will be tracked and corrected while the TOE is\n                supported by the developer. While future compliance with the\n                flaw remediation requirements cannot be determined when a\n                TOE is evaluated, it is possible to evaluate the procedures\n                and policies that a developer has in place to track and\n                repair flaws, and to distribute the repairs to\n                consumers.\n            ', 'ALC', 'alc_flr'),
('365.36584835018397', '\n\n                Depth deals with the level of detail to which the developer\n                tests the TSF. Testing is based upon increasing depth of\n                information derived from analysis of the TSF\n                representations.\n            ', 'ATE', 'ate_dpt'),
('391.82967110793186', '\n\n                Development security covers the physical, procedural,\n                personnel, and other security measures used in the\n                development environment. It includes physical security of\n                the development location(s) and controls on the selection\n                and hiring of development staff.\n            ', 'ALC', 'alc_dvs'),
('40.0520198866118', '\n\n                The information presented for the security architecture of\n                the TOE is related to the information contained in other\n                decomposition documentation (functional specification and\n                TOE design documentation) provided for the TSF, but presents\n                the design in a manner that supports architectural arguments\n                (e.g., the TSF cannot be compromised; the TSF provides\n                security domains consistent with its SFRs; the TSF cannot be\n                bypassed).\n            ', 'ADV', 'adv_arc'),
('427.84181184193756', 'The, ACO_COR, family is used to\n                determine whether or not the appropriate assurance measures\n                have been applied to the base component for successful\n                integration in the composed TOE. That is, the SARs claimed\n                by the base component are consistent with the SARs in the\n                assurance package for the composed TOE. (e.g. if the\n                assurance package for the composed TOE included, ACO_DEV.3, , a base component that was\n                evaluated against, ADV_FSP.2, would\n                not have had the appropriate assurance measures applied, as\n                insufficient design evidence would have been\n                examined.)\n\n                The, ACO_COR, family calls for\n                evidence that the appropriate assurance is provided, without\n                being specific about how this is achieved. If the\n                appropriate evidence is not available, then it may be\n                necessary to report an assessment of the residual risk to\n                assist consumers of the composed TOE\n                (e.g. accreditors). This report would need to identify the\n                change to the base component that may have an effect on the\n                assurance gained during the original evaluation, along with\n                any known effects.', 'ACO', 'aco_cor'),
('494.9760877584028', '\n\n                The security problem definition defines the problem\n                addressed by the TOE and the operational environment of the\n                TOE.\n            ', 'APE', 'ape_spd'),
('504.8824681096473', '\n\n                The ST introduction describes the TOE in a narrative way on\n                three levels of abstraction: TOE reference, TOE overview and\n                TOE description.\n            ', 'ASE', 'ase_int'),
('556.1891772848428', '\n\n                Life-cycle definition establishes that the engineering\n                practises used by a developer to produce the TOE include the\n                considerations and activities identified in the development\n                process and operational support requirements. Confidence in\n                the correspondence between the requirements and the TOE is\n                greater when quality control and the production of evidence\n                are done on a regular basis as an integral part of the\n                development process and operational support activities. It\n                is not the intent of this component to dictate any specific\n                development process.\n            ', 'ALC', 'alc_lcd'),
('602.6090554162301', 'The TOE Summary specification allows evaluators and\n                potential consumers of the TOE to gain a general\n                understanding of how the TOE:, ', 'ASE', 'ase_tss'),
('641.1261517966582', 'The vulnerability analysis in, ACO_VUL, includes determination of two different\n                aspects of resistance by the composed TOE, namely:, ', 'ACO', 'aco_vul'),
('646.7808930846312', '\n\n                Coverage deals with the completeness of the functional tests\n                performed by the developer on the TOE. It addresses the\n                extent to which the TSF is tested.\n            ', 'ATE', 'ate_cov'),
('686.2869330594166', '\n\n                Preparation requires that the delivered copy of the TOE is\n                accepted, configured and activated by the user to exhibit\n                the protection properties as needed during operation of the\n                TOE. The preparative procedures provide confidence that the\n                user will be aware of the TOE configuration parameters and\n                how they can affect the TSF.\n            ', 'AGD', 'agd_pre'),
('711.9275570592788', 'The, ACO_REL, family considers the\n                interactions between the components where the dependent\n                component relies upon a service from the base component to\n                support the operation of security functionality of the\n                dependent component. The interfaces into these services of\n                the base component may not have been considered during\n                evaluation of the base component because the service in the\n                base component was not considered security-relevant during\n                evaluation of the component, either because of the inherent\n                purpose of the service (e.g., adjust type font) or because\n                associated CC SFRs are not being claimed in the base\n                component\'s ST (e.g. the login interface when no, FIA, SFRs are claimed). These interfaces\n                into the base component are often viewed as functional\n                interfaces when evaluating the base component, and are in\n                addition to the security interfaces (TSFIs) considered in\n                the functional specification.', 'ACO', 'aco_rel'),
('741.6859484634439', '\n\n                The implementation representation of the TOE is made\n                available so that it can be analysed by the evaluator to\n                demonstrate that the TOE conforms its design and to provide\n                a basis for analysis in other areas of the evaluation (e.g.,\n                the search for vulnerabilities). The implementation\n                representation captures the detailed internal workings of\n                the TSF. This may be software source code, firmware source\n                code, hardware diagrams and/or chip specifications.\n            ', 'ADV', 'adv_imp'),
('75.50695715707252', 'Vulnerability analysis consists of the identification of\n                flaws potentially introduced in the different refinement\n                steps of the development (development vulnerabilities) or\n                through the application of the guidance in operation of the\n                TOE (operational vulnerabilities). It results in the\n                definition of penetration tests through the collection of\n                the necessary information concerning: (1) the completeness\n                of the TSF (does the TSF counter all the postulated\n                threats?), (2) the dependencies between all SFRs and (3)\n                whether any of the SFRs can be undermined through unexpected\n                behaviour of the TOE. These potential vulnerabilities are\n                assessed through penetration testing to determine whether\n                they could, in practise, be exploitable to compromise the\n                security of the TOE.\n\n                The characteristics of different levels of attack potential\n                are discussed in CEM, WHEN_TO_USE_AP, .', 'AVA', 'ava_van'),
('804.1539272727875', '\n\n                The internal structure of the TSF can aid or hamper\n                understandability of the implementation representation.\n                Source code that conforms to coding standards, that exhibit\n                a minimum of interactions, and that is written in modules\n                each with a single purpose, is much easier to understand\n                than poorly-structured code with unnecessary or\n                loosely-defined interactions.\n            ', 'ADV', 'adv_int'),
('814.8248979917016', '\n\n                Conformance claims describes how the Security Target\n                conforms to CC Part 2 and CC Part 3, to Protection Profiles\n                and to packages.\n            ', 'ASE', 'ase_ccl'),
('864.5127917874141', '\n\n                The security objectives are a concise statement of the\n                intended response to the security problem.\n            ', 'ASE', 'ase_obj'),
('956.0392186732646', '\n\n                Independent testing specifies the degree to which the\n                testing of the TSF must be performed by a party other than\n                the developer (e.g. a third party). This family adds value\n                by the introduction of tests that are not part of the\n                developer\'s tests.\n            ', 'ATE', 'ate_ind'),
('967.6357740509794', '\n\n                The security problem definition defines the problem\n                addressed by the TOE and the operational environment of the\n                TOE.\n            ', 'ASE', 'ase_spd'),
('971.9911952352694', ', ACO_DEV, provides details of the\n                base component interfaces and internals in increasing levels\n                of detail, mirroring the level of detail provided by, ACO_REL, . The application of these two\n                families will provide the specifications of security\n                services from each perspective of the TSF making the call\n                and the TSF servicing the call.\n\n                Having the two descriptions then allows a determination to\n                be made, as part of the, ACO_DEV, activities (, ACO_DEV, .*.2E actions),\n                that these two descriptions are consistent.', 'ACO', 'aco_dev');

-- --------------------------------------------------------

--
-- Table structure for table `batch_job_execution`
--

CREATE TABLE `batch_job_execution` (
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `VERSION` bigint(20) DEFAULT NULL,
  `JOB_INSTANCE_ID` bigint(20) NOT NULL,
  `CREATE_TIME` datetime NOT NULL,
  `START_TIME` datetime DEFAULT NULL,
  `END_TIME` datetime DEFAULT NULL,
  `STATUS` varchar(10) DEFAULT NULL,
  `EXIT_CODE` varchar(2500) DEFAULT NULL,
  `EXIT_MESSAGE` varchar(2500) DEFAULT NULL,
  `LAST_UPDATED` datetime DEFAULT NULL,
  `JOB_CONFIGURATION_LOCATION` varchar(2500) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_job_execution`
--

INSERT INTO `batch_job_execution` (`JOB_EXECUTION_ID`, `VERSION`, `JOB_INSTANCE_ID`, `CREATE_TIME`, `START_TIME`, `END_TIME`, `STATUS`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`, `JOB_CONFIGURATION_LOCATION`) VALUES
(0, 1, 0, '2020-01-26 18:03:45', '2020-01-26 18:03:46', NULL, 'STARTED', 'UNKNOWN', '', '2020-01-26 18:03:46', NULL),
(1, 2, 1, '2020-02-12 14:16:58', '2020-02-12 14:16:58', '2020-02-12 14:17:00', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:00', NULL),
(2, 2, 2, '2020-02-12 14:17:00', '2020-02-12 14:17:00', '2020-02-12 14:17:00', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:00', NULL),
(3, 2, 3, '2020-02-12 14:17:00', '2020-02-12 14:17:00', '2020-02-12 14:17:01', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:01', NULL),
(4, 2, 4, '2020-02-12 14:17:01', '2020-02-12 14:17:01', '2020-02-12 14:17:01', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:01', NULL),
(5, 2, 5, '2020-02-12 14:17:01', '2020-02-12 14:17:01', '2020-02-12 14:17:02', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:02', NULL),
(6, 2, 6, '2020-02-12 14:17:02', '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:02', NULL),
(7, 2, 7, '2020-02-12 14:17:02', '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:02', NULL),
(8, 2, 8, '2020-02-12 14:17:02', '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:02', NULL),
(9, 2, 9, '2020-02-12 14:17:02', '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:02', NULL),
(10, 2, 10, '2020-02-12 14:17:02', '2020-02-12 14:17:02', '2020-02-12 14:17:03', 'COMPLETED', 'COMPLETED', '', '2020-02-12 14:17:03', NULL),
(11, 2, 11, '2020-02-12 15:18:40', '2020-02-12 15:18:40', '2020-02-12 15:18:42', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:18:42', NULL),
(12, 2, 12, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(13, 2, 13, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(14, 2, 14, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(15, 2, 15, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(16, 2, 16, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(17, 2, 17, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(18, 2, 18, '2020-02-12 15:18:42', '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 'FAILED', '', '2020-02-12 15:18:42', NULL),
(19, 2, 19, '2020-02-12 15:18:42', '2020-02-12 15:18:43', '2020-02-12 15:18:43', 'FAILED', 'FAILED', '', '2020-02-12 15:18:43', NULL),
(20, 2, 20, '2020-02-12 15:18:43', '2020-02-12 15:18:43', '2020-02-12 15:18:43', 'FAILED', 'FAILED', '', '2020-02-12 15:18:43', NULL),
(21, 2, 21, '2020-02-12 15:20:55', '2020-02-12 15:20:55', '2020-02-12 15:20:57', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:20:57', NULL),
(22, 2, 22, '2020-02-12 15:20:57', '2020-02-12 15:20:57', '2020-02-12 15:20:57', 'FAILED', 'FAILED', '', '2020-02-12 15:20:57', NULL),
(23, 2, 23, '2020-02-12 15:34:38', '2020-02-12 15:34:39', '2020-02-12 15:34:40', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:34:40', NULL),
(24, 2, 24, '2020-02-12 15:34:40', '2020-02-12 15:34:40', '2020-02-12 15:34:41', 'FAILED', 'FAILED', '', '2020-02-12 15:34:41', NULL),
(25, 2, 25, '2020-02-12 15:36:42', '2020-02-12 15:36:42', '2020-02-12 15:36:44', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:36:44', NULL),
(26, 2, 26, '2020-02-12 15:36:44', '2020-02-12 15:36:44', '2020-02-12 15:36:44', 'FAILED', 'FAILED', '', '2020-02-12 15:36:44', NULL),
(27, 2, 27, '2020-02-12 15:38:42', '2020-02-12 15:38:42', '2020-02-12 15:38:44', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:38:44', NULL),
(28, 2, 28, '2020-02-12 15:38:44', '2020-02-12 15:38:44', '2020-02-12 15:38:44', 'FAILED', 'FAILED', '', '2020-02-12 15:38:44', NULL),
(29, 2, 29, '2020-02-12 15:43:33', '2020-02-12 15:43:33', '2020-02-12 15:43:35', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:43:35', NULL),
(30, 2, 30, '2020-02-12 15:43:35', '2020-02-12 15:43:35', '2020-02-12 15:43:35', 'FAILED', 'FAILED', '', '2020-02-12 15:43:35', NULL),
(31, 2, 31, '2020-02-12 15:48:43', '2020-02-12 15:48:43', '2020-02-12 15:48:45', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:48:45', NULL),
(32, 2, 32, '2020-02-12 15:48:45', '2020-02-12 15:48:45', '2020-02-12 15:48:45', 'FAILED', 'FAILED', '', '2020-02-12 15:48:45', NULL),
(33, 2, 33, '2020-02-12 15:49:51', '2020-02-12 15:49:52', '2020-02-12 15:49:53', 'COMPLETED', 'COMPLETED', '', '2020-02-12 15:49:53', NULL),
(34, 2, 34, '2020-02-12 15:49:53', '2020-02-12 15:49:53', '2020-02-12 15:49:54', 'FAILED', 'FAILED', '', '2020-02-12 15:49:54', NULL),
(35, 2, 35, '2020-02-13 09:01:09', '2020-02-13 09:01:09', '2020-02-13 09:01:11', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:01:11', NULL),
(36, 2, 36, '2020-02-13 09:01:11', '2020-02-13 09:01:11', '2020-02-13 09:01:12', 'FAILED', 'FAILED', '', '2020-02-13 09:01:12', NULL),
(37, 2, 37, '2020-02-13 09:05:13', '2020-02-13 09:05:13', '2020-02-13 09:05:14', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:05:14', NULL),
(38, 2, 38, '2020-02-13 09:05:14', '2020-02-13 09:05:14', '2020-02-13 09:05:15', 'FAILED', 'FAILED', '', '2020-02-13 09:05:15', NULL),
(39, 2, 39, '2020-02-13 09:06:19', '2020-02-13 09:06:19', '2020-02-13 09:06:20', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:06:20', NULL),
(40, 2, 40, '2020-02-13 09:06:21', '2020-02-13 09:06:21', '2020-02-13 09:06:21', 'FAILED', 'FAILED', '', '2020-02-13 09:06:21', NULL),
(41, 2, 41, '2020-02-13 09:07:19', '2020-02-13 09:07:20', '2020-02-13 09:07:21', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:07:21', NULL),
(42, 2, 42, '2020-02-13 09:07:21', '2020-02-13 09:07:21', '2020-02-13 09:07:21', 'FAILED', 'FAILED', '', '2020-02-13 09:07:21', NULL),
(43, 2, 43, '2020-02-13 09:08:14', '2020-02-13 09:08:14', '2020-02-13 09:08:16', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:08:16', NULL),
(44, 2, 44, '2020-02-13 09:08:16', '2020-02-13 09:08:16', '2020-02-13 09:08:16', 'FAILED', 'FAILED', '', '2020-02-13 09:08:16', NULL),
(45, 2, 45, '2020-02-13 09:18:52', '2020-02-13 09:18:52', '2020-02-13 09:18:53', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:18:53', NULL),
(46, 2, 46, '2020-02-13 09:18:53', '2020-02-13 09:18:53', '2020-02-13 09:18:54', 'FAILED', 'FAILED', '', '2020-02-13 09:18:54', NULL),
(47, 2, 47, '2020-02-13 09:22:55', '2020-02-13 09:22:55', '2020-02-13 09:22:56', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:22:56', NULL),
(48, 2, 48, '2020-02-13 09:22:57', '2020-02-13 09:22:57', '2020-02-13 09:22:57', 'FAILED', 'FAILED', '', '2020-02-13 09:22:57', NULL),
(49, 2, 49, '2020-02-13 09:26:24', '2020-02-13 09:26:24', '2020-02-13 09:26:26', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:26:26', NULL),
(50, 2, 50, '2020-02-13 09:26:26', '2020-02-13 09:26:26', '2020-02-13 09:26:27', 'FAILED', 'FAILED', '', '2020-02-13 09:26:27', NULL),
(51, 2, 51, '2020-02-13 09:28:53', '2020-02-13 09:28:53', '2020-02-13 09:28:54', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:28:54', NULL),
(52, 2, 52, '2020-02-13 09:28:54', '2020-02-13 09:28:54', '2020-02-13 09:28:55', 'FAILED', 'FAILED', '', '2020-02-13 09:28:55', NULL),
(53, 2, 53, '2020-02-13 09:29:48', '2020-02-13 09:29:48', '2020-02-13 09:29:49', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:29:49', NULL),
(54, 2, 54, '2020-02-13 09:29:49', '2020-02-13 09:29:49', '2020-02-13 09:29:50', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:29:50', NULL),
(55, 2, 55, '2020-02-13 09:48:34', '2020-02-13 09:48:34', '2020-02-13 09:48:36', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:48:36', NULL),
(56, 2, 56, '2020-02-13 09:48:36', '2020-02-13 09:48:36', '2020-02-13 09:48:37', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:48:37', NULL),
(57, 2, 57, '2020-02-13 09:50:42', '2020-02-13 09:50:42', '2020-02-13 09:50:43', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:50:43', NULL),
(58, 2, 58, '2020-02-13 09:50:43', '2020-02-13 09:50:43', '2020-02-13 09:50:44', 'COMPLETED', 'COMPLETED', '', '2020-02-13 09:50:44', NULL),
(59, 2, 59, '2020-02-13 10:07:29', '2020-02-13 10:07:29', '2020-02-13 10:07:30', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:07:30', NULL),
(60, 2, 60, '2020-02-13 10:07:30', '2020-02-13 10:07:30', '2020-02-13 10:07:31', 'FAILED', 'FAILED', '', '2020-02-13 10:07:31', NULL),
(61, 2, 61, '2020-02-13 10:16:49', '2020-02-13 10:16:49', '2020-02-13 10:16:51', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:16:51', NULL),
(62, 2, 62, '2020-02-13 10:16:51', '2020-02-13 10:16:51', '2020-02-13 10:16:51', 'FAILED', 'FAILED', '', '2020-02-13 10:16:51', NULL),
(63, 2, 63, '2020-02-13 10:17:29', '2020-02-13 10:17:29', '2020-02-13 10:17:31', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:17:31', NULL),
(64, 2, 64, '2020-02-13 10:17:31', '2020-02-13 10:17:31', '2020-02-13 10:17:31', 'FAILED', 'FAILED', '', '2020-02-13 10:17:31', NULL),
(65, 2, 65, '2020-02-13 10:21:16', '2020-02-13 10:21:16', '2020-02-13 10:21:18', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:21:18', NULL),
(66, 2, 66, '2020-02-13 10:21:18', '2020-02-13 10:21:18', '2020-02-13 10:21:18', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:21:18', NULL),
(67, 2, 67, '2020-02-13 10:38:30', '2020-02-13 10:38:30', '2020-02-13 10:38:32', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:38:32', NULL),
(68, 2, 68, '2020-02-13 10:38:32', '2020-02-13 10:38:32', '2020-02-13 10:38:32', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:38:32', NULL),
(69, 2, 69, '2020-02-13 10:41:38', '2020-02-13 10:41:38', '2020-02-13 10:41:40', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:41:40', NULL),
(70, 2, 70, '2020-02-13 10:41:40', '2020-02-13 10:41:40', '2020-02-13 10:41:40', 'FAILED', 'FAILED', '', '2020-02-13 10:41:40', NULL),
(71, 2, 71, '2020-02-13 10:45:03', '2020-02-13 10:45:03', '2020-02-13 10:45:05', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:45:05', NULL),
(72, 2, 72, '2020-02-13 10:45:05', '2020-02-13 10:45:05', '2020-02-13 10:45:06', 'COMPLETED', 'COMPLETED', '', '2020-02-13 10:45:06', NULL),
(73, 2, 73, '2020-02-13 11:33:43', '2020-02-13 11:33:43', '2020-02-13 11:33:45', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:33:45', NULL),
(74, 2, 74, '2020-02-13 11:33:45', '2020-02-13 11:33:45', '2020-02-13 11:33:46', 'FAILED', 'FAILED', '', '2020-02-13 11:33:46', NULL),
(75, 2, 75, '2020-02-13 11:35:23', '2020-02-13 11:35:23', '2020-02-13 11:35:25', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:35:25', NULL),
(76, 2, 76, '2020-02-13 11:35:25', '2020-02-13 11:35:25', '2020-02-13 11:35:26', 'FAILED', 'FAILED', '', '2020-02-13 11:35:26', NULL),
(77, 2, 77, '2020-02-13 11:36:03', '2020-02-13 11:36:03', '2020-02-13 11:36:05', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:36:05', NULL),
(78, 2, 78, '2020-02-13 11:36:05', '2020-02-13 11:36:05', '2020-02-13 11:36:06', 'FAILED', 'FAILED', '', '2020-02-13 11:36:06', NULL),
(79, 2, 79, '2020-02-13 11:36:30', '2020-02-13 11:36:30', '2020-02-13 11:36:32', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:36:32', NULL),
(80, 2, 80, '2020-02-13 11:36:32', '2020-02-13 11:36:32', '2020-02-13 11:36:33', 'FAILED', 'FAILED', '', '2020-02-13 11:36:33', NULL),
(81, 2, 81, '2020-02-13 11:38:14', '2020-02-13 11:38:14', '2020-02-13 11:38:15', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:38:15', NULL),
(82, 2, 82, '2020-02-13 11:38:15', '2020-02-13 11:38:15', '2020-02-13 11:38:17', 'FAILED', 'FAILED', '', '2020-02-13 11:38:17', NULL),
(83, 2, 83, '2020-02-13 11:39:41', '2020-02-13 11:39:41', '2020-02-13 11:39:42', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:39:42', NULL),
(84, 2, 84, '2020-02-13 11:39:42', '2020-02-13 11:39:42', '2020-02-13 11:39:44', 'FAILED', 'FAILED', '', '2020-02-13 11:39:44', NULL),
(85, 2, 85, '2020-02-13 11:41:54', '2020-02-13 11:41:54', '2020-02-13 11:41:56', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:41:56', NULL),
(86, 2, 86, '2020-02-13 11:41:56', '2020-02-13 11:41:56', '2020-02-13 11:41:57', 'FAILED', 'FAILED', '', '2020-02-13 11:41:57', NULL),
(87, 2, 87, '2020-02-13 11:44:09', '2020-02-13 11:44:09', '2020-02-13 11:44:10', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:44:10', NULL),
(88, 2, 88, '2020-02-13 11:44:10', '2020-02-13 11:44:10', '2020-02-13 11:44:11', 'FAILED', 'FAILED', '', '2020-02-13 11:44:11', NULL),
(89, 2, 89, '2020-02-13 11:44:37', '2020-02-13 11:44:37', '2020-02-13 11:44:38', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:44:38', NULL),
(90, 2, 90, '2020-02-13 11:44:38', '2020-02-13 11:44:38', '2020-02-13 11:44:39', 'FAILED', 'FAILED', '', '2020-02-13 11:44:39', NULL),
(91, 2, 91, '2020-02-13 11:45:19', '2020-02-13 11:45:19', '2020-02-13 11:45:21', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:45:21', NULL),
(92, 2, 92, '2020-02-13 11:45:21', '2020-02-13 11:45:21', '2020-02-13 11:45:22', 'FAILED', 'FAILED', '', '2020-02-13 11:45:22', NULL),
(93, 2, 93, '2020-02-13 11:46:05', '2020-02-13 11:46:05', '2020-02-13 11:46:07', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:46:07', NULL),
(94, 2, 94, '2020-02-13 11:46:07', '2020-02-13 11:46:07', '2020-02-13 11:46:08', 'FAILED', 'FAILED', '', '2020-02-13 11:46:08', NULL),
(95, 2, 95, '2020-02-13 11:47:17', '2020-02-13 11:47:17', '2020-02-13 11:47:18', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:47:18', NULL),
(96, 2, 96, '2020-02-13 11:47:18', '2020-02-13 11:47:18', '2020-02-13 11:47:19', 'FAILED', 'FAILED', '', '2020-02-13 11:47:19', NULL),
(97, 2, 97, '2020-02-13 11:47:58', '2020-02-13 11:47:58', '2020-02-13 11:48:00', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:48:00', NULL),
(98, 2, 98, '2020-02-13 11:48:00', '2020-02-13 11:48:00', '2020-02-13 11:48:01', 'FAILED', 'FAILED', '', '2020-02-13 11:48:01', NULL),
(99, 2, 99, '2020-02-13 11:48:45', '2020-02-13 11:48:46', '2020-02-13 11:48:47', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:48:47', NULL),
(100, 2, 100, '2020-02-13 11:48:47', '2020-02-13 11:48:47', '2020-02-13 11:48:48', 'FAILED', 'FAILED', '', '2020-02-13 11:48:48', NULL),
(101, 2, 101, '2020-02-13 11:49:21', '2020-02-13 11:49:21', '2020-02-13 11:49:23', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:49:23', NULL),
(102, 2, 102, '2020-02-13 11:49:23', '2020-02-13 11:49:23', '2020-02-13 11:49:24', 'FAILED', 'FAILED', '', '2020-02-13 11:49:24', NULL),
(103, 2, 103, '2020-02-13 11:50:24', '2020-02-13 11:50:25', '2020-02-13 11:50:26', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:50:26', NULL),
(104, 2, 104, '2020-02-13 11:50:26', '2020-02-13 11:50:26', '2020-02-13 11:50:27', 'FAILED', 'FAILED', '', '2020-02-13 11:50:27', NULL),
(105, 2, 105, '2020-02-13 11:53:39', '2020-02-13 11:53:39', '2020-02-13 11:53:41', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:53:41', NULL),
(106, 2, 106, '2020-02-13 11:53:41', '2020-02-13 11:53:41', '2020-02-13 11:53:42', 'FAILED', 'FAILED', '', '2020-02-13 11:53:42', NULL),
(107, 2, 107, '2020-02-13 11:54:32', '2020-02-13 11:54:32', '2020-02-13 11:54:33', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:54:33', NULL),
(108, 2, 108, '2020-02-13 11:54:33', '2020-02-13 11:54:33', '2020-02-13 11:54:34', 'FAILED', 'FAILED', '', '2020-02-13 11:54:34', NULL),
(109, 2, 109, '2020-02-13 11:54:54', '2020-02-13 11:54:54', '2020-02-13 11:54:56', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:54:56', NULL),
(110, 2, 110, '2020-02-13 11:54:56', '2020-02-13 11:54:56', '2020-02-13 11:54:57', 'FAILED', 'FAILED', '', '2020-02-13 11:54:57', NULL),
(111, 2, 111, '2020-02-13 11:56:45', '2020-02-13 11:56:45', '2020-02-13 11:56:47', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:56:47', NULL),
(112, 2, 112, '2020-02-13 11:56:47', '2020-02-13 11:56:47', '2020-02-13 11:56:48', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:56:48', NULL),
(113, 2, 113, '2020-02-13 11:58:03', '2020-02-13 11:58:03', '2020-02-13 11:58:04', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:58:04', NULL),
(114, 2, 114, '2020-02-13 11:58:04', '2020-02-13 11:58:04', '2020-02-13 11:58:05', 'COMPLETED', 'COMPLETED', '', '2020-02-13 11:58:05', NULL),
(115, 2, 115, '2020-02-13 18:03:53', '2020-02-13 18:03:53', '2020-02-13 18:03:55', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:03:55', NULL),
(116, 2, 116, '2020-02-13 18:03:55', '2020-02-13 18:03:55', '2020-02-13 18:03:56', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:03:56', NULL),
(117, 2, 117, '2020-02-13 18:04:46', '2020-02-13 18:04:46', '2020-02-13 18:04:48', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:04:48', NULL),
(118, 2, 118, '2020-02-13 18:04:48', '2020-02-13 18:04:48', '2020-02-13 18:04:49', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:04:49', NULL),
(119, 2, 119, '2020-02-13 18:17:13', '2020-02-13 18:17:13', '2020-02-13 18:17:15', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:17:15', NULL),
(120, 2, 120, '2020-02-13 18:17:15', '2020-02-13 18:17:15', '2020-02-13 18:17:16', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:17:16', NULL),
(121, 2, 121, '2020-02-13 18:31:14', '2020-02-13 18:31:14', '2020-02-13 18:31:16', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:31:16', NULL),
(122, 2, 122, '2020-02-13 18:31:16', '2020-02-13 18:31:16', '2020-02-13 18:31:17', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:31:17', NULL),
(123, 2, 123, '2020-02-13 18:55:07', '2020-02-13 18:55:07', '2020-02-13 18:55:09', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:55:09', NULL),
(124, 2, 124, '2020-02-13 18:55:09', '2020-02-13 18:55:09', '2020-02-13 18:55:10', 'COMPLETED', 'COMPLETED', '', '2020-02-13 18:55:10', NULL),
(125, 2, 125, '2020-02-13 19:06:21', '2020-02-13 19:06:21', '2020-02-13 19:06:23', 'COMPLETED', 'COMPLETED', '', '2020-02-13 19:06:23', NULL),
(126, 2, 126, '2020-02-13 19:06:23', '2020-02-13 19:06:23', '2020-02-13 19:06:24', 'COMPLETED', 'COMPLETED', '', '2020-02-13 19:06:24', NULL),
(127, 2, 127, '2020-02-13 19:10:07', '2020-02-13 19:10:07', '2020-02-13 19:10:09', 'COMPLETED', 'COMPLETED', '', '2020-02-13 19:10:09', NULL),
(128, 2, 128, '2020-02-13 19:10:09', '2020-02-13 19:10:09', '2020-02-13 19:10:10', 'COMPLETED', 'COMPLETED', '', '2020-02-13 19:10:10', NULL),
(129, 2, 129, '2020-02-14 09:33:18', '2020-02-14 09:33:18', '2020-02-14 09:33:20', 'COMPLETED', 'COMPLETED', '', '2020-02-14 09:33:20', NULL),
(130, 2, 130, '2020-02-14 09:33:20', '2020-02-14 09:33:20', '2020-02-14 09:33:21', 'COMPLETED', 'COMPLETED', '', '2020-02-14 09:33:21', NULL),
(131, 2, 131, '2020-02-14 10:09:01', '2020-02-14 10:09:01', '2020-02-14 10:09:03', 'COMPLETED', 'COMPLETED', '', '2020-02-14 10:09:03', NULL),
(132, 2, 132, '2020-02-14 10:09:03', '2020-02-14 10:09:03', '2020-02-14 10:09:05', 'COMPLETED', 'COMPLETED', '', '2020-02-14 10:09:05', NULL),
(133, 2, 133, '2020-02-14 10:51:16', '2020-02-14 10:51:16', '2020-02-14 10:51:18', 'COMPLETED', 'COMPLETED', '', '2020-02-14 10:51:18', NULL),
(134, 2, 134, '2020-02-14 10:51:18', '2020-02-14 10:51:18', '2020-02-14 10:51:19', 'FAILED', 'FAILED', '', '2020-02-14 10:51:19', NULL),
(135, 2, 135, '2020-02-14 10:51:59', '2020-02-14 10:51:59', '2020-02-14 10:52:00', 'COMPLETED', 'COMPLETED', '', '2020-02-14 10:52:00', NULL),
(136, 2, 136, '2020-02-14 10:52:00', '2020-02-14 10:52:00', '2020-02-14 10:52:01', 'COMPLETED', 'COMPLETED', '', '2020-02-14 10:52:01', NULL),
(137, 2, 137, '2020-02-14 11:29:27', '2020-02-14 11:29:28', '2020-02-14 11:29:29', 'COMPLETED', 'COMPLETED', '', '2020-02-14 11:29:29', NULL),
(138, 2, 138, '2020-02-14 11:29:30', '2020-02-14 11:29:30', '2020-02-14 11:29:30', 'FAILED', 'FAILED', '', '2020-02-14 11:29:30', NULL),
(139, 2, 139, '2020-02-14 11:32:37', '2020-02-14 11:32:37', '2020-02-14 11:32:38', 'COMPLETED', 'COMPLETED', '', '2020-02-14 11:32:38', NULL),
(140, 2, 140, '2020-02-14 11:32:38', '2020-02-14 11:32:38', '2020-02-14 11:32:39', 'COMPLETED', 'COMPLETED', '', '2020-02-14 11:32:39', NULL),
(141, 2, 141, '2020-02-14 11:54:37', '2020-02-14 11:54:37', '2020-02-14 11:54:39', 'COMPLETED', 'COMPLETED', '', '2020-02-14 11:54:39', NULL),
(142, 2, 142, '2020-02-14 11:54:39', '2020-02-14 11:54:39', '2020-02-14 11:54:40', 'FAILED', 'FAILED', '', '2020-02-14 11:54:40', NULL),
(143, 2, 143, '2020-02-14 11:56:15', '2020-02-14 11:56:15', '2020-02-14 11:56:17', 'COMPLETED', 'COMPLETED', '', '2020-02-14 11:56:17', NULL),
(144, 2, 144, '2020-02-14 11:56:17', '2020-02-14 11:56:17', '2020-02-14 11:56:18', 'COMPLETED', 'COMPLETED', '', '2020-02-14 11:56:18', NULL),
(145, 2, 145, '2020-02-14 12:15:43', '2020-02-14 12:15:43', '2020-02-14 12:15:45', 'COMPLETED', 'COMPLETED', '', '2020-02-14 12:15:45', NULL),
(146, 2, 146, '2020-02-14 12:15:45', '2020-02-14 12:15:45', '2020-02-14 12:15:46', 'COMPLETED', 'COMPLETED', '', '2020-02-14 12:15:46', NULL),
(147, 2, 147, '2020-02-14 14:00:17', '2020-02-14 14:00:18', '2020-02-14 14:00:20', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:00:20', NULL),
(148, 2, 148, '2020-02-14 14:00:20', '2020-02-14 14:00:20', '2020-02-14 14:00:21', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:00:21', NULL),
(149, 2, 149, '2020-02-14 14:08:29', '2020-02-14 14:08:29', '2020-02-14 14:08:30', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:08:30', NULL),
(150, 2, 150, '2020-02-14 14:08:30', '2020-02-14 14:08:30', '2020-02-14 14:08:31', 'FAILED', 'FAILED', '', '2020-02-14 14:08:31', NULL),
(151, 2, 151, '2020-02-14 14:10:41', '2020-02-14 14:10:41', '2020-02-14 14:10:43', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:10:43', NULL),
(152, 2, 152, '2020-02-14 14:10:43', '2020-02-14 14:10:43', '2020-02-14 14:10:44', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:10:44', NULL),
(153, 2, 153, '2020-02-14 14:16:45', '2020-02-14 14:16:45', '2020-02-14 14:16:46', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:16:46', NULL),
(154, 2, 154, '2020-02-14 14:16:46', '2020-02-14 14:16:46', '2020-02-14 14:16:48', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:16:48', NULL),
(155, 2, 155, '2020-02-14 14:21:09', '2020-02-14 14:21:09', '2020-02-14 14:21:11', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:21:11', NULL),
(156, 2, 156, '2020-02-14 14:21:11', '2020-02-14 14:21:11', '2020-02-14 14:21:12', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:21:12', NULL),
(157, 2, 157, '2020-02-14 14:29:03', '2020-02-14 14:29:03', '2020-02-14 14:29:05', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:29:05', NULL),
(158, 2, 158, '2020-02-14 14:29:05', '2020-02-14 14:29:05', '2020-02-14 14:29:06', 'FAILED', 'FAILED', '', '2020-02-14 14:29:06', NULL),
(159, 2, 159, '2020-02-14 14:30:34', '2020-02-14 14:30:35', '2020-02-14 14:30:36', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:30:36', NULL),
(160, 2, 160, '2020-02-14 14:30:36', '2020-02-14 14:30:36', '2020-02-14 14:30:37', 'FAILED', 'FAILED', '', '2020-02-14 14:30:37', NULL),
(161, 2, 161, '2020-02-14 14:33:42', '2020-02-14 14:33:42', '2020-02-14 14:33:44', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:33:44', NULL),
(162, 2, 162, '2020-02-14 14:33:44', '2020-02-14 14:33:44', '2020-02-14 14:33:44', 'FAILED', 'FAILED', '', '2020-02-14 14:33:44', NULL),
(163, 2, 163, '2020-02-14 14:35:01', '2020-02-14 14:35:01', '2020-02-14 14:35:02', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:35:02', NULL),
(164, 2, 164, '2020-02-14 14:35:02', '2020-02-14 14:35:03', '2020-02-14 14:35:03', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:35:03', NULL),
(165, 2, 165, '2020-02-14 14:43:07', '2020-02-14 14:43:07', '2020-02-14 14:43:08', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:43:08', NULL),
(166, 2, 166, '2020-02-14 14:43:08', '2020-02-14 14:43:08', '2020-02-14 14:43:10', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:43:10', NULL),
(167, 2, 167, '2020-02-14 14:56:08', '2020-02-14 14:56:08', '2020-02-14 14:56:11', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:56:11', NULL),
(168, 2, 168, '2020-02-14 14:56:11', '2020-02-14 14:56:11', '2020-02-14 14:56:12', 'COMPLETED', 'COMPLETED', '', '2020-02-14 14:56:12', NULL),
(169, 2, 169, '2020-02-14 15:04:02', '2020-02-14 15:04:02', '2020-02-14 15:04:04', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:04:04', NULL),
(170, 2, 170, '2020-02-14 15:04:04', '2020-02-14 15:04:04', '2020-02-14 15:04:05', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:04:05', NULL),
(171, 2, 171, '2020-02-14 15:07:44', '2020-02-14 15:07:44', '2020-02-14 15:07:46', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:07:46', NULL),
(172, 2, 172, '2020-02-14 15:07:46', '2020-02-14 15:07:46', '2020-02-14 15:07:47', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:07:47', NULL),
(173, 2, 173, '2020-02-14 15:15:16', '2020-02-14 15:15:16', '2020-02-14 15:15:18', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:15:18', NULL),
(174, 2, 174, '2020-02-14 15:15:18', '2020-02-14 15:15:19', '2020-02-14 15:15:20', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:15:20', NULL),
(175, 2, 175, '2020-02-14 15:17:49', '2020-02-14 15:17:49', '2020-02-14 15:17:51', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:17:51', NULL),
(176, 2, 176, '2020-02-14 15:17:51', '2020-02-14 15:17:51', '2020-02-14 15:17:53', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:17:53', NULL),
(177, 2, 177, '2020-02-14 15:19:49', '2020-02-14 15:19:49', '2020-02-14 15:19:51', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:19:51', NULL),
(178, 2, 178, '2020-02-14 15:19:51', '2020-02-14 15:19:51', '2020-02-14 15:19:52', 'FAILED', 'FAILED', '', '2020-02-14 15:19:52', NULL),
(179, 2, 179, '2020-02-14 15:27:52', '2020-02-14 15:27:52', '2020-02-14 15:27:54', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:27:54', NULL),
(180, 2, 180, '2020-02-14 15:27:54', '2020-02-14 15:27:54', '2020-02-14 15:27:54', 'FAILED', 'FAILED', '', '2020-02-14 15:27:54', NULL),
(181, 2, 181, '2020-02-14 15:30:34', '2020-02-14 15:30:34', '2020-02-14 15:30:36', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:30:36', NULL),
(182, 2, 182, '2020-02-14 15:30:36', '2020-02-14 15:30:36', '2020-02-14 15:30:37', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:30:37', NULL),
(183, 2, 183, '2020-02-14 15:33:49', '2020-02-14 15:33:49', '2020-02-14 15:33:51', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:33:51', NULL),
(184, 2, 184, '2020-02-14 15:33:51', '2020-02-14 15:33:51', '2020-02-14 15:33:52', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:33:52', NULL),
(185, 2, 185, '2020-02-14 15:41:08', '2020-02-14 15:41:09', '2020-02-14 15:41:11', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:41:11', NULL),
(186, 2, 186, '2020-02-14 15:41:11', '2020-02-14 15:41:11', '2020-02-14 15:41:12', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:41:12', NULL),
(187, 2, 187, '2020-02-14 15:51:27', '2020-02-14 15:51:27', '2020-02-14 15:51:29', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:51:29', NULL),
(188, 2, 188, '2020-02-14 15:51:30', '2020-02-14 15:51:30', '2020-02-14 15:51:30', 'FAILED', 'FAILED', '', '2020-02-14 15:51:30', NULL),
(189, 2, 189, '2020-02-14 15:52:00', '2020-02-14 15:52:00', '2020-02-14 15:52:02', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:52:02', NULL),
(190, 2, 190, '2020-02-14 15:52:02', '2020-02-14 15:52:02', '2020-02-14 15:52:02', 'FAILED', 'FAILED', '', '2020-02-14 15:52:02', NULL),
(191, 2, 191, '2020-02-14 15:52:57', '2020-02-14 15:52:57', '2020-02-14 15:52:58', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:52:58', NULL),
(192, 2, 192, '2020-02-14 15:52:58', '2020-02-14 15:52:58', '2020-02-14 15:52:59', 'FAILED', 'FAILED', '', '2020-02-14 15:52:59', NULL),
(193, 2, 193, '2020-02-14 15:54:42', '2020-02-14 15:54:42', '2020-02-14 15:54:44', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:54:44', NULL),
(194, 2, 194, '2020-02-14 15:54:44', '2020-02-14 15:54:44', '2020-02-14 15:54:45', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:54:45', NULL),
(195, 2, 195, '2020-02-14 15:57:16', '2020-02-14 15:57:16', '2020-02-14 15:57:18', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:57:18', NULL),
(196, 2, 196, '2020-02-14 15:57:18', '2020-02-14 15:57:18', '2020-02-14 15:57:19', 'COMPLETED', 'COMPLETED', '', '2020-02-14 15:57:19', NULL),
(197, 2, 197, '2020-02-14 16:02:30', '2020-02-14 16:02:30', '2020-02-14 16:02:32', 'COMPLETED', 'COMPLETED', '', '2020-02-14 16:02:32', NULL),
(198, 2, 198, '2020-02-14 16:02:32', '2020-02-14 16:02:32', '2020-02-14 16:02:33', 'FAILED', 'FAILED', '', '2020-02-14 16:02:33', NULL),
(199, 2, 199, '2020-02-14 16:03:50', '2020-02-14 16:03:50', '2020-02-14 16:03:52', 'COMPLETED', 'COMPLETED', '', '2020-02-14 16:03:52', NULL),
(200, 2, 200, '2020-02-14 16:03:52', '2020-02-14 16:03:52', '2020-02-14 16:03:53', 'COMPLETED', 'COMPLETED', '', '2020-02-14 16:03:53', NULL),
(201, 2, 201, '2020-02-14 16:15:26', '2020-02-14 16:15:26', '2020-02-14 16:15:28', 'COMPLETED', 'COMPLETED', '', '2020-02-14 16:15:28', NULL),
(202, 2, 202, '2020-02-14 16:15:28', '2020-02-14 16:15:28', '2020-02-14 16:15:29', 'COMPLETED', 'COMPLETED', '', '2020-02-14 16:15:29', NULL),
(203, 2, 203, '2020-02-15 09:47:07', '2020-02-15 09:47:07', '2020-02-15 09:47:09', 'COMPLETED', 'COMPLETED', '', '2020-02-15 09:47:09', NULL),
(204, 2, 204, '2020-02-15 09:47:09', '2020-02-15 09:47:09', '2020-02-15 09:47:10', 'COMPLETED', 'COMPLETED', '', '2020-02-15 09:47:10', NULL),
(205, 2, 205, '2020-02-15 09:56:40', '2020-02-15 09:56:40', '2020-02-15 09:56:42', 'COMPLETED', 'COMPLETED', '', '2020-02-15 09:56:42', NULL),
(206, 2, 206, '2020-02-15 09:56:42', '2020-02-15 09:56:42', '2020-02-15 09:56:43', 'COMPLETED', 'COMPLETED', '', '2020-02-15 09:56:43', NULL),
(207, 2, 207, '2020-02-15 09:59:12', '2020-02-15 09:59:12', '2020-02-15 09:59:13', 'COMPLETED', 'COMPLETED', '', '2020-02-15 09:59:13', NULL),
(208, 2, 208, '2020-02-15 09:59:14', '2020-02-15 09:59:14', '2020-02-15 09:59:15', 'COMPLETED', 'COMPLETED', '', '2020-02-15 09:59:15', NULL),
(209, 2, 209, '2020-02-15 10:07:30', '2020-02-15 10:07:30', '2020-02-15 10:07:32', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:07:32', NULL),
(210, 2, 210, '2020-02-15 10:07:32', '2020-02-15 10:07:32', '2020-02-15 10:07:33', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:07:33', NULL),
(211, 2, 211, '2020-02-15 10:10:46', '2020-02-15 10:10:46', '2020-02-15 10:10:48', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:10:48', NULL),
(212, 2, 212, '2020-02-15 10:10:48', '2020-02-15 10:10:48', '2020-02-15 10:10:49', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:10:49', NULL),
(213, 2, 213, '2020-02-15 10:11:35', '2020-02-15 10:11:35', '2020-02-15 10:11:37', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:11:37', NULL),
(214, 2, 214, '2020-02-15 10:11:37', '2020-02-15 10:11:37', '2020-02-15 10:11:38', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:11:38', NULL),
(215, 2, 215, '2020-02-15 10:12:06', '2020-02-15 10:12:06', '2020-02-15 10:12:08', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:12:08', NULL),
(216, 2, 216, '2020-02-15 10:12:08', '2020-02-15 10:12:08', '2020-02-15 10:12:09', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:12:09', NULL),
(217, 2, 217, '2020-02-15 10:15:14', '2020-02-15 10:15:14', '2020-02-15 10:15:16', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:15:16', NULL),
(218, 2, 218, '2020-02-15 10:15:16', '2020-02-15 10:15:16', '2020-02-15 10:15:18', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:15:18', NULL),
(219, 2, 219, '2020-02-15 10:16:14', '2020-02-15 10:16:14', '2020-02-15 10:16:16', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:16:16', NULL),
(220, 2, 220, '2020-02-15 10:16:16', '2020-02-15 10:16:16', '2020-02-15 10:16:17', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:16:17', NULL),
(221, 2, 221, '2020-02-15 10:24:06', '2020-02-15 10:24:06', '2020-02-15 10:24:08', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:24:08', NULL),
(222, 2, 222, '2020-02-15 10:24:08', '2020-02-15 10:24:08', '2020-02-15 10:24:09', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:24:09', NULL),
(223, 2, 223, '2020-02-15 10:26:27', '2020-02-15 10:26:27', '2020-02-15 10:26:29', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:26:29', NULL),
(224, 2, 224, '2020-02-15 10:26:29', '2020-02-15 10:26:29', '2020-02-15 10:26:30', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:26:30', NULL),
(225, 2, 225, '2020-02-15 10:46:30', '2020-02-15 10:46:30', '2020-02-15 10:46:32', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:46:32', NULL),
(226, 2, 226, '2020-02-15 10:46:32', '2020-02-15 10:46:32', '2020-02-15 10:46:33', 'FAILED', 'FAILED', '', '2020-02-15 10:46:33', NULL),
(227, 2, 227, '2020-02-15 10:47:49', '2020-02-15 10:47:49', '2020-02-15 10:47:51', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:47:51', NULL),
(228, 2, 228, '2020-02-15 10:47:51', '2020-02-15 10:47:51', '2020-02-15 10:47:52', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:47:52', NULL),
(229, 2, 229, '2020-02-15 10:49:06', '2020-02-15 10:49:06', '2020-02-15 10:49:08', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:49:08', NULL),
(230, 2, 230, '2020-02-15 10:49:08', '2020-02-15 10:49:08', '2020-02-15 10:49:09', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:49:09', NULL),
(231, 2, 231, '2020-02-15 10:53:24', '2020-02-15 10:53:24', '2020-02-15 10:53:26', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:53:26', NULL),
(232, 2, 232, '2020-02-15 10:53:26', '2020-02-15 10:53:26', '2020-02-15 10:53:27', 'COMPLETED', 'COMPLETED', '', '2020-02-15 10:53:27', NULL),
(233, 2, 233, '2020-02-15 11:05:35', '2020-02-15 11:05:35', '2020-02-15 11:05:37', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:05:37', NULL),
(234, 2, 234, '2020-02-15 11:05:37', '2020-02-15 11:05:37', '2020-02-15 11:05:38', 'FAILED', 'FAILED', '', '2020-02-15 11:05:38', NULL),
(235, 2, 235, '2020-02-15 11:07:51', '2020-02-15 11:07:51', '2020-02-15 11:07:52', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:07:52', NULL),
(236, 2, 236, '2020-02-15 11:07:52', '2020-02-15 11:07:52', '2020-02-15 11:07:53', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:07:53', NULL),
(237, 2, 237, '2020-02-15 11:13:31', '2020-02-15 11:13:31', '2020-02-15 11:13:33', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:13:33', NULL),
(238, 2, 238, '2020-02-15 11:13:33', '2020-02-15 11:13:33', '2020-02-15 11:13:34', 'FAILED', 'FAILED', '', '2020-02-15 11:13:34', NULL),
(239, 2, 239, '2020-02-15 11:14:03', '2020-02-15 11:14:03', '2020-02-15 11:14:04', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:14:04', NULL),
(240, 2, 240, '2020-02-15 11:14:04', '2020-02-15 11:14:04', '2020-02-15 11:14:06', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:14:06', NULL),
(241, 2, 241, '2020-02-15 11:17:00', '2020-02-15 11:17:00', '2020-02-15 11:17:02', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:17:02', NULL),
(242, 2, 242, '2020-02-15 11:17:02', '2020-02-15 11:17:02', '2020-02-15 11:17:03', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:17:03', NULL),
(243, 2, 243, '2020-02-15 11:17:49', '2020-02-15 11:17:49', '2020-02-15 11:17:51', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:17:51', NULL),
(244, 2, 244, '2020-02-15 11:17:51', '2020-02-15 11:17:51', '2020-02-15 11:17:52', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:17:52', NULL),
(245, 2, 245, '2020-02-15 11:38:54', '2020-02-15 11:38:54', '2020-02-15 11:38:56', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:38:56', NULL),
(246, 2, 246, '2020-02-15 11:38:56', '2020-02-15 11:38:56', '2020-02-15 11:38:56', 'FAILED', 'FAILED', '', '2020-02-15 11:38:56', NULL),
(247, 2, 247, '2020-02-15 11:39:30', '2020-02-15 11:39:30', '2020-02-15 11:39:32', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:39:32', NULL),
(248, 2, 248, '2020-02-15 11:39:32', '2020-02-15 11:39:32', '2020-02-15 11:39:33', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:39:33', NULL),
(249, 2, 249, '2020-02-15 11:57:12', '2020-02-15 11:57:12', '2020-02-15 11:57:14', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:57:14', NULL),
(250, 2, 250, '2020-02-15 11:57:14', '2020-02-15 11:57:15', '2020-02-15 11:57:15', 'FAILED', 'FAILED', '', '2020-02-15 11:57:15', NULL),
(251, 2, 251, '2020-02-15 11:57:46', '2020-02-15 11:57:47', '2020-02-15 11:57:48', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:57:48', NULL),
(252, 2, 252, '2020-02-15 11:57:48', '2020-02-15 11:57:48', '2020-02-15 11:57:49', 'FAILED', 'FAILED', '', '2020-02-15 11:57:49', NULL),
(253, 2, 253, '2020-02-15 11:58:31', '2020-02-15 11:58:31', '2020-02-15 11:58:33', 'COMPLETED', 'COMPLETED', '', '2020-02-15 11:58:33', NULL),
(254, 2, 254, '2020-02-15 11:58:33', '2020-02-15 11:58:33', '2020-02-15 11:58:34', 'FAILED', 'FAILED', '', '2020-02-15 11:58:34', NULL),
(255, 2, 255, '2020-02-15 12:06:53', '2020-02-15 12:06:53', '2020-02-15 12:06:55', 'COMPLETED', 'COMPLETED', '', '2020-02-15 12:06:55', NULL),
(256, 2, 256, '2020-02-15 12:06:55', '2020-02-15 12:06:55', '2020-02-15 12:06:55', 'FAILED', 'FAILED', '', '2020-02-15 12:06:55', NULL),
(257, 2, 257, '2020-02-15 12:19:51', '2020-02-15 12:19:51', '2020-02-15 12:19:53', 'COMPLETED', 'COMPLETED', '', '2020-02-15 12:19:53', NULL),
(258, 2, 258, '2020-02-15 12:19:53', '2020-02-15 12:19:53', '2020-02-15 12:19:54', 'COMPLETED', 'COMPLETED', '', '2020-02-15 12:19:54', NULL),
(259, 2, 259, '2020-02-15 12:34:48', '2020-02-15 12:34:48', '2020-02-15 12:34:50', 'COMPLETED', 'COMPLETED', '', '2020-02-15 12:34:50', NULL),
(260, 2, 260, '2020-02-15 12:34:50', '2020-02-15 12:34:50', '2020-02-15 12:34:51', 'FAILED', 'FAILED', '', '2020-02-15 12:34:51', NULL),
(261, 2, 261, '2020-02-15 13:22:14', '2020-02-15 13:22:14', '2020-02-15 13:22:16', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:22:16', NULL),
(262, 2, 262, '2020-02-15 13:22:16', '2020-02-15 13:22:16', '2020-02-15 13:22:17', 'FAILED', 'FAILED', '', '2020-02-15 13:22:17', NULL),
(263, 2, 263, '2020-02-15 13:23:09', '2020-02-15 13:23:09', '2020-02-15 13:23:11', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:23:11', NULL),
(264, 2, 264, '2020-02-15 13:23:11', '2020-02-15 13:23:11', '2020-02-15 13:23:12', 'FAILED', 'FAILED', '', '2020-02-15 13:23:12', NULL),
(265, 2, 265, '2020-02-15 13:23:51', '2020-02-15 13:23:51', '2020-02-15 13:23:53', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:23:53', NULL),
(266, 2, 266, '2020-02-15 13:23:53', '2020-02-15 13:23:53', '2020-02-15 13:23:54', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:23:54', NULL),
(267, 2, 267, '2020-02-15 13:32:19', '2020-02-15 13:32:19', '2020-02-15 13:32:21', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:32:21', NULL),
(268, 2, 268, '2020-02-15 13:32:21', '2020-02-15 13:32:21', '2020-02-15 13:32:23', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:32:23', NULL),
(269, 2, 269, '2020-02-15 13:32:55', '2020-02-15 13:32:56', '2020-02-15 13:32:57', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:32:57', NULL),
(270, 2, 270, '2020-02-15 13:32:57', '2020-02-15 13:32:57', '2020-02-15 13:32:59', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:32:59', NULL),
(271, 2, 271, '2020-02-15 13:41:22', '2020-02-15 13:41:22', '2020-02-15 13:41:24', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:41:24', NULL),
(272, 2, 272, '2020-02-15 13:41:24', '2020-02-15 13:41:24', '2020-02-15 13:41:25', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:41:25', NULL),
(273, 2, 273, '2020-02-15 13:46:10', '2020-02-15 13:46:10', '2020-02-15 13:46:12', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:46:12', NULL),
(274, 2, 274, '2020-02-15 13:46:12', '2020-02-15 13:46:12', '2020-02-15 13:46:14', 'COMPLETED', 'COMPLETED', '', '2020-02-15 13:46:14', NULL),
(275, 2, 275, '2020-02-15 14:10:47', '2020-02-15 14:10:47', '2020-02-15 14:10:49', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:10:49', NULL),
(276, 2, 276, '2020-02-15 14:10:49', '2020-02-15 14:10:49', '2020-02-15 14:10:50', 'FAILED', 'FAILED', '', '2020-02-15 14:10:50', NULL),
(277, 2, 277, '2020-02-15 14:15:55', '2020-02-15 14:15:55', '2020-02-15 14:15:57', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:15:57', NULL),
(278, 2, 278, '2020-02-15 14:15:57', '2020-02-15 14:15:57', '2020-02-15 14:15:58', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:15:58', NULL),
(279, 2, 279, '2020-02-15 14:24:31', '2020-02-15 14:24:31', '2020-02-15 14:24:33', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:24:33', NULL),
(280, 2, 280, '2020-02-15 14:24:33', '2020-02-15 14:24:33', '2020-02-15 14:24:35', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:24:35', NULL),
(281, 2, 281, '2020-02-15 14:26:02', '2020-02-15 14:26:02', '2020-02-15 14:26:04', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:26:04', NULL),
(282, 2, 282, '2020-02-15 14:26:04', '2020-02-15 14:26:04', '2020-02-15 14:26:05', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:26:05', NULL),
(283, 2, 283, '2020-02-15 14:26:43', '2020-02-15 14:26:43', '2020-02-15 14:26:45', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:26:45', NULL),
(284, 2, 284, '2020-02-15 14:26:45', '2020-02-15 14:26:45', '2020-02-15 14:26:47', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:26:47', NULL),
(285, 2, 285, '2020-02-15 14:28:08', '2020-02-15 14:28:08', '2020-02-15 14:28:10', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:28:10', NULL),
(286, 2, 286, '2020-02-15 14:28:10', '2020-02-15 14:28:10', '2020-02-15 14:28:12', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:28:12', NULL),
(287, 2, 287, '2020-02-15 14:44:06', '2020-02-15 14:44:06', '2020-02-15 14:44:08', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:44:08', NULL),
(288, 2, 288, '2020-02-15 14:44:08', '2020-02-15 14:44:08', '2020-02-15 14:44:09', 'FAILED', 'FAILED', '', '2020-02-15 14:44:09', NULL),
(289, 2, 289, '2020-02-15 14:44:36', '2020-02-15 14:44:36', '2020-02-15 14:44:38', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:44:38', NULL),
(290, 2, 290, '2020-02-15 14:44:38', '2020-02-15 14:44:38', '2020-02-15 14:44:39', 'COMPLETED', 'COMPLETED', '', '2020-02-15 14:44:39', NULL),
(291, 2, 291, '2020-02-15 15:07:27', '2020-02-15 15:07:27', '2020-02-15 15:07:29', 'COMPLETED', 'COMPLETED', '', '2020-02-15 15:07:29', NULL),
(292, 2, 292, '2020-02-15 15:07:29', '2020-02-15 15:07:29', '2020-02-15 15:07:31', 'COMPLETED', 'COMPLETED', '', '2020-02-15 15:07:31', NULL),
(293, 2, 293, '2020-02-17 10:08:31', '2020-02-17 10:08:31', '2020-02-17 10:08:33', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:08:33', NULL),
(294, 2, 294, '2020-02-17 10:08:33', '2020-02-17 10:08:33', '2020-02-17 10:08:34', 'FAILED', 'FAILED', '', '2020-02-17 10:08:34', NULL),
(295, 2, 295, '2020-02-17 10:09:07', '2020-02-17 10:09:07', '2020-02-17 10:09:09', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:09:09', NULL),
(296, 2, 296, '2020-02-17 10:09:09', '2020-02-17 10:09:09', '2020-02-17 10:09:09', 'FAILED', 'FAILED', '', '2020-02-17 10:09:09', NULL),
(297, 2, 297, '2020-02-17 10:09:57', '2020-02-17 10:09:57', '2020-02-17 10:09:59', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:09:59', NULL),
(298, 2, 298, '2020-02-17 10:09:59', '2020-02-17 10:09:59', '2020-02-17 10:10:00', 'FAILED', 'FAILED', '', '2020-02-17 10:10:00', NULL),
(299, 2, 299, '2020-02-17 10:12:56', '2020-02-17 10:12:56', '2020-02-17 10:12:57', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:12:57', NULL),
(300, 2, 300, '2020-02-17 10:12:57', '2020-02-17 10:12:57', '2020-02-17 10:12:58', 'FAILED', 'FAILED', '', '2020-02-17 10:12:58', NULL),
(301, 2, 301, '2020-02-17 10:14:32', '2020-02-17 10:14:32', '2020-02-17 10:14:34', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:14:34', NULL),
(302, 2, 302, '2020-02-17 10:14:34', '2020-02-17 10:14:34', '2020-02-17 10:14:35', 'FAILED', 'FAILED', '', '2020-02-17 10:14:35', NULL),
(303, 2, 303, '2020-02-17 10:16:03', '2020-02-17 10:16:03', '2020-02-17 10:16:04', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:16:04', NULL),
(304, 2, 304, '2020-02-17 10:16:04', '2020-02-17 10:16:04', '2020-02-17 10:16:06', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:16:06', NULL),
(305, 2, 305, '2020-02-17 10:29:23', '2020-02-17 10:29:23', '2020-02-17 10:29:25', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:29:25', NULL),
(306, 2, 306, '2020-02-17 10:29:25', '2020-02-17 10:29:25', '2020-02-17 10:29:26', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:29:26', NULL),
(307, 2, 307, '2020-02-17 10:31:06', '2020-02-17 10:31:06', '2020-02-17 10:31:08', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:31:08', NULL),
(308, 2, 308, '2020-02-17 10:31:08', '2020-02-17 10:31:08', '2020-02-17 10:31:10', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:31:10', NULL),
(309, 2, 309, '2020-02-17 10:44:24', '2020-02-17 10:44:24', '2020-02-17 10:44:26', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:44:26', NULL),
(310, 2, 310, '2020-02-17 10:44:26', '2020-02-17 10:44:26', '2020-02-17 10:44:27', 'FAILED', 'FAILED', '', '2020-02-17 10:44:27', NULL),
(311, 2, 311, '2020-02-17 10:45:36', '2020-02-17 10:45:36', '2020-02-17 10:45:38', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:45:38', NULL),
(312, 2, 312, '2020-02-17 10:45:38', '2020-02-17 10:45:38', '2020-02-17 10:45:39', 'FAILED', 'FAILED', '', '2020-02-17 10:45:39', NULL),
(313, 2, 313, '2020-02-17 10:46:23', '2020-02-17 10:46:23', '2020-02-17 10:46:25', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:46:25', NULL),
(314, 2, 314, '2020-02-17 10:46:25', '2020-02-17 10:46:25', '2020-02-17 10:46:26', 'FAILED', 'FAILED', '', '2020-02-17 10:46:26', NULL),
(315, 2, 315, '2020-02-17 10:47:13', '2020-02-17 10:47:13', '2020-02-17 10:47:14', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:47:14', NULL),
(316, 2, 316, '2020-02-17 10:47:14', '2020-02-17 10:47:14', '2020-02-17 10:47:15', 'FAILED', 'FAILED', '', '2020-02-17 10:47:15', NULL),
(317, 2, 317, '2020-02-17 10:47:49', '2020-02-17 10:47:49', '2020-02-17 10:47:50', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:47:50', NULL),
(318, 2, 318, '2020-02-17 10:47:51', '2020-02-17 10:47:51', '2020-02-17 10:47:51', 'FAILED', 'FAILED', '', '2020-02-17 10:47:51', NULL),
(319, 2, 319, '2020-02-17 10:49:01', '2020-02-17 10:49:01', '2020-02-17 10:49:02', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:49:02', NULL),
(320, 2, 320, '2020-02-17 10:49:02', '2020-02-17 10:49:02', '2020-02-17 10:49:04', 'COMPLETED', 'COMPLETED', '', '2020-02-17 10:49:04', NULL),
(321, 2, 321, '2020-02-17 11:25:56', '2020-02-17 11:25:56', '2020-02-17 11:25:57', 'COMPLETED', 'COMPLETED', '', '2020-02-17 11:25:57', NULL),
(322, 2, 322, '2020-02-17 11:25:57', '2020-02-17 11:25:57', '2020-02-17 11:25:59', 'FAILED', 'FAILED', '', '2020-02-17 11:25:59', NULL),
(323, 2, 323, '2020-02-17 11:26:37', '2020-02-17 11:26:37', '2020-02-17 11:26:39', 'COMPLETED', 'COMPLETED', '', '2020-02-17 11:26:39', NULL),
(324, 2, 324, '2020-02-17 11:26:39', '2020-02-17 11:26:39', '2020-02-17 11:26:40', 'COMPLETED', 'COMPLETED', '', '2020-02-17 11:26:40', NULL),
(325, 2, 325, '2020-02-17 11:59:43', '2020-02-17 11:59:43', '2020-02-17 11:59:45', 'COMPLETED', 'COMPLETED', '', '2020-02-17 11:59:45', NULL),
(326, 2, 326, '2020-02-17 11:59:45', '2020-02-17 11:59:45', '2020-02-17 11:59:46', 'FAILED', 'FAILED', '', '2020-02-17 11:59:46', NULL),
(327, 2, 327, '2020-02-17 12:00:42', '2020-02-17 12:00:42', '2020-02-17 12:00:44', 'COMPLETED', 'COMPLETED', '', '2020-02-17 12:00:44', NULL),
(328, 2, 328, '2020-02-17 12:00:44', '2020-02-17 12:00:44', '2020-02-17 12:00:46', 'COMPLETED', 'COMPLETED', '', '2020-02-17 12:00:46', NULL),
(329, 2, 329, '2020-02-17 12:15:08', '2020-02-17 12:15:08', '2020-02-17 12:15:10', 'COMPLETED', 'COMPLETED', '', '2020-02-17 12:15:10', NULL),
(330, 2, 330, '2020-02-17 12:15:10', '2020-02-17 12:15:10', '2020-02-17 12:15:12', 'COMPLETED', 'COMPLETED', '', '2020-02-17 12:15:12', NULL),
(331, 2, 331, '2020-02-17 12:16:05', '2020-02-17 12:16:05', '2020-02-17 12:16:07', 'COMPLETED', 'COMPLETED', '', '2020-02-17 12:16:07', NULL),
(332, 2, 332, '2020-02-17 12:16:07', '2020-02-17 12:16:07', '2020-02-17 12:16:09', 'COMPLETED', 'COMPLETED', '', '2020-02-17 12:16:09', NULL),
(333, 2, 333, '2020-02-18 09:32:04', '2020-02-18 09:32:04', '2020-02-18 09:32:06', 'COMPLETED', 'COMPLETED', '', '2020-02-18 09:32:06', NULL),
(334, 2, 334, '2020-02-18 09:32:06', '2020-02-18 09:32:06', '2020-02-18 09:32:08', 'COMPLETED', 'COMPLETED', '', '2020-02-18 09:32:08', NULL),
(335, 2, 335, '2020-02-18 10:12:38', '2020-02-18 10:12:38', '2020-02-18 10:12:40', 'COMPLETED', 'COMPLETED', '', '2020-02-18 10:12:40', NULL),
(336, 2, 336, '2020-02-18 10:12:40', '2020-02-18 10:12:40', '2020-02-18 10:12:41', 'FAILED', 'FAILED', '', '2020-02-18 10:12:41', NULL),
(337, 2, 337, '2020-02-18 10:13:12', '2020-02-18 10:13:12', '2020-02-18 10:13:14', 'COMPLETED', 'COMPLETED', '', '2020-02-18 10:13:14', NULL),
(338, 2, 338, '2020-02-18 10:13:14', '2020-02-18 10:13:14', '2020-02-18 10:13:16', 'COMPLETED', 'COMPLETED', '', '2020-02-18 10:13:16', NULL),
(339, 2, 339, '2020-02-18 11:00:31', '2020-02-18 11:00:31', '2020-02-18 11:00:32', 'COMPLETED', 'COMPLETED', '', '2020-02-18 11:00:32', NULL),
(340, 2, 340, '2020-02-18 11:00:32', '2020-02-18 11:00:32', '2020-02-18 11:00:35', 'FAILED', 'FAILED', '', '2020-02-18 11:00:35', NULL),
(341, 2, 341, '2020-02-18 11:09:00', '2020-02-18 11:09:00', '2020-02-18 11:09:01', 'COMPLETED', 'COMPLETED', '', '2020-02-18 11:09:01', NULL),
(342, 2, 342, '2020-02-18 11:09:01', '2020-02-18 11:09:01', '2020-02-18 11:09:03', 'FAILED', 'FAILED', '', '2020-02-18 11:09:03', NULL),
(343, 2, 343, '2020-02-18 11:14:46', '2020-02-18 11:14:46', '2020-02-18 11:14:48', 'COMPLETED', 'COMPLETED', '', '2020-02-18 11:14:48', NULL),
(344, 2, 344, '2020-02-18 11:14:48', '2020-02-18 11:14:48', '2020-02-18 11:14:50', 'FAILED', 'FAILED', '', '2020-02-18 11:14:50', NULL),
(345, 2, 345, '2020-02-18 14:15:46', '2020-02-18 14:15:46', '2020-02-18 14:15:48', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:15:48', NULL),
(346, 2, 346, '2020-02-18 14:15:48', '2020-02-18 14:15:48', '2020-02-18 14:15:50', 'FAILED', 'FAILED', '', '2020-02-18 14:15:50', NULL),
(347, 2, 347, '2020-02-18 14:19:03', '2020-02-18 14:19:03', '2020-02-18 14:19:05', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:19:05', NULL),
(348, 2, 348, '2020-02-18 14:19:05', '2020-02-18 14:19:05', '2020-02-18 14:19:07', 'FAILED', 'FAILED', '', '2020-02-18 14:19:07', NULL),
(349, 2, 349, '2020-02-18 14:26:36', '2020-02-18 14:26:36', '2020-02-18 14:26:38', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:26:38', NULL),
(350, 2, 350, '2020-02-18 14:26:38', '2020-02-18 14:26:38', '2020-02-18 14:26:40', 'FAILED', 'FAILED', '', '2020-02-18 14:26:40', NULL),
(351, 2, 351, '2020-02-18 14:28:00', '2020-02-18 14:28:00', '2020-02-18 14:28:01', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:28:01', NULL),
(352, 2, 352, '2020-02-18 14:28:02', '2020-02-18 14:28:02', '2020-02-18 14:28:03', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:28:03', NULL),
(353, 2, 353, '2020-02-18 14:30:44', '2020-02-18 14:30:44', '2020-02-18 14:30:46', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:30:46', NULL),
(354, 2, 354, '2020-02-18 14:30:46', '2020-02-18 14:30:46', '2020-02-18 14:30:48', 'FAILED', 'FAILED', '', '2020-02-18 14:30:48', NULL),
(355, 2, 355, '2020-02-18 14:32:14', '2020-02-18 14:32:14', '2020-02-18 14:32:16', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:32:16', NULL),
(356, 2, 356, '2020-02-18 14:32:16', '2020-02-18 14:32:16', '2020-02-18 14:32:18', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:32:18', NULL),
(357, 2, 357, '2020-02-18 14:38:52', '2020-02-18 14:38:52', '2020-02-18 14:38:54', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:38:54', NULL);
INSERT INTO `batch_job_execution` (`JOB_EXECUTION_ID`, `VERSION`, `JOB_INSTANCE_ID`, `CREATE_TIME`, `START_TIME`, `END_TIME`, `STATUS`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`, `JOB_CONFIGURATION_LOCATION`) VALUES
(358, 2, 358, '2020-02-18 14:38:54', '2020-02-18 14:38:54', '2020-02-18 14:38:56', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:38:56', NULL),
(359, 2, 359, '2020-02-18 14:52:57', '2020-02-18 14:52:57', '2020-02-18 14:52:59', 'COMPLETED', 'COMPLETED', '', '2020-02-18 14:52:59', NULL),
(360, 2, 360, '2020-02-18 14:52:59', '2020-02-18 14:52:59', '2020-02-18 14:53:01', 'FAILED', 'FAILED', '', '2020-02-18 14:53:01', NULL),
(361, 2, 361, '2020-02-18 15:10:20', '2020-02-18 15:10:20', '2020-02-18 15:10:21', 'COMPLETED', 'COMPLETED', '', '2020-02-18 15:10:21', NULL),
(362, 2, 362, '2020-02-18 15:10:21', '2020-02-18 15:10:22', '2020-02-18 15:10:24', 'COMPLETED', 'COMPLETED', '', '2020-02-18 15:10:24', NULL),
(363, 2, 363, '2020-02-18 15:18:18', '2020-02-18 15:18:18', '2020-02-18 15:18:20', 'COMPLETED', 'COMPLETED', '', '2020-02-18 15:18:20', NULL),
(364, 2, 364, '2020-02-18 15:18:20', '2020-02-18 15:18:20', '2020-02-18 15:18:22', 'COMPLETED', 'COMPLETED', '', '2020-02-18 15:18:22', NULL),
(365, 2, 365, '2020-02-18 16:00:50', '2020-02-18 16:00:50', '2020-02-18 16:00:52', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:00:52', NULL),
(366, 2, 366, '2020-02-18 16:00:52', '2020-02-18 16:00:52', '2020-02-18 16:00:54', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:00:54', NULL),
(367, 2, 367, '2020-02-18 16:00:54', '2020-02-18 16:00:54', '2020-02-18 16:00:54', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:00:54', NULL),
(368, 2, 368, '2020-02-18 16:19:37', '2020-02-18 16:19:37', '2020-02-18 16:19:39', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:19:39', NULL),
(369, 2, 369, '2020-02-18 16:19:39', '2020-02-18 16:19:39', '2020-02-18 16:19:41', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:19:41', NULL),
(370, 2, 370, '2020-02-18 16:19:41', '2020-02-18 16:19:41', '2020-02-18 16:19:41', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:19:41', NULL),
(371, 2, 371, '2020-02-18 16:23:34', '2020-02-18 16:23:34', '2020-02-18 16:23:36', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:23:36', NULL),
(372, 2, 372, '2020-02-18 16:23:36', '2020-02-18 16:23:36', '2020-02-18 16:23:38', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:23:38', NULL),
(373, 2, 373, '2020-02-18 16:23:38', '2020-02-18 16:23:38', '2020-02-18 16:23:38', 'FAILED', 'FAILED', '', '2020-02-18 16:23:38', NULL),
(374, 2, 374, '2020-02-18 16:24:20', '2020-02-18 16:24:20', '2020-02-18 16:24:22', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:24:22', NULL),
(375, 2, 375, '2020-02-18 16:24:22', '2020-02-18 16:24:22', '2020-02-18 16:24:24', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:24:24', NULL),
(376, 2, 376, '2020-02-18 16:24:24', '2020-02-18 16:24:24', '2020-02-18 16:24:24', 'FAILED', 'FAILED', '', '2020-02-18 16:24:24', NULL),
(377, 2, 377, '2020-02-18 16:25:37', '2020-02-18 16:25:37', '2020-02-18 16:25:38', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:25:38', NULL),
(378, 2, 378, '2020-02-18 16:25:38', '2020-02-18 16:25:38', '2020-02-18 16:25:40', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:25:40', NULL),
(379, 2, 379, '2020-02-18 16:25:40', '2020-02-18 16:25:40', '2020-02-18 16:25:40', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:25:40', NULL),
(380, 2, 380, '2020-02-18 16:33:49', '2020-02-18 16:33:49', '2020-02-18 16:33:50', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:33:50', NULL),
(381, 2, 381, '2020-02-18 16:33:50', '2020-02-18 16:33:51', '2020-02-18 16:33:53', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:33:53', NULL),
(382, 2, 382, '2020-02-18 16:33:53', '2020-02-18 16:33:53', '2020-02-18 16:33:53', 'FAILED', 'FAILED', '', '2020-02-18 16:33:53', NULL),
(383, 2, 383, '2020-02-18 16:34:54', '2020-02-18 16:34:54', '2020-02-18 16:34:55', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:34:55', NULL),
(384, 2, 384, '2020-02-18 16:34:55', '2020-02-18 16:34:55', '2020-02-18 16:34:57', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:34:57', NULL),
(385, 2, 385, '2020-02-18 16:34:57', '2020-02-18 16:34:57', '2020-02-18 16:34:57', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:34:57', NULL),
(386, 2, 386, '2020-02-18 16:48:28', '2020-02-18 16:48:28', '2020-02-18 16:48:30', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:48:30', NULL),
(387, 2, 387, '2020-02-18 16:48:30', '2020-02-18 16:48:30', '2020-02-18 16:48:32', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:48:32', NULL),
(388, 2, 388, '2020-02-18 16:48:32', '2020-02-18 16:48:32', '2020-02-18 16:48:32', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:48:32', NULL),
(389, 2, 389, '2020-02-18 16:49:35', '2020-02-18 16:49:35', '2020-02-18 16:49:36', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:49:36', NULL),
(390, 2, 390, '2020-02-18 16:49:36', '2020-02-18 16:49:36', '2020-02-18 16:49:38', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:49:38', NULL),
(391, 2, 391, '2020-02-18 16:49:38', '2020-02-18 16:49:38', '2020-02-18 16:49:39', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:49:39', NULL),
(392, 2, 392, '2020-02-18 16:57:24', '2020-02-18 16:57:24', '2020-02-18 16:57:26', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:57:26', NULL),
(393, 2, 393, '2020-02-18 16:57:26', '2020-02-18 16:57:26', '2020-02-18 16:57:28', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:57:28', NULL),
(394, 2, 394, '2020-02-18 16:57:28', '2020-02-18 16:57:28', '2020-02-18 16:57:28', 'FAILED', 'FAILED', '', '2020-02-18 16:57:28', NULL),
(395, 2, 395, '2020-02-18 16:58:24', '2020-02-18 16:58:24', '2020-02-18 16:58:26', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:58:26', NULL),
(396, 2, 396, '2020-02-18 16:58:26', '2020-02-18 16:58:26', '2020-02-18 16:58:28', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:58:28', NULL),
(397, 2, 397, '2020-02-18 16:58:28', '2020-02-18 16:58:28', '2020-02-18 16:58:28', 'COMPLETED', 'COMPLETED', '', '2020-02-18 16:58:28', NULL),
(398, 2, 398, '2020-02-18 17:00:20', '2020-02-18 17:00:20', '2020-02-18 17:00:21', 'COMPLETED', 'COMPLETED', '', '2020-02-18 17:00:21', NULL),
(399, 2, 399, '2020-02-18 17:00:21', '2020-02-18 17:00:21', '2020-02-18 17:00:23', 'COMPLETED', 'COMPLETED', '', '2020-02-18 17:00:23', NULL),
(400, 2, 400, '2020-02-18 17:00:23', '2020-02-18 17:00:23', '2020-02-18 17:00:23', 'COMPLETED', 'COMPLETED', '', '2020-02-18 17:00:23', NULL),
(401, 2, 401, '2020-02-18 18:28:05', '2020-02-18 18:28:05', '2020-02-18 18:28:07', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:28:07', NULL),
(402, 2, 402, '2020-02-18 18:28:07', '2020-02-18 18:28:07', '2020-02-18 18:28:08', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:28:08', NULL),
(403, 2, 403, '2020-02-18 18:28:09', '2020-02-18 18:28:09', '2020-02-18 18:28:09', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:28:09', NULL),
(404, 2, 404, '2020-02-18 18:41:29', '2020-02-18 18:41:29', '2020-02-18 18:41:31', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:41:31', NULL),
(405, 2, 405, '2020-02-18 18:41:31', '2020-02-18 18:41:31', '2020-02-18 18:41:33', 'FAILED', 'FAILED', '', '2020-02-18 18:41:33', NULL),
(406, 2, 406, '2020-02-18 18:41:33', '2020-02-18 18:41:33', '2020-02-18 18:41:33', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:41:33', NULL),
(407, 2, 407, '2020-02-18 18:42:38', '2020-02-18 18:42:38', '2020-02-18 18:42:40', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:42:40', NULL),
(408, 2, 408, '2020-02-18 18:42:40', '2020-02-18 18:42:40', '2020-02-18 18:42:42', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:42:42', NULL),
(409, 2, 409, '2020-02-18 18:42:42', '2020-02-18 18:42:42', '2020-02-18 18:42:42', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:42:42', NULL),
(410, 2, 410, '2020-02-18 18:49:57', '2020-02-18 18:49:57', '2020-02-18 18:49:58', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:49:58', NULL),
(411, 2, 411, '2020-02-18 18:49:58', '2020-02-18 18:49:58', '2020-02-18 18:50:00', 'FAILED', 'FAILED', '', '2020-02-18 18:50:00', NULL),
(412, 2, 412, '2020-02-18 18:50:00', '2020-02-18 18:50:00', '2020-02-18 18:50:01', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:50:01', NULL),
(413, 2, 413, '2020-02-18 18:50:40', '2020-02-18 18:50:40', '2020-02-18 18:50:42', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:50:42', NULL),
(414, 2, 414, '2020-02-18 18:50:42', '2020-02-18 18:50:42', '2020-02-18 18:50:44', 'FAILED', 'FAILED', '', '2020-02-18 18:50:44', NULL),
(415, 2, 415, '2020-02-18 18:50:44', '2020-02-18 18:50:44', '2020-02-18 18:50:44', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:50:44', NULL),
(416, 2, 416, '2020-02-18 18:51:56', '2020-02-18 18:51:56', '2020-02-18 18:51:58', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:51:58', NULL),
(417, 2, 417, '2020-02-18 18:51:58', '2020-02-18 18:51:58', '2020-02-18 18:52:00', 'FAILED', 'FAILED', '', '2020-02-18 18:52:00', NULL),
(418, 2, 418, '2020-02-18 18:52:00', '2020-02-18 18:52:00', '2020-02-18 18:52:00', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:52:00', NULL),
(419, 2, 419, '2020-02-18 18:52:52', '2020-02-18 18:52:52', '2020-02-18 18:52:54', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:52:54', NULL),
(420, 2, 420, '2020-02-18 18:52:54', '2020-02-18 18:52:54', '2020-02-18 18:52:56', 'FAILED', 'FAILED', '', '2020-02-18 18:52:56', NULL),
(421, 2, 421, '2020-02-18 18:52:56', '2020-02-18 18:52:56', '2020-02-18 18:52:56', 'COMPLETED', 'COMPLETED', '', '2020-02-18 18:52:56', NULL),
(422, 2, 422, '2020-02-18 19:02:24', '2020-02-18 19:02:24', '2020-02-18 19:02:26', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:02:26', NULL),
(423, 2, 423, '2020-02-18 19:02:26', '2020-02-18 19:02:26', '2020-02-18 19:02:28', 'FAILED', 'FAILED', '', '2020-02-18 19:02:28', NULL),
(424, 2, 424, '2020-02-18 19:02:28', '2020-02-18 19:02:28', '2020-02-18 19:02:29', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:02:29', NULL),
(425, 2, 425, '2020-02-18 19:03:14', '2020-02-18 19:03:14', '2020-02-18 19:03:15', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:03:15', NULL),
(426, 2, 426, '2020-02-18 19:03:15', '2020-02-18 19:03:15', '2020-02-18 19:03:17', 'FAILED', 'FAILED', '', '2020-02-18 19:03:17', NULL),
(427, 2, 427, '2020-02-18 19:03:17', '2020-02-18 19:03:17', '2020-02-18 19:03:18', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:03:18', NULL),
(428, 2, 428, '2020-02-18 19:03:43', '2020-02-18 19:03:43', '2020-02-18 19:03:45', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:03:45', NULL),
(429, 2, 429, '2020-02-18 19:03:45', '2020-02-18 19:03:45', '2020-02-18 19:03:47', 'FAILED', 'FAILED', '', '2020-02-18 19:03:47', NULL),
(430, 2, 430, '2020-02-18 19:03:47', '2020-02-18 19:03:47', '2020-02-18 19:03:48', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:03:48', NULL),
(431, 2, 431, '2020-02-18 19:04:34', '2020-02-18 19:04:34', '2020-02-18 19:04:36', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:04:36', NULL),
(432, 2, 432, '2020-02-18 19:04:36', '2020-02-18 19:04:36', '2020-02-18 19:04:38', 'FAILED', 'FAILED', '', '2020-02-18 19:04:38', NULL),
(433, 2, 433, '2020-02-18 19:04:38', '2020-02-18 19:04:38', '2020-02-18 19:04:38', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:04:38', NULL),
(434, 2, 434, '2020-02-18 19:05:52', '2020-02-18 19:05:52', '2020-02-18 19:05:53', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:05:53', NULL),
(435, 2, 435, '2020-02-18 19:05:53', '2020-02-18 19:05:53', '2020-02-18 19:05:55', 'FAILED', 'FAILED', '', '2020-02-18 19:05:55', NULL),
(436, 2, 436, '2020-02-18 19:05:55', '2020-02-18 19:05:55', '2020-02-18 19:05:55', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:05:55', NULL),
(437, 2, 437, '2020-02-18 19:07:08', '2020-02-18 19:07:08', '2020-02-18 19:07:10', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:07:10', NULL),
(438, 2, 438, '2020-02-18 19:07:10', '2020-02-18 19:07:10', '2020-02-18 19:07:13', 'FAILED', 'FAILED', '', '2020-02-18 19:07:13', NULL),
(439, 2, 439, '2020-02-18 19:07:13', '2020-02-18 19:07:13', '2020-02-18 19:07:13', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:07:13', NULL),
(440, 2, 440, '2020-02-18 19:08:48', '2020-02-18 19:08:48', '2020-02-18 19:08:49', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:08:49', NULL),
(441, 2, 441, '2020-02-18 19:08:49', '2020-02-18 19:08:49', '2020-02-18 19:08:51', 'FAILED', 'FAILED', '', '2020-02-18 19:08:51', NULL),
(442, 2, 442, '2020-02-18 19:08:51', '2020-02-18 19:08:51', '2020-02-18 19:08:51', 'COMPLETED', 'COMPLETED', '', '2020-02-18 19:08:51', NULL),
(443, 2, 443, '2020-02-19 08:51:43', '2020-02-19 08:51:43', '2020-02-19 08:51:45', 'COMPLETED', 'COMPLETED', '', '2020-02-19 08:51:45', NULL),
(444, 2, 444, '2020-02-19 08:51:45', '2020-02-19 08:51:45', '2020-02-19 08:51:47', 'FAILED', 'FAILED', '', '2020-02-19 08:51:47', NULL),
(445, 2, 445, '2020-02-19 08:51:47', '2020-02-19 08:51:47', '2020-02-19 08:51:47', 'COMPLETED', 'COMPLETED', '', '2020-02-19 08:51:47', NULL),
(446, 2, 446, '2020-02-19 08:57:18', '2020-02-19 08:57:18', '2020-02-19 08:57:20', 'COMPLETED', 'COMPLETED', '', '2020-02-19 08:57:20', NULL),
(447, 2, 447, '2020-02-19 08:57:20', '2020-02-19 08:57:20', '2020-02-19 08:57:22', 'FAILED', 'FAILED', '', '2020-02-19 08:57:22', NULL),
(448, 2, 448, '2020-02-19 08:57:22', '2020-02-19 08:57:22', '2020-02-19 08:57:22', 'COMPLETED', 'COMPLETED', '', '2020-02-19 08:57:22', NULL),
(449, 2, 449, '2020-02-19 08:58:13', '2020-02-19 08:58:13', '2020-02-19 08:58:14', 'COMPLETED', 'COMPLETED', '', '2020-02-19 08:58:14', NULL),
(450, 2, 450, '2020-02-19 08:58:14', '2020-02-19 08:58:14', '2020-02-19 08:58:16', 'FAILED', 'FAILED', '', '2020-02-19 08:58:16', NULL),
(451, 2, 451, '2020-02-19 08:58:16', '2020-02-19 08:58:16', '2020-02-19 08:58:17', 'COMPLETED', 'COMPLETED', '', '2020-02-19 08:58:17', NULL),
(452, 2, 452, '2020-02-19 09:02:22', '2020-02-19 09:02:22', '2020-02-19 09:02:24', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:02:24', NULL),
(453, 2, 453, '2020-02-19 09:02:24', '2020-02-19 09:02:24', '2020-02-19 09:02:26', 'FAILED', 'FAILED', '', '2020-02-19 09:02:26', NULL),
(454, 2, 454, '2020-02-19 09:02:26', '2020-02-19 09:02:26', '2020-02-19 09:02:26', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:02:26', NULL),
(455, 2, 455, '2020-02-19 09:04:31', '2020-02-19 09:04:31', '2020-02-19 09:04:33', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:04:33', NULL),
(456, 2, 456, '2020-02-19 09:04:33', '2020-02-19 09:04:33', '2020-02-19 09:04:35', 'FAILED', 'FAILED', '', '2020-02-19 09:04:35', NULL),
(457, 2, 457, '2020-02-19 09:04:35', '2020-02-19 09:04:35', '2020-02-19 09:04:35', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:04:35', NULL),
(458, 2, 458, '2020-02-19 09:25:45', '2020-02-19 09:25:45', '2020-02-19 09:25:47', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:25:47', NULL),
(459, 2, 459, '2020-02-19 09:25:47', '2020-02-19 09:25:47', '2020-02-19 09:25:49', 'FAILED', 'FAILED', '', '2020-02-19 09:25:49', NULL),
(460, 2, 460, '2020-02-19 09:25:49', '2020-02-19 09:25:49', '2020-02-19 09:25:49', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:25:49', NULL),
(461, 2, 461, '2020-02-19 09:26:32', '2020-02-19 09:26:32', '2020-02-19 09:26:34', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:26:34', NULL),
(462, 2, 462, '2020-02-19 09:26:34', '2020-02-19 09:26:34', '2020-02-19 09:26:37', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:26:37', NULL),
(463, 2, 463, '2020-02-19 09:26:37', '2020-02-19 09:26:37', '2020-02-19 09:26:37', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:26:37', NULL),
(464, 2, 464, '2020-02-19 09:50:47', '2020-02-19 09:50:47', '2020-02-19 09:50:49', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:50:49', NULL),
(465, 2, 465, '2020-02-19 09:50:49', '2020-02-19 09:50:49', '2020-02-19 09:50:51', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:50:51', NULL),
(466, 2, 466, '2020-02-19 09:50:51', '2020-02-19 09:50:51', '2020-02-19 09:50:51', 'COMPLETED', 'COMPLETED', '', '2020-02-19 09:50:51', NULL),
(467, 2, 467, '2020-02-19 10:09:20', '2020-02-19 10:09:20', '2020-02-19 10:09:22', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:09:22', NULL),
(468, 2, 468, '2020-02-19 10:09:22', '2020-02-19 10:09:22', '2020-02-19 10:09:24', 'FAILED', 'FAILED', '', '2020-02-19 10:09:24', NULL),
(469, 2, 469, '2020-02-19 10:09:24', '2020-02-19 10:09:24', '2020-02-19 10:09:24', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:09:24', NULL),
(470, 2, 470, '2020-02-19 10:11:46', '2020-02-19 10:11:46', '2020-02-19 10:11:48', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:11:48', NULL),
(471, 2, 471, '2020-02-19 10:11:48', '2020-02-19 10:11:48', '2020-02-19 10:11:50', 'FAILED', 'FAILED', '', '2020-02-19 10:11:50', NULL),
(472, 2, 472, '2020-02-19 10:11:50', '2020-02-19 10:11:50', '2020-02-19 10:11:50', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:11:50', NULL),
(473, 2, 473, '2020-02-19 10:12:39', '2020-02-19 10:12:39', '2020-02-19 10:12:41', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:12:41', NULL),
(474, 2, 474, '2020-02-19 10:12:41', '2020-02-19 10:12:41', '2020-02-19 10:12:44', 'FAILED', 'FAILED', '', '2020-02-19 10:12:44', NULL),
(475, 2, 475, '2020-02-19 10:12:44', '2020-02-19 10:12:44', '2020-02-19 10:12:44', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:12:44', NULL),
(476, 2, 476, '2020-02-19 10:13:17', '2020-02-19 10:13:17', '2020-02-19 10:13:19', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:13:19', NULL),
(477, 2, 477, '2020-02-19 10:13:19', '2020-02-19 10:13:19', '2020-02-19 10:13:21', 'FAILED', 'FAILED', '', '2020-02-19 10:13:21', NULL),
(478, 2, 478, '2020-02-19 10:13:21', '2020-02-19 10:13:21', '2020-02-19 10:13:21', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:13:21', NULL),
(479, 2, 479, '2020-02-19 10:14:18', '2020-02-19 10:14:18', '2020-02-19 10:14:19', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:14:19', NULL),
(480, 2, 480, '2020-02-19 10:14:19', '2020-02-19 10:14:19', '2020-02-19 10:14:22', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:14:22', NULL),
(481, 2, 481, '2020-02-19 10:14:22', '2020-02-19 10:14:22', '2020-02-19 10:14:22', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:14:22', NULL),
(482, 2, 482, '2020-02-19 10:16:14', '2020-02-19 10:16:14', '2020-02-19 10:16:17', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:16:17', NULL),
(483, 2, 483, '2020-02-19 10:16:17', '2020-02-19 10:16:17', '2020-02-19 10:16:19', 'FAILED', 'FAILED', '', '2020-02-19 10:16:19', NULL),
(484, 2, 484, '2020-02-19 10:16:19', '2020-02-19 10:16:19', '2020-02-19 10:16:19', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:16:19', NULL),
(485, 2, 485, '2020-02-19 10:16:50', '2020-02-19 10:16:50', '2020-02-19 10:16:52', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:16:52', NULL),
(486, 2, 486, '2020-02-19 10:16:52', '2020-02-19 10:16:52', '2020-02-19 10:16:55', 'FAILED', 'FAILED', '', '2020-02-19 10:16:55', NULL),
(487, 2, 487, '2020-02-19 10:16:55', '2020-02-19 10:16:55', '2020-02-19 10:16:55', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:16:55', NULL),
(488, 2, 488, '2020-02-19 10:17:57', '2020-02-19 10:17:57', '2020-02-19 10:17:59', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:17:59', NULL),
(489, 2, 489, '2020-02-19 10:17:59', '2020-02-19 10:17:59', '2020-02-19 10:18:01', 'FAILED', 'FAILED', '', '2020-02-19 10:18:01', NULL),
(490, 2, 490, '2020-02-19 10:18:01', '2020-02-19 10:18:01', '2020-02-19 10:18:01', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:18:01', NULL),
(491, 2, 491, '2020-02-19 10:18:51', '2020-02-19 10:18:51', '2020-02-19 10:18:52', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:18:52', NULL),
(492, 2, 492, '2020-02-19 10:18:52', '2020-02-19 10:18:52', '2020-02-19 10:18:55', 'FAILED', 'FAILED', '', '2020-02-19 10:18:55', NULL),
(493, 2, 493, '2020-02-19 10:18:55', '2020-02-19 10:18:55', '2020-02-19 10:18:55', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:18:55', NULL),
(494, 2, 494, '2020-02-19 10:32:57', '2020-02-19 10:32:57', '2020-02-19 10:33:00', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:33:00', NULL),
(495, 2, 495, '2020-02-19 10:33:00', '2020-02-19 10:33:00', '2020-02-19 10:33:04', 'FAILED', 'FAILED', '', '2020-02-19 10:33:04', NULL),
(496, 2, 496, '2020-02-19 10:33:04', '2020-02-19 10:33:04', '2020-02-19 10:33:04', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:33:04', NULL),
(497, 2, 497, '2020-02-19 10:33:51', '2020-02-19 10:33:51', '2020-02-19 10:33:53', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:33:53', NULL),
(498, 2, 498, '2020-02-19 10:33:53', '2020-02-19 10:33:53', '2020-02-19 10:33:55', 'FAILED', 'FAILED', '', '2020-02-19 10:33:55', NULL),
(499, 2, 499, '2020-02-19 10:33:55', '2020-02-19 10:33:55', '2020-02-19 10:33:55', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:33:55', NULL),
(500, 2, 500, '2020-02-19 10:36:42', '2020-02-19 10:36:42', '2020-02-19 10:36:44', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:36:44', NULL),
(501, 2, 501, '2020-02-19 10:36:44', '2020-02-19 10:36:44', '2020-02-19 10:36:46', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:36:46', NULL),
(502, 2, 502, '2020-02-19 10:36:46', '2020-02-19 10:36:46', '2020-02-19 10:36:46', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:36:46', NULL),
(503, 2, 503, '2020-02-19 10:57:31', '2020-02-19 10:57:31', '2020-02-19 10:57:33', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:57:33', NULL),
(504, 2, 504, '2020-02-19 10:57:33', '2020-02-19 10:57:33', '2020-02-19 10:57:34', 'FAILED', 'FAILED', '', '2020-02-19 10:57:34', NULL),
(505, 2, 505, '2020-02-19 10:57:34', '2020-02-19 10:57:34', '2020-02-19 10:57:34', 'COMPLETED', 'COMPLETED', '', '2020-02-19 10:57:34', NULL),
(506, 2, 506, '2020-02-19 11:03:15', '2020-02-19 11:03:15', '2020-02-19 11:03:17', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:03:17', NULL),
(507, 2, 507, '2020-02-19 11:03:17', '2020-02-19 11:03:17', '2020-02-19 11:03:18', 'FAILED', 'FAILED', '', '2020-02-19 11:03:18', NULL),
(508, 2, 508, '2020-02-19 11:03:19', '2020-02-19 11:03:19', '2020-02-19 11:03:19', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:03:19', NULL),
(509, 2, 509, '2020-02-19 11:06:07', '2020-02-19 11:06:07', '2020-02-19 11:06:09', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:06:09', NULL),
(510, 2, 510, '2020-02-19 11:06:09', '2020-02-19 11:06:09', '2020-02-19 11:06:11', 'FAILED', 'FAILED', '', '2020-02-19 11:06:11', NULL),
(511, 2, 511, '2020-02-19 11:06:11', '2020-02-19 11:06:11', '2020-02-19 11:06:11', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:06:11', NULL),
(512, 2, 512, '2020-02-19 11:07:26', '2020-02-19 11:07:26', '2020-02-19 11:07:29', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:07:29', NULL),
(513, 2, 513, '2020-02-19 11:07:29', '2020-02-19 11:07:29', '2020-02-19 11:07:31', 'FAILED', 'FAILED', '', '2020-02-19 11:07:31', NULL),
(514, 2, 514, '2020-02-19 11:07:31', '2020-02-19 11:07:31', '2020-02-19 11:07:31', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:07:31', NULL),
(515, 2, 515, '2020-02-19 11:08:26', '2020-02-19 11:08:26', '2020-02-19 11:08:27', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:08:27', NULL),
(516, 2, 516, '2020-02-19 11:08:27', '2020-02-19 11:08:27', '2020-02-19 11:08:29', 'FAILED', 'FAILED', '', '2020-02-19 11:08:29', NULL),
(517, 2, 517, '2020-02-19 11:08:29', '2020-02-19 11:08:29', '2020-02-19 11:08:29', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:08:29', NULL),
(518, 2, 518, '2020-02-19 11:11:46', '2020-02-19 11:11:46', '2020-02-19 11:11:47', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:11:47', NULL),
(519, 2, 519, '2020-02-19 11:11:47', '2020-02-19 11:11:47', '2020-02-19 11:11:49', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:11:49', NULL),
(520, 2, 520, '2020-02-19 11:11:49', '2020-02-19 11:11:49', '2020-02-19 11:11:49', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:11:49', NULL),
(521, 2, 521, '2020-02-19 11:12:36', '2020-02-19 11:12:36', '2020-02-19 11:12:37', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:12:37', NULL),
(522, 2, 522, '2020-02-19 11:12:37', '2020-02-19 11:12:37', '2020-02-19 11:12:39', 'FAILED', 'FAILED', '', '2020-02-19 11:12:39', NULL),
(523, 2, 523, '2020-02-19 11:12:39', '2020-02-19 11:12:39', '2020-02-19 11:12:39', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:12:39', NULL),
(524, 2, 524, '2020-02-19 11:13:49', '2020-02-19 11:13:49', '2020-02-19 11:13:50', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:13:50', NULL),
(525, 2, 525, '2020-02-19 11:13:50', '2020-02-19 11:13:50', '2020-02-19 11:13:52', 'FAILED', 'FAILED', '', '2020-02-19 11:13:52', NULL),
(526, 2, 526, '2020-02-19 11:13:52', '2020-02-19 11:13:52', '2020-02-19 11:13:52', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:13:52', NULL),
(527, 2, 527, '2020-02-19 11:14:29', '2020-02-19 11:14:29', '2020-02-19 11:14:30', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:14:30', NULL),
(528, 2, 528, '2020-02-19 11:14:30', '2020-02-19 11:14:30', '2020-02-19 11:14:32', 'FAILED', 'FAILED', '', '2020-02-19 11:14:32', NULL),
(529, 2, 529, '2020-02-19 11:14:32', '2020-02-19 11:14:32', '2020-02-19 11:14:32', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:14:32', NULL),
(530, 2, 530, '2020-02-19 11:19:49', '2020-02-19 11:19:49', '2020-02-19 11:19:51', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:19:51', NULL),
(531, 2, 531, '2020-02-19 11:19:51', '2020-02-19 11:19:51', '2020-02-19 11:19:52', 'FAILED', 'FAILED', '', '2020-02-19 11:19:52', NULL),
(532, 2, 532, '2020-02-19 11:19:52', '2020-02-19 11:19:52', '2020-02-19 11:19:53', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:19:53', NULL),
(533, 2, 533, '2020-02-19 11:23:05', '2020-02-19 11:23:05', '2020-02-19 11:23:07', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:23:07', NULL),
(534, 2, 534, '2020-02-19 11:23:07', '2020-02-19 11:23:07', '2020-02-19 11:23:09', 'FAILED', 'FAILED', '', '2020-02-19 11:23:09', NULL),
(535, 2, 535, '2020-02-19 11:23:09', '2020-02-19 11:23:09', '2020-02-19 11:23:09', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:23:09', NULL),
(536, 2, 536, '2020-02-19 11:25:09', '2020-02-19 11:25:09', '2020-02-19 11:25:11', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:25:11', NULL),
(537, 2, 537, '2020-02-19 11:25:11', '2020-02-19 11:25:11', '2020-02-19 11:25:12', 'FAILED', 'FAILED', '', '2020-02-19 11:25:12', NULL),
(538, 2, 538, '2020-02-19 11:25:12', '2020-02-19 11:25:12', '2020-02-19 11:25:12', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:25:12', NULL),
(539, 2, 539, '2020-02-19 11:27:24', '2020-02-19 11:27:24', '2020-02-19 11:27:26', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:27:26', NULL),
(540, 2, 540, '2020-02-19 11:27:26', '2020-02-19 11:27:26', '2020-02-19 11:27:28', 'FAILED', 'FAILED', '', '2020-02-19 11:27:28', NULL),
(541, 2, 541, '2020-02-19 11:27:28', '2020-02-19 11:27:28', '2020-02-19 11:27:29', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:27:29', NULL),
(542, 2, 542, '2020-02-19 11:29:11', '2020-02-19 11:29:11', '2020-02-19 11:29:12', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:29:12', NULL),
(543, 2, 543, '2020-02-19 11:29:12', '2020-02-19 11:29:12', '2020-02-19 11:29:14', 'FAILED', 'FAILED', '', '2020-02-19 11:29:14', NULL),
(544, 2, 544, '2020-02-19 11:29:14', '2020-02-19 11:29:14', '2020-02-19 11:29:14', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:29:14', NULL),
(545, 2, 545, '2020-02-19 11:31:22', '2020-02-19 11:31:22', '2020-02-19 11:31:23', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:31:23', NULL),
(546, 2, 546, '2020-02-19 11:31:23', '2020-02-19 11:31:23', '2020-02-19 11:31:25', 'FAILED', 'FAILED', '', '2020-02-19 11:31:25', NULL),
(547, 2, 547, '2020-02-19 11:31:25', '2020-02-19 11:31:25', '2020-02-19 11:31:25', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:31:25', NULL),
(548, 2, 548, '2020-02-19 11:32:52', '2020-02-19 11:32:52', '2020-02-19 11:32:54', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:32:54', NULL),
(549, 2, 549, '2020-02-19 11:32:54', '2020-02-19 11:32:54', '2020-02-19 11:32:55', 'FAILED', 'FAILED', '', '2020-02-19 11:32:55', NULL),
(550, 2, 550, '2020-02-19 11:32:55', '2020-02-19 11:32:55', '2020-02-19 11:32:55', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:32:55', NULL),
(551, 2, 551, '2020-02-19 11:33:34', '2020-02-19 11:33:34', '2020-02-19 11:33:35', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:33:35', NULL),
(552, 2, 552, '2020-02-19 11:33:35', '2020-02-19 11:33:35', '2020-02-19 11:33:37', 'FAILED', 'FAILED', '', '2020-02-19 11:33:37', NULL),
(553, 2, 553, '2020-02-19 11:33:37', '2020-02-19 11:33:37', '2020-02-19 11:33:37', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:33:37', NULL),
(554, 2, 554, '2020-02-19 11:34:04', '2020-02-19 11:34:04', '2020-02-19 11:34:05', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:34:05', NULL),
(555, 2, 555, '2020-02-19 11:34:05', '2020-02-19 11:34:06', '2020-02-19 11:34:07', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:34:07', NULL),
(556, 2, 556, '2020-02-19 11:34:07', '2020-02-19 11:34:07', '2020-02-19 11:34:08', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:34:08', NULL),
(557, 2, 557, '2020-02-19 11:38:09', '2020-02-19 11:38:09', '2020-02-19 11:38:10', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:38:10', NULL),
(558, 2, 558, '2020-02-19 11:38:10', '2020-02-19 11:38:10', '2020-02-19 11:38:12', 'FAILED', 'FAILED', '', '2020-02-19 11:38:12', NULL),
(559, 2, 559, '2020-02-19 11:38:12', '2020-02-19 11:38:12', '2020-02-19 11:38:12', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:38:12', NULL),
(560, 2, 560, '2020-02-19 11:38:47', '2020-02-19 11:38:47', '2020-02-19 11:38:49', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:38:49', NULL),
(561, 2, 561, '2020-02-19 11:38:49', '2020-02-19 11:38:49', '2020-02-19 11:38:51', 'FAILED', 'FAILED', '', '2020-02-19 11:38:51', NULL),
(562, 2, 562, '2020-02-19 11:38:51', '2020-02-19 11:38:51', '2020-02-19 11:38:51', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:38:51', NULL),
(563, 2, 563, '2020-02-19 11:40:14', '2020-02-19 11:40:14', '2020-02-19 11:40:16', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:40:16', NULL),
(564, 2, 564, '2020-02-19 11:40:16', '2020-02-19 11:40:16', '2020-02-19 11:40:17', 'FAILED', 'FAILED', '', '2020-02-19 11:40:17', NULL),
(565, 2, 565, '2020-02-19 11:40:17', '2020-02-19 11:40:17', '2020-02-19 11:40:17', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:40:17', NULL),
(566, 2, 566, '2020-02-19 11:46:27', '2020-02-19 11:46:27', '2020-02-19 11:46:29', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:46:29', NULL),
(567, 2, 567, '2020-02-19 11:46:29', '2020-02-19 11:46:29', '2020-02-19 11:46:30', 'FAILED', 'FAILED', '', '2020-02-19 11:46:30', NULL),
(568, 2, 568, '2020-02-19 11:46:30', '2020-02-19 11:46:30', '2020-02-19 11:46:31', 'COMPLETED', 'COMPLETED', '', '2020-02-19 11:46:31', NULL),
(569, 2, 569, '2020-02-19 12:13:24', '2020-02-19 12:13:25', '2020-02-19 12:13:26', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:13:26', NULL),
(570, 2, 570, '2020-02-19 12:13:26', '2020-02-19 12:13:26', '2020-02-19 12:13:28', 'FAILED', 'FAILED', '', '2020-02-19 12:13:28', NULL),
(571, 2, 571, '2020-02-19 12:13:28', '2020-02-19 12:13:28', '2020-02-19 12:13:28', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:13:28', NULL),
(572, 2, 572, '2020-02-19 12:14:27', '2020-02-19 12:14:27', '2020-02-19 12:14:29', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:14:29', NULL),
(573, 2, 573, '2020-02-19 12:14:29', '2020-02-19 12:14:29', '2020-02-19 12:14:30', 'FAILED', 'FAILED', '', '2020-02-19 12:14:30', NULL),
(574, 2, 574, '2020-02-19 12:14:30', '2020-02-19 12:14:30', '2020-02-19 12:14:31', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:14:31', NULL),
(575, 2, 575, '2020-02-19 12:15:28', '2020-02-19 12:15:28', '2020-02-19 12:15:30', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:15:30', NULL),
(576, 2, 576, '2020-02-19 12:15:30', '2020-02-19 12:15:30', '2020-02-19 12:15:31', 'FAILED', 'FAILED', '', '2020-02-19 12:15:31', NULL),
(577, 2, 577, '2020-02-19 12:15:31', '2020-02-19 12:15:31', '2020-02-19 12:15:32', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:15:32', NULL),
(578, 2, 578, '2020-02-19 12:23:21', '2020-02-19 12:23:21', '2020-02-19 12:23:23', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:23:23', NULL),
(579, 2, 579, '2020-02-19 12:23:23', '2020-02-19 12:23:23', '2020-02-19 12:23:25', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:23:25', NULL),
(580, 2, 580, '2020-02-19 12:23:25', '2020-02-19 12:23:25', '2020-02-19 12:23:26', 'COMPLETED', 'COMPLETED', '', '2020-02-19 12:23:26', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `batch_job_execution_context`
--

CREATE TABLE `batch_job_execution_context` (
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `SHORT_CONTEXT` varchar(2500) NOT NULL,
  `SERIALIZED_CONTEXT` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_job_execution_context`
--

INSERT INTO `batch_job_execution_context` (`JOB_EXECUTION_ID`, `SHORT_CONTEXT`, `SERIALIZED_CONTEXT`) VALUES
(0, '{}', NULL),
(1, '{}', NULL),
(2, '{}', NULL),
(3, '{}', NULL),
(4, '{}', NULL),
(5, '{}', NULL),
(6, '{}', NULL),
(7, '{}', NULL),
(8, '{}', NULL),
(9, '{}', NULL),
(10, '{}', NULL),
(11, '{}', NULL),
(12, '{}', NULL),
(13, '{}', NULL),
(14, '{}', NULL),
(15, '{}', NULL),
(16, '{}', NULL),
(17, '{}', NULL),
(18, '{}', NULL),
(19, '{}', NULL),
(20, '{}', NULL),
(21, '{}', NULL),
(22, '{}', NULL),
(23, '{}', NULL),
(24, '{}', NULL),
(25, '{}', NULL),
(26, '{}', NULL),
(27, '{}', NULL),
(28, '{}', NULL),
(29, '{}', NULL),
(30, '{}', NULL),
(31, '{}', NULL),
(32, '{}', NULL),
(33, '{}', NULL),
(34, '{}', NULL),
(35, '{}', NULL),
(36, '{}', NULL),
(37, '{}', NULL),
(38, '{}', NULL),
(39, '{}', NULL),
(40, '{}', NULL),
(41, '{}', NULL),
(42, '{}', NULL),
(43, '{}', NULL),
(44, '{}', NULL),
(45, '{}', NULL),
(46, '{}', NULL),
(47, '{}', NULL),
(48, '{}', NULL),
(49, '{}', NULL),
(50, '{}', NULL),
(51, '{}', NULL),
(52, '{}', NULL),
(53, '{}', NULL),
(54, '{}', NULL),
(55, '{}', NULL),
(56, '{}', NULL),
(57, '{}', NULL),
(58, '{}', NULL),
(59, '{}', NULL),
(60, '{}', NULL),
(61, '{}', NULL),
(62, '{}', NULL),
(63, '{}', NULL),
(64, '{}', NULL),
(65, '{}', NULL),
(66, '{}', NULL),
(67, '{}', NULL),
(68, '{}', NULL),
(69, '{}', NULL),
(70, '{}', NULL),
(71, '{}', NULL),
(72, '{}', NULL),
(73, '{}', NULL),
(74, '{}', NULL),
(75, '{}', NULL),
(76, '{}', NULL),
(77, '{}', NULL),
(78, '{}', NULL),
(79, '{}', NULL),
(80, '{}', NULL),
(81, '{}', NULL),
(82, '{}', NULL),
(83, '{}', NULL),
(84, '{}', NULL),
(85, '{}', NULL),
(86, '{}', NULL),
(87, '{}', NULL),
(88, '{}', NULL),
(89, '{}', NULL),
(90, '{}', NULL),
(91, '{}', NULL),
(92, '{}', NULL),
(93, '{}', NULL),
(94, '{}', NULL),
(95, '{}', NULL),
(96, '{}', NULL),
(97, '{}', NULL),
(98, '{}', NULL),
(99, '{}', NULL),
(100, '{}', NULL),
(101, '{}', NULL),
(102, '{}', NULL),
(103, '{}', NULL),
(104, '{}', NULL),
(105, '{}', NULL),
(106, '{}', NULL),
(107, '{}', NULL),
(108, '{}', NULL),
(109, '{}', NULL),
(110, '{}', NULL),
(111, '{}', NULL),
(112, '{}', NULL),
(113, '{}', NULL),
(114, '{}', NULL),
(115, '{}', NULL),
(116, '{}', NULL),
(117, '{}', NULL),
(118, '{}', NULL),
(119, '{}', NULL),
(120, '{}', NULL),
(121, '{}', NULL),
(122, '{}', NULL),
(123, '{}', NULL),
(124, '{}', NULL),
(125, '{}', NULL),
(126, '{}', NULL),
(127, '{}', NULL),
(128, '{}', NULL),
(129, '{}', NULL),
(130, '{}', NULL),
(131, '{}', NULL),
(132, '{}', NULL),
(133, '{}', NULL),
(134, '{}', NULL),
(135, '{}', NULL),
(136, '{}', NULL),
(137, '{}', NULL),
(138, '{}', NULL),
(139, '{}', NULL),
(140, '{}', NULL),
(141, '{}', NULL),
(142, '{}', NULL),
(143, '{}', NULL),
(144, '{}', NULL),
(145, '{}', NULL),
(146, '{}', NULL),
(147, '{}', NULL),
(148, '{}', NULL),
(149, '{}', NULL),
(150, '{}', NULL),
(151, '{}', NULL),
(152, '{}', NULL),
(153, '{}', NULL),
(154, '{}', NULL),
(155, '{}', NULL),
(156, '{}', NULL),
(157, '{}', NULL),
(158, '{}', NULL),
(159, '{}', NULL),
(160, '{}', NULL),
(161, '{}', NULL),
(162, '{}', NULL),
(163, '{}', NULL),
(164, '{}', NULL),
(165, '{}', NULL),
(166, '{}', NULL),
(167, '{}', NULL),
(168, '{}', NULL),
(169, '{}', NULL),
(170, '{}', NULL),
(171, '{}', NULL),
(172, '{}', NULL),
(173, '{}', NULL),
(174, '{}', NULL),
(175, '{}', NULL),
(176, '{}', NULL),
(177, '{}', NULL),
(178, '{}', NULL),
(179, '{}', NULL),
(180, '{}', NULL),
(181, '{}', NULL),
(182, '{}', NULL),
(183, '{}', NULL),
(184, '{}', NULL),
(185, '{}', NULL),
(186, '{}', NULL),
(187, '{}', NULL),
(188, '{}', NULL),
(189, '{}', NULL),
(190, '{}', NULL),
(191, '{}', NULL),
(192, '{}', NULL),
(193, '{}', NULL),
(194, '{}', NULL),
(195, '{}', NULL),
(196, '{}', NULL),
(197, '{}', NULL),
(198, '{}', NULL),
(199, '{}', NULL),
(200, '{}', NULL),
(201, '{}', NULL),
(202, '{}', NULL),
(203, '{}', NULL),
(204, '{}', NULL),
(205, '{}', NULL),
(206, '{}', NULL),
(207, '{}', NULL),
(208, '{}', NULL),
(209, '{}', NULL),
(210, '{}', NULL),
(211, '{}', NULL),
(212, '{}', NULL),
(213, '{}', NULL),
(214, '{}', NULL),
(215, '{}', NULL),
(216, '{}', NULL),
(217, '{}', NULL),
(218, '{}', NULL),
(219, '{}', NULL),
(220, '{}', NULL),
(221, '{}', NULL),
(222, '{}', NULL),
(223, '{}', NULL),
(224, '{}', NULL),
(225, '{}', NULL),
(226, '{}', NULL),
(227, '{}', NULL),
(228, '{}', NULL),
(229, '{}', NULL),
(230, '{}', NULL),
(231, '{}', NULL),
(232, '{}', NULL),
(233, '{}', NULL),
(234, '{}', NULL),
(235, '{}', NULL),
(236, '{}', NULL),
(237, '{}', NULL),
(238, '{}', NULL),
(239, '{}', NULL),
(240, '{}', NULL),
(241, '{}', NULL),
(242, '{}', NULL),
(243, '{}', NULL),
(244, '{}', NULL),
(245, '{}', NULL),
(246, '{}', NULL),
(247, '{}', NULL),
(248, '{}', NULL),
(249, '{}', NULL),
(250, '{}', NULL),
(251, '{}', NULL),
(252, '{}', NULL),
(253, '{}', NULL),
(254, '{}', NULL),
(255, '{}', NULL),
(256, '{}', NULL),
(257, '{}', NULL),
(258, '{}', NULL),
(259, '{}', NULL),
(260, '{}', NULL),
(261, '{}', NULL),
(262, '{}', NULL),
(263, '{}', NULL),
(264, '{}', NULL),
(265, '{}', NULL),
(266, '{}', NULL),
(267, '{}', NULL),
(268, '{}', NULL),
(269, '{}', NULL),
(270, '{}', NULL),
(271, '{}', NULL),
(272, '{}', NULL),
(273, '{}', NULL),
(274, '{}', NULL),
(275, '{}', NULL),
(276, '{}', NULL),
(277, '{}', NULL),
(278, '{}', NULL),
(279, '{}', NULL),
(280, '{}', NULL),
(281, '{}', NULL),
(282, '{}', NULL),
(283, '{}', NULL),
(284, '{}', NULL),
(285, '{}', NULL),
(286, '{}', NULL),
(287, '{}', NULL),
(288, '{}', NULL),
(289, '{}', NULL),
(290, '{}', NULL),
(291, '{}', NULL),
(292, '{}', NULL),
(293, '{}', NULL),
(294, '{}', NULL),
(295, '{}', NULL),
(296, '{}', NULL),
(297, '{}', NULL),
(298, '{}', NULL),
(299, '{}', NULL),
(300, '{}', NULL),
(301, '{}', NULL),
(302, '{}', NULL),
(303, '{}', NULL),
(304, '{}', NULL),
(305, '{}', NULL),
(306, '{}', NULL),
(307, '{}', NULL),
(308, '{}', NULL),
(309, '{}', NULL),
(310, '{}', NULL),
(311, '{}', NULL),
(312, '{}', NULL),
(313, '{}', NULL),
(314, '{}', NULL),
(315, '{}', NULL),
(316, '{}', NULL),
(317, '{}', NULL),
(318, '{}', NULL),
(319, '{}', NULL),
(320, '{}', NULL),
(321, '{}', NULL),
(322, '{}', NULL),
(323, '{}', NULL),
(324, '{}', NULL),
(325, '{}', NULL),
(326, '{}', NULL),
(327, '{}', NULL),
(328, '{}', NULL),
(329, '{}', NULL),
(330, '{}', NULL),
(331, '{}', NULL),
(332, '{}', NULL),
(333, '{}', NULL),
(334, '{}', NULL),
(335, '{}', NULL),
(336, '{}', NULL),
(337, '{}', NULL),
(338, '{}', NULL),
(339, '{}', NULL),
(340, '{}', NULL),
(341, '{}', NULL),
(342, '{}', NULL),
(343, '{}', NULL),
(344, '{}', NULL),
(345, '{}', NULL),
(346, '{}', NULL),
(347, '{}', NULL),
(348, '{}', NULL),
(349, '{}', NULL),
(350, '{}', NULL),
(351, '{}', NULL),
(352, '{}', NULL),
(353, '{}', NULL),
(354, '{}', NULL),
(355, '{}', NULL),
(356, '{}', NULL),
(357, '{}', NULL),
(358, '{}', NULL),
(359, '{}', NULL),
(360, '{}', NULL),
(361, '{}', NULL),
(362, '{}', NULL),
(363, '{}', NULL),
(364, '{}', NULL),
(365, '{}', NULL),
(366, '{}', NULL),
(367, '{}', NULL),
(368, '{}', NULL),
(369, '{}', NULL),
(370, '{}', NULL),
(371, '{}', NULL),
(372, '{}', NULL),
(373, '{}', NULL),
(374, '{}', NULL),
(375, '{}', NULL),
(376, '{}', NULL),
(377, '{}', NULL),
(378, '{}', NULL),
(379, '{}', NULL),
(380, '{}', NULL),
(381, '{}', NULL),
(382, '{}', NULL),
(383, '{}', NULL),
(384, '{}', NULL),
(385, '{}', NULL),
(386, '{}', NULL),
(387, '{}', NULL),
(388, '{}', NULL),
(389, '{}', NULL),
(390, '{}', NULL),
(391, '{}', NULL),
(392, '{}', NULL),
(393, '{}', NULL),
(394, '{}', NULL),
(395, '{}', NULL),
(396, '{}', NULL),
(397, '{}', NULL),
(398, '{}', NULL),
(399, '{}', NULL),
(400, '{}', NULL),
(401, '{}', NULL),
(402, '{}', NULL),
(403, '{}', NULL),
(404, '{}', NULL),
(405, '{}', NULL),
(406, '{}', NULL),
(407, '{}', NULL),
(408, '{}', NULL),
(409, '{}', NULL),
(410, '{}', NULL),
(411, '{}', NULL),
(412, '{}', NULL),
(413, '{}', NULL),
(414, '{}', NULL),
(415, '{}', NULL),
(416, '{}', NULL),
(417, '{}', NULL),
(418, '{}', NULL),
(419, '{}', NULL),
(420, '{}', NULL),
(421, '{}', NULL),
(422, '{}', NULL),
(423, '{}', NULL),
(424, '{}', NULL),
(425, '{}', NULL),
(426, '{}', NULL),
(427, '{}', NULL),
(428, '{}', NULL),
(429, '{}', NULL),
(430, '{}', NULL),
(431, '{}', NULL),
(432, '{}', NULL),
(433, '{}', NULL),
(434, '{}', NULL),
(435, '{}', NULL),
(436, '{}', NULL),
(437, '{}', NULL),
(438, '{}', NULL),
(439, '{}', NULL),
(440, '{}', NULL),
(441, '{}', NULL),
(442, '{}', NULL),
(443, '{}', NULL),
(444, '{}', NULL),
(445, '{}', NULL),
(446, '{}', NULL),
(447, '{}', NULL),
(448, '{}', NULL),
(449, '{}', NULL),
(450, '{}', NULL),
(451, '{}', NULL),
(452, '{}', NULL),
(453, '{}', NULL),
(454, '{}', NULL),
(455, '{}', NULL),
(456, '{}', NULL),
(457, '{}', NULL),
(458, '{}', NULL),
(459, '{}', NULL),
(460, '{}', NULL),
(461, '{}', NULL),
(462, '{}', NULL),
(463, '{}', NULL),
(464, '{}', NULL),
(465, '{}', NULL),
(466, '{}', NULL),
(467, '{}', NULL),
(468, '{}', NULL),
(469, '{}', NULL),
(470, '{}', NULL),
(471, '{}', NULL),
(472, '{}', NULL),
(473, '{}', NULL),
(474, '{}', NULL),
(475, '{}', NULL),
(476, '{}', NULL),
(477, '{}', NULL),
(478, '{}', NULL),
(479, '{}', NULL),
(480, '{}', NULL),
(481, '{}', NULL),
(482, '{}', NULL),
(483, '{}', NULL),
(484, '{}', NULL),
(485, '{}', NULL),
(486, '{}', NULL),
(487, '{}', NULL),
(488, '{}', NULL),
(489, '{}', NULL),
(490, '{}', NULL),
(491, '{}', NULL),
(492, '{}', NULL),
(493, '{}', NULL),
(494, '{}', NULL),
(495, '{}', NULL),
(496, '{}', NULL),
(497, '{}', NULL),
(498, '{}', NULL),
(499, '{}', NULL),
(500, '{}', NULL),
(501, '{}', NULL),
(502, '{}', NULL),
(503, '{}', NULL),
(504, '{}', NULL),
(505, '{}', NULL),
(506, '{}', NULL),
(507, '{}', NULL),
(508, '{}', NULL),
(509, '{}', NULL),
(510, '{}', NULL),
(511, '{}', NULL),
(512, '{}', NULL),
(513, '{}', NULL),
(514, '{}', NULL),
(515, '{}', NULL),
(516, '{}', NULL),
(517, '{}', NULL),
(518, '{}', NULL),
(519, '{}', NULL),
(520, '{}', NULL),
(521, '{}', NULL),
(522, '{}', NULL),
(523, '{}', NULL),
(524, '{}', NULL),
(525, '{}', NULL),
(526, '{}', NULL),
(527, '{}', NULL),
(528, '{}', NULL),
(529, '{}', NULL),
(530, '{}', NULL),
(531, '{}', NULL),
(532, '{}', NULL),
(533, '{}', NULL),
(534, '{}', NULL),
(535, '{}', NULL),
(536, '{}', NULL),
(537, '{}', NULL),
(538, '{}', NULL),
(539, '{}', NULL),
(540, '{}', NULL),
(541, '{}', NULL),
(542, '{}', NULL),
(543, '{}', NULL),
(544, '{}', NULL),
(545, '{}', NULL),
(546, '{}', NULL),
(547, '{}', NULL),
(548, '{}', NULL),
(549, '{}', NULL),
(550, '{}', NULL),
(551, '{}', NULL),
(552, '{}', NULL),
(553, '{}', NULL),
(554, '{}', NULL),
(555, '{}', NULL),
(556, '{}', NULL),
(557, '{}', NULL),
(558, '{}', NULL),
(559, '{}', NULL),
(560, '{}', NULL),
(561, '{}', NULL),
(562, '{}', NULL),
(563, '{}', NULL),
(564, '{}', NULL),
(565, '{}', NULL),
(566, '{}', NULL),
(567, '{}', NULL),
(568, '{}', NULL),
(569, '{}', NULL),
(570, '{}', NULL),
(571, '{}', NULL),
(572, '{}', NULL),
(573, '{}', NULL),
(574, '{}', NULL),
(575, '{}', NULL),
(576, '{}', NULL),
(577, '{}', NULL),
(578, '{}', NULL),
(579, '{}', NULL),
(580, '{}', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `batch_job_execution_params`
--

CREATE TABLE `batch_job_execution_params` (
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `TYPE_CD` varchar(6) NOT NULL,
  `KEY_NAME` varchar(100) NOT NULL,
  `STRING_VAL` varchar(250) DEFAULT NULL,
  `DATE_VAL` datetime DEFAULT NULL,
  `LONG_VAL` bigint(20) DEFAULT NULL,
  `DOUBLE_VAL` double DEFAULT NULL,
  `IDENTIFYING` char(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_job_execution_params`
--

INSERT INTO `batch_job_execution_params` (`JOB_EXECUTION_ID`, `TYPE_CD`, `KEY_NAME`, `STRING_VAL`, `DATE_VAL`, `LONG_VAL`, `DOUBLE_VAL`, `IDENTIFYING`) VALUES
(0, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(1, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(2, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(3, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(4, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(5, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(6, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(7, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(8, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(9, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(10, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(11, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(12, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(13, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(14, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 3, 0, 'Y'),
(15, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 4, 0, 'Y'),
(16, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(17, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(18, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(19, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(20, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(21, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 3, 0, 'Y'),
(22, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 3, 0, 'Y'),
(23, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 4, 0, 'Y'),
(24, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 4, 0, 'Y'),
(25, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 5, 0, 'Y'),
(26, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 5, 0, 'Y'),
(27, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 6, 0, 'Y'),
(28, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 6, 0, 'Y'),
(29, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 7, 0, 'Y'),
(30, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 7, 0, 'Y'),
(31, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 8, 0, 'Y'),
(32, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 8, 0, 'Y'),
(33, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 9, 0, 'Y'),
(34, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 9, 0, 'Y'),
(35, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 10, 0, 'Y'),
(36, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 10, 0, 'Y'),
(37, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 11, 0, 'Y'),
(38, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 11, 0, 'Y'),
(39, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 12, 0, 'Y'),
(40, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 12, 0, 'Y'),
(41, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 13, 0, 'Y'),
(42, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 13, 0, 'Y'),
(43, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 14, 0, 'Y'),
(44, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 14, 0, 'Y'),
(45, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 15, 0, 'Y'),
(46, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 15, 0, 'Y'),
(47, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 16, 0, 'Y'),
(48, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 16, 0, 'Y'),
(49, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 17, 0, 'Y'),
(50, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 17, 0, 'Y'),
(51, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 18, 0, 'Y'),
(52, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 18, 0, 'Y'),
(53, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 19, 0, 'Y'),
(54, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 19, 0, 'Y'),
(55, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 20, 0, 'Y'),
(56, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 20, 0, 'Y'),
(57, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 21, 0, 'Y'),
(58, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 21, 0, 'Y'),
(59, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 22, 0, 'Y'),
(60, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 22, 0, 'Y'),
(61, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 23, 0, 'Y'),
(62, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 23, 0, 'Y'),
(63, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 24, 0, 'Y'),
(64, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 24, 0, 'Y'),
(65, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 25, 0, 'Y'),
(66, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 25, 0, 'Y'),
(67, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 26, 0, 'Y'),
(68, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 26, 0, 'Y'),
(69, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 27, 0, 'Y'),
(70, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 27, 0, 'Y'),
(71, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 28, 0, 'Y'),
(72, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 28, 0, 'Y'),
(73, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 29, 0, 'Y'),
(74, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 29, 0, 'Y'),
(75, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 30, 0, 'Y'),
(76, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 30, 0, 'Y'),
(77, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 31, 0, 'Y'),
(78, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 31, 0, 'Y'),
(79, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 32, 0, 'Y'),
(80, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 32, 0, 'Y'),
(81, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 33, 0, 'Y'),
(82, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 33, 0, 'Y'),
(83, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 34, 0, 'Y'),
(84, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 34, 0, 'Y'),
(85, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 35, 0, 'Y'),
(86, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 35, 0, 'Y'),
(87, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 36, 0, 'Y'),
(88, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 36, 0, 'Y'),
(89, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 37, 0, 'Y'),
(90, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 37, 0, 'Y'),
(91, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 38, 0, 'Y'),
(92, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 38, 0, 'Y'),
(93, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 39, 0, 'Y'),
(94, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 39, 0, 'Y'),
(95, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 40, 0, 'Y'),
(96, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 40, 0, 'Y'),
(97, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 41, 0, 'Y'),
(98, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 41, 0, 'Y'),
(99, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 42, 0, 'Y'),
(100, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 42, 0, 'Y'),
(101, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 43, 0, 'Y'),
(102, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 43, 0, 'Y'),
(103, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 44, 0, 'Y'),
(104, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 44, 0, 'Y'),
(105, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 45, 0, 'Y'),
(106, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 45, 0, 'Y'),
(107, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 46, 0, 'Y'),
(108, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 46, 0, 'Y'),
(109, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 47, 0, 'Y'),
(110, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 47, 0, 'Y'),
(111, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 48, 0, 'Y'),
(112, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 48, 0, 'Y'),
(113, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 49, 0, 'Y'),
(114, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 49, 0, 'Y'),
(115, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 50, 0, 'Y'),
(116, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 50, 0, 'Y'),
(117, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 51, 0, 'Y'),
(118, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 51, 0, 'Y'),
(119, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 52, 0, 'Y'),
(120, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 52, 0, 'Y'),
(121, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 53, 0, 'Y'),
(122, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 53, 0, 'Y'),
(123, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 54, 0, 'Y'),
(124, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 54, 0, 'Y'),
(125, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 55, 0, 'Y'),
(126, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 55, 0, 'Y'),
(127, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 56, 0, 'Y'),
(128, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 56, 0, 'Y'),
(129, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 57, 0, 'Y'),
(130, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 57, 0, 'Y'),
(131, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 58, 0, 'Y'),
(132, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 58, 0, 'Y'),
(133, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 59, 0, 'Y'),
(134, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 59, 0, 'Y'),
(135, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 60, 0, 'Y'),
(136, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 60, 0, 'Y'),
(137, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 61, 0, 'Y'),
(138, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 61, 0, 'Y'),
(139, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 62, 0, 'Y'),
(140, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 62, 0, 'Y'),
(141, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 63, 0, 'Y'),
(142, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 63, 0, 'Y'),
(143, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 64, 0, 'Y'),
(144, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 64, 0, 'Y'),
(145, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 65, 0, 'Y'),
(146, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 65, 0, 'Y'),
(147, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 66, 0, 'Y'),
(148, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 66, 0, 'Y'),
(149, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 67, 0, 'Y'),
(150, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 67, 0, 'Y'),
(151, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 68, 0, 'Y'),
(152, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 68, 0, 'Y'),
(153, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 69, 0, 'Y'),
(154, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 69, 0, 'Y'),
(155, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 70, 0, 'Y'),
(156, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 70, 0, 'Y'),
(157, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 71, 0, 'Y'),
(158, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 71, 0, 'Y'),
(159, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 72, 0, 'Y'),
(160, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 72, 0, 'Y'),
(161, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 73, 0, 'Y'),
(162, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 73, 0, 'Y'),
(163, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 74, 0, 'Y'),
(164, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 74, 0, 'Y'),
(165, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 75, 0, 'Y'),
(166, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 75, 0, 'Y'),
(167, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 76, 0, 'Y'),
(168, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 76, 0, 'Y'),
(169, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 77, 0, 'Y'),
(170, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 77, 0, 'Y'),
(171, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 78, 0, 'Y'),
(172, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 78, 0, 'Y'),
(173, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 79, 0, 'Y'),
(174, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 79, 0, 'Y'),
(175, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 80, 0, 'Y'),
(176, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 80, 0, 'Y'),
(177, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 81, 0, 'Y'),
(178, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 81, 0, 'Y'),
(179, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 82, 0, 'Y'),
(180, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 82, 0, 'Y'),
(181, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 83, 0, 'Y'),
(182, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 83, 0, 'Y'),
(183, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 84, 0, 'Y'),
(184, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 84, 0, 'Y'),
(185, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 85, 0, 'Y'),
(186, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 85, 0, 'Y'),
(187, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 86, 0, 'Y'),
(188, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 86, 0, 'Y'),
(189, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 87, 0, 'Y'),
(190, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 87, 0, 'Y'),
(191, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 88, 0, 'Y'),
(192, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 88, 0, 'Y'),
(193, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 89, 0, 'Y'),
(194, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 89, 0, 'Y'),
(195, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 90, 0, 'Y'),
(196, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 90, 0, 'Y'),
(197, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 91, 0, 'Y'),
(198, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 91, 0, 'Y'),
(199, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 92, 0, 'Y'),
(200, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 92, 0, 'Y'),
(201, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 93, 0, 'Y'),
(202, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 93, 0, 'Y'),
(203, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 94, 0, 'Y'),
(204, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 94, 0, 'Y'),
(205, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 95, 0, 'Y'),
(206, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 95, 0, 'Y'),
(207, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 96, 0, 'Y'),
(208, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 96, 0, 'Y'),
(209, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 97, 0, 'Y'),
(210, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 97, 0, 'Y'),
(211, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 98, 0, 'Y'),
(212, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 98, 0, 'Y'),
(213, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 99, 0, 'Y'),
(214, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 99, 0, 'Y'),
(215, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 100, 0, 'Y'),
(216, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 100, 0, 'Y'),
(217, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 101, 0, 'Y'),
(218, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 101, 0, 'Y'),
(219, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 102, 0, 'Y'),
(220, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 102, 0, 'Y'),
(221, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 103, 0, 'Y'),
(222, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 103, 0, 'Y'),
(223, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 104, 0, 'Y'),
(224, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 104, 0, 'Y'),
(225, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 105, 0, 'Y'),
(226, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 105, 0, 'Y'),
(227, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 106, 0, 'Y'),
(228, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 106, 0, 'Y'),
(229, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 107, 0, 'Y'),
(230, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 107, 0, 'Y'),
(231, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 108, 0, 'Y'),
(232, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 108, 0, 'Y'),
(233, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 109, 0, 'Y'),
(234, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 109, 0, 'Y'),
(235, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 110, 0, 'Y'),
(236, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 110, 0, 'Y'),
(237, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 111, 0, 'Y'),
(238, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 111, 0, 'Y'),
(239, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 112, 0, 'Y'),
(240, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 112, 0, 'Y'),
(241, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 113, 0, 'Y'),
(242, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 113, 0, 'Y'),
(243, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 114, 0, 'Y'),
(244, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 114, 0, 'Y'),
(245, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 115, 0, 'Y'),
(246, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 115, 0, 'Y'),
(247, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 116, 0, 'Y'),
(248, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 116, 0, 'Y'),
(249, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 117, 0, 'Y'),
(250, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 117, 0, 'Y'),
(251, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 118, 0, 'Y'),
(252, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 118, 0, 'Y'),
(253, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 119, 0, 'Y'),
(254, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 119, 0, 'Y'),
(255, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 120, 0, 'Y'),
(256, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 120, 0, 'Y'),
(257, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 121, 0, 'Y'),
(258, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 121, 0, 'Y'),
(259, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 122, 0, 'Y'),
(260, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 122, 0, 'Y'),
(261, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 123, 0, 'Y'),
(262, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 123, 0, 'Y'),
(263, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 124, 0, 'Y'),
(264, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 124, 0, 'Y'),
(265, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 125, 0, 'Y'),
(266, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 125, 0, 'Y'),
(267, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 126, 0, 'Y'),
(268, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 126, 0, 'Y'),
(269, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 127, 0, 'Y'),
(270, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 127, 0, 'Y'),
(271, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 128, 0, 'Y'),
(272, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 128, 0, 'Y'),
(273, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 129, 0, 'Y'),
(274, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 129, 0, 'Y'),
(275, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 130, 0, 'Y'),
(276, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 130, 0, 'Y'),
(277, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 131, 0, 'Y'),
(278, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 131, 0, 'Y'),
(279, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 132, 0, 'Y'),
(280, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 132, 0, 'Y'),
(281, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 133, 0, 'Y'),
(282, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 133, 0, 'Y'),
(283, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 134, 0, 'Y'),
(284, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 134, 0, 'Y'),
(285, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 135, 0, 'Y'),
(286, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 135, 0, 'Y'),
(287, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 136, 0, 'Y'),
(288, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 136, 0, 'Y'),
(289, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 137, 0, 'Y'),
(290, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 137, 0, 'Y'),
(291, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 138, 0, 'Y'),
(292, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 138, 0, 'Y'),
(293, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 139, 0, 'Y'),
(294, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 139, 0, 'Y'),
(295, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 140, 0, 'Y'),
(296, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 140, 0, 'Y'),
(297, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 141, 0, 'Y'),
(298, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 141, 0, 'Y'),
(299, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 142, 0, 'Y'),
(300, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 142, 0, 'Y'),
(301, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 143, 0, 'Y'),
(302, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 143, 0, 'Y'),
(303, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 144, 0, 'Y'),
(304, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 144, 0, 'Y'),
(305, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 145, 0, 'Y'),
(306, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 145, 0, 'Y'),
(307, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 146, 0, 'Y'),
(308, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 146, 0, 'Y'),
(309, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 147, 0, 'Y'),
(310, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 147, 0, 'Y'),
(311, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 148, 0, 'Y'),
(312, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 148, 0, 'Y'),
(313, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 149, 0, 'Y'),
(314, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 149, 0, 'Y'),
(315, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 150, 0, 'Y'),
(316, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 150, 0, 'Y'),
(317, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 151, 0, 'Y'),
(318, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 151, 0, 'Y'),
(319, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 152, 0, 'Y'),
(320, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 152, 0, 'Y'),
(321, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 153, 0, 'Y'),
(322, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 153, 0, 'Y'),
(323, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 154, 0, 'Y'),
(324, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 154, 0, 'Y'),
(325, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 155, 0, 'Y'),
(326, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 155, 0, 'Y'),
(327, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 156, 0, 'Y'),
(328, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 156, 0, 'Y'),
(329, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 157, 0, 'Y'),
(330, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 157, 0, 'Y'),
(331, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 158, 0, 'Y'),
(332, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 158, 0, 'Y'),
(333, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 159, 0, 'Y'),
(334, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 159, 0, 'Y'),
(335, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 160, 0, 'Y'),
(336, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 160, 0, 'Y'),
(337, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 161, 0, 'Y'),
(338, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 161, 0, 'Y'),
(339, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 162, 0, 'Y'),
(340, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 162, 0, 'Y'),
(341, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 163, 0, 'Y'),
(342, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 163, 0, 'Y'),
(343, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 164, 0, 'Y'),
(344, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 164, 0, 'Y'),
(345, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 165, 0, 'Y'),
(346, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 165, 0, 'Y'),
(347, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 166, 0, 'Y'),
(348, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 166, 0, 'Y'),
(349, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 167, 0, 'Y'),
(350, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 167, 0, 'Y'),
(351, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 168, 0, 'Y'),
(352, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 168, 0, 'Y'),
(353, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 169, 0, 'Y'),
(354, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 169, 0, 'Y'),
(355, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 170, 0, 'Y'),
(356, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 170, 0, 'Y'),
(357, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 171, 0, 'Y'),
(358, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 171, 0, 'Y'),
(359, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 172, 0, 'Y'),
(360, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 172, 0, 'Y'),
(361, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 173, 0, 'Y'),
(362, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 173, 0, 'Y'),
(363, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 174, 0, 'Y'),
(364, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 174, 0, 'Y'),
(365, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 175, 0, 'Y'),
(366, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 175, 0, 'Y'),
(367, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 1, 0, 'Y'),
(368, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 176, 0, 'Y'),
(369, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 176, 0, 'Y'),
(370, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 2, 0, 'Y'),
(371, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 177, 0, 'Y'),
(372, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 177, 0, 'Y'),
(373, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 3, 0, 'Y'),
(374, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 178, 0, 'Y'),
(375, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 178, 0, 'Y'),
(376, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 4, 0, 'Y'),
(377, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 179, 0, 'Y'),
(378, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 179, 0, 'Y'),
(379, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 5, 0, 'Y'),
(380, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 180, 0, 'Y'),
(381, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 180, 0, 'Y'),
(382, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 6, 0, 'Y'),
(383, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 181, 0, 'Y'),
(384, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 181, 0, 'Y'),
(385, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 7, 0, 'Y'),
(386, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 182, 0, 'Y'),
(387, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 182, 0, 'Y'),
(388, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 8, 0, 'Y'),
(389, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 183, 0, 'Y'),
(390, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 183, 0, 'Y'),
(391, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 9, 0, 'Y'),
(392, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 184, 0, 'Y'),
(393, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 184, 0, 'Y'),
(394, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 10, 0, 'Y'),
(395, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 185, 0, 'Y'),
(396, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 185, 0, 'Y'),
(397, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 11, 0, 'Y'),
(398, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 186, 0, 'Y'),
(399, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 186, 0, 'Y'),
(400, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 12, 0, 'Y'),
(401, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 187, 0, 'Y'),
(402, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 187, 0, 'Y'),
(403, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 13, 0, 'Y'),
(404, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 188, 0, 'Y'),
(405, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 188, 0, 'Y'),
(406, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 14, 0, 'Y'),
(407, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 189, 0, 'Y'),
(408, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 189, 0, 'Y'),
(409, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 15, 0, 'Y'),
(410, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 190, 0, 'Y'),
(411, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 190, 0, 'Y'),
(412, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 16, 0, 'Y'),
(413, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 191, 0, 'Y'),
(414, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 191, 0, 'Y'),
(415, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 17, 0, 'Y'),
(416, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 192, 0, 'Y'),
(417, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 192, 0, 'Y'),
(418, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 18, 0, 'Y'),
(419, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 193, 0, 'Y'),
(420, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 193, 0, 'Y'),
(421, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 19, 0, 'Y'),
(422, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 194, 0, 'Y'),
(423, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 194, 0, 'Y'),
(424, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 20, 0, 'Y'),
(425, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 195, 0, 'Y'),
(426, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 195, 0, 'Y'),
(427, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 21, 0, 'Y'),
(428, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 196, 0, 'Y'),
(429, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 196, 0, 'Y'),
(430, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 22, 0, 'Y'),
(431, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 197, 0, 'Y'),
(432, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 197, 0, 'Y'),
(433, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 23, 0, 'Y'),
(434, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 198, 0, 'Y'),
(435, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 198, 0, 'Y'),
(436, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 24, 0, 'Y'),
(437, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 199, 0, 'Y'),
(438, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 199, 0, 'Y'),
(439, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 25, 0, 'Y'),
(440, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 200, 0, 'Y'),
(441, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 200, 0, 'Y'),
(442, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 26, 0, 'Y'),
(443, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 201, 0, 'Y'),
(444, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 201, 0, 'Y'),
(445, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 27, 0, 'Y'),
(446, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 202, 0, 'Y'),
(447, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 202, 0, 'Y'),
(448, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 28, 0, 'Y'),
(449, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 203, 0, 'Y'),
(450, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 203, 0, 'Y'),
(451, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 29, 0, 'Y'),
(452, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 204, 0, 'Y'),
(453, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 204, 0, 'Y'),
(454, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 30, 0, 'Y'),
(455, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 205, 0, 'Y'),
(456, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 205, 0, 'Y'),
(457, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 31, 0, 'Y'),
(458, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 206, 0, 'Y'),
(459, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 206, 0, 'Y'),
(460, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 32, 0, 'Y'),
(461, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 207, 0, 'Y'),
(462, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 207, 0, 'Y'),
(463, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 33, 0, 'Y'),
(464, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 208, 0, 'Y'),
(465, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 208, 0, 'Y'),
(466, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 34, 0, 'Y'),
(467, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 209, 0, 'Y'),
(468, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 209, 0, 'Y'),
(469, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 35, 0, 'Y'),
(470, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 210, 0, 'Y'),
(471, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 210, 0, 'Y'),
(472, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 36, 0, 'Y'),
(473, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 211, 0, 'Y'),
(474, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 211, 0, 'Y'),
(475, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 37, 0, 'Y'),
(476, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 212, 0, 'Y'),
(477, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 212, 0, 'Y'),
(478, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 38, 0, 'Y'),
(479, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 213, 0, 'Y'),
(480, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 213, 0, 'Y'),
(481, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 39, 0, 'Y'),
(482, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 214, 0, 'Y'),
(483, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 214, 0, 'Y'),
(484, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 40, 0, 'Y'),
(485, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 215, 0, 'Y'),
(486, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 215, 0, 'Y'),
(487, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 41, 0, 'Y'),
(488, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 216, 0, 'Y'),
(489, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 216, 0, 'Y'),
(490, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 42, 0, 'Y'),
(491, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 217, 0, 'Y'),
(492, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 217, 0, 'Y'),
(493, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 43, 0, 'Y'),
(494, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 218, 0, 'Y'),
(495, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 218, 0, 'Y'),
(496, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 44, 0, 'Y'),
(497, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 219, 0, 'Y'),
(498, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 219, 0, 'Y'),
(499, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 45, 0, 'Y'),
(500, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 220, 0, 'Y'),
(501, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 220, 0, 'Y'),
(502, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 46, 0, 'Y'),
(503, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 221, 0, 'Y'),
(504, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 221, 0, 'Y'),
(505, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 47, 0, 'Y'),
(506, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 222, 0, 'Y'),
(507, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 222, 0, 'Y'),
(508, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 48, 0, 'Y'),
(509, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 223, 0, 'Y'),
(510, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 223, 0, 'Y'),
(511, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 49, 0, 'Y'),
(512, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 224, 0, 'Y'),
(513, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 224, 0, 'Y'),
(514, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 50, 0, 'Y'),
(515, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 225, 0, 'Y'),
(516, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 225, 0, 'Y'),
(517, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 51, 0, 'Y'),
(518, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 226, 0, 'Y'),
(519, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 226, 0, 'Y'),
(520, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 52, 0, 'Y'),
(521, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 227, 0, 'Y'),
(522, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 227, 0, 'Y'),
(523, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 53, 0, 'Y'),
(524, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 228, 0, 'Y'),
(525, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 228, 0, 'Y'),
(526, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 54, 0, 'Y'),
(527, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 229, 0, 'Y'),
(528, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 229, 0, 'Y'),
(529, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 55, 0, 'Y'),
(530, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 230, 0, 'Y'),
(531, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 230, 0, 'Y'),
(532, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 56, 0, 'Y'),
(533, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 231, 0, 'Y'),
(534, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 231, 0, 'Y'),
(535, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 57, 0, 'Y'),
(536, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 232, 0, 'Y'),
(537, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 232, 0, 'Y'),
(538, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 58, 0, 'Y'),
(539, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 233, 0, 'Y'),
(540, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 233, 0, 'Y'),
(541, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 59, 0, 'Y'),
(542, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 234, 0, 'Y'),
(543, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 234, 0, 'Y'),
(544, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 60, 0, 'Y'),
(545, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 235, 0, 'Y'),
(546, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 235, 0, 'Y'),
(547, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 61, 0, 'Y'),
(548, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 236, 0, 'Y'),
(549, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 236, 0, 'Y'),
(550, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 62, 0, 'Y'),
(551, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 237, 0, 'Y'),
(552, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 237, 0, 'Y'),
(553, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 63, 0, 'Y'),
(554, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 238, 0, 'Y'),
(555, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 238, 0, 'Y'),
(556, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 64, 0, 'Y'),
(557, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 239, 0, 'Y'),
(558, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 239, 0, 'Y'),
(559, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 65, 0, 'Y'),
(560, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 240, 0, 'Y'),
(561, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 240, 0, 'Y'),
(562, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 66, 0, 'Y'),
(563, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 241, 0, 'Y'),
(564, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 241, 0, 'Y'),
(565, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 67, 0, 'Y'),
(566, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 242, 0, 'Y'),
(567, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 242, 0, 'Y'),
(568, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 68, 0, 'Y'),
(569, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 243, 0, 'Y'),
(570, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 243, 0, 'Y'),
(571, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 69, 0, 'Y'),
(572, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 244, 0, 'Y'),
(573, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 244, 0, 'Y'),
(574, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 70, 0, 'Y'),
(575, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 245, 0, 'Y'),
(576, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 245, 0, 'Y'),
(577, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 71, 0, 'Y'),
(578, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 246, 0, 'Y'),
(579, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 246, 0, 'Y'),
(580, 'LONG', 'run.id', '', '1970-01-01 00:00:00', 72, 0, 'Y');

-- --------------------------------------------------------

--
-- Table structure for table `batch_job_execution_seq`
--

CREATE TABLE `batch_job_execution_seq` (
  `ID` bigint(20) NOT NULL,
  `UNIQUE_KEY` char(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_job_execution_seq`
--

INSERT INTO `batch_job_execution_seq` (`ID`, `UNIQUE_KEY`) VALUES
(580, '0');

-- --------------------------------------------------------

--
-- Table structure for table `batch_job_instance`
--

CREATE TABLE `batch_job_instance` (
  `JOB_INSTANCE_ID` bigint(20) NOT NULL,
  `VERSION` bigint(20) DEFAULT NULL,
  `JOB_NAME` varchar(100) NOT NULL,
  `JOB_KEY` varchar(32) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_job_instance`
--

INSERT INTO `batch_job_instance` (`JOB_INSTANCE_ID`, `VERSION`, `JOB_NAME`, `JOB_KEY`) VALUES
(0, 0, 'Employee job', '853d3449e311f40366811cbefb3d93d7'),
(1, 0, 'importFClassJob', '853d3449e311f40366811cbefb3d93d7'),
(2, 0, 'importAClassJob', '853d3449e311f40366811cbefb3d93d7'),
(3, 0, 'importXrefJob', '853d3449e311f40366811cbefb3d93d7'),
(4, 0, 'importUrlJob', '853d3449e311f40366811cbefb3d93d7'),
(5, 0, 'importUrlJob', 'e070bff4379694c0210a51d9f6c6a564'),
(6, 0, 'importFigureJob', '853d3449e311f40366811cbefb3d93d7'),
(7, 0, 'importTableJob', '853d3449e311f40366811cbefb3d93d7'),
(8, 0, 'importItalicJob', '853d3449e311f40366811cbefb3d93d7'),
(9, 0, 'importListJob', '853d3449e311f40366811cbefb3d93d7'),
(10, 0, 'importItemJob', '853d3449e311f40366811cbefb3d93d7'),
(11, 0, 'importFClassJob', 'e070bff4379694c0210a51d9f6c6a564'),
(12, 0, 'importAClassJob', 'e070bff4379694c0210a51d9f6c6a564'),
(13, 0, 'importXrefJob', 'e070bff4379694c0210a51d9f6c6a564'),
(14, 0, 'importUrlJob', 'a3364faf893276dea0caacefbf618db5'),
(15, 0, 'importUrlJob', '47c0a8118b74165a864b66d37c7b6cf5'),
(16, 0, 'importFigureJob', 'e070bff4379694c0210a51d9f6c6a564'),
(17, 0, 'importTableJob', 'e070bff4379694c0210a51d9f6c6a564'),
(18, 0, 'importItalicJob', 'e070bff4379694c0210a51d9f6c6a564'),
(19, 0, 'importListJob', 'e070bff4379694c0210a51d9f6c6a564'),
(20, 0, 'importItemJob', 'e070bff4379694c0210a51d9f6c6a564'),
(21, 0, 'importFClassJob', 'a3364faf893276dea0caacefbf618db5'),
(22, 0, 'importAClassJob', 'a3364faf893276dea0caacefbf618db5'),
(23, 0, 'importFClassJob', '47c0a8118b74165a864b66d37c7b6cf5'),
(24, 0, 'importAClassJob', '47c0a8118b74165a864b66d37c7b6cf5'),
(25, 0, 'importFClassJob', 'ce148f5f9c2bf4dc9bd44a7a5f64204c'),
(26, 0, 'importAClassJob', 'ce148f5f9c2bf4dc9bd44a7a5f64204c'),
(27, 0, 'importFClassJob', 'bd0034040292bc81e6ccac0e25d9a578'),
(28, 0, 'importAClassJob', 'bd0034040292bc81e6ccac0e25d9a578'),
(29, 0, 'importFClassJob', '597815c7e4ab1092c1b25130aae725cb'),
(30, 0, 'importAClassJob', '597815c7e4ab1092c1b25130aae725cb'),
(31, 0, 'importFClassJob', 'f55a96b11012be4fcfb6cf005435182d'),
(32, 0, 'importAClassJob', 'f55a96b11012be4fcfb6cf005435182d'),
(33, 0, 'importFClassJob', '96a5ed9bac43e779455f3e71c0f64840'),
(34, 0, 'importAClassJob', '96a5ed9bac43e779455f3e71c0f64840'),
(35, 0, 'importFClassJob', '1aac4f3e74894b78fa3ce5d8a25e1ef0'),
(36, 0, 'importAClassJob', '1aac4f3e74894b78fa3ce5d8a25e1ef0'),
(37, 0, 'importFClassJob', '604bbfc4c68cb1f903780c2853ad4801'),
(38, 0, 'importAClassJob', '604bbfc4c68cb1f903780c2853ad4801'),
(39, 0, 'importFClassJob', '556ebe34220b4032509f2581356ba47c'),
(40, 0, 'importAClassJob', '556ebe34220b4032509f2581356ba47c'),
(41, 0, 'importFClassJob', 'edc440efb5ddd2a3b2622f16a12bf105'),
(42, 0, 'importAClassJob', 'edc440efb5ddd2a3b2622f16a12bf105'),
(43, 0, 'importFClassJob', 'f3d5e568c384ee72cba8bc6a51057fe4'),
(44, 0, 'importAClassJob', 'f3d5e568c384ee72cba8bc6a51057fe4'),
(45, 0, 'importFClassJob', '378ef1ecb81cf9edac4ab119bdab9d9d'),
(46, 0, 'importAClassJob', '378ef1ecb81cf9edac4ab119bdab9d9d'),
(47, 0, 'importFClassJob', 'e073471cc312cadef424c3be7915c0af'),
(48, 0, 'importAClassJob', 'e073471cc312cadef424c3be7915c0af'),
(49, 0, 'importFClassJob', '46ba78a99abf1e2fba4a8861749d7572'),
(50, 0, 'importAClassJob', '46ba78a99abf1e2fba4a8861749d7572'),
(51, 0, 'importFClassJob', 'b88d31b704adf9f94fe9d4ccff795708'),
(52, 0, 'importAClassJob', 'b88d31b704adf9f94fe9d4ccff795708'),
(53, 0, 'importFClassJob', '64d4e6d635ee3ad949314224afce46c2'),
(54, 0, 'importAClassJob', '64d4e6d635ee3ad949314224afce46c2'),
(55, 0, 'importFClassJob', '75c16c09800a944220a789de10278de0'),
(56, 0, 'importAClassJob', '75c16c09800a944220a789de10278de0'),
(57, 0, 'importFClassJob', '1b759d32440acdcbf90da6919b5d16ad'),
(58, 0, 'importAClassJob', '1b759d32440acdcbf90da6919b5d16ad'),
(59, 0, 'importFClassJob', '1f995cec4b562af773a2e473c369f069'),
(60, 0, 'importAClassJob', '1f995cec4b562af773a2e473c369f069'),
(61, 0, 'importFClassJob', '42106293a859255c2b210d04a51240ca'),
(62, 0, 'importAClassJob', '42106293a859255c2b210d04a51240ca'),
(63, 0, 'importFClassJob', '9799b3a84f4d6f15a5e8c11360e7387b'),
(64, 0, 'importAClassJob', '9799b3a84f4d6f15a5e8c11360e7387b'),
(65, 0, 'importFClassJob', '6eecb29840a845c35cfa9b2da21862f9'),
(66, 0, 'importAClassJob', '6eecb29840a845c35cfa9b2da21862f9'),
(67, 0, 'importFClassJob', 'e465389b77512db6f30ed6a3b7a9682c'),
(68, 0, 'importAClassJob', 'e465389b77512db6f30ed6a3b7a9682c'),
(69, 0, 'importFClassJob', '19be35489361f0d498838921e450c4cb'),
(70, 0, 'importAClassJob', '19be35489361f0d498838921e450c4cb'),
(71, 0, 'importFClassJob', '20744cb6ca7f8dc12940aa7fd8f89763'),
(72, 0, 'importAClassJob', '20744cb6ca7f8dc12940aa7fd8f89763'),
(73, 0, 'importFClassJob', 'a3bcf78496166aaf18ec0c14120074d6'),
(74, 0, 'importAClassJob', 'a3bcf78496166aaf18ec0c14120074d6'),
(75, 0, 'importFClassJob', '890787fe3f8be2564cf02f516acdac28'),
(76, 0, 'importAClassJob', '890787fe3f8be2564cf02f516acdac28'),
(77, 0, 'importFClassJob', '5b65175918977eab4addf511ccceb909'),
(78, 0, 'importAClassJob', '5b65175918977eab4addf511ccceb909'),
(79, 0, 'importFClassJob', '9c9fce01479d33c09c00ad7ef17a0fa7'),
(80, 0, 'importAClassJob', '9c9fce01479d33c09c00ad7ef17a0fa7'),
(81, 0, 'importFClassJob', '4e2d614992aa7a22b11fc1d32b1e3000'),
(82, 0, 'importAClassJob', '4e2d614992aa7a22b11fc1d32b1e3000'),
(83, 0, 'importFClassJob', '50431ec8d19c121d87fbf96bef0b712f'),
(84, 0, 'importAClassJob', '50431ec8d19c121d87fbf96bef0b712f'),
(85, 0, 'importFClassJob', '31a37b7e33e41f6cb941c4d363fcf2ca'),
(86, 0, 'importAClassJob', '31a37b7e33e41f6cb941c4d363fcf2ca'),
(87, 0, 'importFClassJob', '56d75bdddea05ee8f2ed823177214afe'),
(88, 0, 'importAClassJob', '56d75bdddea05ee8f2ed823177214afe'),
(89, 0, 'importFClassJob', '90a4c5eeeb198a44066f972c03932729'),
(90, 0, 'importAClassJob', '90a4c5eeeb198a44066f972c03932729'),
(91, 0, 'importFClassJob', '97aac63b71ba2c9861f14f9258560d32'),
(92, 0, 'importAClassJob', '97aac63b71ba2c9861f14f9258560d32'),
(93, 0, 'importFClassJob', '872d74920dbab4e51affe4be09596eba'),
(94, 0, 'importAClassJob', '872d74920dbab4e51affe4be09596eba'),
(95, 0, 'importFClassJob', 'cb473369d04e3172cac9d72b8ceb3a37'),
(96, 0, 'importAClassJob', 'cb473369d04e3172cac9d72b8ceb3a37'),
(97, 0, 'importFClassJob', '5c56c53a66cc31e42257e813bbc12ac5'),
(98, 0, 'importAClassJob', '5c56c53a66cc31e42257e813bbc12ac5'),
(99, 0, 'importFClassJob', '0c0cb5a89d31db95fb092875387b8dc1'),
(100, 0, 'importAClassJob', '0c0cb5a89d31db95fb092875387b8dc1'),
(101, 0, 'importFClassJob', '347df43c8433a01147cec3fff55dcfd0'),
(102, 0, 'importAClassJob', '347df43c8433a01147cec3fff55dcfd0'),
(103, 0, 'importFClassJob', '86eab1ddc8a99323436f292c504f7097'),
(104, 0, 'importAClassJob', '86eab1ddc8a99323436f292c504f7097'),
(105, 0, 'importFClassJob', '1bc7c3ade41570212396edd26cc40903'),
(106, 0, 'importAClassJob', '1bc7c3ade41570212396edd26cc40903'),
(107, 0, 'importFClassJob', 'ac91ca62f5df542809566709e92406f7'),
(108, 0, 'importAClassJob', 'ac91ca62f5df542809566709e92406f7'),
(109, 0, 'importFClassJob', '7c6b537186a7f9dc281d0ad415933007'),
(110, 0, 'importAClassJob', '7c6b537186a7f9dc281d0ad415933007'),
(111, 0, 'importFClassJob', '2cffb87b0a021b03c1863846aba11bf2'),
(112, 0, 'importAClassJob', '2cffb87b0a021b03c1863846aba11bf2'),
(113, 0, 'importFClassJob', '8f24cc009b3f046a762345718834508d'),
(114, 0, 'importAClassJob', '8f24cc009b3f046a762345718834508d'),
(115, 0, 'importFClassJob', '1fcedf0e3714761199a8b2baa464f34d'),
(116, 0, 'importAClassJob', '1fcedf0e3714761199a8b2baa464f34d'),
(117, 0, 'importFClassJob', 'd377ea35de08eb25bd868ff67e7137a0'),
(118, 0, 'importAClassJob', 'd377ea35de08eb25bd868ff67e7137a0'),
(119, 0, 'importFClassJob', '1890b28503a02f841441079351a57cc7'),
(120, 0, 'importAClassJob', '1890b28503a02f841441079351a57cc7'),
(121, 0, 'importFClassJob', 'db35fa764bd11db9b057f742af78826e'),
(122, 0, 'importAClassJob', 'db35fa764bd11db9b057f742af78826e'),
(123, 0, 'importFClassJob', 'daccf2c2d1b3c2d9c8fa910b85780e78'),
(124, 0, 'importAClassJob', 'daccf2c2d1b3c2d9c8fa910b85780e78'),
(125, 0, 'importFClassJob', '77d87fbae614e052c0ad1b84089187ab'),
(126, 0, 'importAClassJob', '77d87fbae614e052c0ad1b84089187ab'),
(127, 0, 'importFClassJob', '817f9b50db5c86ce76d3fcc050304977'),
(128, 0, 'importAClassJob', '817f9b50db5c86ce76d3fcc050304977'),
(129, 0, 'importFClassJob', '5f466319d15530c9f82460e69814b1c7'),
(130, 0, 'importAClassJob', '5f466319d15530c9f82460e69814b1c7'),
(131, 0, 'importFClassJob', '6795b2be40ac84adde3e5e73ded69977'),
(132, 0, 'importAClassJob', '6795b2be40ac84adde3e5e73ded69977'),
(133, 0, 'importFClassJob', 'dd18cb476746ae5acbf9eb79b64ed7b3'),
(134, 0, 'importAClassJob', 'dd18cb476746ae5acbf9eb79b64ed7b3'),
(135, 0, 'importFClassJob', '672c22b6e66ad71ed003de03e287b2dd'),
(136, 0, 'importAClassJob', '672c22b6e66ad71ed003de03e287b2dd'),
(137, 0, 'importFClassJob', 'fb2cf4c0dfd1f2fbf5cafe1526c3825e'),
(138, 0, 'importAClassJob', 'fb2cf4c0dfd1f2fbf5cafe1526c3825e'),
(139, 0, 'importFClassJob', '371f5dc7da8e2301cef374548255ec32'),
(140, 0, 'importAClassJob', '371f5dc7da8e2301cef374548255ec32'),
(141, 0, 'importFClassJob', '07e5916b4be69179b1450bc968e4e75a'),
(142, 0, 'importAClassJob', '07e5916b4be69179b1450bc968e4e75a'),
(143, 0, 'importFClassJob', '24a50b5c1df9ad38a6c4102f439efacc'),
(144, 0, 'importAClassJob', '24a50b5c1df9ad38a6c4102f439efacc'),
(145, 0, 'importFClassJob', '60e6a90a8ae15b4b80d840b84455bfbb'),
(146, 0, 'importAClassJob', '60e6a90a8ae15b4b80d840b84455bfbb'),
(147, 0, 'importFClassJob', '8337974da321762e1deb062164690024'),
(148, 0, 'importAClassJob', '8337974da321762e1deb062164690024'),
(149, 0, 'importFClassJob', 'db527de6373102532cc0be4dd18749e3'),
(150, 0, 'importAClassJob', 'db527de6373102532cc0be4dd18749e3'),
(151, 0, 'importFClassJob', '14af9fd8b71f0a6785136139e21b0028'),
(152, 0, 'importAClassJob', '14af9fd8b71f0a6785136139e21b0028'),
(153, 0, 'importFClassJob', 'f538a6f02c4f63f4ed482745519f4363'),
(154, 0, 'importAClassJob', 'f538a6f02c4f63f4ed482745519f4363'),
(155, 0, 'importFClassJob', '0571adf028212e7a6a5a7c90d1220dd3'),
(156, 0, 'importAClassJob', '0571adf028212e7a6a5a7c90d1220dd3'),
(157, 0, 'importFClassJob', 'a8591eda3ef0bdf838ebaf86ce8a2f25'),
(158, 0, 'importAClassJob', 'a8591eda3ef0bdf838ebaf86ce8a2f25'),
(159, 0, 'importFClassJob', 'c0b9ccc360329595059ceba21018c71b'),
(160, 0, 'importAClassJob', 'c0b9ccc360329595059ceba21018c71b'),
(161, 0, 'importFClassJob', 'c0e2212cb228ae8ce5044943cd8d0806'),
(162, 0, 'importAClassJob', 'c0e2212cb228ae8ce5044943cd8d0806'),
(163, 0, 'importFClassJob', '9488543b013850f1eec0213778327df3'),
(164, 0, 'importAClassJob', '9488543b013850f1eec0213778327df3'),
(165, 0, 'importFClassJob', '3c1ab632dc14d9192712f8f885c7c065'),
(166, 0, 'importAClassJob', '3c1ab632dc14d9192712f8f885c7c065'),
(167, 0, 'importFClassJob', '50c2b8e92ca1de25385c132d142d5ead'),
(168, 0, 'importAClassJob', '50c2b8e92ca1de25385c132d142d5ead'),
(169, 0, 'importFClassJob', '823569652620c6172f989e1e1890a036'),
(170, 0, 'importAClassJob', '823569652620c6172f989e1e1890a036'),
(171, 0, 'importFClassJob', '43a57bbc653428075dffa599911c2129'),
(172, 0, 'importAClassJob', '43a57bbc653428075dffa599911c2129'),
(173, 0, 'importFClassJob', '46d6144be8802eae8821c34058899798'),
(174, 0, 'importAClassJob', '46d6144be8802eae8821c34058899798'),
(175, 0, 'importFClassJob', '04d14d86c6050759a658db0fc08ef0e9'),
(176, 0, 'importAClassJob', '04d14d86c6050759a658db0fc08ef0e9'),
(177, 0, 'importFClassJob', '08a9349967491df7dc155afd82a7237e'),
(178, 0, 'importAClassJob', '08a9349967491df7dc155afd82a7237e'),
(179, 0, 'importFClassJob', '06603396e0bab525172d6890267e5e72'),
(180, 0, 'importAClassJob', '06603396e0bab525172d6890267e5e72'),
(181, 0, 'importFClassJob', '3dc40441576bbab03110e3213b328759'),
(182, 0, 'importAClassJob', '3dc40441576bbab03110e3213b328759'),
(183, 0, 'importFClassJob', 'b2b33571a3f92f8018c6b400b3386809'),
(184, 0, 'importAClassJob', 'b2b33571a3f92f8018c6b400b3386809'),
(185, 0, 'importFClassJob', '6254496af77541c1f57838f09ea33c4d'),
(186, 0, 'importAClassJob', '6254496af77541c1f57838f09ea33c4d'),
(187, 0, 'importFClassJob', 'fceb50a7e1566d9bb7b984b86e7fd28d'),
(188, 0, 'importAClassJob', 'fceb50a7e1566d9bb7b984b86e7fd28d'),
(189, 0, 'importFClassJob', 'c8a530d00b82a2f75cadb5254d783608'),
(190, 0, 'importAClassJob', 'c8a530d00b82a2f75cadb5254d783608'),
(191, 0, 'importFClassJob', 'a8d3e0f6855881b3cb29b5c58c80556a'),
(192, 0, 'importAClassJob', 'a8d3e0f6855881b3cb29b5c58c80556a'),
(193, 0, 'importFClassJob', 'b794e40500716b179f23c35d482da0e3'),
(194, 0, 'importAClassJob', 'b794e40500716b179f23c35d482da0e3'),
(195, 0, 'importFClassJob', 'd6a53b434282518ead1fcdd0a71ca69f'),
(196, 0, 'importAClassJob', 'd6a53b434282518ead1fcdd0a71ca69f'),
(197, 0, 'importFClassJob', '8054e0206c1d5a69f6c4a0e5adc3b33a'),
(198, 0, 'importAClassJob', '8054e0206c1d5a69f6c4a0e5adc3b33a'),
(199, 0, 'importFClassJob', '25041012d4885436090c3a7a7d3eef7c'),
(200, 0, 'importAClassJob', '25041012d4885436090c3a7a7d3eef7c'),
(201, 0, 'importFClassJob', '0e18b15dafa2262d8f8d4c45c360e3a1'),
(202, 0, 'importAClassJob', '0e18b15dafa2262d8f8d4c45c360e3a1'),
(203, 0, 'importFClassJob', 'd5f176f2a7ff27f902673a341be27606'),
(204, 0, 'importAClassJob', 'd5f176f2a7ff27f902673a341be27606'),
(205, 0, 'importFClassJob', '5234a786e5c7814aa7ffe3929f892253'),
(206, 0, 'importAClassJob', '5234a786e5c7814aa7ffe3929f892253'),
(207, 0, 'importFClassJob', '67591e04e60b86285262fd11d5eed331'),
(208, 0, 'importAClassJob', '67591e04e60b86285262fd11d5eed331'),
(209, 0, 'importFClassJob', 'ea61d89bbf62eb3364b6227edeb91275'),
(210, 0, 'importAClassJob', 'ea61d89bbf62eb3364b6227edeb91275'),
(211, 0, 'importFClassJob', '9074930cf1fdcd85e4ed0d50bb1eefa6'),
(212, 0, 'importAClassJob', '9074930cf1fdcd85e4ed0d50bb1eefa6'),
(213, 0, 'importFClassJob', '4734ef1b01a5f943d226585d59cd8e44'),
(214, 0, 'importAClassJob', '4734ef1b01a5f943d226585d59cd8e44'),
(215, 0, 'importFClassJob', '8432e7501675c0c3dd73e5508166837d'),
(216, 0, 'importAClassJob', '8432e7501675c0c3dd73e5508166837d'),
(217, 0, 'importFClassJob', 'e06387e2115a6b1e882f5ba616f7db61'),
(218, 0, 'importAClassJob', 'e06387e2115a6b1e882f5ba616f7db61'),
(219, 0, 'importFClassJob', '3f7a612538b78cfa0a62b98598ee376c'),
(220, 0, 'importAClassJob', '3f7a612538b78cfa0a62b98598ee376c'),
(221, 0, 'importFClassJob', 'dda3990335f9ed85734c285eb171a7a0'),
(222, 0, 'importAClassJob', 'dda3990335f9ed85734c285eb171a7a0'),
(223, 0, 'importFClassJob', '98d3cd5de827d37161507518afc6f5f9'),
(224, 0, 'importAClassJob', '98d3cd5de827d37161507518afc6f5f9'),
(225, 0, 'importFClassJob', '5b5ab936d9d61b56c61c1052f216bf9d'),
(226, 0, 'importAClassJob', '5b5ab936d9d61b56c61c1052f216bf9d'),
(227, 0, 'importFClassJob', 'e88347f4b65f2d9f685990671142a2c0'),
(228, 0, 'importAClassJob', 'e88347f4b65f2d9f685990671142a2c0'),
(229, 0, 'importFClassJob', '4e5dba76b8f6b49accf5582159c41f06'),
(230, 0, 'importAClassJob', '4e5dba76b8f6b49accf5582159c41f06'),
(231, 0, 'importFClassJob', 'd44e4dd88e19a82bf6041fed728a142d'),
(232, 0, 'importAClassJob', 'd44e4dd88e19a82bf6041fed728a142d'),
(233, 0, 'importFClassJob', 'e2f6b9f5dae2faa7ed6d78176babc752'),
(234, 0, 'importAClassJob', 'e2f6b9f5dae2faa7ed6d78176babc752'),
(235, 0, 'importFClassJob', 'e3b643085d60cee29b0cf9ec5a396932'),
(236, 0, 'importAClassJob', 'e3b643085d60cee29b0cf9ec5a396932'),
(237, 0, 'importFClassJob', 'abcdcc20138ca1d201180c251dcbcae4'),
(238, 0, 'importAClassJob', 'abcdcc20138ca1d201180c251dcbcae4'),
(239, 0, 'importFClassJob', '0607f1743972fa9c232aa2a7ff55ff83'),
(240, 0, 'importAClassJob', '0607f1743972fa9c232aa2a7ff55ff83'),
(241, 0, 'importFClassJob', '3224822dc001e34178e911e71cc8c9fc'),
(242, 0, 'importAClassJob', '3224822dc001e34178e911e71cc8c9fc'),
(243, 0, 'importFClassJob', 'f2384270902e670571c4bf59f3e55270'),
(244, 0, 'importAClassJob', 'f2384270902e670571c4bf59f3e55270'),
(245, 0, 'importFClassJob', '09de5fe7b930ec657384b864cccfd4f3'),
(246, 0, 'importAClassJob', '09de5fe7b930ec657384b864cccfd4f3'),
(247, 0, 'importFClassJob', 'ebbcbbd878d137ab03f3366af6930ead'),
(248, 0, 'importAClassJob', 'ebbcbbd878d137ab03f3366af6930ead'),
(249, 0, 'importFClassJob', 'ab7568eb6427d46e8a14ded3083aa5c3'),
(250, 0, 'importAClassJob', 'ab7568eb6427d46e8a14ded3083aa5c3'),
(251, 0, 'importFClassJob', '93c754d6e2c316fb8e920ea029eb52b5'),
(252, 0, 'importAClassJob', '93c754d6e2c316fb8e920ea029eb52b5'),
(253, 0, 'importFClassJob', 'a3a872c4754700387dcda69c9c964b6f'),
(254, 0, 'importAClassJob', 'a3a872c4754700387dcda69c9c964b6f'),
(255, 0, 'importFClassJob', 'd3d6a0a4471e2cdf71e66412196efc96'),
(256, 0, 'importAClassJob', 'd3d6a0a4471e2cdf71e66412196efc96'),
(257, 0, 'importFClassJob', '7b7de1d21b92d8c44fc9f6e4c39f7238'),
(258, 0, 'importAClassJob', '7b7de1d21b92d8c44fc9f6e4c39f7238'),
(259, 0, 'importFClassJob', 'a35fccf750a7c14d301e7f0943a2a43e'),
(260, 0, 'importAClassJob', 'a35fccf750a7c14d301e7f0943a2a43e'),
(261, 0, 'importFClassJob', 'e3b17cbb0cb2c9e6417c54c47f44dab4'),
(262, 0, 'importAClassJob', 'e3b17cbb0cb2c9e6417c54c47f44dab4'),
(263, 0, 'importFClassJob', '6e2556c2ac7a37bc01149d8971279713'),
(264, 0, 'importAClassJob', '6e2556c2ac7a37bc01149d8971279713'),
(265, 0, 'importFClassJob', '9681181009493ed626811698a5beade4'),
(266, 0, 'importAClassJob', '9681181009493ed626811698a5beade4'),
(267, 0, 'importFClassJob', '9d4d23e700656cd8f452aac0d107a457'),
(268, 0, 'importAClassJob', '9d4d23e700656cd8f452aac0d107a457'),
(269, 0, 'importFClassJob', '4e58918b7a40a9acb3631a77933b15c0'),
(270, 0, 'importAClassJob', '4e58918b7a40a9acb3631a77933b15c0'),
(271, 0, 'importFClassJob', '029ec21f32dd26aee5a328ca7445005e'),
(272, 0, 'importAClassJob', '029ec21f32dd26aee5a328ca7445005e'),
(273, 0, 'importFClassJob', 'ce556e834ac2c6b9ff0a3b7ea4f90f76'),
(274, 0, 'importAClassJob', 'ce556e834ac2c6b9ff0a3b7ea4f90f76'),
(275, 0, 'importFClassJob', 'fcb1b61581fd0a9ac1184db6252efbee'),
(276, 0, 'importAClassJob', 'fcb1b61581fd0a9ac1184db6252efbee'),
(277, 0, 'importFClassJob', 'f8ad05f3382671987e63a172dd17ab2d'),
(278, 0, 'importAClassJob', 'f8ad05f3382671987e63a172dd17ab2d'),
(279, 0, 'importFClassJob', '18ea3286040fd895729eed9b11064b9c'),
(280, 0, 'importAClassJob', '18ea3286040fd895729eed9b11064b9c'),
(281, 0, 'importFClassJob', '196de648e3ab1d137addeae0ee8bb84e'),
(282, 0, 'importAClassJob', '196de648e3ab1d137addeae0ee8bb84e'),
(283, 0, 'importFClassJob', '4e8df5cac8f4072de8d648fafb46e2ea'),
(284, 0, 'importAClassJob', '4e8df5cac8f4072de8d648fafb46e2ea'),
(285, 0, 'importFClassJob', 'b09e64f2f28153468fe5eae2f32ad593'),
(286, 0, 'importAClassJob', 'b09e64f2f28153468fe5eae2f32ad593'),
(287, 0, 'importFClassJob', '980398b055f047df3771e040a7ab9cb7'),
(288, 0, 'importAClassJob', '980398b055f047df3771e040a7ab9cb7'),
(289, 0, 'importFClassJob', '9c0674073665d626df4a9fcfe6fb4082'),
(290, 0, 'importAClassJob', '9c0674073665d626df4a9fcfe6fb4082'),
(291, 0, 'importFClassJob', '68439b3fec3712dcab323ed5622c6a30'),
(292, 0, 'importAClassJob', '68439b3fec3712dcab323ed5622c6a30'),
(293, 0, 'importFClassJob', '8f0607e80727f414a458b88163d7e01d'),
(294, 0, 'importAClassJob', '8f0607e80727f414a458b88163d7e01d'),
(295, 0, 'importFClassJob', '86051e10fb541ede70c0d9704d465971'),
(296, 0, 'importAClassJob', '86051e10fb541ede70c0d9704d465971'),
(297, 0, 'importFClassJob', '57c9796a967a77032de549c61e86fda6'),
(298, 0, 'importAClassJob', '57c9796a967a77032de549c61e86fda6'),
(299, 0, 'importFClassJob', 'd06c3490c0a16fa6d756e8be82d12757'),
(300, 0, 'importAClassJob', 'd06c3490c0a16fa6d756e8be82d12757'),
(301, 0, 'importFClassJob', '70f4b6de03f62c89ada668e4eb43e7c3'),
(302, 0, 'importAClassJob', '70f4b6de03f62c89ada668e4eb43e7c3'),
(303, 0, 'importFClassJob', 'd6e9d737779595a0b1bbd4a6c55f6d3b'),
(304, 0, 'importAClassJob', 'd6e9d737779595a0b1bbd4a6c55f6d3b'),
(305, 0, 'importFClassJob', 'ed4d084dbeeb4bfa70ae24fadd2c9dab'),
(306, 0, 'importAClassJob', 'ed4d084dbeeb4bfa70ae24fadd2c9dab'),
(307, 0, 'importFClassJob', '8b31229bf144c9cf00bd5b0e72a61fda'),
(308, 0, 'importAClassJob', '8b31229bf144c9cf00bd5b0e72a61fda'),
(309, 0, 'importFClassJob', '6cd5ba67d60de631ab1c22a10d9bce72'),
(310, 0, 'importAClassJob', '6cd5ba67d60de631ab1c22a10d9bce72'),
(311, 0, 'importFClassJob', '5412d7fc6b914d7b8e8515b4ffc34e07'),
(312, 0, 'importAClassJob', '5412d7fc6b914d7b8e8515b4ffc34e07'),
(313, 0, 'importFClassJob', '46b128034170c76fae0a9d9fa7c677fd'),
(314, 0, 'importAClassJob', '46b128034170c76fae0a9d9fa7c677fd'),
(315, 0, 'importFClassJob', 'f695aef0a55a986f65770cfacd334d0f'),
(316, 0, 'importAClassJob', 'f695aef0a55a986f65770cfacd334d0f'),
(317, 0, 'importFClassJob', '07fff282d6e400c4c30f3983068045fd'),
(318, 0, 'importAClassJob', '07fff282d6e400c4c30f3983068045fd'),
(319, 0, 'importFClassJob', '21052e1b27a953b92c573842566e50db'),
(320, 0, 'importAClassJob', '21052e1b27a953b92c573842566e50db'),
(321, 0, 'importFClassJob', 'b1a846829867a494561eedac2ec401e9'),
(322, 0, 'importAClassJob', 'b1a846829867a494561eedac2ec401e9'),
(323, 0, 'importFClassJob', '8a5ef628cfcd1da7a701e99c2790a2c4'),
(324, 0, 'importAClassJob', '8a5ef628cfcd1da7a701e99c2790a2c4'),
(325, 0, 'importFClassJob', '2c3a27c1cd010d13f019534ce376b77c'),
(326, 0, 'importAClassJob', '2c3a27c1cd010d13f019534ce376b77c'),
(327, 0, 'importFClassJob', '5e8abcb786ab9aedd2682774fce49720'),
(328, 0, 'importAClassJob', '5e8abcb786ab9aedd2682774fce49720'),
(329, 0, 'importFClassJob', 'b048dd197286d96ae0d21c4aacb85518'),
(330, 0, 'importAClassJob', 'b048dd197286d96ae0d21c4aacb85518'),
(331, 0, 'importFClassJob', '607eb90bb2571bb28cabd5b90c3fe7f0'),
(332, 0, 'importAClassJob', '607eb90bb2571bb28cabd5b90c3fe7f0'),
(333, 0, 'importFClassJob', '4f06b2fb5bc9ef3a75060eb934ae9b81'),
(334, 0, 'importAClassJob', '4f06b2fb5bc9ef3a75060eb934ae9b81'),
(335, 0, 'importFClassJob', '6037cb6efaee990883650ea86e6cbd8a'),
(336, 0, 'importAClassJob', '6037cb6efaee990883650ea86e6cbd8a'),
(337, 0, 'importFClassJob', 'a59da89906d7ea7aeb73bbc85c1127dc'),
(338, 0, 'importAClassJob', 'a59da89906d7ea7aeb73bbc85c1127dc'),
(339, 0, 'importFClassJob', '64d4ec2ba31d1fa2c40886c345186534'),
(340, 0, 'importAClassJob', '64d4ec2ba31d1fa2c40886c345186534'),
(341, 0, 'importFClassJob', '5bda1f7e13da1954423daf540c8ac127'),
(342, 0, 'importAClassJob', '5bda1f7e13da1954423daf540c8ac127'),
(343, 0, 'importFClassJob', '770bbf08c9be782210d3b00dcf7979e4'),
(344, 0, 'importAClassJob', '770bbf08c9be782210d3b00dcf7979e4'),
(345, 0, 'importFClassJob', 'fd27935c2c0582eddb97911cf10d0cbd'),
(346, 0, 'importAClassJob', 'fd27935c2c0582eddb97911cf10d0cbd'),
(347, 0, 'importFClassJob', '7f9fa6dedb2916ad4c3d4934fd986064'),
(348, 0, 'importAClassJob', '7f9fa6dedb2916ad4c3d4934fd986064'),
(349, 0, 'importFClassJob', '87eafa9c916fbe2e19abe8dc867244cd'),
(350, 0, 'importAClassJob', '87eafa9c916fbe2e19abe8dc867244cd'),
(351, 0, 'importFClassJob', '79e50933a8057b3561ae3e620cdbc93f'),
(352, 0, 'importAClassJob', '79e50933a8057b3561ae3e620cdbc93f'),
(353, 0, 'importFClassJob', 'a1b5faa13f4ab161886cfbb580e3b7d5'),
(354, 0, 'importAClassJob', 'a1b5faa13f4ab161886cfbb580e3b7d5'),
(355, 0, 'importFClassJob', '49bf4153ab6e193474d538d83079ac01'),
(356, 0, 'importAClassJob', '49bf4153ab6e193474d538d83079ac01'),
(357, 0, 'importFClassJob', '93413425dc4a3a4c483035c4825129dc'),
(358, 0, 'importAClassJob', '93413425dc4a3a4c483035c4825129dc'),
(359, 0, 'importFClassJob', 'e19e962f0944039727e9eaf4647fcd7b'),
(360, 0, 'importAClassJob', 'e19e962f0944039727e9eaf4647fcd7b'),
(361, 0, 'importFClassJob', 'fa65d833c029ed013abb8b5a2ddc0b43'),
(362, 0, 'importAClassJob', 'fa65d833c029ed013abb8b5a2ddc0b43'),
(363, 0, 'importFClassJob', '19c19aaf9d728fca4c1239facaa89457'),
(364, 0, 'importAClassJob', '19c19aaf9d728fca4c1239facaa89457'),
(365, 0, 'importFClassJob', '74eb3deb3057e21f88a90f9ea007f65b'),
(366, 0, 'importAClassJob', '74eb3deb3057e21f88a90f9ea007f65b'),
(367, 0, 'importEALJob', '853d3449e311f40366811cbefb3d93d7'),
(368, 0, 'importFClassJob', '55121935446a3ec850209a588891dca0'),
(369, 0, 'importAClassJob', '55121935446a3ec850209a588891dca0'),
(370, 0, 'importEALJob', 'e070bff4379694c0210a51d9f6c6a564'),
(371, 0, 'importFClassJob', '3c0bc23cc5a0ee9d13387a5328987f10'),
(372, 0, 'importAClassJob', '3c0bc23cc5a0ee9d13387a5328987f10'),
(373, 0, 'importEALJob', 'a3364faf893276dea0caacefbf618db5'),
(374, 0, 'importFClassJob', 'e1132995d44520ca61ced59a342f4fb7'),
(375, 0, 'importAClassJob', 'e1132995d44520ca61ced59a342f4fb7'),
(376, 0, 'importEALJob', '47c0a8118b74165a864b66d37c7b6cf5'),
(377, 0, 'importFClassJob', '145d81cf402bae7ba2ba2a2bfe1b04b5'),
(378, 0, 'importAClassJob', '145d81cf402bae7ba2ba2a2bfe1b04b5'),
(379, 0, 'importEALJob', 'ce148f5f9c2bf4dc9bd44a7a5f64204c'),
(380, 0, 'importFClassJob', '138eac7bd1084b06ea18093d98299f3b'),
(381, 0, 'importAClassJob', '138eac7bd1084b06ea18093d98299f3b'),
(382, 0, 'importEALJob', 'bd0034040292bc81e6ccac0e25d9a578'),
(383, 0, 'importFClassJob', 'a3690147043673d77d51eaeb3b0dbfc5'),
(384, 0, 'importAClassJob', 'a3690147043673d77d51eaeb3b0dbfc5'),
(385, 0, 'importEALJob', '597815c7e4ab1092c1b25130aae725cb'),
(386, 0, 'importFClassJob', 'bf8f907194790b54788449acfca2b3e3'),
(387, 0, 'importAClassJob', 'bf8f907194790b54788449acfca2b3e3'),
(388, 0, 'importEALJob', 'f55a96b11012be4fcfb6cf005435182d'),
(389, 0, 'importFClassJob', 'a36786f857c6d10d71d5c40ceea5e3b7'),
(390, 0, 'importAClassJob', 'a36786f857c6d10d71d5c40ceea5e3b7'),
(391, 0, 'importEALJob', '96a5ed9bac43e779455f3e71c0f64840'),
(392, 0, 'importFClassJob', 'eff231193f13375d785e34990cabe0a3'),
(393, 0, 'importAClassJob', 'eff231193f13375d785e34990cabe0a3'),
(394, 0, 'importEALJob', '1aac4f3e74894b78fa3ce5d8a25e1ef0'),
(395, 0, 'importFClassJob', '89530db36fb877bb332b897b84924e68'),
(396, 0, 'importAClassJob', '89530db36fb877bb332b897b84924e68'),
(397, 0, 'importEALJob', '604bbfc4c68cb1f903780c2853ad4801'),
(398, 0, 'importFClassJob', 'eba7aeab6ccf7fd2e0e02e96ef80c83d'),
(399, 0, 'importAClassJob', 'eba7aeab6ccf7fd2e0e02e96ef80c83d'),
(400, 0, 'importEALJob', '556ebe34220b4032509f2581356ba47c'),
(401, 0, 'importFClassJob', '32c971ce39d646ef59cb3b18e09a2ccf'),
(402, 0, 'importAClassJob', '32c971ce39d646ef59cb3b18e09a2ccf'),
(403, 0, 'importEALJob', 'edc440efb5ddd2a3b2622f16a12bf105'),
(404, 0, 'importFClassJob', '620a6a48eda901128747144d9d98495c'),
(405, 0, 'importAClassJob', '620a6a48eda901128747144d9d98495c'),
(406, 0, 'importEALJob', 'f3d5e568c384ee72cba8bc6a51057fe4'),
(407, 0, 'importFClassJob', '26aa11d64a0b303a6ab6666f54a46cd8'),
(408, 0, 'importAClassJob', '26aa11d64a0b303a6ab6666f54a46cd8'),
(409, 0, 'importEALJob', '378ef1ecb81cf9edac4ab119bdab9d9d'),
(410, 0, 'importFClassJob', 'dd2b218730cc45b747b46fe055413a15'),
(411, 0, 'importAClassJob', 'dd2b218730cc45b747b46fe055413a15'),
(412, 0, 'importEALJob', 'e073471cc312cadef424c3be7915c0af'),
(413, 0, 'importFClassJob', '1568c7b1feffc5854c5d8e7f439b2018'),
(414, 0, 'importAClassJob', '1568c7b1feffc5854c5d8e7f439b2018'),
(415, 0, 'importEALJob', '46ba78a99abf1e2fba4a8861749d7572'),
(416, 0, 'importFClassJob', '5101c008d2fa646d76713afafc8cf3a5'),
(417, 0, 'importAClassJob', '5101c008d2fa646d76713afafc8cf3a5'),
(418, 0, 'importEALJob', 'b88d31b704adf9f94fe9d4ccff795708'),
(419, 0, 'importFClassJob', '3729faf9eb6d5656310bce497ea9c520'),
(420, 0, 'importAClassJob', '3729faf9eb6d5656310bce497ea9c520'),
(421, 0, 'importEALJob', '64d4e6d635ee3ad949314224afce46c2'),
(422, 0, 'importFClassJob', '13f6927833243d0a1c16e477f8add5c7'),
(423, 0, 'importAClassJob', '13f6927833243d0a1c16e477f8add5c7'),
(424, 0, 'importEALJob', '75c16c09800a944220a789de10278de0'),
(425, 0, 'importFClassJob', '7d6e319017c260ad4fef814c1179146e'),
(426, 0, 'importAClassJob', '7d6e319017c260ad4fef814c1179146e'),
(427, 0, 'importEALJob', '1b759d32440acdcbf90da6919b5d16ad'),
(428, 0, 'importFClassJob', 'c0127e89768c146c17416598e452e03d'),
(429, 0, 'importAClassJob', 'c0127e89768c146c17416598e452e03d'),
(430, 0, 'importEALJob', '1f995cec4b562af773a2e473c369f069'),
(431, 0, 'importFClassJob', '76ea35f24854d80b8a0169f9a4aefb42'),
(432, 0, 'importAClassJob', '76ea35f24854d80b8a0169f9a4aefb42'),
(433, 0, 'importEALJob', '42106293a859255c2b210d04a51240ca'),
(434, 0, 'importFClassJob', 'a442f5b0c1cc633c37fe200f7317a992'),
(435, 0, 'importAClassJob', 'a442f5b0c1cc633c37fe200f7317a992'),
(436, 0, 'importEALJob', '9799b3a84f4d6f15a5e8c11360e7387b'),
(437, 0, 'importFClassJob', '23a5d1859e5a92e9cfdbfc4a56ca3b90'),
(438, 0, 'importAClassJob', '23a5d1859e5a92e9cfdbfc4a56ca3b90'),
(439, 0, 'importEALJob', '6eecb29840a845c35cfa9b2da21862f9'),
(440, 0, 'importFClassJob', 'ce6e47b817054ab7ed827d77160ff9e6'),
(441, 0, 'importAClassJob', 'ce6e47b817054ab7ed827d77160ff9e6'),
(442, 0, 'importEALJob', 'e465389b77512db6f30ed6a3b7a9682c'),
(443, 0, 'importFClassJob', '3fe87481af19fbc037b25d39bce21595'),
(444, 0, 'importAClassJob', '3fe87481af19fbc037b25d39bce21595'),
(445, 0, 'importEALJob', '19be35489361f0d498838921e450c4cb'),
(446, 0, 'importFClassJob', 'ca2b66532e2dde05ae893b634038bf1d'),
(447, 0, 'importAClassJob', 'ca2b66532e2dde05ae893b634038bf1d'),
(448, 0, 'importEALJob', '20744cb6ca7f8dc12940aa7fd8f89763'),
(449, 0, 'importFClassJob', 'fa4bf80d6452619872a84b79d06dc768'),
(450, 0, 'importAClassJob', 'fa4bf80d6452619872a84b79d06dc768'),
(451, 0, 'importEALJob', 'a3bcf78496166aaf18ec0c14120074d6'),
(452, 0, 'importFClassJob', 'f0bea9263aa2b8f98720e16b44a97586'),
(453, 0, 'importAClassJob', 'f0bea9263aa2b8f98720e16b44a97586'),
(454, 0, 'importEALJob', '890787fe3f8be2564cf02f516acdac28'),
(455, 0, 'importFClassJob', '83924a3391f21c6fea15913a52b82b2d'),
(456, 0, 'importAClassJob', '83924a3391f21c6fea15913a52b82b2d'),
(457, 0, 'importEALJob', '5b65175918977eab4addf511ccceb909'),
(458, 0, 'importFClassJob', '5fd2a36a5752ec9bd0fd76849e11561c'),
(459, 0, 'importAClassJob', '5fd2a36a5752ec9bd0fd76849e11561c'),
(460, 0, 'importEALJob', '9c9fce01479d33c09c00ad7ef17a0fa7'),
(461, 0, 'importFClassJob', 'cfbd507797ed59cedcc2d1472dc21537'),
(462, 0, 'importAClassJob', 'cfbd507797ed59cedcc2d1472dc21537'),
(463, 0, 'importEALJob', '4e2d614992aa7a22b11fc1d32b1e3000'),
(464, 0, 'importFClassJob', 'c20475f257095ddd27201a498a97149b'),
(465, 0, 'importAClassJob', 'c20475f257095ddd27201a498a97149b'),
(466, 0, 'importEALJob', '50431ec8d19c121d87fbf96bef0b712f'),
(467, 0, 'importFClassJob', 'e61d514b6aae16711c62a74ee3b58d3b'),
(468, 0, 'importAClassJob', 'e61d514b6aae16711c62a74ee3b58d3b'),
(469, 0, 'importEALJob', '31a37b7e33e41f6cb941c4d363fcf2ca'),
(470, 0, 'importFClassJob', 'ba1383282fef8a16d74dcd27d7dee4f2'),
(471, 0, 'importAClassJob', 'ba1383282fef8a16d74dcd27d7dee4f2'),
(472, 0, 'importEALJob', '56d75bdddea05ee8f2ed823177214afe'),
(473, 0, 'importFClassJob', '4c767d0a4048d516646871dca6387d87'),
(474, 0, 'importAClassJob', '4c767d0a4048d516646871dca6387d87'),
(475, 0, 'importEALJob', '90a4c5eeeb198a44066f972c03932729'),
(476, 0, 'importFClassJob', '15f2d6045a00a18bd23b3e614474198e'),
(477, 0, 'importAClassJob', '15f2d6045a00a18bd23b3e614474198e'),
(478, 0, 'importEALJob', '97aac63b71ba2c9861f14f9258560d32'),
(479, 0, 'importFClassJob', 'b45a2bb81f27aeaba13e33a5b5696ac0'),
(480, 0, 'importAClassJob', 'b45a2bb81f27aeaba13e33a5b5696ac0'),
(481, 0, 'importEALJob', '872d74920dbab4e51affe4be09596eba'),
(482, 0, 'importFClassJob', '8d7bb6c30e2089217b760dd501c19121'),
(483, 0, 'importAClassJob', '8d7bb6c30e2089217b760dd501c19121'),
(484, 0, 'importEALJob', 'cb473369d04e3172cac9d72b8ceb3a37'),
(485, 0, 'importFClassJob', '186184ae779ea0a2545b892a9742b9d3'),
(486, 0, 'importAClassJob', '186184ae779ea0a2545b892a9742b9d3'),
(487, 0, 'importEALJob', '5c56c53a66cc31e42257e813bbc12ac5'),
(488, 0, 'importFClassJob', '6563d68ed8be3c8cba82f824da9c6cf9'),
(489, 0, 'importAClassJob', '6563d68ed8be3c8cba82f824da9c6cf9'),
(490, 0, 'importEALJob', '0c0cb5a89d31db95fb092875387b8dc1'),
(491, 0, 'importFClassJob', '88f5dbddfc8d4f3c3c5233e6e49a6720'),
(492, 0, 'importAClassJob', '88f5dbddfc8d4f3c3c5233e6e49a6720'),
(493, 0, 'importEALJob', '347df43c8433a01147cec3fff55dcfd0'),
(494, 0, 'importFClassJob', '4e47ebefcea2fee9753ebe0419c7f8fb'),
(495, 0, 'importAClassJob', '4e47ebefcea2fee9753ebe0419c7f8fb'),
(496, 0, 'importEALJob', '86eab1ddc8a99323436f292c504f7097'),
(497, 0, 'importFClassJob', 'b94ef01318745f75fe43f562916fd30a'),
(498, 0, 'importAClassJob', 'b94ef01318745f75fe43f562916fd30a'),
(499, 0, 'importEALJob', '1bc7c3ade41570212396edd26cc40903'),
(500, 0, 'importFClassJob', '08fe20a01d2c85cd026a03cc7875b95b'),
(501, 0, 'importAClassJob', '08fe20a01d2c85cd026a03cc7875b95b'),
(502, 0, 'importEALJob', 'ac91ca62f5df542809566709e92406f7'),
(503, 0, 'importFClassJob', 'c7db7259afc3c0052304e3750d7f0d53'),
(504, 0, 'importAClassJob', 'c7db7259afc3c0052304e3750d7f0d53'),
(505, 0, 'importEALJob', '7c6b537186a7f9dc281d0ad415933007'),
(506, 0, 'importFClassJob', '166329a783ecc44d5beac3c71ae6a12a'),
(507, 0, 'importAClassJob', '166329a783ecc44d5beac3c71ae6a12a'),
(508, 0, 'importEALJob', '2cffb87b0a021b03c1863846aba11bf2'),
(509, 0, 'importFClassJob', 'fcf59647db6b446cc0bfc6e1cbbaa7a6'),
(510, 0, 'importAClassJob', 'fcf59647db6b446cc0bfc6e1cbbaa7a6'),
(511, 0, 'importEALJob', '8f24cc009b3f046a762345718834508d'),
(512, 0, 'importFClassJob', 'ea347b4a90ba98fbde92df487d061d33'),
(513, 0, 'importAClassJob', 'ea347b4a90ba98fbde92df487d061d33'),
(514, 0, 'importEALJob', '1fcedf0e3714761199a8b2baa464f34d'),
(515, 0, 'importFClassJob', '1c1aee89b5e0f5e94c01d7776c7cd9f2'),
(516, 0, 'importAClassJob', '1c1aee89b5e0f5e94c01d7776c7cd9f2'),
(517, 0, 'importEALJob', 'd377ea35de08eb25bd868ff67e7137a0'),
(518, 0, 'importFClassJob', '1ea65ff84c67ee667c4b3a6ab30bf1e0'),
(519, 0, 'importAClassJob', '1ea65ff84c67ee667c4b3a6ab30bf1e0'),
(520, 0, 'importEALJob', '1890b28503a02f841441079351a57cc7'),
(521, 0, 'importFClassJob', 'b5d7908ce53d00c3e6e4974690ef139f'),
(522, 0, 'importAClassJob', 'b5d7908ce53d00c3e6e4974690ef139f'),
(523, 0, 'importEALJob', 'db35fa764bd11db9b057f742af78826e'),
(524, 0, 'importFClassJob', '96aa777ddf464bda184b0b1aea24482a'),
(525, 0, 'importAClassJob', '96aa777ddf464bda184b0b1aea24482a'),
(526, 0, 'importEALJob', 'daccf2c2d1b3c2d9c8fa910b85780e78'),
(527, 0, 'importFClassJob', '8f8d5b10200648188f7363e07923b00f'),
(528, 0, 'importAClassJob', '8f8d5b10200648188f7363e07923b00f'),
(529, 0, 'importEALJob', '77d87fbae614e052c0ad1b84089187ab'),
(530, 0, 'importFClassJob', 'e047ec65254910177ac9d20019545ae9'),
(531, 0, 'importAClassJob', 'e047ec65254910177ac9d20019545ae9'),
(532, 0, 'importEALJob', '817f9b50db5c86ce76d3fcc050304977'),
(533, 0, 'importFClassJob', '0a79d2c89d2c3b660c6ea79ae4b46948'),
(534, 0, 'importAClassJob', '0a79d2c89d2c3b660c6ea79ae4b46948'),
(535, 0, 'importEALJob', '5f466319d15530c9f82460e69814b1c7'),
(536, 0, 'importFClassJob', '479edfe96927f34c4ab41cf367f5eb50'),
(537, 0, 'importAClassJob', '479edfe96927f34c4ab41cf367f5eb50'),
(538, 0, 'importEALJob', '6795b2be40ac84adde3e5e73ded69977'),
(539, 0, 'importFClassJob', '938ffb24cb696f4b1a5af49e9500872c'),
(540, 0, 'importAClassJob', '938ffb24cb696f4b1a5af49e9500872c'),
(541, 0, 'importEALJob', 'dd18cb476746ae5acbf9eb79b64ed7b3'),
(542, 0, 'importFClassJob', 'e32453a65085cea9eca163db4b4da483'),
(543, 0, 'importAClassJob', 'e32453a65085cea9eca163db4b4da483'),
(544, 0, 'importEALJob', '672c22b6e66ad71ed003de03e287b2dd'),
(545, 0, 'importFClassJob', '0c3e4094ec41865232860fa5f2042900'),
(546, 0, 'importAClassJob', '0c3e4094ec41865232860fa5f2042900'),
(547, 0, 'importEALJob', 'fb2cf4c0dfd1f2fbf5cafe1526c3825e'),
(548, 0, 'importFClassJob', 'e7f37a8141ba2432d10fc9142427bef3'),
(549, 0, 'importAClassJob', 'e7f37a8141ba2432d10fc9142427bef3'),
(550, 0, 'importEALJob', '371f5dc7da8e2301cef374548255ec32'),
(551, 0, 'importFClassJob', '5a50a9c720eec99641fd73a15f3b0a83'),
(552, 0, 'importAClassJob', '5a50a9c720eec99641fd73a15f3b0a83'),
(553, 0, 'importEALJob', '07e5916b4be69179b1450bc968e4e75a'),
(554, 0, 'importFClassJob', 'c4344dda104aedf104d92c56c0c954a0'),
(555, 0, 'importAClassJob', 'c4344dda104aedf104d92c56c0c954a0'),
(556, 0, 'importEALJob', '24a50b5c1df9ad38a6c4102f439efacc'),
(557, 0, 'importFClassJob', 'f5c5a4aef1f168849c41aed4e334337d'),
(558, 0, 'importAClassJob', 'f5c5a4aef1f168849c41aed4e334337d'),
(559, 0, 'importEALJob', '60e6a90a8ae15b4b80d840b84455bfbb'),
(560, 0, 'importFClassJob', '30959fe9112f6659df38417743e92c9f'),
(561, 0, 'importAClassJob', '30959fe9112f6659df38417743e92c9f'),
(562, 0, 'importEALJob', '8337974da321762e1deb062164690024'),
(563, 0, 'importFClassJob', '0c9a12c16488bca90377f431cab03e8f'),
(564, 0, 'importAClassJob', '0c9a12c16488bca90377f431cab03e8f'),
(565, 0, 'importEALJob', 'db527de6373102532cc0be4dd18749e3'),
(566, 0, 'importFClassJob', 'd4fe244da2f8db64151a4a615738ef5e'),
(567, 0, 'importAClassJob', 'd4fe244da2f8db64151a4a615738ef5e'),
(568, 0, 'importEALJob', '14af9fd8b71f0a6785136139e21b0028'),
(569, 0, 'importFClassJob', '89b2f02ed072846f92e5cdc0e75e9e7b'),
(570, 0, 'importAClassJob', '89b2f02ed072846f92e5cdc0e75e9e7b'),
(571, 0, 'importEALJob', 'f538a6f02c4f63f4ed482745519f4363'),
(572, 0, 'importFClassJob', '6d1aefe11cc445f5a3c84c42a5fe27e4'),
(573, 0, 'importAClassJob', '6d1aefe11cc445f5a3c84c42a5fe27e4'),
(574, 0, 'importEALJob', '0571adf028212e7a6a5a7c90d1220dd3'),
(575, 0, 'importFClassJob', 'f25193db17665e7d26edd96ea5ebb498'),
(576, 0, 'importAClassJob', 'f25193db17665e7d26edd96ea5ebb498'),
(577, 0, 'importEALJob', 'a8591eda3ef0bdf838ebaf86ce8a2f25'),
(578, 0, 'importFClassJob', '16b33d0d96bbefe041a26ec7470bdb9b'),
(579, 0, 'importAClassJob', '16b33d0d96bbefe041a26ec7470bdb9b'),
(580, 0, 'importEALJob', 'c0b9ccc360329595059ceba21018c71b');

-- --------------------------------------------------------

--
-- Table structure for table `batch_job_seq`
--

CREATE TABLE `batch_job_seq` (
  `ID` bigint(20) NOT NULL,
  `UNIQUE_KEY` char(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_job_seq`
--

INSERT INTO `batch_job_seq` (`ID`, `UNIQUE_KEY`) VALUES
(580, '0');

-- --------------------------------------------------------

--
-- Table structure for table `batch_step_execution`
--

CREATE TABLE `batch_step_execution` (
  `STEP_EXECUTION_ID` bigint(20) NOT NULL,
  `VERSION` bigint(20) NOT NULL,
  `STEP_NAME` varchar(100) NOT NULL,
  `JOB_EXECUTION_ID` bigint(20) NOT NULL,
  `START_TIME` datetime NOT NULL,
  `END_TIME` datetime DEFAULT NULL,
  `STATUS` varchar(10) DEFAULT NULL,
  `COMMIT_COUNT` bigint(20) DEFAULT NULL,
  `READ_COUNT` bigint(20) DEFAULT NULL,
  `FILTER_COUNT` bigint(20) DEFAULT NULL,
  `WRITE_COUNT` bigint(20) DEFAULT NULL,
  `READ_SKIP_COUNT` bigint(20) DEFAULT NULL,
  `WRITE_SKIP_COUNT` bigint(20) DEFAULT NULL,
  `PROCESS_SKIP_COUNT` bigint(20) DEFAULT NULL,
  `ROLLBACK_COUNT` bigint(20) DEFAULT NULL,
  `EXIT_CODE` varchar(2500) DEFAULT NULL,
  `EXIT_MESSAGE` varchar(2500) DEFAULT NULL,
  `LAST_UPDATED` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_step_execution`
--

INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(0, 435, 'Employee step', 0, '2020-01-26 18:03:46', NULL, 'STARTED', 434, 434, 0, 434, 0, 0, 0, 0, 'EXECUTING', '', '2020-01-26 18:03:48'),
(1, 3, 'FClass writing', 1, '2020-02-12 14:16:58', '2020-02-12 14:17:00', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:00'),
(2, 3, 'AClass writing', 2, '2020-02-12 14:17:00', '2020-02-12 14:17:00', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:00'),
(3, 11, 'Xref writing', 3, '2020-02-12 14:17:00', '2020-02-12 14:17:01', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:01'),
(4, 3, 'Url writing', 4, '2020-02-12 14:17:01', '2020-02-12 14:17:01', 'COMPLETED', 1, 0, 0, 0, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:01'),
(5, 3, 'Bold writing', 5, '2020-02-12 14:17:01', '2020-02-12 14:17:02', 'COMPLETED', 1, 10, 0, 10, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:02'),
(6, 3, 'Figure writing', 6, '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 1, 5, 0, 5, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:02'),
(7, 3, 'Table writing', 7, '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 1, 1, 0, 1, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:02'),
(8, 4, 'Italic writing', 8, '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 2, 119, 0, 119, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:02'),
(9, 5, 'List writing', 9, '2020-02-12 14:17:02', '2020-02-12 14:17:02', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:02'),
(10, 12, 'Item writing', 10, '2020-02-12 14:17:02', '2020-02-12 14:17:03', 'COMPLETED', 10, 905, 0, 905, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 14:17:03'),
(11, 3, 'FClass writing', 11, '2020-02-12 15:18:40', '2020-02-12 15:18:42', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:18:42'),
(12, 2, 'AClass writing', 12, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataAccessResourceFailureException: Error reading XML stream; nested exception is javax.xml.stream.XMLStreamException: ParseError at [row,col]:[3573,2]\nMessage: The markup in the document following the root element must be well-formed.\n	at org.springframework.batch.item.xml.stax.DefaultFragmentEventReader.markFragmentProcessed(DefaultFragmentEventReader.java:189)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:259)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframewo', '2020-02-12 15:18:42'),
(13, 4, 'Xref writing', 13, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 2, 214, 0, 200, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:42'),
(14, 2, 'Url writing', 14, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:42'),
(15, 2, 'Bold writing', 15, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:42'),
(16, 2, 'Figure writing', 16, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 0, 2, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:42'),
(17, 2, 'Table writing', 17, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:42'),
(18, 2, 'Italic writing', 18, '2020-02-12 15:18:42', '2020-02-12 15:18:42', 'FAILED', 0, 6, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:42'),
(19, 2, 'List writing', 19, '2020-02-12 15:18:43', '2020-02-12 15:18:43', 'FAILED', 0, 26, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:43'),
(20, 2, 'Item writing', 20, '2020-02-12 15:18:43', '2020-02-12 15:18:43', 'FAILED', 0, 95, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.batch.item.NonTransientResourceException: Error while reading from event reader\n	at org.springframework.batch.item.xml.StaxEventItemReader.moveCursorToNextFragment(StaxEventItemReader.java:181)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:243)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at ', '2020-02-12 15:18:43'),
(21, 3, 'FClass writing', 21, '2020-02-12 15:20:55', '2020-02-12 15:20:57', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:20:57'),
(22, 2, 'AClass writing', 22, '2020-02-12 15:20:57', '2020-02-12 15:20:57', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataAccessResourceFailureException: Error reading XML stream; nested exception is javax.xml.stream.XMLStreamException: ParseError at [row,col]:[3573,2]\nMessage: The markup in the document following the root element must be well-formed.\n	at org.springframework.batch.item.xml.stax.DefaultFragmentEventReader.markFragmentProcessed(DefaultFragmentEventReader.java:189)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:259)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframewo', '2020-02-12 15:20:57'),
(23, 3, 'FClass writing', 23, '2020-02-12 15:34:39', '2020-02-12 15:34:40', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:34:40'),
(24, 2, 'AClass writing', 24, '2020-02-12 15:34:41', '2020-02-12 15:34:41', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions\n@XmlAttribute/@XmlValue need to reference a Java type that maps to text in XML.\n	this problem is related to the following location:\n		at private java.util.List com.unicampania.xmltodb.model.assurance_paradigm.AcIntroduction.xrefList\n		at com.unicampania.xmltodb.model.assurance_paradigm.AcIntroduction\n		at private com.unicampania.xmltodb.model.assurance_paradigm.AcIntroduction com.unicampania.xmltodb.model.assurance_paradigm.AClass.acIntroduction\n		at com.unicampania.xmltodb.model.assurance_paradigm.AClass\n\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:915)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext(Jaxb2Marshaller.java:485)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller(Jaxb2Marshaller.java:858)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:761)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.Trans', '2020-02-12 15:34:41'),
(25, 3, 'FClass writing', 25, '2020-02-12 15:36:42', '2020-02-12 15:36:44', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:36:44'),
(26, 2, 'AClass writing', 26, '2020-02-12 15:36:44', '2020-02-12 15:36:44', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions\n@XmlAttribute/@XmlValue need to reference a Java type that maps to text in XML.\n	this problem is related to the following location:\n		at private com.unicampania.xmltodb.model.parasequence.Xref com.unicampania.xmltodb.model.assurance_paradigm.AcIntroduction.xref\n		at com.unicampania.xmltodb.model.assurance_paradigm.AcIntroduction\n		at private com.unicampania.xmltodb.model.assurance_paradigm.AcIntroduction com.unicampania.xmltodb.model.assurance_paradigm.AClass.acIntroduction\n		at com.unicampania.xmltodb.model.assurance_paradigm.AClass\n\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:915)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext(Jaxb2Marshaller.java:485)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller(Jaxb2Marshaller.java:858)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:761)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframew', '2020-02-12 15:36:44'),
(27, 3, 'FClass writing', 27, '2020-02-12 15:38:42', '2020-02-12 15:38:44', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:38:44'),
(28, 2, 'AClass writing', 28, '2020-02-12 15:38:44', '2020-02-12 15:38:44', 'FAILED', 0, 1, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UnmarshallingFailureException: JAXB unmarshalling exception; nested exception is javax.xml.bind.UnmarshalException\n - with linked exception:\n[javax.xml.stream.XMLStreamException: ParseError at [row,col]:[4719,15]\nMessage: The element type \"para\" must be terminated by the matching end-tag \"</para>\".]\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:911)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:784)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:1', '2020-02-12 15:38:44'),
(29, 3, 'FClass writing', 29, '2020-02-12 15:43:33', '2020-02-12 15:43:35', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:43:35'),
(30, 2, 'AClass writing', 30, '2020-02-12 15:43:35', '2020-02-12 15:43:35', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, para, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Generated keys not requested. You need to specify Statement.RETURN_GENERATED_KEYS to Statement.executeUpdate(), Statement.executeLargeUpdate() or Connection.prepareStatement().; nested exception is java.sql.SQLException: Generated keys not requested. You need to specify Statement.RETURN_GENERATED_KEYS to Statement.executeUpdate(), Statement.executeLargeUpdate() or Connection.prepareStatement().\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext', '2020-02-12 15:43:35'),
(31, 3, 'FClass writing', 31, '2020-02-12 15:48:43', '2020-02-12 15:48:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:48:45'),
(32, 2, 'AClass writing', 32, '2020-02-12 15:48:45', '2020-02-12 15:48:45', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acintroduction(testo, ida) VALUES (?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(Repe', '2020-02-12 15:48:45'),
(33, 3, 'FClass writing', 33, '2020-02-12 15:49:52', '2020-02-12 15:49:53', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-12 15:49:53'),
(34, 2, 'AClass writing', 34, '2020-02-12 15:49:53', '2020-02-12 15:49:54', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(testo, ida) VALUES (?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375', '2020-02-12 15:49:54'),
(35, 3, 'FClass writing', 35, '2020-02-13 09:01:09', '2020-02-13 09:01:11', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:01:11'),
(36, 2, 'AClass writing', 36, '2020-02-13 09:01:11', '2020-02-13 09:01:12', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(testo, ida) VALUES (?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375', '2020-02-13 09:01:12'),
(37, 3, 'FClass writing', 37, '2020-02-13 09:05:13', '2020-02-13 09:05:14', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:05:14');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(38, 2, 'AClass writing', 38, '2020-02-13 09:05:14', '2020-02-13 09:05:15', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.ja', '2020-02-13 09:05:15'),
(39, 3, 'FClass writing', 39, '2020-02-13 09:06:19', '2020-02-13 09:06:20', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:06:20'),
(40, 2, 'AClass writing', 40, '2020-02-13 09:06:21', '2020-02-13 09:06:21', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.ja', '2020-02-13 09:06:21'),
(41, 3, 'FClass writing', 41, '2020-02-13 09:07:20', '2020-02-13 09:07:21', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:07:21'),
(42, 2, 'AClass writing', 42, '2020-02-13 09:07:21', '2020-02-13 09:07:21', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.ja', '2020-02-13 09:07:21'),
(43, 3, 'FClass writing', 43, '2020-02-13 09:08:14', '2020-02-13 09:08:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:08:16'),
(44, 2, 'AClass writing', 44, '2020-02-13 09:08:16', '2020-02-13 09:08:16', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.ja', '2020-02-13 09:08:16'),
(45, 3, 'FClass writing', 45, '2020-02-13 09:18:52', '2020-02-13 09:18:53', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:18:53'),
(46, 2, 'AClass writing', 46, '2020-02-13 09:18:53', '2020-02-13 09:18:54', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.BatchUpdateException: Table \'springbatch.acintroduction\' doesn\'t exist\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.ba', '2020-02-13 09:18:54'),
(47, 3, 'FClass writing', 47, '2020-02-13 09:22:55', '2020-02-13 09:22:56', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:22:56'),
(48, 2, 'AClass writing', 48, '2020-02-13 09:22:57', '2020-02-13 09:22:57', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.BatchUpdateException: Table \'springbatch.acintroduction\' doesn\'t exist\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.ba', '2020-02-13 09:22:57'),
(49, 3, 'FClass writing', 49, '2020-02-13 09:26:25', '2020-02-13 09:26:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:26:26'),
(50, 2, 'AClass writing', 50, '2020-02-13 09:26:26', '2020-02-13 09:26:27', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'id\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'id\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.ja', '2020-02-13 09:26:27'),
(51, 3, 'FClass writing', 51, '2020-02-13 09:28:53', '2020-02-13 09:28:54', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:28:54'),
(52, 2, 'AClass writing', 52, '2020-02-13 09:28:54', '2020-02-13 09:28:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acintroduction(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'testo\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'testo\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTempl', '2020-02-13 09:28:55'),
(53, 3, 'FClass writing', 53, '2020-02-13 09:29:48', '2020-02-13 09:29:49', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:29:49'),
(54, 3, 'AClass writing', 54, '2020-02-13 09:29:49', '2020-02-13 09:29:50', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:29:50'),
(55, 3, 'FClass writing', 55, '2020-02-13 09:48:34', '2020-02-13 09:48:36', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:48:36'),
(56, 3, 'AClass writing', 56, '2020-02-13 09:48:36', '2020-02-13 09:48:37', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:48:37'),
(57, 3, 'FClass writing', 57, '2020-02-13 09:50:42', '2020-02-13 09:50:43', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:50:43'),
(58, 3, 'AClass writing', 58, '2020-02-13 09:50:44', '2020-02-13 09:50:44', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 09:50:44'),
(59, 3, 'FClass writing', 59, '2020-02-13 10:07:29', '2020-02-13 10:07:30', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:07:30'),
(60, 2, 'AClass writing', 60, '2020-02-13 10:07:30', '2020-02-13 10:07:31', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.parasequence_preparedstatmentsetter.XrefPreparedStatmentSetter.setValues(XrefPreparedStatmentSetter.java:13)\n	at com.unicampania.xmltodb.config.parasequence_preparedstatmentsetter.XrefPreparedStatmentSetter.setValues(XrefPreparedStatmentSetter.java:10)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.', '2020-02-13 10:07:31'),
(61, 3, 'FClass writing', 61, '2020-02-13 10:16:49', '2020-02-13 10:16:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:16:51'),
(62, 2, 'AClass writing', 62, '2020-02-13 10:16:51', '2020-02-13 10:16:51', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO xref(id_xref, showw, ida) VALUES (?,?) ON DUPLICATE KEY UPDATE id_xref = ?]; nested exception is java.sql.BatchUpdateException: Column count doesn\'t match value count at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemp', '2020-02-13 10:16:51'),
(63, 3, 'FClass writing', 63, '2020-02-13 10:17:29', '2020-02-13 10:17:31', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:17:31'),
(64, 2, 'AClass writing', 64, '2020-02-13 10:17:31', '2020-02-13 10:17:31', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO xref(id_xref, showw, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id_xref = ?]; nested exception is java.sql.SQLException: No value specified for parameter 4\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInterna', '2020-02-13 10:17:31'),
(65, 3, 'FClass writing', 65, '2020-02-13 10:21:16', '2020-02-13 10:21:18', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:21:18'),
(66, 3, 'AClass writing', 66, '2020-02-13 10:21:18', '2020-02-13 10:21:18', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:21:18'),
(67, 3, 'FClass writing', 67, '2020-02-13 10:38:30', '2020-02-13 10:38:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:38:32'),
(68, 3, 'AClass writing', 68, '2020-02-13 10:38:32', '2020-02-13 10:38:32', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:38:32'),
(69, 3, 'FClass writing', 69, '2020-02-13 10:41:38', '2020-02-13 10:41:40', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:41:40'),
(70, 2, 'AClass writing', 70, '2020-02-13 10:41:40', '2020-02-13 10:41:40', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.ClassCastException: class com.unicampania.xmltodb.model.assurance_paradigm.AClass cannot be cast to class com.unicampania.xmltodb.model.parasequence.Xref (com.unicampania.xmltodb.model.assurance_paradigm.AClass and com.unicampania.xmltodb.model.parasequence.Xref are in unnamed module of loader \'app\')\n	at com.unicampania.xmltodb.config.parasequence_preparedstatmentsetter.XrefPreparedStatmentSetter.setValues(XrefPreparedStatmentSetter.java:10)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doE', '2020-02-13 10:41:40'),
(71, 3, 'FClass writing', 71, '2020-02-13 10:45:03', '2020-02-13 10:45:05', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:45:05'),
(72, 3, 'AClass writing', 72, '2020-02-13 10:45:05', '2020-02-13 10:45:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:45:05'),
(73, 11, 'Xref writing', 72, '2020-02-13 10:45:05', '2020-02-13 10:45:06', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 10:45:06'),
(74, 3, 'FClass writing', 73, '2020-02-13 11:33:43', '2020-02-13 11:33:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:33:45'),
(75, 3, 'AClass writing', 74, '2020-02-13 11:33:45', '2020-02-13 11:33:45', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:33:45'),
(76, 11, 'Xref writing', 74, '2020-02-13 11:33:45', '2020-02-13 11:33:46', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:33:46'),
(77, 2, 'Lists writing', 74, '2020-02-13 11:33:46', '2020-02-13 11:33:46', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.SimpleStepHandler.handleStep(SimpleStepHandler.java:148)\n	at org.springframework.batch.core.job.flow.JobFlowExecutor.executeStep(JobFlowExecutor.java:68)\n	at org.springframework.batch.core.job.flow.support.state.StepState.handle(StepState.java:67)\n	at org.springframework.batch.core.job.flow.support.SimpleFlow.resume(SimpleFlow.java:169)\n	at org.springframework.batch.co', '2020-02-13 11:33:46'),
(78, 3, 'FClass writing', 75, '2020-02-13 11:35:23', '2020-02-13 11:35:25', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:35:25'),
(79, 3, 'AClass writing', 76, '2020-02-13 11:35:25', '2020-02-13 11:35:25', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:35:25'),
(80, 11, 'Xref writing', 76, '2020-02-13 11:35:25', '2020-02-13 11:35:26', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:35:26'),
(81, 2, 'Lists writing', 76, '2020-02-13 11:35:26', '2020-02-13 11:35:26', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.SQLException: No value specified for parameter 5\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemp', '2020-02-13 11:35:26'),
(82, 3, 'FClass writing', 77, '2020-02-13 11:36:03', '2020-02-13 11:36:04', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:36:04'),
(83, 3, 'AClass writing', 78, '2020-02-13 11:36:05', '2020-02-13 11:36:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:36:05'),
(84, 11, 'Xref writing', 78, '2020-02-13 11:36:05', '2020-02-13 11:36:06', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:36:06'),
(85, 2, 'Lists writing', 78, '2020-02-13 11:36:06', '2020-02-13 11:36:06', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.SQLException: No value specified for parameter 5\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemp', '2020-02-13 11:36:06'),
(86, 3, 'FClass writing', 79, '2020-02-13 11:36:30', '2020-02-13 11:36:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:36:32'),
(87, 3, 'AClass writing', 80, '2020-02-13 11:36:32', '2020-02-13 11:36:32', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:36:32'),
(88, 11, 'Xref writing', 80, '2020-02-13 11:36:32', '2020-02-13 11:36:33', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:36:33'),
(89, 2, 'Lists writing', 80, '2020-02-13 11:36:33', '2020-02-13 11:36:33', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.IndexOutOfBoundsException: Index 2 out of bounds for length 1\n	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n	at java.base/java.util.Objects.checkIndex(Objects.java:372)\n	at java.base/java.util.ArrayList.get(ArrayList.java:458)\n	at com.unicampania.xmltodb.model.parasequence.Item.merge(Item.java:67)\n	at com.unicampania.xmltodb.model.parasequence.Item.getCombo(Item.java:59)\n	at com.unicampania.xmltodb.config.parasequence_preparedstatmentsetter.ListPreparedStatmentSetter.setValues(ListPreparedStatmentSetter.java:16)\n	at com.unicampania.xmltodb.config.parasequence_preparedstatmentsetter.ListPreparedStatmentSetter.setValues(ListPreparedStatmentSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.re', '2020-02-13 11:36:33'),
(90, 3, 'FClass writing', 81, '2020-02-13 11:38:14', '2020-02-13 11:38:15', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:38:15'),
(91, 3, 'AClass writing', 82, '2020-02-13 11:38:15', '2020-02-13 11:38:16', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:38:16'),
(92, 11, 'Xref writing', 82, '2020-02-13 11:38:16', '2020-02-13 11:38:17', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:38:17');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(93, 2, 'Lists writing', 82, '2020-02-13 11:38:17', '2020-02-13 11:38:17', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'26.658060194308025\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.', '2020-02-13 11:38:17'),
(94, 3, 'FClass writing', 83, '2020-02-13 11:39:41', '2020-02-13 11:39:42', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:39:42'),
(95, 3, 'AClass writing', 84, '2020-02-13 11:39:42', '2020-02-13 11:39:43', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:39:43'),
(96, 11, 'Xref writing', 84, '2020-02-13 11:39:43', '2020-02-13 11:39:43', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:39:43'),
(97, 2, 'Lists writing', 84, '2020-02-13 11:39:43', '2020-02-13 11:39:44', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'4.8784140192752865\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.', '2020-02-13 11:39:44'),
(98, 3, 'FClass writing', 85, '2020-02-13 11:41:54', '2020-02-13 11:41:56', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:41:56'),
(99, 3, 'AClass writing', 86, '2020-02-13 11:41:56', '2020-02-13 11:41:56', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:41:56'),
(100, 11, 'Xref writing', 86, '2020-02-13 11:41:56', '2020-02-13 11:41:56', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:41:56'),
(101, 2, 'Lists writing', 86, '2020-02-13 11:41:57', '2020-02-13 11:41:57', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'6.3262077957074325\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.', '2020-02-13 11:41:57'),
(102, 3, 'FClass writing', 87, '2020-02-13 11:44:09', '2020-02-13 11:44:10', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:44:10'),
(103, 3, 'AClass writing', 88, '2020-02-13 11:44:10', '2020-02-13 11:44:11', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:44:11'),
(104, 11, 'Xref writing', 88, '2020-02-13 11:44:11', '2020-02-13 11:44:11', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:44:11'),
(105, 2, 'Lists writing', 88, '2020-02-13 11:44:11', '2020-02-13 11:44:11', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'11.54460995928112\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.d', '2020-02-13 11:44:11'),
(106, 3, 'FClass writing', 89, '2020-02-13 11:44:37', '2020-02-13 11:44:38', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:44:38'),
(107, 3, 'AClass writing', 90, '2020-02-13 11:44:38', '2020-02-13 11:44:39', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:44:39'),
(108, 11, 'Xref writing', 90, '2020-02-13 11:44:39', '2020-02-13 11:44:39', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:44:39'),
(109, 2, 'Lists writing', 90, '2020-02-13 11:44:39', '2020-02-13 11:44:39', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'21.684292193723742\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.', '2020-02-13 11:44:39'),
(110, 3, 'FClass writing', 91, '2020-02-13 11:45:19', '2020-02-13 11:45:21', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:45:21'),
(111, 3, 'AClass writing', 92, '2020-02-13 11:45:21', '2020-02-13 11:45:21', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:45:21'),
(112, 11, 'Xref writing', 92, '2020-02-13 11:45:21', '2020-02-13 11:45:21', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:45:21'),
(113, 2, 'Lists writing', 92, '2020-02-13 11:45:21', '2020-02-13 11:45:22', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'15.804429912233871\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.', '2020-02-13 11:45:22'),
(114, 3, 'FClass writing', 93, '2020-02-13 11:46:05', '2020-02-13 11:46:07', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:46:07'),
(115, 3, 'AClass writing', 94, '2020-02-13 11:46:07', '2020-02-13 11:46:07', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:46:07'),
(116, 11, 'Xref writing', 94, '2020-02-13 11:46:07', '2020-02-13 11:46:07', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:46:07'),
(117, 2, 'Lists writing', 94, '2020-02-13 11:46:07', '2020-02-13 11:46:08', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'35.781119040598924\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.', '2020-02-13 11:46:08'),
(118, 3, 'FClass writing', 95, '2020-02-13 11:47:17', '2020-02-13 11:47:18', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:47:18'),
(119, 3, 'AClass writing', 96, '2020-02-13 11:47:18', '2020-02-13 11:47:19', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:47:19'),
(120, 11, 'Xref writing', 96, '2020-02-13 11:47:19', '2020-02-13 11:47:19', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:47:19'),
(121, 2, 'Lists writing', 96, '2020-02-13 11:47:19', '2020-02-13 11:47:19', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KET UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'KET UPDATE id_list =\'8.200078758342485\'\' at line 1\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.d', '2020-02-13 11:47:19'),
(122, 3, 'FClass writing', 97, '2020-02-13 11:47:58', '2020-02-13 11:48:00', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:48:00'),
(123, 3, 'AClass writing', 98, '2020-02-13 11:48:00', '2020-02-13 11:48:00', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:48:00'),
(124, 11, 'Xref writing', 98, '2020-02-13 11:48:00', '2020-02-13 11:48:01', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:48:01'),
(125, 2, 'Lists writing', 98, '2020-02-13 11:48:01', '2020-02-13 11:48:01', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: Table \'springbatch.lists\' doesn\'t exist\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.cor', '2020-02-13 11:48:01'),
(126, 3, 'FClass writing', 99, '2020-02-13 11:48:46', '2020-02-13 11:48:47', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:48:47'),
(127, 3, 'AClass writing', 100, '2020-02-13 11:48:47', '2020-02-13 11:48:48', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:48:48'),
(128, 11, 'Xref writing', 100, '2020-02-13 11:48:48', '2020-02-13 11:48:48', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:48:48'),
(129, 2, 'Lists writing', 100, '2020-02-13 11:48:48', '2020-02-13 11:48:48', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO lists(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: Table \'springbatch.lists\' doesn\'t exist\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.cor', '2020-02-13 11:48:48'),
(130, 3, 'FClass writing', 101, '2020-02-13 11:49:21', '2020-02-13 11:49:23', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:49:23'),
(131, 3, 'AClass writing', 102, '2020-02-13 11:49:23', '2020-02-13 11:49:24', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:49:24'),
(132, 11, 'Xref writing', 102, '2020-02-13 11:49:24', '2020-02-13 11:49:24', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:49:24'),
(133, 2, 'Lists writing', 102, '2020-02-13 11:49:24', '2020-02-13 11:49:24', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO list(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; nested exception is java.sql.BatchUpdateException: Unknown column \'testo_item\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.', '2020-02-13 11:49:24'),
(134, 3, 'FClass writing', 103, '2020-02-13 11:50:25', '2020-02-13 11:50:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:50:26'),
(135, 3, 'AClass writing', 104, '2020-02-13 11:50:26', '2020-02-13 11:50:26', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:50:26'),
(136, 11, 'Xref writing', 104, '2020-02-13 11:50:26', '2020-02-13 11:50:27', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:50:27'),
(137, 2, 'Lists writing', 104, '2020-02-13 11:50:27', '2020-02-13 11:50:27', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO list(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; Data truncation: Incorrect integer value: \'\' for column `springbatch`.`list`.`id_item` at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Incorrect integer value: \'\' for column `springbatch`.`list`.`id_item` at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:', '2020-02-13 11:50:27'),
(138, 3, 'FClass writing', 105, '2020-02-13 11:53:39', '2020-02-13 11:53:41', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:53:41'),
(139, 3, 'AClass writing', 106, '2020-02-13 11:53:41', '2020-02-13 11:53:41', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:53:41'),
(140, 11, 'Xref writing', 106, '2020-02-13 11:53:41', '2020-02-13 11:53:42', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:53:42'),
(141, 2, 'Lists writing', 106, '2020-02-13 11:53:42', '2020-02-13 11:53:42', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO list(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; Data truncation: Data too long for column \'ida\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'ida\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeIntern', '2020-02-13 11:53:42'),
(142, 3, 'FClass writing', 107, '2020-02-13 11:54:32', '2020-02-13 11:54:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:54:33'),
(143, 3, 'AClass writing', 108, '2020-02-13 11:54:33', '2020-02-13 11:54:34', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:54:34'),
(144, 11, 'Xref writing', 108, '2020-02-13 11:54:34', '2020-02-13 11:54:34', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:54:34'),
(145, 2, 'Lists writing', 108, '2020-02-13 11:54:34', '2020-02-13 11:54:34', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO list(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; Cannot add or update a child row: a foreign key constraint fails (`springbatch`.`list`, CONSTRAINT `list_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`) ON DELETE CASCADE ON UPDATE CASCADE); nested exception is java.sql.BatchUpdateException: Cannot add or update a child row: a foreign key constraint fails (`springbatch`.`list`, CONSTRAINT `list_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTe', '2020-02-13 11:54:34'),
(146, 3, 'FClass writing', 109, '2020-02-13 11:54:54', '2020-02-13 11:54:56', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:54:56'),
(147, 3, 'AClass writing', 110, '2020-02-13 11:54:56', '2020-02-13 11:54:56', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:54:56'),
(148, 11, 'Xref writing', 110, '2020-02-13 11:54:56', '2020-02-13 11:54:56', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:54:56'),
(149, 2, 'Lists writing', 110, '2020-02-13 11:54:56', '2020-02-13 11:54:57', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO list(id_list, id_item, testo_item, ida) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_list =?]; Cannot add or update a child row: a foreign key constraint fails (`springbatch`.`list`, CONSTRAINT `list_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`) ON DELETE CASCADE ON UPDATE CASCADE); nested exception is java.sql.BatchUpdateException: Cannot add or update a child row: a foreign key constraint fails (`springbatch`.`list`, CONSTRAINT `list_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTe', '2020-02-13 11:54:57'),
(150, 3, 'FClass writing', 111, '2020-02-13 11:56:45', '2020-02-13 11:56:47', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:56:47'),
(151, 3, 'AClass writing', 112, '2020-02-13 11:56:47', '2020-02-13 11:56:47', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:56:47'),
(152, 11, 'Xref writing', 112, '2020-02-13 11:56:47', '2020-02-13 11:56:48', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:56:48'),
(153, 5, 'Lists writing', 112, '2020-02-13 11:56:48', '2020-02-13 11:56:48', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:56:48'),
(154, 3, 'FClass writing', 113, '2020-02-13 11:58:03', '2020-02-13 11:58:04', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:58:04'),
(155, 3, 'AClass writing', 114, '2020-02-13 11:58:04', '2020-02-13 11:58:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:58:05'),
(156, 11, 'Xref writing', 114, '2020-02-13 11:58:05', '2020-02-13 11:58:05', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:58:05'),
(157, 5, 'Lists writing', 114, '2020-02-13 11:58:05', '2020-02-13 11:58:05', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 11:58:05'),
(158, 3, 'FClass writing', 115, '2020-02-13 18:03:53', '2020-02-13 18:03:55', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:03:55'),
(159, 3, 'AClass writing', 116, '2020-02-13 18:03:55', '2020-02-13 18:03:56', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:03:56'),
(160, 11, 'Xref writing', 116, '2020-02-13 18:03:56', '2020-02-13 18:03:56', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:03:56'),
(161, 5, 'Lists writing', 116, '2020-02-13 18:03:56', '2020-02-13 18:03:56', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:03:56'),
(162, 3, 'FClass writing', 117, '2020-02-13 18:04:46', '2020-02-13 18:04:48', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:04:48'),
(163, 3, 'AClass writing', 118, '2020-02-13 18:04:48', '2020-02-13 18:04:48', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:04:48'),
(164, 11, 'Xref writing', 118, '2020-02-13 18:04:48', '2020-02-13 18:04:49', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:04:49'),
(165, 5, 'Lists writing', 118, '2020-02-13 18:04:49', '2020-02-13 18:04:49', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:04:49'),
(166, 3, 'FClass writing', 119, '2020-02-13 18:17:13', '2020-02-13 18:17:15', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:17:15'),
(167, 3, 'AClass writing', 120, '2020-02-13 18:17:15', '2020-02-13 18:17:15', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:17:15'),
(168, 11, 'Xref writing', 120, '2020-02-13 18:17:15', '2020-02-13 18:17:16', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:17:16');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(169, 5, 'Lists writing', 120, '2020-02-13 18:17:16', '2020-02-13 18:17:16', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:17:16'),
(170, 3, 'FClass writing', 121, '2020-02-13 18:31:14', '2020-02-13 18:31:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:31:16'),
(171, 3, 'AClass writing', 122, '2020-02-13 18:31:16', '2020-02-13 18:31:16', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:31:16'),
(172, 11, 'Xref writing', 122, '2020-02-13 18:31:16', '2020-02-13 18:31:17', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:31:17'),
(173, 5, 'Lists writing', 122, '2020-02-13 18:31:17', '2020-02-13 18:31:17', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:31:17'),
(174, 3, 'FClass writing', 123, '2020-02-13 18:55:07', '2020-02-13 18:55:09', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:55:09'),
(175, 3, 'AClass writing', 124, '2020-02-13 18:55:09', '2020-02-13 18:55:10', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:55:10'),
(176, 11, 'Xref writing', 124, '2020-02-13 18:55:10', '2020-02-13 18:55:10', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:55:10'),
(177, 5, 'Lists writing', 124, '2020-02-13 18:55:10', '2020-02-13 18:55:10', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 18:55:10'),
(178, 3, 'FClass writing', 125, '2020-02-13 19:06:21', '2020-02-13 19:06:23', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:06:23'),
(179, 3, 'AClass writing', 126, '2020-02-13 19:06:23', '2020-02-13 19:06:23', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:06:23'),
(180, 11, 'Xref writing', 126, '2020-02-13 19:06:23', '2020-02-13 19:06:24', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:06:24'),
(181, 5, 'Lists writing', 126, '2020-02-13 19:06:24', '2020-02-13 19:06:24', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:06:24'),
(182, 3, 'FClass writing', 127, '2020-02-13 19:10:07', '2020-02-13 19:10:09', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:10:09'),
(183, 3, 'AClass writing', 128, '2020-02-13 19:10:09', '2020-02-13 19:10:09', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:10:09'),
(184, 11, 'Xref writing', 128, '2020-02-13 19:10:09', '2020-02-13 19:10:10', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:10:10'),
(185, 5, 'Lists writing', 128, '2020-02-13 19:10:10', '2020-02-13 19:10:10', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-13 19:10:10'),
(186, 3, 'FClass writing', 129, '2020-02-14 09:33:18', '2020-02-14 09:33:20', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 09:33:20'),
(187, 3, 'AClass writing', 130, '2020-02-14 09:33:20', '2020-02-14 09:33:20', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 09:33:20'),
(188, 11, 'Xref writing', 130, '2020-02-14 09:33:20', '2020-02-14 09:33:21', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 09:33:21'),
(189, 5, 'Lists writing', 130, '2020-02-14 09:33:21', '2020-02-14 09:33:21', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 09:33:21'),
(190, 3, 'FClass writing', 131, '2020-02-14 10:09:01', '2020-02-14 10:09:03', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:09:03'),
(191, 3, 'AClass writing', 132, '2020-02-14 10:09:03', '2020-02-14 10:09:04', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:09:04'),
(192, 11, 'Xref writing', 132, '2020-02-14 10:09:04', '2020-02-14 10:09:04', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:09:04'),
(193, 5, 'Lists writing', 132, '2020-02-14 10:09:04', '2020-02-14 10:09:05', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:09:05'),
(194, 3, 'FClass writing', 133, '2020-02-14 10:51:16', '2020-02-14 10:51:18', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:51:18'),
(195, 2, 'AClass writing', 134, '2020-02-14 10:51:18', '2020-02-14 10:51:19', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acoverview(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Data truncation: Data too long for column \'testo\' at row 1; nested exception is java.sql.BatchUpdateException: Data truncation: Data too long for column \'testo\' at row 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.', '2020-02-14 10:51:19'),
(196, 3, 'FClass writing', 135, '2020-02-14 10:51:59', '2020-02-14 10:52:00', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:52:00'),
(197, 3, 'AClass writing', 136, '2020-02-14 10:52:00', '2020-02-14 10:52:01', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:52:01'),
(198, 11, 'Xref writing', 136, '2020-02-14 10:52:01', '2020-02-14 10:52:01', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:52:01'),
(199, 5, 'Lists writing', 136, '2020-02-14 10:52:01', '2020-02-14 10:52:01', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 10:52:01'),
(200, 3, 'FClass writing', 137, '2020-02-14 11:29:28', '2020-02-14 11:29:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:29:29'),
(201, 2, 'AClass writing', 138, '2020-02-14 11:29:30', '2020-02-14 11:29:30', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatmentsetter_assurance.AcApplicationNotesPreparedStatmentSetter.setValues(AcApplicationNotesPreparedStatmentSetter.java:13)\n	at com.unicampania.xmltodb.config.preparedstatmentsetter_assurance.AcApplicationNotesPreparedStatmentSetter.setValues(AcApplicationNotesPreparedStatmentSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execut', '2020-02-14 11:29:30'),
(202, 3, 'FClass writing', 139, '2020-02-14 11:32:37', '2020-02-14 11:32:38', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:32:38'),
(203, 3, 'AClass writing', 140, '2020-02-14 11:32:39', '2020-02-14 11:32:39', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:32:39'),
(204, 11, 'Xref writing', 140, '2020-02-14 11:32:39', '2020-02-14 11:32:39', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:32:39'),
(205, 5, 'Lists writing', 140, '2020-02-14 11:32:39', '2020-02-14 11:32:39', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:32:39'),
(206, 3, 'FClass writing', 141, '2020-02-14 11:54:37', '2020-02-14 11:54:39', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:54:39'),
(207, 2, 'AClass writing', 142, '2020-02-14 11:54:39', '2020-02-14 11:54:40', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatmentsetter_assurance.AfObjectivesPreparedStatmentSetter.setValues(AfObjectivesPreparedStatmentSetter.java:14)\n	at com.unicampania.xmltodb.config.preparedstatmentsetter_assurance.AfObjectivesPreparedStatmentSetter.setValues(AfObjectivesPreparedStatmentSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)', '2020-02-14 11:54:40'),
(208, 3, 'FClass writing', 143, '2020-02-14 11:56:15', '2020-02-14 11:56:17', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:56:17'),
(209, 3, 'AClass writing', 144, '2020-02-14 11:56:17', '2020-02-14 11:56:17', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:56:17'),
(210, 11, 'Xref writing', 144, '2020-02-14 11:56:17', '2020-02-14 11:56:18', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:56:18'),
(211, 5, 'Lists writing', 144, '2020-02-14 11:56:18', '2020-02-14 11:56:18', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 11:56:18'),
(212, 3, 'FClass writing', 145, '2020-02-14 12:15:43', '2020-02-14 12:15:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 12:15:45'),
(213, 3, 'AClass writing', 146, '2020-02-14 12:15:45', '2020-02-14 12:15:45', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 12:15:45'),
(214, 11, 'Xref writing', 146, '2020-02-14 12:15:45', '2020-02-14 12:15:46', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 12:15:46'),
(215, 5, 'Lists writing', 146, '2020-02-14 12:15:46', '2020-02-14 12:15:46', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 12:15:46'),
(216, 3, 'FClass writing', 147, '2020-02-14 14:00:18', '2020-02-14 14:00:20', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:00:20'),
(217, 3, 'AClass writing', 148, '2020-02-14 14:00:20', '2020-02-14 14:00:20', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:00:20'),
(218, 11, 'Xref writing', 148, '2020-02-14 14:00:20', '2020-02-14 14:00:21', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:00:21'),
(219, 5, 'Lists writing', 148, '2020-02-14 14:00:21', '2020-02-14 14:00:21', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:00:21'),
(220, 3, 'FClass writing', 149, '2020-02-14 14:08:29', '2020-02-14 14:08:30', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:08:30'),
(221, 2, 'AClass writing', 150, '2020-02-14 14:08:30', '2020-02-14 14:08:31', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO afamily(id_afamily, name, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id_afamily = ?]; nested exception is java.sql.SQLException: No value specified for parameter 4\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.execut', '2020-02-14 14:08:31'),
(222, 3, 'FClass writing', 151, '2020-02-14 14:10:41', '2020-02-14 14:10:43', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:10:43'),
(223, 3, 'AClass writing', 152, '2020-02-14 14:10:43', '2020-02-14 14:10:43', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:10:43'),
(224, 11, 'Xref writing', 152, '2020-02-14 14:10:43', '2020-02-14 14:10:44', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:10:44'),
(225, 5, 'Lists writing', 152, '2020-02-14 14:10:44', '2020-02-14 14:10:44', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:10:44'),
(226, 3, 'FClass writing', 153, '2020-02-14 14:16:45', '2020-02-14 14:16:46', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:16:46'),
(227, 3, 'AClass writing', 154, '2020-02-14 14:16:47', '2020-02-14 14:16:47', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:16:47'),
(228, 11, 'Xref writing', 154, '2020-02-14 14:16:47', '2020-02-14 14:16:47', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:16:47'),
(229, 5, 'Lists writing', 154, '2020-02-14 14:16:47', '2020-02-14 14:16:48', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:16:48'),
(230, 3, 'FClass writing', 155, '2020-02-14 14:21:09', '2020-02-14 14:21:11', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:21:11'),
(231, 3, 'AClass writing', 156, '2020-02-14 14:21:11', '2020-02-14 14:21:11', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:21:11'),
(232, 11, 'Xref writing', 156, '2020-02-14 14:21:11', '2020-02-14 14:21:12', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:21:12'),
(233, 5, 'Lists writing', 156, '2020-02-14 14:21:12', '2020-02-14 14:21:12', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:21:12'),
(234, 3, 'FClass writing', 157, '2020-02-14 14:29:04', '2020-02-14 14:29:05', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:29:05'),
(235, 2, 'AClass writing', 158, '2020-02-14 14:29:05', '2020-02-14 14:29:06', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [INSERT INTO afoverview(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Parameter index out of range (5 > number of parameters, which is 4).; nested exception is java.sql.SQLException: Parameter index out of range (5 > number of parameters, which is 4).\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResul', '2020-02-14 14:29:06'),
(236, 3, 'FClass writing', 159, '2020-02-14 14:30:35', '2020-02-14 14:30:36', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:30:36'),
(237, 2, 'AClass writing', 160, '2020-02-14 14:30:36', '2020-02-14 14:30:37', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [INSERT INTO afoverview(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Parameter index out of range (5 > number of parameters, which is 4).; nested exception is java.sql.SQLException: Parameter index out of range (5 > number of parameters, which is 4).\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResul', '2020-02-14 14:30:37'),
(238, 3, 'FClass writing', 161, '2020-02-14 14:33:42', '2020-02-14 14:33:44', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:33:44'),
(239, 2, 'AClass writing', 162, '2020-02-14 14:33:44', '2020-02-14 14:33:44', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [INSERT INTO afoverview(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; Parameter index out of range (5 > number of parameters, which is 4).; nested exception is java.sql.SQLException: Parameter index out of range (5 > number of parameters, which is 4).\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResul', '2020-02-14 14:33:44'),
(240, 3, 'FClass writing', 163, '2020-02-14 14:35:01', '2020-02-14 14:35:02', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:35:02'),
(241, 3, 'AClass writing', 164, '2020-02-14 14:35:03', '2020-02-14 14:35:03', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:35:03'),
(242, 11, 'Xref writing', 164, '2020-02-14 14:35:03', '2020-02-14 14:35:03', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:35:03'),
(243, 5, 'Lists writing', 164, '2020-02-14 14:35:03', '2020-02-14 14:35:03', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:35:03'),
(244, 3, 'FClass writing', 165, '2020-02-14 14:43:07', '2020-02-14 14:43:08', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:43:08'),
(245, 3, 'AClass writing', 166, '2020-02-14 14:43:08', '2020-02-14 14:43:09', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:43:09'),
(246, 11, 'Xref writing', 166, '2020-02-14 14:43:09', '2020-02-14 14:43:09', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:43:09'),
(247, 5, 'Lists writing', 166, '2020-02-14 14:43:09', '2020-02-14 14:43:10', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:43:10'),
(248, 3, 'FClass writing', 167, '2020-02-14 14:56:08', '2020-02-14 14:56:11', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:56:11'),
(249, 3, 'AClass writing', 168, '2020-02-14 14:56:11', '2020-02-14 14:56:11', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:56:11'),
(250, 11, 'Xref writing', 168, '2020-02-14 14:56:11', '2020-02-14 14:56:12', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:56:12'),
(251, 5, 'Lists writing', 168, '2020-02-14 14:56:12', '2020-02-14 14:56:12', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 14:56:12'),
(252, 3, 'FClass writing', 169, '2020-02-14 15:04:03', '2020-02-14 15:04:04', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:04:04'),
(253, 3, 'AClass writing', 170, '2020-02-14 15:04:04', '2020-02-14 15:04:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:04:05'),
(254, 11, 'Xref writing', 170, '2020-02-14 15:04:05', '2020-02-14 15:04:05', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:04:05'),
(255, 5, 'Lists writing', 170, '2020-02-14 15:04:05', '2020-02-14 15:04:05', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:04:05'),
(256, 3, 'FClass writing', 171, '2020-02-14 15:07:44', '2020-02-14 15:07:46', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:07:46'),
(257, 3, 'AClass writing', 172, '2020-02-14 15:07:46', '2020-02-14 15:07:46', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:07:46'),
(258, 11, 'Xref writing', 172, '2020-02-14 15:07:46', '2020-02-14 15:07:47', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:07:47'),
(259, 5, 'Lists writing', 172, '2020-02-14 15:07:47', '2020-02-14 15:07:47', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:07:47'),
(260, 3, 'FClass writing', 173, '2020-02-14 15:15:16', '2020-02-14 15:15:18', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:15:18'),
(261, 3, 'AClass writing', 174, '2020-02-14 15:15:19', '2020-02-14 15:15:19', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:15:19'),
(262, 11, 'Xref writing', 174, '2020-02-14 15:15:19', '2020-02-14 15:15:20', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:15:20'),
(263, 5, 'Lists writing', 174, '2020-02-14 15:15:20', '2020-02-14 15:15:20', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:15:20'),
(264, 3, 'FClass writing', 175, '2020-02-14 15:17:49', '2020-02-14 15:17:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:17:51'),
(265, 3, 'AClass writing', 176, '2020-02-14 15:17:51', '2020-02-14 15:17:52', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:17:52'),
(266, 11, 'Xref writing', 176, '2020-02-14 15:17:52', '2020-02-14 15:17:53', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:17:53'),
(267, 5, 'Lists writing', 176, '2020-02-14 15:17:53', '2020-02-14 15:17:53', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:17:53'),
(268, 3, 'FClass writing', 177, '2020-02-14 15:19:49', '2020-02-14 15:19:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:19:51'),
(269, 2, 'AClass writing', 178, '2020-02-14 15:19:51', '2020-02-14 15:19:52', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acapplicationnotes(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInt', '2020-02-14 15:19:52'),
(270, 3, 'FClass writing', 179, '2020-02-14 15:27:52', '2020-02-14 15:27:54', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:27:54'),
(271, 2, 'AClass writing', 180, '2020-02-14 15:27:54', '2020-02-14 15:27:54', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acapplicationnotes(id, testo, ida) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInt', '2020-02-14 15:27:54'),
(272, 3, 'FClass writing', 181, '2020-02-14 15:30:34', '2020-02-14 15:30:36', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:30:36'),
(273, 3, 'AClass writing', 182, '2020-02-14 15:30:36', '2020-02-14 15:30:36', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:30:36'),
(274, 11, 'Xref writing', 182, '2020-02-14 15:30:36', '2020-02-14 15:30:37', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:30:37'),
(275, 5, 'Lists writing', 182, '2020-02-14 15:30:37', '2020-02-14 15:30:37', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:30:37'),
(276, 3, 'FClass writing', 183, '2020-02-14 15:33:49', '2020-02-14 15:33:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:33:51'),
(277, 3, 'AClass writing', 184, '2020-02-14 15:33:51', '2020-02-14 15:33:51', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:33:51'),
(278, 11, 'Xref writing', 184, '2020-02-14 15:33:51', '2020-02-14 15:33:52', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:33:52'),
(279, 5, 'Lists writing', 184, '2020-02-14 15:33:52', '2020-02-14 15:33:52', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:33:52'),
(280, 3, 'FClass writing', 185, '2020-02-14 15:41:09', '2020-02-14 15:41:11', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:41:11'),
(281, 3, 'AClass writing', 186, '2020-02-14 15:41:11', '2020-02-14 15:41:11', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:41:11'),
(282, 11, 'Xref writing', 186, '2020-02-14 15:41:11', '2020-02-14 15:41:12', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:41:12'),
(283, 5, 'Lists writing', 186, '2020-02-14 15:41:12', '2020-02-14 15:41:12', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:41:12'),
(284, 3, 'FClass writing', 187, '2020-02-14 15:51:27', '2020-02-14 15:51:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:51:29'),
(285, 2, 'AClass writing', 188, '2020-02-14 15:51:30', '2020-02-14 15:51:30', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acomponent(id_acomponent, name, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.SQLException: No value specified for parameter 5\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.e', '2020-02-14 15:51:30'),
(286, 3, 'FClass writing', 189, '2020-02-14 15:52:00', '2020-02-14 15:52:02', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:52:02'),
(287, 2, 'AClass writing', 190, '2020-02-14 15:52:02', '2020-02-14 15:52:02', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acomponent(id_acomponent, name, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.SQLSyntaxErrorException: Unknown column \'id\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework', '2020-02-14 15:52:02'),
(288, 3, 'FClass writing', 191, '2020-02-14 15:52:57', '2020-02-14 15:52:58', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:52:58'),
(289, 2, 'AClass writing', 192, '2020-02-14 15:52:58', '2020-02-14 15:52:59', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO acomponent(id_acomponent, name, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acomponent = ?]; Column \'id_acomponent\' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column \'id_acomponent\' cannot be null\n	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springfram', '2020-02-14 15:52:59'),
(290, 3, 'FClass writing', 193, '2020-02-14 15:54:42', '2020-02-14 15:54:44', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:54:44'),
(291, 3, 'AClass writing', 194, '2020-02-14 15:54:44', '2020-02-14 15:54:44', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:54:44'),
(292, 11, 'Xref writing', 194, '2020-02-14 15:54:44', '2020-02-14 15:54:45', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:54:45'),
(293, 5, 'Lists writing', 194, '2020-02-14 15:54:45', '2020-02-14 15:54:45', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:54:45');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(294, 3, 'FClass writing', 195, '2020-02-14 15:57:16', '2020-02-14 15:57:18', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:57:18'),
(295, 3, 'AClass writing', 196, '2020-02-14 15:57:18', '2020-02-14 15:57:18', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:57:18'),
(296, 11, 'Xref writing', 196, '2020-02-14 15:57:18', '2020-02-14 15:57:19', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:57:19'),
(297, 5, 'Lists writing', 196, '2020-02-14 15:57:19', '2020-02-14 15:57:19', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 15:57:19'),
(298, 3, 'FClass writing', 197, '2020-02-14 16:02:30', '2020-02-14 16:02:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:02:32'),
(299, 2, 'AClass writing', 198, '2020-02-14 16:02:32', '2020-02-14 16:02:33', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acomponent(id_acomponent, name, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acomponent = ?]; nested exception is java.sql.SQLException: No value specified for parameter 5\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.Repea', '2020-02-14 16:02:33'),
(300, 3, 'FClass writing', 199, '2020-02-14 16:03:50', '2020-02-14 16:03:52', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:03:52'),
(301, 3, 'AClass writing', 200, '2020-02-14 16:03:52', '2020-02-14 16:03:52', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:03:52'),
(302, 11, 'Xref writing', 200, '2020-02-14 16:03:52', '2020-02-14 16:03:53', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:03:53'),
(303, 5, 'Lists writing', 200, '2020-02-14 16:03:53', '2020-02-14 16:03:53', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:03:53'),
(304, 3, 'FClass writing', 201, '2020-02-14 16:15:26', '2020-02-14 16:15:28', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:15:28'),
(305, 3, 'AClass writing', 202, '2020-02-14 16:15:28', '2020-02-14 16:15:28', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:15:28'),
(306, 11, 'Xref writing', 202, '2020-02-14 16:15:28', '2020-02-14 16:15:29', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:15:29'),
(307, 5, 'Lists writing', 202, '2020-02-14 16:15:29', '2020-02-14 16:15:29', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-14 16:15:29'),
(308, 3, 'FClass writing', 203, '2020-02-15 09:47:07', '2020-02-15 09:47:09', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:47:09'),
(309, 3, 'AClass writing', 204, '2020-02-15 09:47:09', '2020-02-15 09:47:09', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:47:09'),
(310, 11, 'Xref writing', 204, '2020-02-15 09:47:09', '2020-02-15 09:47:10', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:47:10'),
(311, 5, 'Lists writing', 204, '2020-02-15 09:47:10', '2020-02-15 09:47:10', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:47:10'),
(312, 3, 'FClass writing', 205, '2020-02-15 09:56:40', '2020-02-15 09:56:42', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:56:42'),
(313, 3, 'AClass writing', 206, '2020-02-15 09:56:42', '2020-02-15 09:56:43', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:56:43'),
(314, 11, 'Xref writing', 206, '2020-02-15 09:56:43', '2020-02-15 09:56:43', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:56:43'),
(315, 5, 'Lists writing', 206, '2020-02-15 09:56:43', '2020-02-15 09:56:43', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:56:43'),
(316, 3, 'FClass writing', 207, '2020-02-15 09:59:12', '2020-02-15 09:59:13', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:59:13'),
(317, 3, 'AClass writing', 208, '2020-02-15 09:59:14', '2020-02-15 09:59:14', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:59:14'),
(318, 11, 'Xref writing', 208, '2020-02-15 09:59:14', '2020-02-15 09:59:14', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:59:14'),
(319, 5, 'Lists writing', 208, '2020-02-15 09:59:15', '2020-02-15 09:59:15', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 09:59:15'),
(320, 3, 'FClass writing', 209, '2020-02-15 10:07:30', '2020-02-15 10:07:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:07:32'),
(321, 3, 'AClass writing', 210, '2020-02-15 10:07:32', '2020-02-15 10:07:33', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:07:33'),
(322, 11, 'Xref writing', 210, '2020-02-15 10:07:33', '2020-02-15 10:07:33', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:07:33'),
(323, 5, 'Lists writing', 210, '2020-02-15 10:07:33', '2020-02-15 10:07:33', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:07:33'),
(324, 3, 'FClass writing', 211, '2020-02-15 10:10:46', '2020-02-15 10:10:48', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:10:48'),
(325, 3, 'AClass writing', 212, '2020-02-15 10:10:48', '2020-02-15 10:10:48', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:10:48'),
(326, 11, 'Xref writing', 212, '2020-02-15 10:10:48', '2020-02-15 10:10:49', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:10:49'),
(327, 5, 'Lists writing', 212, '2020-02-15 10:10:49', '2020-02-15 10:10:49', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:10:49'),
(328, 3, 'FClass writing', 213, '2020-02-15 10:11:35', '2020-02-15 10:11:37', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:11:37'),
(329, 3, 'AClass writing', 214, '2020-02-15 10:11:37', '2020-02-15 10:11:37', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:11:37'),
(330, 11, 'Xref writing', 214, '2020-02-15 10:11:37', '2020-02-15 10:11:38', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:11:38'),
(331, 5, 'Lists writing', 214, '2020-02-15 10:11:38', '2020-02-15 10:11:38', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:11:38'),
(332, 3, 'FClass writing', 215, '2020-02-15 10:12:06', '2020-02-15 10:12:08', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:12:08'),
(333, 3, 'AClass writing', 216, '2020-02-15 10:12:08', '2020-02-15 10:12:09', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:12:09'),
(334, 11, 'Xref writing', 216, '2020-02-15 10:12:09', '2020-02-15 10:12:09', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:12:09'),
(335, 5, 'Lists writing', 216, '2020-02-15 10:12:09', '2020-02-15 10:12:09', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:12:09'),
(336, 3, 'FClass writing', 217, '2020-02-15 10:15:14', '2020-02-15 10:15:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:15:16'),
(337, 3, 'AClass writing', 218, '2020-02-15 10:15:16', '2020-02-15 10:15:17', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:15:17'),
(338, 11, 'Xref writing', 218, '2020-02-15 10:15:17', '2020-02-15 10:15:17', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:15:17'),
(339, 5, 'Lists writing', 218, '2020-02-15 10:15:18', '2020-02-15 10:15:18', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:15:18'),
(340, 3, 'FClass writing', 219, '2020-02-15 10:16:14', '2020-02-15 10:16:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:16:16'),
(341, 3, 'AClass writing', 220, '2020-02-15 10:16:16', '2020-02-15 10:16:16', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:16:16'),
(342, 11, 'Xref writing', 220, '2020-02-15 10:16:16', '2020-02-15 10:16:17', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:16:17'),
(343, 5, 'Lists writing', 220, '2020-02-15 10:16:17', '2020-02-15 10:16:17', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:16:17'),
(344, 3, 'FClass writing', 221, '2020-02-15 10:24:06', '2020-02-15 10:24:08', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:24:08'),
(345, 3, 'AClass writing', 222, '2020-02-15 10:24:08', '2020-02-15 10:24:08', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:24:08'),
(346, 11, 'Xref writing', 222, '2020-02-15 10:24:08', '2020-02-15 10:24:09', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:24:09'),
(347, 5, 'Lists writing', 222, '2020-02-15 10:24:09', '2020-02-15 10:24:09', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:24:09'),
(348, 3, 'FClass writing', 223, '2020-02-15 10:26:27', '2020-02-15 10:26:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:26:29'),
(349, 3, 'AClass writing', 224, '2020-02-15 10:26:29', '2020-02-15 10:26:30', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:26:30'),
(350, 11, 'Xref writing', 224, '2020-02-15 10:26:30', '2020-02-15 10:26:30', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:26:30'),
(351, 5, 'Lists writing', 224, '2020-02-15 10:26:30', '2020-02-15 10:26:30', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:26:30'),
(352, 3, 'FClass writing', 225, '2020-02-15 10:46:30', '2020-02-15 10:46:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:46:32'),
(353, 2, 'AClass writing', 226, '2020-02-15 10:46:32', '2020-02-15 10:46:32', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acomponent(id_acomponent, name, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acomponent = ?]; nested exception is java.sql.SQLSyntaxErrorException: Unknown column \'name\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.sp', '2020-02-15 10:46:32'),
(354, 3, 'FClass writing', 227, '2020-02-15 10:47:49', '2020-02-15 10:47:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:47:51'),
(355, 3, 'AClass writing', 228, '2020-02-15 10:47:51', '2020-02-15 10:47:51', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:47:51'),
(356, 11, 'Xref writing', 228, '2020-02-15 10:47:51', '2020-02-15 10:47:52', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:47:52'),
(357, 5, 'Lists writing', 228, '2020-02-15 10:47:52', '2020-02-15 10:47:52', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:47:52'),
(358, 3, 'FClass writing', 229, '2020-02-15 10:49:06', '2020-02-15 10:49:08', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:49:08'),
(359, 3, 'AClass writing', 230, '2020-02-15 10:49:08', '2020-02-15 10:49:09', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:49:09'),
(360, 11, 'Xref writing', 230, '2020-02-15 10:49:09', '2020-02-15 10:49:09', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:49:09'),
(361, 5, 'Lists writing', 230, '2020-02-15 10:49:09', '2020-02-15 10:49:09', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:49:09'),
(362, 3, 'FClass writing', 231, '2020-02-15 10:53:24', '2020-02-15 10:53:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:53:26'),
(363, 3, 'AClass writing', 232, '2020-02-15 10:53:26', '2020-02-15 10:53:26', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:53:26'),
(364, 11, 'Xref writing', 232, '2020-02-15 10:53:26', '2020-02-15 10:53:27', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:53:27'),
(365, 5, 'Lists writing', 232, '2020-02-15 10:53:27', '2020-02-15 10:53:27', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 10:53:27'),
(366, 3, 'FClass writing', 233, '2020-02-15 11:05:35', '2020-02-15 11:05:37', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:05:37'),
(367, 2, 'AClass writing', 234, '2020-02-15 11:05:37', '2020-02-15 11:05:38', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acohierarchical(id_acohierarchical, acomponent, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acohierarchical = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch', '2020-02-15 11:05:38'),
(368, 3, 'FClass writing', 235, '2020-02-15 11:07:51', '2020-02-15 11:07:52', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:07:52'),
(369, 3, 'AClass writing', 236, '2020-02-15 11:07:52', '2020-02-15 11:07:53', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:07:53'),
(370, 11, 'Xref writing', 236, '2020-02-15 11:07:53', '2020-02-15 11:07:53', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:07:53'),
(371, 5, 'Lists writing', 236, '2020-02-15 11:07:53', '2020-02-15 11:07:53', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:07:53'),
(372, 3, 'FClass writing', 237, '2020-02-15 11:13:31', '2020-02-15 11:13:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:13:33'),
(373, 2, 'AClass writing', 238, '2020-02-15 11:13:33', '2020-02-15 11:13:34', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acohierarchical(id_acohierarchical, acomponent, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acohierarchical = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch', '2020-02-15 11:13:34'),
(374, 3, 'FClass writing', 239, '2020-02-15 11:14:03', '2020-02-15 11:14:04', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:14:04'),
(375, 3, 'AClass writing', 240, '2020-02-15 11:14:04', '2020-02-15 11:14:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:14:05'),
(376, 11, 'Xref writing', 240, '2020-02-15 11:14:05', '2020-02-15 11:14:05', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:14:05'),
(377, 5, 'Lists writing', 240, '2020-02-15 11:14:05', '2020-02-15 11:14:06', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:14:06'),
(378, 3, 'FClass writing', 241, '2020-02-15 11:17:00', '2020-02-15 11:17:02', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:02'),
(379, 3, 'AClass writing', 242, '2020-02-15 11:17:02', '2020-02-15 11:17:03', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:03'),
(380, 11, 'Xref writing', 242, '2020-02-15 11:17:03', '2020-02-15 11:17:03', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:03'),
(381, 5, 'Lists writing', 242, '2020-02-15 11:17:03', '2020-02-15 11:17:03', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:03'),
(382, 3, 'FClass writing', 243, '2020-02-15 11:17:49', '2020-02-15 11:17:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:51'),
(383, 3, 'AClass writing', 244, '2020-02-15 11:17:51', '2020-02-15 11:17:51', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:51'),
(384, 11, 'Xref writing', 244, '2020-02-15 11:17:51', '2020-02-15 11:17:52', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:52'),
(385, 5, 'Lists writing', 244, '2020-02-15 11:17:52', '2020-02-15 11:17:52', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:17:52'),
(386, 3, 'FClass writing', 245, '2020-02-15 11:38:54', '2020-02-15 11:38:56', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:38:56'),
(387, 2, 'AClass writing', 246, '2020-02-15 11:38:56', '2020-02-15 11:38:56', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoobjectives(id_acoobjectives, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id = ?]; nested exception is java.sql.SQLSyntaxErrorException: Unknown column \'id\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springfr', '2020-02-15 11:38:56'),
(388, 3, 'FClass writing', 247, '2020-02-15 11:39:30', '2020-02-15 11:39:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:39:32'),
(389, 3, 'AClass writing', 248, '2020-02-15 11:39:32', '2020-02-15 11:39:32', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:39:32'),
(390, 11, 'Xref writing', 248, '2020-02-15 11:39:32', '2020-02-15 11:39:33', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:39:33'),
(391, 5, 'Lists writing', 248, '2020-02-15 11:39:33', '2020-02-15 11:39:33', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:39:33'),
(392, 3, 'FClass writing', 249, '2020-02-15 11:57:13', '2020-02-15 11:57:14', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:57:14'),
(393, 2, 'AClass writing', 250, '2020-02-15 11:57:15', '2020-02-15 11:57:15', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.AcoApplicationNotesPreparedStatementSetter.setValues(AcoApplicationNotesPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.AcoApplicationNotesPreparedStatementSetter.setValues(AcoApplicationNotesPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractS', '2020-02-15 11:57:15'),
(394, 3, 'FClass writing', 251, '2020-02-15 11:57:47', '2020-02-15 11:57:48', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:57:48'),
(395, 2, 'AClass writing', 252, '2020-02-15 11:57:49', '2020-02-15 11:57:49', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.AcoApplicationNotesPreparedStatementSetter.setValues(AcoApplicationNotesPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.AcoApplicationNotesPreparedStatementSetter.setValues(AcoApplicationNotesPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractS', '2020-02-15 11:57:49'),
(396, 3, 'FClass writing', 253, '2020-02-15 11:58:31', '2020-02-15 11:58:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 11:58:33'),
(397, 2, 'AClass writing', 254, '2020-02-15 11:58:33', '2020-02-15 11:58:34', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewor', '2020-02-15 11:58:34'),
(398, 3, 'FClass writing', 255, '2020-02-15 12:06:53', '2020-02-15 12:06:55', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 12:06:55'),
(399, 2, 'AClass writing', 256, '2020-02-15 12:06:55', '2020-02-15 12:06:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewor', '2020-02-15 12:06:55'),
(400, 3, 'FClass writing', 257, '2020-02-15 12:19:51', '2020-02-15 12:19:53', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 12:19:53'),
(401, 3, 'AClass writing', 258, '2020-02-15 12:19:53', '2020-02-15 12:19:54', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 12:19:54'),
(402, 11, 'Xref writing', 258, '2020-02-15 12:19:54', '2020-02-15 12:19:54', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 12:19:54'),
(403, 5, 'Lists writing', 258, '2020-02-15 12:19:54', '2020-02-15 12:19:54', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 12:19:54'),
(404, 3, 'FClass writing', 259, '2020-02-15 12:34:48', '2020-02-15 12:34:50', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 12:34:50'),
(405, 2, 'AClass writing', 260, '2020-02-15 12:34:50', '2020-02-15 12:34:51', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewor', '2020-02-15 12:34:51'),
(406, 3, 'FClass writing', 261, '2020-02-15 13:22:14', '2020-02-15 13:22:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:22:16'),
(407, 2, 'AClass writing', 262, '2020-02-15 13:22:16', '2020-02-15 13:22:16', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewor', '2020-02-15 13:22:16'),
(408, 3, 'FClass writing', 263, '2020-02-15 13:23:09', '2020-02-15 13:23:11', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:23:11'),
(409, 2, 'AClass writing', 264, '2020-02-15 13:23:11', '2020-02-15 13:23:12', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 5\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewor', '2020-02-15 13:23:12'),
(410, 3, 'FClass writing', 265, '2020-02-15 13:23:51', '2020-02-15 13:23:53', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:23:53'),
(411, 3, 'AClass writing', 266, '2020-02-15 13:23:53', '2020-02-15 13:23:54', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:23:54'),
(412, 11, 'Xref writing', 266, '2020-02-15 13:23:54', '2020-02-15 13:23:54', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:23:54'),
(413, 5, 'Lists writing', 266, '2020-02-15 13:23:54', '2020-02-15 13:23:54', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:23:54'),
(414, 3, 'FClass writing', 267, '2020-02-15 13:32:19', '2020-02-15 13:32:21', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:21'),
(415, 3, 'AClass writing', 268, '2020-02-15 13:32:21', '2020-02-15 13:32:22', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:22'),
(416, 11, 'Xref writing', 268, '2020-02-15 13:32:22', '2020-02-15 13:32:22', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:22'),
(417, 5, 'Lists writing', 268, '2020-02-15 13:32:22', '2020-02-15 13:32:23', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:23'),
(418, 3, 'FClass writing', 269, '2020-02-15 13:32:56', '2020-02-15 13:32:57', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:57');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(419, 3, 'AClass writing', 270, '2020-02-15 13:32:57', '2020-02-15 13:32:58', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:58'),
(420, 11, 'Xref writing', 270, '2020-02-15 13:32:58', '2020-02-15 13:32:58', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:58'),
(421, 5, 'Lists writing', 270, '2020-02-15 13:32:58', '2020-02-15 13:32:59', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:32:59'),
(422, 3, 'FClass writing', 271, '2020-02-15 13:41:22', '2020-02-15 13:41:24', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:41:24'),
(423, 3, 'AClass writing', 272, '2020-02-15 13:41:24', '2020-02-15 13:41:24', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:41:24'),
(424, 11, 'Xref writing', 272, '2020-02-15 13:41:24', '2020-02-15 13:41:25', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:41:25'),
(425, 5, 'Lists writing', 272, '2020-02-15 13:41:25', '2020-02-15 13:41:25', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:41:25'),
(426, 3, 'FClass writing', 273, '2020-02-15 13:46:10', '2020-02-15 13:46:12', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:46:12'),
(427, 3, 'AClass writing', 274, '2020-02-15 13:46:12', '2020-02-15 13:46:13', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:46:13'),
(428, 11, 'Xref writing', 274, '2020-02-15 13:46:13', '2020-02-15 13:46:13', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:46:13'),
(429, 5, 'Lists writing', 274, '2020-02-15 13:46:13', '2020-02-15 13:46:14', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 13:46:14'),
(430, 3, 'FClass writing', 275, '2020-02-15 14:10:47', '2020-02-15 14:10:49', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:10:49'),
(431, 2, 'AClass writing', 276, '2020-02-15 14:10:49', '2020-02-15 14:10:50', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.MsaObjectivesPreparedStatementSetter.setValues(MsaObjectivesPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.MsaObjectivesPreparedStatementSetter.setValues(MsaObjectivesPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep', '2020-02-15 14:10:50'),
(432, 3, 'FClass writing', 277, '2020-02-15 14:15:55', '2020-02-15 14:15:57', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:15:57'),
(433, 3, 'AClass writing', 278, '2020-02-15 14:15:57', '2020-02-15 14:15:58', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:15:58'),
(434, 11, 'Xref writing', 278, '2020-02-15 14:15:58', '2020-02-15 14:15:58', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:15:58'),
(435, 5, 'Lists writing', 278, '2020-02-15 14:15:58', '2020-02-15 14:15:58', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:15:58'),
(436, 3, 'FClass writing', 279, '2020-02-15 14:24:31', '2020-02-15 14:24:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:24:33'),
(437, 3, 'AClass writing', 280, '2020-02-15 14:24:33', '2020-02-15 14:24:34', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:24:34'),
(438, 11, 'Xref writing', 280, '2020-02-15 14:24:34', '2020-02-15 14:24:34', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:24:34'),
(439, 5, 'Lists writing', 280, '2020-02-15 14:24:34', '2020-02-15 14:24:35', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:24:35'),
(440, 3, 'FClass writing', 281, '2020-02-15 14:26:02', '2020-02-15 14:26:04', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:04'),
(441, 3, 'AClass writing', 282, '2020-02-15 14:26:04', '2020-02-15 14:26:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:05'),
(442, 11, 'Xref writing', 282, '2020-02-15 14:26:05', '2020-02-15 14:26:05', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:05'),
(443, 5, 'Lists writing', 282, '2020-02-15 14:26:05', '2020-02-15 14:26:05', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:05'),
(444, 3, 'FClass writing', 283, '2020-02-15 14:26:43', '2020-02-15 14:26:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:45'),
(445, 3, 'AClass writing', 284, '2020-02-15 14:26:45', '2020-02-15 14:26:46', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:46'),
(446, 11, 'Xref writing', 284, '2020-02-15 14:26:46', '2020-02-15 14:26:46', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:46'),
(447, 5, 'Lists writing', 284, '2020-02-15 14:26:46', '2020-02-15 14:26:47', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:26:47'),
(448, 3, 'FClass writing', 285, '2020-02-15 14:28:09', '2020-02-15 14:28:10', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:28:10'),
(449, 3, 'AClass writing', 286, '2020-02-15 14:28:10', '2020-02-15 14:28:11', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:28:11'),
(450, 11, 'Xref writing', 286, '2020-02-15 14:28:11', '2020-02-15 14:28:11', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:28:11'),
(451, 5, 'Lists writing', 286, '2020-02-15 14:28:12', '2020-02-15 14:28:12', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:28:12'),
(452, 3, 'FClass writing', 287, '2020-02-15 14:44:06', '2020-02-15 14:44:08', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:44:08'),
(453, 2, 'AClass writing', 288, '2020-02-15 14:44:08', '2020-02-15 14:44:09', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO msaapplicationnotes(id_msaapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_msaapplicationnotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 5\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewor', '2020-02-15 14:44:09'),
(454, 3, 'FClass writing', 289, '2020-02-15 14:44:36', '2020-02-15 14:44:38', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:44:38'),
(455, 3, 'AClass writing', 290, '2020-02-15 14:44:38', '2020-02-15 14:44:38', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:44:38'),
(456, 11, 'Xref writing', 290, '2020-02-15 14:44:38', '2020-02-15 14:44:39', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:44:39'),
(457, 5, 'Lists writing', 290, '2020-02-15 14:44:39', '2020-02-15 14:44:39', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 14:44:39'),
(458, 3, 'FClass writing', 291, '2020-02-15 15:07:27', '2020-02-15 15:07:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 15:07:29'),
(459, 3, 'AClass writing', 292, '2020-02-15 15:07:29', '2020-02-15 15:07:30', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 15:07:30'),
(460, 11, 'Xref writing', 292, '2020-02-15 15:07:30', '2020-02-15 15:07:31', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 15:07:31'),
(461, 5, 'Lists writing', 292, '2020-02-15 15:07:31', '2020-02-15 15:07:31', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-15 15:07:31'),
(462, 3, 'FClass writing', 293, '2020-02-17 10:08:31', '2020-02-17 10:08:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:08:33'),
(463, 2, 'AClass writing', 294, '2020-02-17 10:08:33', '2020-02-17 10:08:34', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO aedeveloper(id_aedeveloper, testo, ida, idf, id_acomponent) VALUES (?,?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; nested exception is java.sql.SQLSyntaxErrorException: Unknown column \'id_acoapplicationnotes\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.Tasklet', '2020-02-17 10:08:34'),
(464, 3, 'FClass writing', 295, '2020-02-17 10:09:07', '2020-02-17 10:09:09', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:09:09'),
(465, 2, 'AClass writing', 296, '2020-02-17 10:09:09', '2020-02-17 10:09:09', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_aedeveloper = ?]; nested exception is java.sql.SQLSyntaxErrorException: Unknown column \'id_aedeveloper\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(Ta', '2020-02-17 10:09:09'),
(466, 3, 'FClass writing', 297, '2020-02-17 10:09:57', '2020-02-17 10:09:59', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:09:59'),
(467, 2, 'AClass writing', 298, '2020-02-17 10:09:59', '2020-02-17 10:10:00', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO aedeveloper(id_aedeveloper, testo, ida, idf, id_acomponent) VALUES (?,?,?,?,?) ON DUPLICATE KEY UPDATE id_aedeveloper = ?]; Column \'id_aedeveloper\' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column \'id_aedeveloper\' cannot be null\n	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:', '2020-02-17 10:10:00'),
(468, 3, 'FClass writing', 299, '2020-02-17 10:12:56', '2020-02-17 10:12:57', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:12:57'),
(469, 2, 'AClass writing', 300, '2020-02-17 10:12:57', '2020-02-17 10:12:58', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeDeveloperPreparedStatementSetter.setValues(AeDeveloperPreparedStatementSetter.java:14)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeDeveloperPreparedStatementSetter.setValues(AeDeveloperPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:', '2020-02-17 10:12:58'),
(470, 3, 'FClass writing', 301, '2020-02-17 10:14:32', '2020-02-17 10:14:34', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:14:34'),
(471, 2, 'AClass writing', 302, '2020-02-17 10:14:34', '2020-02-17 10:14:35', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeDeveloperPreparedStatementSetter.setValues(AeDeveloperPreparedStatementSetter.java:14)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeDeveloperPreparedStatementSetter.setValues(AeDeveloperPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:', '2020-02-17 10:14:35'),
(472, 3, 'FClass writing', 303, '2020-02-17 10:16:03', '2020-02-17 10:16:04', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:16:04'),
(473, 3, 'AClass writing', 304, '2020-02-17 10:16:04', '2020-02-17 10:16:05', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:16:05'),
(474, 11, 'Xref writing', 304, '2020-02-17 10:16:05', '2020-02-17 10:16:05', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:16:05'),
(475, 5, 'Lists writing', 304, '2020-02-17 10:16:05', '2020-02-17 10:16:06', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:16:06'),
(476, 3, 'FClass writing', 305, '2020-02-17 10:29:23', '2020-02-17 10:29:25', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:29:25'),
(477, 3, 'AClass writing', 306, '2020-02-17 10:29:25', '2020-02-17 10:29:25', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:29:25'),
(478, 11, 'Xref writing', 306, '2020-02-17 10:29:25', '2020-02-17 10:29:26', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:29:26'),
(479, 5, 'Lists writing', 306, '2020-02-17 10:29:26', '2020-02-17 10:29:26', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:29:26'),
(480, 3, 'FClass writing', 307, '2020-02-17 10:31:06', '2020-02-17 10:31:08', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:31:08'),
(481, 3, 'AClass writing', 308, '2020-02-17 10:31:08', '2020-02-17 10:31:09', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:31:09'),
(482, 11, 'Xref writing', 308, '2020-02-17 10:31:09', '2020-02-17 10:31:09', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:31:09'),
(483, 5, 'Lists writing', 308, '2020-02-17 10:31:09', '2020-02-17 10:31:10', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:31:10'),
(484, 3, 'FClass writing', 309, '2020-02-17 10:44:24', '2020-02-17 10:44:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:44:26'),
(485, 2, 'AClass writing', 310, '2020-02-17 10:44:26', '2020-02-17 10:44:27', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\n	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n	at java.base/java.util.Objects.checkIndex(Objects.java:372)\n	at java.base/java.util.ArrayList.get(ArrayList.java:458)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContex', '2020-02-17 10:44:27'),
(486, 3, 'FClass writing', 311, '2020-02-17 10:45:36', '2020-02-17 10:45:38', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:45:38'),
(487, 2, 'AClass writing', 312, '2020-02-17 10:45:38', '2020-02-17 10:45:39', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\n	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n	at java.base/java.util.Objects.checkIndex(Objects.java:372)\n	at java.base/java.util.ArrayList.get(ArrayList.java:458)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContex', '2020-02-17 10:45:39'),
(488, 3, 'FClass writing', 313, '2020-02-17 10:46:23', '2020-02-17 10:46:25', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:46:25'),
(489, 2, 'AClass writing', 314, '2020-02-17 10:46:25', '2020-02-17 10:46:26', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\n	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n	at java.base/java.util.Objects.checkIndex(Objects.java:372)\n	at java.base/java.util.ArrayList.get(ArrayList.java:458)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContex', '2020-02-17 10:46:26'),
(490, 3, 'FClass writing', 315, '2020-02-17 10:47:13', '2020-02-17 10:47:14', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:47:14'),
(491, 2, 'AClass writing', 316, '2020-02-17 10:47:14', '2020-02-17 10:47:15', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\n	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n	at java.base/java.util.Objects.checkIndex(Objects.java:372)\n	at java.base/java.util.ArrayList.get(ArrayList.java:458)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContex', '2020-02-17 10:47:15'),
(492, 3, 'FClass writing', 317, '2020-02-17 10:47:49', '2020-02-17 10:47:50', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:47:50'),
(493, 2, 'AClass writing', 318, '2020-02-17 10:47:51', '2020-02-17 10:47:51', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:14)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeContentPreparedStatementSetter.setValues(AeContentPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at', '2020-02-17 10:47:51'),
(494, 3, 'FClass writing', 319, '2020-02-17 10:49:01', '2020-02-17 10:49:02', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:49:02'),
(495, 3, 'AClass writing', 320, '2020-02-17 10:49:02', '2020-02-17 10:49:03', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:49:03'),
(496, 11, 'Xref writing', 320, '2020-02-17 10:49:03', '2020-02-17 10:49:04', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:49:04'),
(497, 5, 'Lists writing', 320, '2020-02-17 10:49:04', '2020-02-17 10:49:04', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 10:49:04'),
(498, 3, 'FClass writing', 321, '2020-02-17 11:25:56', '2020-02-17 11:25:57', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 11:25:57'),
(499, 2, 'AClass writing', 322, '2020-02-17 11:25:57', '2020-02-17 11:25:59', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.IndexOutOfBoundsException: Index 1 out of bounds for length 1\n	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\n	at java.base/java.util.Objects.checkIndex(Objects.java:372)\n	at java.base/java.util.ArrayList.get(ArrayList.java:458)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeEvaluatorPreparedStatementSetter.setValues(AeEvaluatorPreparedStatementSetter.java:17)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.AeEvaluatorPreparedStatementSetter.setValues(AeEvaluatorPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(St', '2020-02-17 11:25:59'),
(500, 3, 'FClass writing', 323, '2020-02-17 11:26:37', '2020-02-17 11:26:39', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 11:26:39'),
(501, 3, 'AClass writing', 324, '2020-02-17 11:26:39', '2020-02-17 11:26:40', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 11:26:40'),
(502, 11, 'Xref writing', 324, '2020-02-17 11:26:40', '2020-02-17 11:26:40', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 11:26:40'),
(503, 5, 'Lists writing', 324, '2020-02-17 11:26:40', '2020-02-17 11:26:40', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 11:26:40'),
(504, 3, 'FClass writing', 325, '2020-02-17 11:59:43', '2020-02-17 11:59:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 11:59:45'),
(505, 2, 'AClass writing', 326, '2020-02-17 11:59:45', '2020-02-17 11:59:46', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.MWorkunitPreparedStatementSetter.setValues(MWorkunitPreparedStatementSetter.java:16)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_elements.MWorkunitPreparedStatementSetter.setValues(MWorkunitPreparedStatementSetter.java:9)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at', '2020-02-17 11:59:46'),
(506, 3, 'FClass writing', 327, '2020-02-17 12:00:42', '2020-02-17 12:00:44', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:00:44'),
(507, 3, 'AClass writing', 328, '2020-02-17 12:00:44', '2020-02-17 12:00:45', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:00:45'),
(508, 11, 'Xref writing', 328, '2020-02-17 12:00:46', '2020-02-17 12:00:46', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:00:46'),
(509, 5, 'Lists writing', 328, '2020-02-17 12:00:46', '2020-02-17 12:00:46', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:00:46'),
(510, 3, 'FClass writing', 329, '2020-02-17 12:15:08', '2020-02-17 12:15:10', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:15:10');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(511, 3, 'AClass writing', 330, '2020-02-17 12:15:10', '2020-02-17 12:15:11', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:15:11'),
(512, 11, 'Xref writing', 330, '2020-02-17 12:15:11', '2020-02-17 12:15:12', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:15:12'),
(513, 5, 'Lists writing', 330, '2020-02-17 12:15:12', '2020-02-17 12:15:12', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:15:12'),
(514, 3, 'FClass writing', 331, '2020-02-17 12:16:05', '2020-02-17 12:16:07', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:16:07'),
(515, 3, 'AClass writing', 332, '2020-02-17 12:16:07', '2020-02-17 12:16:08', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:16:08'),
(516, 11, 'Xref writing', 332, '2020-02-17 12:16:08', '2020-02-17 12:16:08', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:16:08'),
(517, 5, 'Lists writing', 332, '2020-02-17 12:16:08', '2020-02-17 12:16:09', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-17 12:16:09'),
(518, 3, 'FClass writing', 333, '2020-02-18 09:32:04', '2020-02-18 09:32:06', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 09:32:06'),
(519, 3, 'AClass writing', 334, '2020-02-18 09:32:06', '2020-02-18 09:32:07', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 09:32:07'),
(520, 11, 'Xref writing', 334, '2020-02-18 09:32:07', '2020-02-18 09:32:07', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 09:32:07'),
(521, 5, 'Lists writing', 334, '2020-02-18 09:32:07', '2020-02-18 09:32:08', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 09:32:08'),
(522, 3, 'FClass writing', 335, '2020-02-18 10:12:38', '2020-02-18 10:12:40', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 10:12:40'),
(523, 2, 'AClass writing', 336, '2020-02-18 10:12:40', '2020-02-18 10:12:41', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO acoapplicationnotes(id_acoapplicationnotes, testo, ida, idf) VALUES (?,?,?,?) ON DUPLICATE KEY UPDATE id_acoapplicationnotes = ?]; Duplicate entry \'0.15620890331320947\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'0.15620890331320947\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springfr', '2020-02-18 10:12:41'),
(524, 3, 'FClass writing', 337, '2020-02-18 10:13:12', '2020-02-18 10:13:14', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 10:13:14'),
(525, 3, 'AClass writing', 338, '2020-02-18 10:13:14', '2020-02-18 10:13:15', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 10:13:15'),
(526, 11, 'Xref writing', 338, '2020-02-18 10:13:15', '2020-02-18 10:13:15', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 10:13:15'),
(527, 5, 'Lists writing', 338, '2020-02-18 10:13:16', '2020-02-18 10:13:16', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 10:13:16'),
(528, 3, 'FClass writing', 339, '2020-02-18 11:00:31', '2020-02-18 11:00:32', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:00:32'),
(529, 3, 'AClass writing', 340, '2020-02-18 11:00:32', '2020-02-18 11:00:34', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:00:34'),
(530, 11, 'Xref writing', 340, '2020-02-18 11:00:34', '2020-02-18 11:00:34', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:00:34'),
(531, 5, 'Lists writing', 340, '2020-02-18 11:00:34', '2020-02-18 11:00:34', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:00:34'),
(532, 2, 'Subclause writing', 340, '2020-02-18 11:00:34', '2020-02-18 11:00:35', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UnmarshallingFailureException: JAXB unmarshalling exception; nested exception is javax.xml.bind.UnmarshalException\n - with linked exception:\n[com.sun.istack.SAXParseException2; lineNumber: 470; columnNumber: 83; unexpected element (uri:\"\", local:\"subclause\"). Expected elements are <{}xref>]\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:911)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:784)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at o', '2020-02-18 11:00:35'),
(533, 3, 'FClass writing', 341, '2020-02-18 11:09:00', '2020-02-18 11:09:01', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:09:01'),
(534, 3, 'AClass writing', 342, '2020-02-18 11:09:01', '2020-02-18 11:09:03', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:09:03'),
(535, 11, 'Xref writing', 342, '2020-02-18 11:09:03', '2020-02-18 11:09:03', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:09:03'),
(536, 5, 'Lists writing', 342, '2020-02-18 11:09:03', '2020-02-18 11:09:03', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:09:03'),
(537, 2, 'Subclause writing', 342, '2020-02-18 11:09:03', '2020-02-18 11:09:03', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UnmarshallingFailureException: JAXB unmarshalling exception; nested exception is javax.xml.bind.UnmarshalException\n - with linked exception:\n[com.sun.istack.SAXParseException2; lineNumber: 470; columnNumber: 83; unexpected element (uri:\"\", local:\"subclause\"). Expected elements are <{}xref>]\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:911)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:784)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at o', '2020-02-18 11:09:03'),
(538, 3, 'FClass writing', 343, '2020-02-18 11:14:46', '2020-02-18 11:14:48', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:14:48'),
(539, 3, 'AClass writing', 344, '2020-02-18 11:14:48', '2020-02-18 11:14:49', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:14:49'),
(540, 11, 'Xref writing', 344, '2020-02-18 11:14:49', '2020-02-18 11:14:50', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:14:50'),
(541, 5, 'Lists writing', 344, '2020-02-18 11:14:50', '2020-02-18 11:14:50', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 11:14:50'),
(542, 2, 'Subclause writing', 344, '2020-02-18 11:14:50', '2020-02-18 11:14:50', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UnmarshallingFailureException: JAXB unmarshalling exception; nested exception is javax.xml.bind.UnmarshalException\n - with linked exception:\n[com.sun.istack.SAXParseException2; lineNumber: 470; columnNumber: 83; unexpected element (uri:\"\", local:\"subclause\"). Expected elements are <{}xref>]\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:911)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:784)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at o', '2020-02-18 11:14:50'),
(543, 3, 'FClass writing', 345, '2020-02-18 14:15:46', '2020-02-18 14:15:48', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:15:48'),
(544, 3, 'AClass writing', 346, '2020-02-18 14:15:48', '2020-02-18 14:15:49', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:15:49'),
(545, 11, 'Xref writing', 346, '2020-02-18 14:15:49', '2020-02-18 14:15:50', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:15:50'),
(546, 5, 'Lists writing', 346, '2020-02-18 14:15:50', '2020-02-18 14:15:50', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:15:50'),
(547, 2, 'Subclause writing', 346, '2020-02-18 14:15:50', '2020-02-18 14:15:50', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UnmarshallingFailureException: JAXB unmarshalling exception; nested exception is javax.xml.bind.UnmarshalException\n - with linked exception:\n[com.sun.istack.SAXParseException2; lineNumber: 470; columnNumber: 83; unexpected element (uri:\"\", local:\"subclause\"). Expected elements are <{}xref>]\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:911)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:784)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at o', '2020-02-18 14:15:50'),
(548, 3, 'FClass writing', 347, '2020-02-18 14:19:03', '2020-02-18 14:19:05', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:19:05'),
(549, 3, 'AClass writing', 348, '2020-02-18 14:19:05', '2020-02-18 14:19:06', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:19:06'),
(550, 11, 'Xref writing', 348, '2020-02-18 14:19:06', '2020-02-18 14:19:06', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:19:06'),
(551, 5, 'Lists writing', 348, '2020-02-18 14:19:06', '2020-02-18 14:19:07', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:19:07'),
(552, 2, 'Subclause writing', 348, '2020-02-18 14:19:07', '2020-02-18 14:19:07', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UnmarshallingFailureException: JAXB unmarshalling exception; nested exception is javax.xml.bind.UnmarshalException\n - with linked exception:\n[com.sun.istack.SAXParseException2; lineNumber: 470; columnNumber: 83; unexpected element (uri:\"\", local:\"subclause\"). Expected elements are <{}xref>]\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:911)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:784)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at o', '2020-02-18 14:19:07'),
(553, 3, 'FClass writing', 349, '2020-02-18 14:26:36', '2020-02-18 14:26:38', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:26:38'),
(554, 3, 'AClass writing', 350, '2020-02-18 14:26:38', '2020-02-18 14:26:39', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:26:39'),
(555, 11, 'Xref writing', 350, '2020-02-18 14:26:39', '2020-02-18 14:26:39', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:26:39'),
(556, 5, 'Lists writing', 350, '2020-02-18 14:26:39', '2020-02-18 14:26:40', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:26:40'),
(557, 2, 'Subclause writing', 350, '2020-02-18 14:26:40', '2020-02-18 14:26:40', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions\n@XmlAttribute/@XmlValue need to reference a Java type that maps to text in XML.\n	this problem is related to the following location:\n		at private java.util.List com.unicampania.xmltodb.model.parasequence.Subclause.xrefList\n		at com.unicampania.xmltodb.model.parasequence.Subclause\n\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:915)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext(Jaxb2Marshaller.java:485)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller(Jaxb2Marshaller.java:858)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:761)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.do', '2020-02-18 14:26:40'),
(558, 3, 'FClass writing', 351, '2020-02-18 14:28:00', '2020-02-18 14:28:01', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:28:01'),
(559, 3, 'AClass writing', 352, '2020-02-18 14:28:02', '2020-02-18 14:28:03', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:28:03'),
(560, 11, 'Xref writing', 352, '2020-02-18 14:28:03', '2020-02-18 14:28:03', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:28:03'),
(561, 5, 'Lists writing', 352, '2020-02-18 14:28:03', '2020-02-18 14:28:03', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:28:03'),
(562, 3, 'Subclause writing', 352, '2020-02-18 14:28:03', '2020-02-18 14:28:03', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:28:03'),
(563, 3, 'FClass writing', 353, '2020-02-18 14:30:45', '2020-02-18 14:30:46', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:30:46'),
(564, 3, 'AClass writing', 354, '2020-02-18 14:30:46', '2020-02-18 14:30:48', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:30:48'),
(565, 11, 'Xref writing', 354, '2020-02-18 14:30:48', '2020-02-18 14:30:48', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:30:48'),
(566, 5, 'Lists writing', 354, '2020-02-18 14:30:48', '2020-02-18 14:30:48', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:30:48'),
(567, 2, 'Subclause writing', 354, '2020-02-18 14:30:48', '2020-02-18 14:30:48', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions\n@XmlAttribute/@XmlValue need to reference a Java type that maps to text in XML.\n	this problem is related to the following location:\n		at private java.util.List com.unicampania.xmltodb.model.parasequence.Subclause.subclauseList\n		at com.unicampania.xmltodb.model.parasequence.Subclause\n\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:915)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext(Jaxb2Marshaller.java:485)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller(Jaxb2Marshaller.java:858)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:761)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallba', '2020-02-18 14:30:48'),
(568, 3, 'FClass writing', 355, '2020-02-18 14:32:14', '2020-02-18 14:32:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:32:16'),
(569, 3, 'AClass writing', 356, '2020-02-18 14:32:16', '2020-02-18 14:32:17', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:32:17'),
(570, 11, 'Xref writing', 356, '2020-02-18 14:32:17', '2020-02-18 14:32:17', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:32:17'),
(571, 5, 'Lists writing', 356, '2020-02-18 14:32:17', '2020-02-18 14:32:18', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:32:18'),
(572, 3, 'Subclause writing', 356, '2020-02-18 14:32:18', '2020-02-18 14:32:18', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:32:18'),
(573, 3, 'FClass writing', 357, '2020-02-18 14:38:53', '2020-02-18 14:38:54', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:38:54'),
(574, 3, 'AClass writing', 358, '2020-02-18 14:38:54', '2020-02-18 14:38:56', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:38:56'),
(575, 11, 'Xref writing', 358, '2020-02-18 14:38:56', '2020-02-18 14:38:56', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:38:56'),
(576, 5, 'Lists writing', 358, '2020-02-18 14:38:56', '2020-02-18 14:38:56', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:38:56'),
(577, 3, 'Subclause writing', 358, '2020-02-18 14:38:56', '2020-02-18 14:38:56', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:38:56'),
(578, 3, 'FClass writing', 359, '2020-02-18 14:52:57', '2020-02-18 14:52:59', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:52:59'),
(579, 3, 'AClass writing', 360, '2020-02-18 14:52:59', '2020-02-18 14:53:00', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:53:00'),
(580, 11, 'Xref writing', 360, '2020-02-18 14:53:00', '2020-02-18 14:53:01', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:53:01'),
(581, 5, 'Lists writing', 360, '2020-02-18 14:53:01', '2020-02-18 14:53:01', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 14:53:01'),
(582, 2, 'Subclause writing', 360, '2020-02-18 14:53:01', '2020-02-18 14:53:01', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions\n@XmlAttribute/@XmlValue need to reference a Java type that maps to text in XML.\n	this problem is related to the following location:\n		at private java.util.List com.unicampania.xmltodb.model.parasequence.Subclause.xrefList\n		at com.unicampania.xmltodb.model.parasequence.Subclause\n\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:915)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext(Jaxb2Marshaller.java:485)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller(Jaxb2Marshaller.java:858)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:761)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.do', '2020-02-18 14:53:01'),
(583, 3, 'FClass writing', 361, '2020-02-18 15:10:20', '2020-02-18 15:10:21', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:10:21'),
(584, 3, 'AClass writing', 362, '2020-02-18 15:10:22', '2020-02-18 15:10:23', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:10:23'),
(585, 11, 'Xref writing', 362, '2020-02-18 15:10:23', '2020-02-18 15:10:23', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:10:23'),
(586, 5, 'Lists writing', 362, '2020-02-18 15:10:24', '2020-02-18 15:10:24', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:10:24'),
(587, 3, 'Subclause writing', 362, '2020-02-18 15:10:24', '2020-02-18 15:10:24', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:10:24'),
(588, 3, 'FClass writing', 363, '2020-02-18 15:18:18', '2020-02-18 15:18:20', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:18:20'),
(589, 3, 'AClass writing', 364, '2020-02-18 15:18:20', '2020-02-18 15:18:21', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:18:21'),
(590, 11, 'Xref writing', 364, '2020-02-18 15:18:21', '2020-02-18 15:18:21', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:18:21'),
(591, 5, 'Lists writing', 364, '2020-02-18 15:18:22', '2020-02-18 15:18:22', 'COMPLETED', 3, 261, 0, 261, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:18:22'),
(592, 3, 'Subclause writing', 364, '2020-02-18 15:18:22', '2020-02-18 15:18:22', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 15:18:22'),
(593, 3, 'FClass writing', 365, '2020-02-18 16:00:50', '2020-02-18 16:00:52', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:00:52'),
(594, 3, 'AClass writing', 366, '2020-02-18 16:00:52', '2020-02-18 16:00:53', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:00:53'),
(595, 11, 'Xref writing', 366, '2020-02-18 16:00:53', '2020-02-18 16:00:54', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:00:54'),
(596, 3, 'Subclause writing', 366, '2020-02-18 16:00:54', '2020-02-18 16:00:54', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:00:54'),
(597, 3, 'EAL writing', 367, '2020-02-18 16:00:54', '2020-02-18 16:00:54', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:00:54'),
(598, 3, 'FClass writing', 368, '2020-02-18 16:19:37', '2020-02-18 16:19:39', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:19:39'),
(599, 3, 'AClass writing', 369, '2020-02-18 16:19:39', '2020-02-18 16:19:41', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:19:41'),
(600, 11, 'Xref writing', 369, '2020-02-18 16:19:41', '2020-02-18 16:19:41', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:19:41'),
(601, 3, 'Subclause writing', 369, '2020-02-18 16:19:41', '2020-02-18 16:19:41', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:19:41'),
(602, 3, 'EAL writing', 370, '2020-02-18 16:19:41', '2020-02-18 16:19:41', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:19:41'),
(603, 3, 'FClass writing', 371, '2020-02-18 16:23:34', '2020-02-18 16:23:36', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:23:36'),
(604, 3, 'AClass writing', 372, '2020-02-18 16:23:36', '2020-02-18 16:23:38', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:23:38'),
(605, 11, 'Xref writing', 372, '2020-02-18 16:23:38', '2020-02-18 16:23:38', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:23:38'),
(606, 3, 'Subclause writing', 372, '2020-02-18 16:23:38', '2020-02-18 16:23:38', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:23:38'),
(607, 2, 'EAL writing', 373, '2020-02-18 16:23:38', '2020-02-18 16:23:38', 'FAILED', 0, 7, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [INSERT INTO eal-objectives(id_ealobjectives, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_ealobjectives = ?]; Parameter index out of range (4 > number of parameters, which is 3).; nested exception is java.sql.SQLException: Parameter index out of range (4 > number of parameters, which is 3).\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.Re', '2020-02-18 16:23:38'),
(608, 3, 'FClass writing', 374, '2020-02-18 16:24:20', '2020-02-18 16:24:22', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:24:22'),
(609, 3, 'AClass writing', 375, '2020-02-18 16:24:22', '2020-02-18 16:24:23', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:24:23'),
(610, 11, 'Xref writing', 375, '2020-02-18 16:24:23', '2020-02-18 16:24:24', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:24:24'),
(611, 3, 'Subclause writing', 375, '2020-02-18 16:24:24', '2020-02-18 16:24:24', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:24:24'),
(612, 2, 'EAL writing', 376, '2020-02-18 16:24:24', '2020-02-18 16:24:24', 'FAILED', 0, 7, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO ealobjectives(id_ealobjectives, testo, id_eal) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id_ealobjectives = ?]; Column \'id_ealobjectives\' cannot be null; nested exception is java.sql.BatchUpdateException: Column \'id_ealobjectives\' cannot be null\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.ja', '2020-02-18 16:24:24'),
(613, 3, 'FClass writing', 377, '2020-02-18 16:25:37', '2020-02-18 16:25:38', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:25:38'),
(614, 3, 'AClass writing', 378, '2020-02-18 16:25:39', '2020-02-18 16:25:40', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:25:40'),
(615, 11, 'Xref writing', 378, '2020-02-18 16:25:40', '2020-02-18 16:25:40', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:25:40'),
(616, 3, 'Subclause writing', 378, '2020-02-18 16:25:40', '2020-02-18 16:25:40', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:25:40'),
(617, 3, 'EAL writing', 379, '2020-02-18 16:25:40', '2020-02-18 16:25:40', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:25:40'),
(618, 3, 'FClass writing', 380, '2020-02-18 16:33:49', '2020-02-18 16:33:50', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:33:50'),
(619, 3, 'AClass writing', 381, '2020-02-18 16:33:51', '2020-02-18 16:33:52', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:33:52'),
(620, 11, 'Xref writing', 381, '2020-02-18 16:33:52', '2020-02-18 16:33:52', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:33:52'),
(621, 3, 'Subclause writing', 381, '2020-02-18 16:33:52', '2020-02-18 16:33:52', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:33:52'),
(622, 2, 'EAL writing', 382, '2020-02-18 16:33:53', '2020-02-18 16:33:53', 'FAILED', 0, 7, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO ealobjectives(id_ealobjectives, testo, id_eal) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id_ealobjectives = ?]; nested exception is java.sql.SQLException: No value specified for parameter 4\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support', '2020-02-18 16:33:53'),
(623, 3, 'FClass writing', 383, '2020-02-18 16:34:54', '2020-02-18 16:34:55', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:34:55'),
(624, 3, 'AClass writing', 384, '2020-02-18 16:34:55', '2020-02-18 16:34:57', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:34:57'),
(625, 11, 'Xref writing', 384, '2020-02-18 16:34:57', '2020-02-18 16:34:57', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:34:57'),
(626, 3, 'Subclause writing', 384, '2020-02-18 16:34:57', '2020-02-18 16:34:57', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:34:57'),
(627, 3, 'EAL writing', 385, '2020-02-18 16:34:57', '2020-02-18 16:34:57', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:34:57'),
(628, 3, 'FClass writing', 386, '2020-02-18 16:48:28', '2020-02-18 16:48:30', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:48:30'),
(629, 3, 'AClass writing', 387, '2020-02-18 16:48:30', '2020-02-18 16:48:32', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:48:32'),
(630, 11, 'Xref writing', 387, '2020-02-18 16:48:32', '2020-02-18 16:48:32', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:48:32'),
(631, 3, 'Subclause writing', 387, '2020-02-18 16:48:32', '2020-02-18 16:48:32', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:48:32'),
(632, 3, 'EAL writing', 388, '2020-02-18 16:48:32', '2020-02-18 16:48:32', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:48:32'),
(633, 3, 'FClass writing', 389, '2020-02-18 16:49:35', '2020-02-18 16:49:36', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:49:36'),
(634, 3, 'AClass writing', 390, '2020-02-18 16:49:37', '2020-02-18 16:49:38', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:49:38');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(635, 11, 'Xref writing', 390, '2020-02-18 16:49:38', '2020-02-18 16:49:38', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:49:38'),
(636, 3, 'Subclause writing', 390, '2020-02-18 16:49:38', '2020-02-18 16:49:38', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:49:38'),
(637, 3, 'EAL writing', 391, '2020-02-18 16:49:39', '2020-02-18 16:49:39', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:49:39'),
(638, 3, 'FClass writing', 392, '2020-02-18 16:57:24', '2020-02-18 16:57:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:57:26'),
(639, 3, 'AClass writing', 393, '2020-02-18 16:57:26', '2020-02-18 16:57:27', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:57:27'),
(640, 11, 'Xref writing', 393, '2020-02-18 16:57:27', '2020-02-18 16:57:27', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:57:27'),
(641, 3, 'Subclause writing', 393, '2020-02-18 16:57:28', '2020-02-18 16:57:28', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:57:28'),
(642, 2, 'EAL writing', 394, '2020-02-18 16:57:28', '2020-02-18 16:57:28', 'FAILED', 0, 0, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.oxm.UncategorizedMappingException: Unknown JAXB exception; nested exception is com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 1 counts of IllegalAnnotationExceptions\n@XmlAttribute/@XmlValue need to reference a Java type that maps to text in XML.\n	this problem is related to the following location:\n		at private java.util.List com.unicampania.xmltodb.model.model_evaluation_assurance_levels.Eal.ealComponentList\n		at com.unicampania.xmltodb.model.model_evaluation_assurance_levels.Eal\n\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.convertJaxbException(Jaxb2Marshaller.java:915)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.getJaxbContext(Jaxb2Marshaller.java:485)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.createUnmarshaller(Jaxb2Marshaller.java:858)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:761)\n	at org.springframework.oxm.jaxb.Jaxb2Marshaller.unmarshal(Jaxb2Marshaller.java:753)\n	at org.springframework.batch.item.xml.StaxEventItemReader.doRead(StaxEventItemReader.java:255)\n	at org.springframework.batch.item.support.AbstractItemCountingItemStreamItemReader.read(AbstractItemCountingItemStreamItemReader.java:92)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.doRead(SimpleChunkProvider.java:94)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.read(SimpleChunkProvider.java:161)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider$1.doInIteration(SimpleChunkProvider.java:119)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.item.SimpleChunkProvider.provide(SimpleChunkProvider.java:113)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:69)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scop', '2020-02-18 16:57:28'),
(643, 3, 'FClass writing', 395, '2020-02-18 16:58:24', '2020-02-18 16:58:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:58:26'),
(644, 3, 'AClass writing', 396, '2020-02-18 16:58:26', '2020-02-18 16:58:27', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:58:27'),
(645, 11, 'Xref writing', 396, '2020-02-18 16:58:27', '2020-02-18 16:58:28', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:58:28'),
(646, 3, 'Subclause writing', 396, '2020-02-18 16:58:28', '2020-02-18 16:58:28', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:58:28'),
(647, 3, 'EAL writing', 397, '2020-02-18 16:58:28', '2020-02-18 16:58:28', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 16:58:28'),
(648, 3, 'FClass writing', 398, '2020-02-18 17:00:20', '2020-02-18 17:00:21', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 17:00:21'),
(649, 3, 'AClass writing', 399, '2020-02-18 17:00:21', '2020-02-18 17:00:23', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 17:00:23'),
(650, 11, 'Xref writing', 399, '2020-02-18 17:00:23', '2020-02-18 17:00:23', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 17:00:23'),
(651, 3, 'Subclause writing', 399, '2020-02-18 17:00:23', '2020-02-18 17:00:23', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 17:00:23'),
(652, 3, 'EAL writing', 400, '2020-02-18 17:00:23', '2020-02-18 17:00:23', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 17:00:23'),
(653, 3, 'FClass writing', 401, '2020-02-18 18:28:05', '2020-02-18 18:28:07', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:28:07'),
(654, 3, 'AClass writing', 402, '2020-02-18 18:28:07', '2020-02-18 18:28:08', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:28:08'),
(655, 11, 'Xref writing', 402, '2020-02-18 18:28:08', '2020-02-18 18:28:08', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:28:08'),
(656, 3, 'Subclause writing', 402, '2020-02-18 18:28:08', '2020-02-18 18:28:08', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:28:08'),
(657, 3, 'EAL writing', 403, '2020-02-18 18:28:09', '2020-02-18 18:28:09', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:28:09'),
(658, 3, 'FClass writing', 404, '2020-02-18 18:41:29', '2020-02-18 18:41:31', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:41:31'),
(659, 3, 'AClass writing', 405, '2020-02-18 18:41:31', '2020-02-18 18:41:32', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:41:32'),
(660, 11, 'Xref writing', 405, '2020-02-18 18:41:32', '2020-02-18 18:41:33', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:41:33'),
(661, 2, 'Lists writing', 405, '2020-02-18 18:41:33', '2020-02-18 18:41:33', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.suppo', '2020-02-18 18:41:33'),
(662, 3, 'EAL writing', 406, '2020-02-18 18:41:33', '2020-02-18 18:41:33', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:41:33'),
(663, 3, 'FClass writing', 407, '2020-02-18 18:42:38', '2020-02-18 18:42:40', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:42:40'),
(664, 3, 'AClass writing', 408, '2020-02-18 18:42:40', '2020-02-18 18:42:42', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:42:42'),
(665, 11, 'Xref writing', 408, '2020-02-18 18:42:42', '2020-02-18 18:42:42', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:42:42'),
(666, 3, 'Lists writing', 408, '2020-02-18 18:42:42', '2020-02-18 18:42:42', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:42:42'),
(667, 3, 'Subclause writing', 408, '2020-02-18 18:42:42', '2020-02-18 18:42:42', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:42:42'),
(668, 3, 'EAL writing', 409, '2020-02-18 18:42:42', '2020-02-18 18:42:42', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:42:42'),
(669, 3, 'FClass writing', 410, '2020-02-18 18:49:57', '2020-02-18 18:49:58', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:49:58'),
(670, 3, 'AClass writing', 411, '2020-02-18 18:49:58', '2020-02-18 18:50:00', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:00'),
(671, 11, 'Xref writing', 411, '2020-02-18 18:50:00', '2020-02-18 18:50:00', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:00'),
(672, 2, 'Lists writing', 411, '2020-02-18 18:50:00', '2020-02-18 18:50:00', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.suppo', '2020-02-18 18:50:00'),
(673, 3, 'EAL writing', 412, '2020-02-18 18:50:01', '2020-02-18 18:50:01', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:01'),
(674, 3, 'FClass writing', 413, '2020-02-18 18:50:40', '2020-02-18 18:50:42', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:42'),
(675, 3, 'AClass writing', 414, '2020-02-18 18:50:42', '2020-02-18 18:50:43', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:43'),
(676, 11, 'Xref writing', 414, '2020-02-18 18:50:43', '2020-02-18 18:50:44', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:44'),
(677, 2, 'Lists writing', 414, '2020-02-18 18:50:44', '2020-02-18 18:50:44', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.suppo', '2020-02-18 18:50:44'),
(678, 3, 'EAL writing', 415, '2020-02-18 18:50:44', '2020-02-18 18:50:44', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:50:44'),
(679, 3, 'FClass writing', 416, '2020-02-18 18:51:56', '2020-02-18 18:51:58', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:51:58'),
(680, 3, 'AClass writing', 417, '2020-02-18 18:51:58', '2020-02-18 18:51:59', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:51:59'),
(681, 11, 'Xref writing', 417, '2020-02-18 18:51:59', '2020-02-18 18:52:00', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:52:00'),
(682, 2, 'Lists writing', 417, '2020-02-18 18:52:00', '2020-02-18 18:52:00', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'0.14256344299672197\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'0.14256344299672197\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.b', '2020-02-18 18:52:00'),
(683, 3, 'EAL writing', 418, '2020-02-18 18:52:00', '2020-02-18 18:52:00', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:52:00'),
(684, 3, 'FClass writing', 419, '2020-02-18 18:52:52', '2020-02-18 18:52:54', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:52:54'),
(685, 3, 'AClass writing', 420, '2020-02-18 18:52:54', '2020-02-18 18:52:55', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:52:55'),
(686, 11, 'Xref writing', 420, '2020-02-18 18:52:55', '2020-02-18 18:52:56', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:52:56'),
(687, 2, 'Lists writing', 420, '2020-02-18 18:52:56', '2020-02-18 18:52:56', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'0.30577678699116295\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'0.30577678699116295\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.b', '2020-02-18 18:52:56'),
(688, 3, 'EAL writing', 421, '2020-02-18 18:52:56', '2020-02-18 18:52:56', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 18:52:56'),
(689, 3, 'FClass writing', 422, '2020-02-18 19:02:24', '2020-02-18 19:02:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:02:26'),
(690, 3, 'AClass writing', 423, '2020-02-18 19:02:26', '2020-02-18 19:02:28', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:02:28'),
(691, 11, 'Xref writing', 423, '2020-02-18 19:02:28', '2020-02-18 19:02:28', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:02:28'),
(692, 2, 'Lists writing', 423, '2020-02-18 19:02:28', '2020-02-18 19:02:28', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.suppo', '2020-02-18 19:02:28'),
(693, 3, 'EAL writing', 424, '2020-02-18 19:02:28', '2020-02-18 19:02:29', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:02:29'),
(694, 3, 'FClass writing', 425, '2020-02-18 19:03:14', '2020-02-18 19:03:15', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:15'),
(695, 3, 'AClass writing', 426, '2020-02-18 19:03:15', '2020-02-18 19:03:17', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:17'),
(696, 11, 'Xref writing', 426, '2020-02-18 19:03:17', '2020-02-18 19:03:17', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:17'),
(697, 2, 'Lists writing', 426, '2020-02-18 19:03:17', '2020-02-18 19:03:17', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.TransientDataAccessResourceException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Parameter index out of range (3 > number of parameters, which is 2).; nested exception is java.sql.SQLException: Parameter index out of range (3 > number of parameters, which is 2).\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemp', '2020-02-18 19:03:17'),
(698, 3, 'EAL writing', 427, '2020-02-18 19:03:17', '2020-02-18 19:03:18', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:18'),
(699, 3, 'FClass writing', 428, '2020-02-18 19:03:43', '2020-02-18 19:03:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:45'),
(700, 3, 'AClass writing', 429, '2020-02-18 19:03:45', '2020-02-18 19:03:47', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:47'),
(701, 11, 'Xref writing', 429, '2020-02-18 19:03:47', '2020-02-18 19:03:47', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:47'),
(702, 2, 'Lists writing', 429, '2020-02-18 19:03:47', '2020-02-18 19:03:47', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'0.33862313787411147\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'0.33862313787411147\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.s', '2020-02-18 19:03:47'),
(703, 3, 'EAL writing', 430, '2020-02-18 19:03:47', '2020-02-18 19:03:48', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:03:48'),
(704, 3, 'FClass writing', 431, '2020-02-18 19:04:34', '2020-02-18 19:04:36', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:04:36'),
(705, 3, 'AClass writing', 432, '2020-02-18 19:04:36', '2020-02-18 19:04:37', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:04:37'),
(706, 11, 'Xref writing', 432, '2020-02-18 19:04:37', '2020-02-18 19:04:38', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:04:38'),
(707, 2, 'Lists writing', 432, '2020-02-18 19:04:38', '2020-02-18 19:04:38', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'28.89160500693125\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'28.89160500693125\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.sprin', '2020-02-18 19:04:38'),
(708, 3, 'EAL writing', 433, '2020-02-18 19:04:38', '2020-02-18 19:04:38', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:04:38'),
(709, 3, 'FClass writing', 434, '2020-02-18 19:05:52', '2020-02-18 19:05:53', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:05:53'),
(710, 3, 'AClass writing', 435, '2020-02-18 19:05:53', '2020-02-18 19:05:55', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:05:55'),
(711, 11, 'Xref writing', 435, '2020-02-18 19:05:55', '2020-02-18 19:05:55', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:05:55'),
(712, 2, 'Lists writing', 435, '2020-02-18 19:05:55', '2020-02-18 19:05:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'22.724776843004143\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'22.724776843004143\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.spr', '2020-02-18 19:05:55'),
(713, 3, 'EAL writing', 436, '2020-02-18 19:05:55', '2020-02-18 19:05:55', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:05:55'),
(714, 3, 'FClass writing', 437, '2020-02-18 19:07:08', '2020-02-18 19:07:10', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:07:10'),
(715, 3, 'AClass writing', 438, '2020-02-18 19:07:10', '2020-02-18 19:07:12', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:07:12'),
(716, 11, 'Xref writing', 438, '2020-02-18 19:07:12', '2020-02-18 19:07:12', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:07:12'),
(717, 2, 'Lists writing', 438, '2020-02-18 19:07:12', '2020-02-18 19:07:13', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'17.506918963004292\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'17.506918963004292\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.spr', '2020-02-18 19:07:13'),
(718, 3, 'EAL writing', 439, '2020-02-18 19:07:13', '2020-02-18 19:07:13', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:07:13'),
(719, 3, 'FClass writing', 440, '2020-02-18 19:08:48', '2020-02-18 19:08:49', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:08:49'),
(720, 3, 'AClass writing', 441, '2020-02-18 19:08:49', '2020-02-18 19:08:50', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:08:50'),
(721, 11, 'Xref writing', 441, '2020-02-18 19:08:50', '2020-02-18 19:08:51', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:08:51'),
(722, 2, 'Lists writing', 441, '2020-02-18 19:08:51', '2020-02-18 19:08:51', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'1472894225\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'1472894225\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org', '2020-02-18 19:08:51'),
(723, 3, 'EAL writing', 442, '2020-02-18 19:08:51', '2020-02-18 19:08:51', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-18 19:08:51'),
(724, 3, 'FClass writing', 443, '2020-02-19 08:51:43', '2020-02-19 08:51:45', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:51:45'),
(725, 3, 'AClass writing', 444, '2020-02-19 08:51:45', '2020-02-19 08:51:46', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:51:46'),
(726, 11, 'Xref writing', 444, '2020-02-19 08:51:46', '2020-02-19 08:51:46', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:51:46'),
(727, 2, 'Lists writing', 444, '2020-02-19 08:51:47', '2020-02-19 08:51:47', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'1472894225\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'1472894225\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.bat', '2020-02-19 08:51:47');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(728, 3, 'EAL writing', 445, '2020-02-19 08:51:47', '2020-02-19 08:51:47', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:51:47'),
(729, 3, 'FClass writing', 446, '2020-02-19 08:57:18', '2020-02-19 08:57:20', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:57:20'),
(730, 3, 'AClass writing', 447, '2020-02-19 08:57:20', '2020-02-19 08:57:21', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:57:21'),
(731, 11, 'Xref writing', 447, '2020-02-19 08:57:21', '2020-02-19 08:57:22', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:57:22'),
(732, 2, 'Lists writing', 447, '2020-02-19 08:57:22', '2020-02-19 08:57:22', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'25.408120213446228\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'25.408120213446228\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.j', '2020-02-19 08:57:22'),
(733, 3, 'EAL writing', 448, '2020-02-19 08:57:22', '2020-02-19 08:57:22', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:57:22'),
(734, 3, 'FClass writing', 449, '2020-02-19 08:58:13', '2020-02-19 08:58:14', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:58:14'),
(735, 3, 'AClass writing', 450, '2020-02-19 08:58:14', '2020-02-19 08:58:16', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:58:16'),
(736, 11, 'Xref writing', 450, '2020-02-19 08:58:16', '2020-02-19 08:58:16', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:58:16'),
(737, 2, 'Lists writing', 450, '2020-02-19 08:58:16', '2020-02-19 08:58:16', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'37.98107352341081\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'37.98107352341081\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.jav', '2020-02-19 08:58:16'),
(738, 3, 'EAL writing', 451, '2020-02-19 08:58:16', '2020-02-19 08:58:17', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 08:58:17'),
(739, 3, 'FClass writing', 452, '2020-02-19 09:02:22', '2020-02-19 09:02:24', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:02:24'),
(740, 3, 'AClass writing', 453, '2020-02-19 09:02:24', '2020-02-19 09:02:25', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:02:25'),
(741, 11, 'Xref writing', 453, '2020-02-19 09:02:25', '2020-02-19 09:02:26', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:02:26'),
(742, 2, 'Lists writing', 453, '2020-02-19 09:02:26', '2020-02-19 09:02:26', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'aco0\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'aco0\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframe', '2020-02-19 09:02:26'),
(743, 3, 'EAL writing', 454, '2020-02-19 09:02:26', '2020-02-19 09:02:26', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:02:26'),
(744, 3, 'FClass writing', 455, '2020-02-19 09:04:31', '2020-02-19 09:04:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:04:33'),
(745, 3, 'AClass writing', 456, '2020-02-19 09:04:33', '2020-02-19 09:04:34', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:04:34'),
(746, 11, 'Xref writing', 456, '2020-02-19 09:04:34', '2020-02-19 09:04:34', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:04:34'),
(747, 2, 'Lists writing', 456, '2020-02-19 09:04:34', '2020-02-19 09:04:35', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?)]; Duplicate entry \'aco0\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'aco0\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203)\n	at org.springframework.batch.core.job.', '2020-02-19 09:04:35'),
(748, 3, 'EAL writing', 457, '2020-02-19 09:04:35', '2020-02-19 09:04:35', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:04:35'),
(749, 3, 'FClass writing', 458, '2020-02-19 09:25:45', '2020-02-19 09:25:47', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:25:47'),
(750, 3, 'AClass writing', 459, '2020-02-19 09:25:47', '2020-02-19 09:25:48', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:25:48'),
(751, 11, 'Xref writing', 459, '2020-02-19 09:25:48', '2020-02-19 09:25:48', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:25:48'),
(752, 2, 'Item writing', 459, '2020-02-19 09:25:48', '2020-02-19 09:25:49', 'FAILED', 0, 100, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO item(id_item, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_item = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemp', '2020-02-19 09:25:49'),
(753, 3, 'EAL writing', 460, '2020-02-19 09:25:49', '2020-02-19 09:25:49', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:25:49'),
(754, 3, 'FClass writing', 461, '2020-02-19 09:26:32', '2020-02-19 09:26:34', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:26:34'),
(755, 3, 'AClass writing', 462, '2020-02-19 09:26:34', '2020-02-19 09:26:36', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:26:36'),
(756, 11, 'Xref writing', 462, '2020-02-19 09:26:36', '2020-02-19 09:26:36', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:26:36'),
(757, 12, 'Item writing', 462, '2020-02-19 09:26:36', '2020-02-19 09:26:37', 'COMPLETED', 10, 905, 0, 905, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:26:37'),
(758, 3, 'Subclause writing', 462, '2020-02-19 09:26:37', '2020-02-19 09:26:37', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:26:37'),
(759, 3, 'EAL writing', 463, '2020-02-19 09:26:37', '2020-02-19 09:26:37', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:26:37'),
(760, 3, 'FClass writing', 464, '2020-02-19 09:50:47', '2020-02-19 09:50:49', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:50:49'),
(761, 3, 'AClass writing', 465, '2020-02-19 09:50:49', '2020-02-19 09:50:50', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:50:50'),
(762, 11, 'Xref writing', 465, '2020-02-19 09:50:50', '2020-02-19 09:50:51', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:50:51'),
(763, 12, 'Item writing', 465, '2020-02-19 09:50:51', '2020-02-19 09:50:51', 'COMPLETED', 10, 905, 0, 905, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:50:51'),
(764, 3, 'Subclause writing', 465, '2020-02-19 09:50:51', '2020-02-19 09:50:51', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:50:51'),
(765, 3, 'EAL writing', 466, '2020-02-19 09:50:51', '2020-02-19 09:50:51', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 09:50:51'),
(766, 3, 'FClass writing', 467, '2020-02-19 10:09:20', '2020-02-19 10:09:22', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:09:22'),
(767, 3, 'AClass writing', 468, '2020-02-19 10:09:22', '2020-02-19 10:09:23', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:09:23'),
(768, 11, 'Xref writing', 468, '2020-02-19 10:09:23', '2020-02-19 10:09:23', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:09:23'),
(769, 2, 'Lists writing', 468, '2020-02-19 10:09:23', '2020-02-19 10:09:24', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_paradigm.ListAcOvewrviewPreparedStatementSetter.setValues(ListAcOvewrviewPreparedStatementSetter.java:21)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_paradigm.ListAcOvewrviewPreparedStatementSetter.setValues(ListAcOvewrviewPreparedStatementSetter.java:13)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.ja', '2020-02-19 10:09:24'),
(770, 3, 'EAL writing', 469, '2020-02-19 10:09:24', '2020-02-19 10:09:24', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:09:24'),
(771, 3, 'FClass writing', 470, '2020-02-19 10:11:46', '2020-02-19 10:11:48', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:11:48'),
(772, 3, 'AClass writing', 471, '2020-02-19 10:11:48', '2020-02-19 10:11:49', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:11:49'),
(773, 11, 'Xref writing', 471, '2020-02-19 10:11:49', '2020-02-19 10:11:50', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:11:50'),
(774, 2, 'Lists writing', 471, '2020-02-19 10:11:50', '2020-02-19 10:11:50', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'java.lang.NullPointerException\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_paradigm.ListAcOvewrviewPreparedStatementSetter.setValues(ListAcOvewrviewPreparedStatementSetter.java:22)\n	at com.unicampania.xmltodb.config.preparedstatementsetter_assurance.preparedstatementsetter_assurance_paradigm.ListAcOvewrviewPreparedStatementSetter.setValues(ListAcOvewrviewPreparedStatementSetter.java:13)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:190)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter$1.doInPreparedStatement(JdbcBatchItemWriter.java:186)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:616)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.ja', '2020-02-19 10:11:50'),
(775, 3, 'EAL writing', 472, '2020-02-19 10:11:50', '2020-02-19 10:11:50', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:11:50'),
(776, 3, 'FClass writing', 473, '2020-02-19 10:12:39', '2020-02-19 10:12:41', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:12:41'),
(777, 3, 'AClass writing', 474, '2020-02-19 10:12:41', '2020-02-19 10:12:43', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:12:43'),
(778, 11, 'Xref writing', 474, '2020-02-19 10:12:43', '2020-02-19 10:12:43', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:12:43'),
(779, 2, 'Lists writing', 474, '2020-02-19 10:12:43', '2020-02-19 10:12:44', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO writerListAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.s', '2020-02-19 10:12:44'),
(780, 3, 'EAL writing', 475, '2020-02-19 10:12:44', '2020-02-19 10:12:44', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:12:44'),
(781, 3, 'FClass writing', 476, '2020-02-19 10:13:17', '2020-02-19 10:13:19', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:13:19'),
(782, 3, 'AClass writing', 477, '2020-02-19 10:13:19', '2020-02-19 10:13:20', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:13:20'),
(783, 11, 'Xref writing', 477, '2020-02-19 10:13:20', '2020-02-19 10:13:21', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:13:21'),
(784, 2, 'Lists writing', 477, '2020-02-19 10:13:21', '2020-02-19 10:13:21', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO writerListAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; nested exception is java.sql.SQLSyntaxErrorException: Table \'springbatch.writerlistacoverview\' doesn\'t exist\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractStep.execute(AbstractStep.java:203', '2020-02-19 10:13:21'),
(785, 3, 'EAL writing', 478, '2020-02-19 10:13:21', '2020-02-19 10:13:21', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:13:21'),
(786, 3, 'FClass writing', 479, '2020-02-19 10:14:18', '2020-02-19 10:14:19', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:14:19'),
(787, 3, 'AClass writing', 480, '2020-02-19 10:14:19', '2020-02-19 10:14:21', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:14:21'),
(788, 11, 'Xref writing', 480, '2020-02-19 10:14:21', '2020-02-19 10:14:21', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:14:21'),
(789, 3, 'Lists writing', 480, '2020-02-19 10:14:21', '2020-02-19 10:14:21', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:14:21'),
(790, 3, 'Subclause writing', 480, '2020-02-19 10:14:21', '2020-02-19 10:14:22', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:14:22'),
(791, 3, 'EAL writing', 481, '2020-02-19 10:14:22', '2020-02-19 10:14:22', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:14:22'),
(792, 3, 'FClass writing', 482, '2020-02-19 10:16:14', '2020-02-19 10:16:17', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:17'),
(793, 3, 'AClass writing', 483, '2020-02-19 10:16:17', '2020-02-19 10:16:18', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:18'),
(794, 11, 'Xref writing', 483, '2020-02-19 10:16:18', '2020-02-19 10:16:19', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:19'),
(795, 2, 'Lists writing', 483, '2020-02-19 10:16:19', '2020-02-19 10:16:19', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'20.30524547386331\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'20.30524547386331\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch', '2020-02-19 10:16:19'),
(796, 3, 'EAL writing', 484, '2020-02-19 10:16:19', '2020-02-19 10:16:19', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:19'),
(797, 3, 'FClass writing', 485, '2020-02-19 10:16:50', '2020-02-19 10:16:52', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:52'),
(798, 3, 'AClass writing', 486, '2020-02-19 10:16:52', '2020-02-19 10:16:54', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:54'),
(799, 11, 'Xref writing', 486, '2020-02-19 10:16:54', '2020-02-19 10:16:55', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:55'),
(800, 2, 'Lists writing', 486, '2020-02-19 10:16:55', '2020-02-19 10:16:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'21.006002183144506\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'21.006002183144506\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.Abstrac', '2020-02-19 10:16:55'),
(801, 3, 'EAL writing', 487, '2020-02-19 10:16:55', '2020-02-19 10:16:55', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:16:55'),
(802, 3, 'FClass writing', 488, '2020-02-19 10:17:57', '2020-02-19 10:17:59', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:17:59'),
(803, 3, 'AClass writing', 489, '2020-02-19 10:17:59', '2020-02-19 10:18:00', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:00'),
(804, 11, 'Xref writing', 489, '2020-02-19 10:18:00', '2020-02-19 10:18:00', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:00'),
(805, 2, 'Lists writing', 489, '2020-02-19 10:18:00', '2020-02-19 10:18:01', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'2.8956652638952995\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'2.8956652638952995\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.bat', '2020-02-19 10:18:01'),
(806, 3, 'EAL writing', 490, '2020-02-19 10:18:01', '2020-02-19 10:18:01', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:01'),
(807, 3, 'FClass writing', 491, '2020-02-19 10:18:51', '2020-02-19 10:18:52', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:52'),
(808, 3, 'AClass writing', 492, '2020-02-19 10:18:52', '2020-02-19 10:18:54', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:54'),
(809, 11, 'Xref writing', 492, '2020-02-19 10:18:54', '2020-02-19 10:18:54', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:54'),
(810, 2, 'Lists writing', 492, '2020-02-19 10:18:55', '2020-02-19 10:18:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'24.327693944436884\' for key \'PRIMARY\'; nested exception is java.sql.SQLIntegrityConstraintViolationException: Duplicate entry \'24.327693944436884\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.bat', '2020-02-19 10:18:55'),
(811, 3, 'EAL writing', 493, '2020-02-19 10:18:55', '2020-02-19 10:18:55', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:18:55'),
(812, 3, 'FClass writing', 494, '2020-02-19 10:32:57', '2020-02-19 10:33:00', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:00'),
(813, 3, 'AClass writing', 495, '2020-02-19 10:33:00', '2020-02-19 10:33:03', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:03'),
(814, 11, 'Xref writing', 495, '2020-02-19 10:33:03', '2020-02-19 10:33:03', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:03'),
(815, 2, 'Lists writing', 495, '2020-02-19 10:33:03', '2020-02-19 10:33:04', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'9.796932804454283\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'9.796932804454283\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.AbstractS', '2020-02-19 10:33:04'),
(816, 3, 'EAL writing', 496, '2020-02-19 10:33:04', '2020-02-19 10:33:04', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:04'),
(817, 3, 'FClass writing', 497, '2020-02-19 10:33:51', '2020-02-19 10:33:53', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:53'),
(818, 3, 'AClass writing', 498, '2020-02-19 10:33:53', '2020-02-19 10:33:54', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:54'),
(819, 11, 'Xref writing', 498, '2020-02-19 10:33:54', '2020-02-19 10:33:55', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:55');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(820, 2, 'Lists writing', 498, '2020-02-19 10:33:55', '2020-02-19 10:33:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfAcOverview(id_listOfAcOverview, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfAcOverview = ?]; Duplicate entry \'0.1182109555228088\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'0.1182109555228088\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.TaskletStep.doExecute(TaskletStep.java:258)\n	at org.springframework.batch.core.step.Abstrac', '2020-02-19 10:33:55'),
(821, 3, 'EAL writing', 499, '2020-02-19 10:33:55', '2020-02-19 10:33:55', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:33:55'),
(822, 3, 'FClass writing', 500, '2020-02-19 10:36:42', '2020-02-19 10:36:44', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:36:44'),
(823, 3, 'AClass writing', 501, '2020-02-19 10:36:44', '2020-02-19 10:36:45', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:36:45'),
(824, 11, 'Xref writing', 501, '2020-02-19 10:36:45', '2020-02-19 10:36:46', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:36:46'),
(825, 3, 'Lists writing', 501, '2020-02-19 10:36:46', '2020-02-19 10:36:46', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:36:46'),
(826, 3, 'Subclause writing', 501, '2020-02-19 10:36:46', '2020-02-19 10:36:46', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:36:46'),
(827, 3, 'EAL writing', 502, '2020-02-19 10:36:46', '2020-02-19 10:36:46', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:36:46'),
(828, 3, 'FClass writing', 503, '2020-02-19 10:57:31', '2020-02-19 10:57:33', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:57:33'),
(829, 2, 'AClass writing', 504, '2020-02-19 10:57:33', '2020-02-19 10:57:34', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 10:57:34'),
(830, 3, 'EAL writing', 505, '2020-02-19 10:57:34', '2020-02-19 10:57:34', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 10:57:34'),
(831, 3, 'FClass writing', 506, '2020-02-19 11:03:15', '2020-02-19 11:03:17', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:03:17'),
(832, 2, 'AClass writing', 507, '2020-02-19 11:03:17', '2020-02-19 11:03:18', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:03:18'),
(833, 3, 'EAL writing', 508, '2020-02-19 11:03:19', '2020-02-19 11:03:19', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:03:19'),
(834, 3, 'FClass writing', 509, '2020-02-19 11:06:07', '2020-02-19 11:06:09', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:06:09'),
(835, 2, 'AClass writing', 510, '2020-02-19 11:06:09', '2020-02-19 11:06:11', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:06:11'),
(836, 3, 'EAL writing', 511, '2020-02-19 11:06:11', '2020-02-19 11:06:11', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:06:11'),
(837, 3, 'FClass writing', 512, '2020-02-19 11:07:26', '2020-02-19 11:07:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:07:29'),
(838, 2, 'AClass writing', 513, '2020-02-19 11:07:29', '2020-02-19 11:07:31', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:07:31'),
(839, 3, 'EAL writing', 514, '2020-02-19 11:07:31', '2020-02-19 11:07:31', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:07:31'),
(840, 3, 'FClass writing', 515, '2020-02-19 11:08:26', '2020-02-19 11:08:27', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:08:27'),
(841, 2, 'AClass writing', 516, '2020-02-19 11:08:27', '2020-02-19 11:08:29', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:08:29'),
(842, 3, 'EAL writing', 517, '2020-02-19 11:08:29', '2020-02-19 11:08:29', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:08:29'),
(843, 3, 'FClass writing', 518, '2020-02-19 11:11:46', '2020-02-19 11:11:47', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:11:47'),
(844, 3, 'AClass writing', 519, '2020-02-19 11:11:47', '2020-02-19 11:11:49', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:11:49'),
(845, 11, 'Xref writing', 519, '2020-02-19 11:11:49', '2020-02-19 11:11:49', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:11:49'),
(846, 3, 'Subclause writing', 519, '2020-02-19 11:11:49', '2020-02-19 11:11:49', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:11:49'),
(847, 3, 'EAL writing', 520, '2020-02-19 11:11:49', '2020-02-19 11:11:49', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:11:49'),
(848, 3, 'FClass writing', 521, '2020-02-19 11:12:36', '2020-02-19 11:12:37', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:12:37'),
(849, 2, 'AClass writing', 522, '2020-02-19 11:12:37', '2020-02-19 11:12:39', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:12:39'),
(850, 3, 'EAL writing', 523, '2020-02-19 11:12:39', '2020-02-19 11:12:39', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:12:39'),
(851, 3, 'FClass writing', 524, '2020-02-19 11:13:49', '2020-02-19 11:13:50', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:13:50'),
(852, 2, 'AClass writing', 525, '2020-02-19 11:13:51', '2020-02-19 11:13:52', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 2\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:13:52'),
(853, 3, 'EAL writing', 526, '2020-02-19 11:13:52', '2020-02-19 11:13:52', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:13:52'),
(854, 3, 'FClass writing', 527, '2020-02-19 11:14:29', '2020-02-19 11:14:30', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:14:30'),
(855, 2, 'AClass writing', 528, '2020-02-19 11:14:30', '2020-02-19 11:14:32', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 2\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:14:32'),
(856, 3, 'EAL writing', 529, '2020-02-19 11:14:32', '2020-02-19 11:14:32', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:14:32'),
(857, 3, 'FClass writing', 530, '2020-02-19 11:19:49', '2020-02-19 11:19:51', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:19:51'),
(858, 2, 'AClass writing', 531, '2020-02-19 11:19:51', '2020-02-19 11:19:52', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:19:52'),
(859, 3, 'EAL writing', 532, '2020-02-19 11:19:52', '2020-02-19 11:19:52', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:19:52'),
(860, 3, 'FClass writing', 533, '2020-02-19 11:23:05', '2020-02-19 11:23:07', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:23:07'),
(861, 2, 'AClass writing', 534, '2020-02-19 11:23:07', '2020-02-19 11:23:09', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:23:09'),
(862, 3, 'EAL writing', 535, '2020-02-19 11:23:09', '2020-02-19 11:23:09', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:23:09'),
(863, 3, 'FClass writing', 536, '2020-02-19 11:25:09', '2020-02-19 11:25:11', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:25:11'),
(864, 2, 'AClass writing', 537, '2020-02-19 11:25:11', '2020-02-19 11:25:12', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:25:12'),
(865, 3, 'EAL writing', 538, '2020-02-19 11:25:12', '2020-02-19 11:25:12', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:25:12'),
(866, 3, 'FClass writing', 539, '2020-02-19 11:27:24', '2020-02-19 11:27:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:27:26'),
(867, 2, 'AClass writing', 540, '2020-02-19 11:27:26', '2020-02-19 11:27:28', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.rep', '2020-02-19 11:27:28'),
(868, 3, 'EAL writing', 541, '2020-02-19 11:27:28', '2020-02-19 11:27:28', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:27:29'),
(869, 3, 'FClass writing', 542, '2020-02-19 11:29:11', '2020-02-19 11:29:12', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:29:12'),
(870, 2, 'AClass writing', 543, '2020-02-19 11:29:12', '2020-02-19 11:29:14', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.r', '2020-02-19 11:29:14'),
(871, 3, 'EAL writing', 544, '2020-02-19 11:29:14', '2020-02-19 11:29:14', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:29:14'),
(872, 3, 'FClass writing', 545, '2020-02-19 11:31:22', '2020-02-19 11:31:23', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:31:23'),
(873, 2, 'AClass writing', 546, '2020-02-19 11:31:23', '2020-02-19 11:31:25', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction(id_listOfMaIntroduction, testo) VALUES (?,?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 2\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.r', '2020-02-19 11:31:25'),
(874, 3, 'EAL writing', 547, '2020-02-19 11:31:25', '2020-02-19 11:31:25', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:31:25'),
(875, 3, 'FClass writing', 548, '2020-02-19 11:32:52', '2020-02-19 11:32:54', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:32:54'),
(876, 2, 'AClass writing', 549, '2020-02-19 11:32:54', '2020-02-19 11:32:55', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction (id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 2\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.re', '2020-02-19 11:32:55'),
(877, 3, 'EAL writing', 550, '2020-02-19 11:32:55', '2020-02-19 11:32:55', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:32:55'),
(878, 3, 'FClass writing', 551, '2020-02-19 11:33:34', '2020-02-19 11:33:35', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:33:35');
INSERT INTO `batch_step_execution` (`STEP_EXECUTION_ID`, `VERSION`, `STEP_NAME`, `JOB_EXECUTION_ID`, `START_TIME`, `END_TIME`, `STATUS`, `COMMIT_COUNT`, `READ_COUNT`, `FILTER_COUNT`, `WRITE_COUNT`, `READ_SKIP_COUNT`, `WRITE_SKIP_COUNT`, `PROCESS_SKIP_COUNT`, `ROLLBACK_COUNT`, `EXIT_CODE`, `EXIT_MESSAGE`, `LAST_UPDATED`) VALUES
(879, 2, 'AClass writing', 552, '2020-02-19 11:33:35', '2020-02-19 11:33:37', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction (id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.re', '2020-02-19 11:33:37'),
(880, 3, 'EAL writing', 553, '2020-02-19 11:33:37', '2020-02-19 11:33:37', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:33:37'),
(881, 3, 'FClass writing', 554, '2020-02-19 11:34:04', '2020-02-19 11:34:05', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:34:05'),
(882, 3, 'AClass writing', 555, '2020-02-19 11:34:06', '2020-02-19 11:34:07', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:34:07'),
(883, 11, 'Xref writing', 555, '2020-02-19 11:34:07', '2020-02-19 11:34:07', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:34:07'),
(884, 3, 'Subclause writing', 555, '2020-02-19 11:34:07', '2020-02-19 11:34:07', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:34:07'),
(885, 3, 'EAL writing', 556, '2020-02-19 11:34:07', '2020-02-19 11:34:08', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:34:08'),
(886, 3, 'FClass writing', 557, '2020-02-19 11:38:09', '2020-02-19 11:38:10', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:38:10'),
(887, 2, 'AClass writing', 558, '2020-02-19 11:38:10', '2020-02-19 11:38:12', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction (id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.re', '2020-02-19 11:38:12'),
(888, 3, 'EAL writing', 559, '2020-02-19 11:38:12', '2020-02-19 11:38:12', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:38:12'),
(889, 3, 'FClass writing', 560, '2020-02-19 11:38:47', '2020-02-19 11:38:49', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:38:49'),
(890, 2, 'AClass writing', 561, '2020-02-19 11:38:49', '2020-02-19 11:38:51', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction (id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.re', '2020-02-19 11:38:51'),
(891, 3, 'EAL writing', 562, '2020-02-19 11:38:51', '2020-02-19 11:38:51', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:38:51'),
(892, 3, 'FClass writing', 563, '2020-02-19 11:40:14', '2020-02-19 11:40:16', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:40:16'),
(893, 2, 'AClass writing', 564, '2020-02-19 11:40:16', '2020-02-19 11:40:17', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction (id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.re', '2020-02-19 11:40:17'),
(894, 3, 'EAL writing', 565, '2020-02-19 11:40:17', '2020-02-19 11:40:17', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:40:17'),
(895, 3, 'FClass writing', 566, '2020-02-19 11:46:27', '2020-02-19 11:46:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:46:29'),
(896, 2, 'AClass writing', 567, '2020-02-19 11:46:29', '2020-02-19 11:46:30', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaIntroduction (id_listOfMaIntroduction, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaIntroduction = ?]; nested exception is java.sql.SQLException: No value specified for parameter 1\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.re', '2020-02-19 11:46:30'),
(897, 3, 'EAL writing', 568, '2020-02-19 11:46:30', '2020-02-19 11:46:31', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 11:46:31'),
(898, 3, 'FClass writing', 569, '2020-02-19 12:13:25', '2020-02-19 12:13:26', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:13:26'),
(899, 2, 'AClass writing', 570, '2020-02-19 12:13:26', '2020-02-19 12:13:28', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaApplicationNotes (id_listOfMapplicationNotes, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaApplicationNotes = ?]; nested exception is java.sql.SQLException: No value specified for parameter 3\n	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframewo', '2020-02-19 12:13:28'),
(900, 3, 'EAL writing', 571, '2020-02-19 12:13:28', '2020-02-19 12:13:28', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:13:28'),
(901, 3, 'FClass writing', 572, '2020-02-19 12:14:27', '2020-02-19 12:14:29', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:14:29'),
(902, 2, 'AClass writing', 573, '2020-02-19 12:14:29', '2020-02-19 12:14:30', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.jdbc.BadSqlGrammarException: PreparedStatementCallback; bad SQL grammar [INSERT INTO listOfMaApplicationNotes (id_listOfMapplicationNotes, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaApplicationNotes = ?]; nested exception is java.sql.BatchUpdateException: Unknown column \'id_listOfMapplicationNotes\' in \'field list\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springframework.batch.core.step.tasklet.Taskle', '2020-02-19 12:14:30'),
(903, 3, 'EAL writing', 574, '2020-02-19 12:14:31', '2020-02-19 12:14:31', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:14:31'),
(904, 3, 'FClass writing', 575, '2020-02-19 12:15:28', '2020-02-19 12:15:30', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:15:30'),
(905, 2, 'AClass writing', 576, '2020-02-19 12:15:30', '2020-02-19 12:15:31', 'FAILED', 0, 9, 0, 0, 0, 0, 0, 1, 'FAILED', 'org.springframework.dao.DuplicateKeyException: PreparedStatementCallback; SQL [INSERT INTO listOfMaApplicationNotes (id_listOfMaApplicationNotes, testo) VALUES (?,?) ON DUPLICATE KEY UPDATE id_listOfMaApplicationNotes = ?]; Duplicate entry \'1.8516668554276707\' for key \'PRIMARY\'; nested exception is java.sql.BatchUpdateException: Duplicate entry \'1.8516668554276707\' for key \'PRIMARY\'\n	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)\n	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)\n	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:632)\n	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:646)\n	at org.springframework.batch.item.database.JdbcBatchItemWriter.write(JdbcBatchItemWriter.java:186)\n	at org.springframework.batch.item.support.CompositeItemWriter.write(CompositeItemWriter.java:59)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.writeItems(SimpleChunkProcessor.java:188)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.doWrite(SimpleChunkProcessor.java:154)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.write(SimpleChunkProcessor.java:287)\n	at org.springframework.batch.core.step.item.SimpleChunkProcessor.process(SimpleChunkProcessor.java:212)\n	at org.springframework.batch.core.step.item.ChunkOrientedTasklet.execute(ChunkOrientedTasklet.java:75)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:407)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$ChunkTransactionCallback.doInTransaction(TaskletStep.java:331)\n	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n	at org.springframework.batch.core.step.tasklet.TaskletStep$2.doInChunkContext(TaskletStep.java:273)\n	at org.springframework.batch.core.scope.context.StepContextRepeatCallback.doInIteration(StepContextRepeatCallback.java:82)\n	at org.springframework.batch.repeat.support.RepeatTemplate.getNextResult(RepeatTemplate.java:375)\n	at org.springframework.batch.repeat.support.RepeatTemplate.executeInternal(RepeatTemplate.java:215)\n	at org.springframework.batch.repeat.support.RepeatTemplate.iterate(RepeatTemplate.java:145)\n	at org.springfr', '2020-02-19 12:15:31'),
(906, 3, 'EAL writing', 577, '2020-02-19 12:15:31', '2020-02-19 12:15:32', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:15:32'),
(907, 3, 'FClass writing', 578, '2020-02-19 12:23:21', '2020-02-19 12:23:23', 'COMPLETED', 1, 11, 0, 11, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:23:23'),
(908, 3, 'AClass writing', 579, '2020-02-19 12:23:23', '2020-02-19 12:23:25', 'COMPLETED', 1, 9, 0, 9, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:23:25'),
(909, 11, 'Xref writing', 579, '2020-02-19 12:23:25', '2020-02-19 12:23:25', 'COMPLETED', 9, 887, 0, 887, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:23:25'),
(910, 3, 'Subclause writing', 579, '2020-02-19 12:23:25', '2020-02-19 12:23:25', 'COMPLETED', 1, 12, 0, 12, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:23:25'),
(911, 3, 'EAL writing', 580, '2020-02-19 12:23:25', '2020-02-19 12:23:26', 'COMPLETED', 1, 7, 0, 7, 0, 0, 0, 0, 'COMPLETED', '', '2020-02-19 12:23:26');

-- --------------------------------------------------------

--
-- Table structure for table `batch_step_execution_context`
--

CREATE TABLE `batch_step_execution_context` (
  `STEP_EXECUTION_ID` bigint(20) NOT NULL,
  `SHORT_CONTEXT` varchar(2500) NOT NULL,
  `SERIALIZED_CONTEXT` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_step_execution_context`
--

INSERT INTO `batch_step_execution_context` (`STEP_EXECUTION_ID`, `SHORT_CONTEXT`, `SERIALIZED_CONTEXT`) VALUES
(0, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(1, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(2, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(3, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(4, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":1,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(5, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":11,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(6, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":6,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(7, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":2,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(8, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":120,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(9, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(10, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":906,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(11, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(12, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(13, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":200,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(14, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(15, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(16, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(17, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(18, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(19, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(20, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(21, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(22, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(23, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(24, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(25, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(26, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(27, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(28, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(29, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(30, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(31, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(32, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(33, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(34, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(35, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(36, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(37, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(38, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(39, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(40, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(41, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(42, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(43, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(44, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(45, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(46, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(47, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(48, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(49, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(50, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(51, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(52, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(53, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(54, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(55, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(56, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(57, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(58, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(59, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(60, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(61, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(62, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(63, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(64, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(65, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(66, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(67, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(68, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(69, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(70, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(71, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(72, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(73, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(74, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(75, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(76, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(77, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(78, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(79, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(80, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(81, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(82, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(83, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(84, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(85, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(86, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(87, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(88, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(89, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(90, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(91, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(92, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(93, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(94, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(95, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(96, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(97, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(98, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(99, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(100, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(101, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(102, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(103, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(104, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(105, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(106, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(107, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(108, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(109, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(110, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(111, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(112, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(113, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(114, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(115, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(116, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(117, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(118, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(119, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(120, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(121, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(122, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(123, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(124, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(125, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(126, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(127, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(128, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(129, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(130, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(131, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(132, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(133, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(134, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(135, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(136, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(137, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(138, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(139, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(140, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(141, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(142, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(143, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(144, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(145, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(146, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(147, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(148, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(149, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(150, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(151, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(152, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(153, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(154, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(155, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(156, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(157, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(158, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(159, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(160, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(161, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(162, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(163, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(164, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(165, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(166, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(167, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(168, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(169, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(170, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(171, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(172, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(173, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(174, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(175, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(176, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(177, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(178, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(179, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(180, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(181, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(182, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(183, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(184, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(185, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(186, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(187, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(188, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(189, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(190, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(191, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(192, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(193, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(194, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(195, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(196, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(197, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(198, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(199, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(200, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(201, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(202, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(203, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(204, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(205, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(206, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(207, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(208, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(209, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(210, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(211, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(212, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(213, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(214, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(215, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(216, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(217, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(218, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(219, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(220, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(221, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(222, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(223, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(224, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(225, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL);
INSERT INTO `batch_step_execution_context` (`STEP_EXECUTION_ID`, `SHORT_CONTEXT`, `SERIALIZED_CONTEXT`) VALUES
(226, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(227, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(228, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(229, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(230, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(231, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(232, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(233, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(234, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(235, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(236, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(237, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(238, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(239, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(240, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(241, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(242, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(243, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(244, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(245, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(246, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(247, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(248, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(249, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(250, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(251, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(252, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(253, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(254, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(255, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(256, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(257, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(258, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(259, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(260, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(261, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(262, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(263, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(264, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(265, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(266, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(267, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(268, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(269, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(270, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(271, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(272, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(273, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(274, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(275, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(276, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(277, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(278, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(279, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(280, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(281, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(282, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(283, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(284, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(285, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(286, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(287, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(288, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(289, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(290, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(291, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(292, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(293, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(294, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(295, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(296, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(297, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(298, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(299, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(300, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(301, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(302, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(303, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(304, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(305, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(306, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(307, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(308, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(309, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(310, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(311, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(312, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(313, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(314, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(315, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(316, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(317, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(318, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(319, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(320, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(321, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(322, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(323, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(324, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(325, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(326, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(327, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(328, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(329, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(330, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(331, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(332, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(333, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(334, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(335, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(336, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(337, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(338, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(339, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(340, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(341, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(342, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(343, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(344, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(345, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(346, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(347, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(348, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(349, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(350, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(351, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(352, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(353, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(354, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(355, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(356, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(357, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(358, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(359, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(360, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(361, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(362, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(363, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(364, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(365, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(366, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(367, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(368, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(369, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(370, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(371, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(372, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(373, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(374, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(375, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(376, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(377, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(378, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(379, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(380, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(381, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(382, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(383, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(384, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(385, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(386, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(387, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(388, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(389, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(390, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(391, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(392, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(393, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(394, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(395, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(396, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(397, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(398, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(399, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(400, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(401, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(402, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(403, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(404, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(405, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(406, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(407, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(408, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(409, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(410, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(411, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(412, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(413, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(414, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(415, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(416, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(417, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(418, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(419, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(420, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(421, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(422, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(423, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(424, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(425, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(426, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(427, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(428, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(429, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(430, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(431, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(432, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(433, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(434, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(435, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(436, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(437, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(438, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(439, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(440, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(441, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(442, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(443, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(444, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(445, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(446, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(447, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(448, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(449, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(450, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL);
INSERT INTO `batch_step_execution_context` (`STEP_EXECUTION_ID`, `SHORT_CONTEXT`, `SERIALIZED_CONTEXT`) VALUES
(451, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(452, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(453, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(454, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(455, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(456, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(457, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(458, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(459, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(460, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(461, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(462, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(463, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(464, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(465, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(466, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(467, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(468, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(469, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(470, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(471, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(472, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(473, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(474, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(475, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(476, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(477, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(478, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(479, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(480, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(481, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(482, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(483, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(484, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(485, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(486, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(487, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(488, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(489, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(490, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(491, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(492, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(493, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(494, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(495, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(496, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(497, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(498, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(499, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(500, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(501, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(502, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(503, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(504, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(505, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(506, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(507, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(508, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(509, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(510, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(511, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(512, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(513, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(514, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(515, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(516, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(517, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(518, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(519, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(520, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(521, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(522, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(523, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(524, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(525, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(526, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(527, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(528, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(529, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(530, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(531, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(532, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(533, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(534, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(535, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(536, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(537, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(538, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(539, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(540, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(541, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(542, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(543, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(544, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(545, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(546, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(547, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(548, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(549, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(550, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(551, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(552, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(553, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(554, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(555, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(556, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(557, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(558, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(559, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(560, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(561, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(562, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(563, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(564, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(565, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(566, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(567, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(568, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(569, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(570, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(571, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(572, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(573, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(574, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(575, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(576, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(577, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(578, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(579, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(580, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(581, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(582, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(583, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(584, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(585, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(586, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(587, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(588, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(589, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(590, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(591, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":262,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(592, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(593, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(594, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(595, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(596, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(597, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(598, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(599, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(600, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(601, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(602, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(603, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(604, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(605, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(606, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(607, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(608, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(609, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(610, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(611, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(612, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(613, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(614, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(615, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(616, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(617, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(618, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(619, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(620, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(621, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(622, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(623, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(624, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(625, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(626, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(627, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(628, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(629, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(630, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(631, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(632, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(633, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(634, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(635, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(636, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(637, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(638, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(639, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(640, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(641, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(642, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(643, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(644, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(645, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(646, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(647, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(648, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(649, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(650, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(651, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(652, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(653, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(654, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(655, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(656, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(657, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(658, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(659, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(660, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(661, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(662, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(663, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(664, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(665, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(666, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(667, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(668, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(669, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(670, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(671, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(672, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(673, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(674, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(675, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL);
INSERT INTO `batch_step_execution_context` (`STEP_EXECUTION_ID`, `SHORT_CONTEXT`, `SERIALIZED_CONTEXT`) VALUES
(676, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(677, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(678, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(679, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(680, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(681, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(682, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(683, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(684, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(685, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(686, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(687, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(688, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(689, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(690, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(691, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(692, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(693, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(694, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(695, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(696, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(697, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(698, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(699, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(700, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(701, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(702, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(703, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(704, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(705, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(706, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(707, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(708, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(709, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(710, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(711, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(712, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(713, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(714, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(715, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(716, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(717, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(718, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(719, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(720, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(721, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(722, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(723, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(724, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(725, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(726, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(727, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(728, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(729, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(730, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(731, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(732, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(733, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(734, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(735, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(736, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(737, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(738, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(739, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(740, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(741, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(742, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(743, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(744, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(745, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(746, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(747, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(748, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(749, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(750, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(751, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(752, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(753, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(754, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(755, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(756, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(757, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":906,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(758, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(759, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(760, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(761, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(762, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(763, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":906,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(764, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(765, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(766, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(767, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(768, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(769, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(770, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(771, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(772, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(773, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(774, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(775, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(776, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(777, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(778, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(779, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(780, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(781, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(782, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(783, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(784, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(785, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(786, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(787, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(788, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(789, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(790, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(791, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(792, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(793, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(794, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(795, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(796, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(797, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(798, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(799, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(800, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(801, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(802, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(803, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(804, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(805, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(806, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(807, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(808, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(809, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(810, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(811, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(812, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(813, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(814, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(815, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(816, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(817, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(818, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(819, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(820, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(821, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(822, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(823, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(824, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(825, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(826, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(827, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(828, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(829, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(830, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(831, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(832, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(833, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(834, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(835, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(836, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(837, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(838, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(839, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(840, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(841, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(842, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(843, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(844, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(845, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(846, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(847, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(848, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(849, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(850, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(851, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(852, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(853, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(854, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(855, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(856, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(857, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(858, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(859, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(860, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(861, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(862, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(863, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(864, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(865, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(866, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(867, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(868, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(869, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(870, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(871, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(872, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(873, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(874, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(875, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(876, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(877, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(878, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(879, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(880, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(881, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(882, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(883, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(884, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(885, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(886, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(887, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(888, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(889, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(890, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(891, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(892, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(893, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(894, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(895, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(896, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(897, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(898, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(899, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(900, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(901, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL);
INSERT INTO `batch_step_execution_context` (`STEP_EXECUTION_ID`, `SHORT_CONTEXT`, `SERIALIZED_CONTEXT`) VALUES
(902, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(903, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(904, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(905, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":0,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(906, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(907, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":12,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(908, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":10,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(909, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":888,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(910, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":13,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL),
(911, '{\"batch.taskletType\":\"org.springframework.batch.core.step.item.ChunkOrientedTasklet\",\"StaxEventItemReader.read.count\":8,\"batch.stepType\":\"org.springframework.batch.core.step.tasklet.TaskletStep\"}', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `batch_step_execution_seq`
--

CREATE TABLE `batch_step_execution_seq` (
  `ID` bigint(20) NOT NULL,
  `UNIQUE_KEY` char(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `batch_step_execution_seq`
--

INSERT INTO `batch_step_execution_seq` (`ID`, `UNIQUE_KEY`) VALUES
(911, '0');

-- --------------------------------------------------------

--
-- Table structure for table `bold`
--

CREATE TABLE `bold` (
  `id_bold` int(11) NOT NULL,
  `testo` varchar(1000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `component_types`
--

CREATE TABLE `component_types` (
  `id` bigint(20) NOT NULL,
  `description` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `controls`
--

CREATE TABLE `controls` (
  `id` bigint(20) NOT NULL,
  `control_description` varchar(255) NOT NULL,
  `control_id` varchar(255) NOT NULL,
  `control_name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `eal`
--

CREATE TABLE `eal` (
  `id_eal` varchar(100) NOT NULL,
  `name` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `eal`
--

INSERT INTO `eal` (`id_eal`, `name`) VALUES
('eal1', 'functionally tested'),
('eal2', 'structurally tested'),
('eal3', 'methodically tested and checked'),
('eal4', 'methodically designed, tested, and reviewed'),
('eal5', 'semiformally designed and tested'),
('eal6', 'semiformally verified design and tested'),
('eal7', 'formally verified design and tested');

-- --------------------------------------------------------

--
-- Table structure for table `ealassurancecomponents`
--

CREATE TABLE `ealassurancecomponents` (
  `id_ealassurancecomponents` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `id_eal` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ealassurancecomponents`
--

INSERT INTO `ealassurancecomponents` (`id_ealassurancecomponents`, `testo`, `id_eal`) VALUES
('-1681139146', '\n\n\n            EAL1 provides a basic level of assurance by a limited security\n            target and an analysis of the SFRs in that ST using a\n            functional and interface specification and guidance\n            documentation, to understand the security behaviour.\n\n\n\n            The analysis is supported by a search for potential\n            vulnerabilities in the public domain and independent testing\n            (functional and penetration) of the TSF.\n\n\n\n            EAL1 also provides assurance through unique identification of\n            the TOE and of the relevant evaluation documents.\n\n\n\n            This EAL provides a meaningful increase in assurance over\n            unevaluated IT.\n\n        ', 'eal1'),
('-19840022', '\n\n\n            EAL6 provides assurance by a full security target and an\n            analysis of the SFRs in that ST, using a functional and\n            complete interface specification, guidance documentation, the\n            design of the TOE, and the implementation to understand the\n            security behaviour. Assurance is additionally gained through a\n            formal model of select TOE security policies and a semiformal\n            presentation of the functional specification and TOE design. A\n            modular, layered and simple TSF design is also required.\n\n\n\n            The analysis is supported by independent testing of the TSF,\n            evidence of developer testing based on the functional\n            specification, TOE design, selective independent confirmation\n            of the developer test results, and an independent\n            vulnerability analysis demonstrating resistance to penetration\n            attackers with a high attack potential.\n\n\n\n            EAL6 also provides assurance through the use of a structured\n            development process, development environment controls, and\n            comprehensive TOE configuration management including complete\n            automation, and evidence of secure delivery procedures.\n\n\n\n            This EAL represents a meaningful increase in assurance from\n            EAL5 by requiring more comprehensive analysis, a structured\n            representation of the implementation, more architectural\n            structure (e.g. layering), more comprehensive independent\n            vulnerability analysis, and improved configuration management\n            and development environment controls.\n\n        ', 'eal6'),
('-846344455', '\n\n\n            EAL7 provides assurance by a full security target and an\n            analysis of the SFRs in that ST, using a functional and\n            complete interface specification, guidance documentation, the\n            design of the TOE, and a structured presentation of the\n            implementation to understand the security behaviour. Assurance\n            is additionally gained through a formal model of select TOE\n            security policies and a semiformal presentation of the\n            functional specification and TOE design. A modular, layered\n            and simple TSF design is also required.\n\n\n\n            The analysis is supported by independent testing of the TSF,\n            evidence of developer testing based on the functional\n            specification, TOE design and implementation representation,\n            complete independent confirmation of the developer test\n            results, and an independent vulnerability analysis\n            demonstrating resistance to penetration attackers with a high\n            attack potential.\n\n\n\n            EAL7 also provides assurance through the use of a structured\n            development process, development environment controls, and\n            comprehensive TOE configuration management including complete\n            automation, and evidence of secure delivery procedures.\n\n\n\n            This EAL represents a meaningful increase in assurance from\n            EAL6 by requiring more comprehensive analysis using formal\n            representations and formal correspondence, and comprehensive\n            testing.\n\n        ', 'eal7'),
('1105522581', '\n\n\n            EAL5 provides assurance by a full security target and an\n            analysis of the SFRs in that ST, using a functional and\n            complete interface specification, guidance documentation, a\n            description of the design of the TOE, and the implementation,\n            to understand the security behaviour. A modular TSF design is\n            also required.\n\n\n\n            The analysis is supported by independent testing of the TSF,\n            evidence of developer testing based on the functional\n            specification, TOE design, selective independent confirmation\n            of the developer test results, and an independent\n            vulnerability analysis demonstrating resistance to penetration\n            attackers with a moderate attack potential.\n\n\n\n            EAL5 also provides assurance through the use of a development\n            environment controls, and comprehensive TOE configuration\n            management including automation, and evidence of secure\n            delivery procedures.\n\n\n\n            This EAL represents a meaningful increase in assurance from EAL4\n            by requiring semiformal design descriptions, a more structured\n            (and hence analysable) architecture, and improved mechanisms\n            and/or procedures that provide confidence that the TOE will not\n            be tampered with during development.\n\n        ', 'eal5'),
('1150153469', '\n\n\n            EAL4 provides assurance by a full security target and an\n            analysis of the SFRs in that ST, using a functional and\n            complete interface specification, guidance documentation, a\n            description of the basic modular design of the TOE, and a\n            subset of the implementation, to understand the security\n            behaviour.\n\n\n\n            The analysis is supported by independent testing of the TSF,\n            evidence of developer testing based on the functional\n            specification and TOE design, selective independent confirmation\n            of the developer test results, and a vulnerability analysis (based upon\n            the functional specification, TOE design, implementation\n            representation, security architecture description and guidance\n            evidence provided) demonstrating resistance to penetration\n            attackers with an Enhanced-Basic attack potential.\n\n\n\n            EAL4 also provides assurance through the use of development\n            environment controls and additional TOE configuration\n            management including automation, and evidence of secure\n            delivery procedures.\n\n\n\n            This EAL represents a meaningful increase in assurance from EAL3\n            by requiring more design description, the implementation\n            representation for the entire TSF, and improved mechanisms\n            and/or procedures that provide confidence that the TOE will not\n            be tampered with during development.\n\n        ', 'eal4'),
('580940706', '\n\n\n            EAL2 provides assurance by a full security target and an\n            analysis of the SFRs in that ST, using a functional and\n            interface specification, guidance documentation and a basic\n            description of the architecture of the TOE, to understand the\n            security behaviour.\n\n\n\n            The analysis is supported by independent testing of the TSF,\n            evidence of developer testing based on the functional\n            specification, selective independent confirmation of the\n            developer test results, and a vulnerability analysis (based\n            upon the functional specification, TOE design, security architecture\n            description and guidance evidence provided) demonstrating\n            resistance to penetration attackers with a basic attack\n            potential.\n\n\n\n            EAL2 also provides assurance through use of a configuration\n            management system and evidence of secure delivery\n            procedures.\n\n\n\n            This EAL represents a meaningful increase in assurance from\n            EAL1 by requiring developer testing, a vulnerability analysis\n            (in addition to the search of the public domain), and\n            independent testing based upon more detailed TOE\n            specifications.\n\n        ', 'eal2'),
('630859409', '\n\n\n            EAL3 provides assurance by a full security target and an\n            analysis of the SFRs in that ST, using a functional and\n            interface specification, guidance documentation, and an\n            architectural description of the design of the TOE, to\n            understand the security behaviour.\n\n\n\n            The analysis is supported by independent testing of the TSF,\n            evidence of developer testing based on the functional\n            specification and TOE design, selective independent\n            confirmation of the developer test results, and a\n            vulnerability analysis (based upon the functional\n            specification, TOE design, security architecture description and guidance\n            evidence provided) demonstrating resistance to penetration\n            attackers with a basic attack potential.\n\n\n\n            EAL3 also provides assurance through the use of development\n            environment controls, TOE configuration management, and\n            evidence of secure delivery procedures.\n\n\n\n            This EAL represents a meaningful increase in assurance from\n            EAL2 by requiring more complete testing coverage of the\n            security functionality and mechanisms and/or procedures that\n            provide some confidence that the TOE will not be tampered with\n            during development.\n\n        ', 'eal3');

-- --------------------------------------------------------

--
-- Table structure for table `ealcomponent`
--

CREATE TABLE `ealcomponent` (
  `acomponent` varchar(100) NOT NULL,
  `id_eal` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ealcomponent`
--

INSERT INTO `ealcomponent` (`acomponent`, `id_eal`) VALUES
('adv_fsp.1', 'eal1'),
('agd_ope.1', 'eal1'),
('agd_pre.1', 'eal1'),
('alc_cmc.1', 'eal1'),
('alc_cms.1', 'eal1'),
('ase_ccl.1', 'eal1'),
('ase_ecd.1', 'eal1'),
('ase_int.1', 'eal1'),
('ase_obj.1', 'eal1'),
('ase_req.1', 'eal1'),
('ase_tss.1', 'eal1'),
('ate_ind.1', 'eal1'),
('ava_van.1', 'eal1'),
('adv_arc.1', 'eal2'),
('adv_fsp.2', 'eal2'),
('adv_tds.1', 'eal2'),
('alc_cmc.2', 'eal2'),
('alc_cms.2', 'eal2'),
('alc_del.1', 'eal2'),
('ase_obj.2', 'eal2'),
('ase_req.2', 'eal2'),
('ase_spd.1', 'eal2'),
('ate_cov.1', 'eal2'),
('ate_fun.1', 'eal2'),
('ate_ind.2', 'eal2'),
('ava_van.2', 'eal2'),
('adv_fsp.3', 'eal3'),
('adv_tds.2', 'eal3'),
('alc_cmc.3', 'eal3'),
('alc_cms.3', 'eal3'),
('alc_dvs.1', 'eal3'),
('alc_lcd.1', 'eal3'),
('ate_cov.2', 'eal3'),
('ate_dpt.1', 'eal3'),
('adv_fsp.4', 'eal4'),
('adv_imp.1', 'eal4'),
('adv_tds.3', 'eal4'),
('alc_cmc.4', 'eal4'),
('alc_cms.4', 'eal4'),
('alc_tat.1', 'eal4'),
('ava_van.3', 'eal4'),
('adv_fsp.5', 'eal5'),
('adv_int.2', 'eal5'),
('adv_tds.4', 'eal5'),
('alc_cms.5', 'eal5'),
('alc_tat.2', 'eal5'),
('ate_dpt.3', 'eal5'),
('ava_van.4', 'eal5'),
('adv_imp.2', 'eal6'),
('adv_int.3', 'eal6'),
('adv_spm.1', 'eal6'),
('adv_tds.5', 'eal6'),
('alc_cmc.5', 'eal6'),
('alc_dvs.2', 'eal6'),
('alc_tat.3', 'eal6'),
('ate_cov.3', 'eal6'),
('ate_fun.2', 'eal6'),
('ava_van.5', 'eal6'),
('adv_fsp.6', 'eal7'),
('adv_tds.6', 'eal7'),
('alc_lcd.2', 'eal7'),
('ate_dpt.4', 'eal7'),
('ate_ind.3', 'eal7');

-- --------------------------------------------------------

--
-- Table structure for table `ealobjectives`
--

CREATE TABLE `ealobjectives` (
  `id_ealobjectives` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `id_eal` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ealobjectives`
--

INSERT INTO `ealobjectives` (`id_ealobjectives`, `testo`, `id_eal`) VALUES
('-1990184269', '\n\n\n            EAL5 permits a developer to gain maximum assurance from\n            security engineering based upon rigorous commercial\n            development practises supported by moderate application of\n            specialist security engineering techniques. Such a TOE will\n            probably be designed and developed with the intent of\n            achieving EAL5 assurance. It is likely that the additional\n            costs attributable to the EAL5 requirements, relative to\n            rigorous development without the application of specialised\n            techniques, will not be large.\n\n\n\n            EAL5 is therefore applicable in those circumstances where\n            developers or users require a high level of independently\n            assured security in a planned development and require a\n            rigorous development approach without incurring unreasonable\n            costs attributable to specialist security engineering\n            techniques.\n\n        ', 'eal5'),
('-40674153', '\n\n            EAL1 is applicable where some confidence in correct operation\n            is required, but the threats to security are not viewed as\n            serious. It will be of value where independent assurance is\n            required to support the contention that due care has been\n            exercised with respect to the protection of personal or\n            similar information.\n\n            EAL1 requires only a limited security target. It is sufficient\n            to simply state the SFRs that the TOE must meet, rather than\n            deriving them from threats, OSPs and assumptions through\n            security objectives.\n\n            EAL1 provides an evaluation of the TOE as made available to\n            the customer, including independent testing against a\n            specification, and an examination of the guidance\n            documentation provided. It is intended that an EAL1 evaluation\n            could be successfully conducted without assistance from the\n            developer of the TOE, and for minimal outlay.\n\n            An evaluation at this level should provide evidence that the\n            TOE functions in a manner consistent with its\n            documentation.\n        ', 'eal1'),
('-969250781', '\n\n\n            EAL2 requires the co-operation of the developer in terms of\n            the delivery of design information and test results, but\n            should not demand more effort on the part of the developer\n            than is consistent with good commercial practise. As such it\n            should not require a substantially increased investment of\n            cost or time.\n\n\n\n            EAL2 is therefore applicable in those circumstances where\n            developers or users require a low to moderate level of\n            independently assured security in the absence of ready\n            availability of the complete development record. Such a\n            situation may arise when securing legacy systems, or where\n            access to the developer may be limited.\n\n        ', 'eal2'),
('1216624190', '\n\n\n            EAL4 permits a developer to gain maximum assurance from\n            positive security engineering based on good commercial\n            development practises which, though rigorous, do not require\n            substantial specialist knowledge, skills, and other\n            resources. EAL4 is the highest level at which it is likely to\n            be economically feasible to retrofit to an existing product\n            line.\n\n\n\n            EAL4 is therefore applicable in those circumstances where\n            developers or users require a moderate to high level of\n            independently assured security in conventional commodity TOEs\n            and are prepared to incur additional security-specific\n            engineering costs.\n\n        ', 'eal4'),
('1743782023', '\n\n\n            EAL7 is applicable to the development of security TOEs for\n            application in extremely high risk situations and/or where the\n            high value of the assets justifies the higher costs. Practical\n            application of EAL7 is currently limited to TOEs with tightly\n            focused security functionality that is amenable to extensive\n            formal analysis.\n\n        ', 'eal7'),
('1810372486', '\n\n\n            EAL3 permits a conscientious developer to gain maximum\n            assurance from positive security engineering at the design\n            stage without substantial alteration of existing sound\n            development practises.\n\n\n\n            EAL3 is applicable in those circumstances where developers or\n            users require a moderate level of independently assured\n            security, and require a thorough investigation of the TOE and\n            its development without substantial re-engineering.\n\n        ', 'eal3'),
('855092644', '\n\n\n            EAL6 permits developers to gain high assurance from\n            application of security engineering techniques to a rigorous\n            development environment in order to produce a premium TOE for\n            protecting high value assets against significant risks.\n\n\n\n            EAL6 is therefore applicable to the development of security\n            TOEs for application in high risk situations where the value\n            of the protected assets justifies the additional costs.\n\n        ', 'eal6');

-- --------------------------------------------------------

--
-- Table structure for table `fcinformativenotes`
--

CREATE TABLE `fcinformativenotes` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcinformativenotes`
--

INSERT INTO `fcinformativenotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', '', 'The TSF may employ cryptographic functionality to help satisfy\n                several high-level security objectives. These include (but are\n                not limited to): identification and authentication,\n                non-repudiation, trusted path, trusted channel and data\n                separation. This class is used when the TOE implements\n                cryptographic functions, the implementation of which could be\n                in hardware, firmware and/or software.', 'FCS'),
('normal', 'PGFID-10360', 'This class specifies the management of several aspects of the\n                TSF: security attributes, TSF data and functions in the\n                TSF. The different management roles and their interaction,\n                such as separation of capability, can also be specified', 'FMT'),
('normal', 'PGFID-11257', 'It is noted that the TSF should not only provide this\n                protection against individual users, but also against users\n                cooperating to obtain the information.', 'FPR'),
('normal', 'PGFID-12060', 'This class describes the requirements that could be levied to\n                satisfy the users\' privacy needs, while still allowing\n                the system flexibility as far as possible to maintain\n                sufficient control over the operation of the system.', 'FPR'),
('normal', 'PGFID-1787', 'Users often need to perform functions through direct\n                interaction with the TSF. A trusted path provides confidence\n                that a user is communicating directly with the TSF whenever it\n                is invoked. A user\'s response via the trusted path\n                guarantees that untrusted applications cannot intercept or\n                modify the user\'s response. Similarly, trusted\n                channels are one approach for secure communication between the\n                TSF and another trusted IT product.', 'FTP'),
('normal', 'PGFID-1795', 'Absence of a trusted path may allow breaches of accountability\n                or access control in environments where untrusted applications\n                are used. These applications can intercept user-private\n                information, such as passwords, and use it to impersonate\n                other users. As a consequence, responsibility for any system\n                actions cannot be reliably assigned to an accountable\n                entity. Also, these applications could output erroneous\n                information on an unsuspecting user\'s display,\n                resulting in subsequent user actions that may be erroneous and\n                may lead to a security breach.', 'FTP'),
('normal', 'PGFID-270569', 'From the point of view of this class, regarding to the\n                TSF there are three significant elements:', 'FPT'),
('normal', 'PGFID-272144', 'All of the families in the, FPT, class can be\n                related to these areas, and fall into the following groupings:', 'FPT'),
('normal', 'PGFID-277275', 'This class contains families of functional requirements that\n                relate to the integrity and management of the mechanisms that\n                constitute the TSF and to the\n                integrity of TSF data. In some sense, families in this class may\n                appear to duplicate components in the, FDP, class; they may even be implemented using the\n                same mechanisms. However,, FDP, focuses on user\n                data protection, while, FPT, focuses on TSF data\n                protection. In fact, components from the, FPT, class are necessary to provide requirements that the SFPs in\n                the TOE cannot be tampered with or bypassed.', 'FPT'),
('normal', 'PGFID-292150', 'A user session is defined as the period starting at the time\n                of the identification/authentication, or if more appropriate,\n                the start of an interaction between the user and the system,\n                up to the moment that all subjects (resources and attributes)\n                related to that session have been deallocated.', 'FTA'),
('normal', 'PGFID-293272', 'The establishment of a user\'s session typically\n                consists of the creation of one or more subjects that perform\n                operations in the TOE on behalf of the user. At the end of the\n                session establishment procedure, provided the TOE access\n                requirements are satisfied, the created subjects bear the\n                attributes determined by the identification and authentication\n                functions. This family specifies functional requirements for\n                controlling the establishment of a user\'s session.', 'FTA'),
('normal', 'PGFID-34133', 'The, FCS, class is composed of two families:, FCS_CKM, and, FCS_COP, . The, FCS_CKM, family addresses the management aspects of\n                cryptographic keys, while the, FCS_COP, family is\n                concerned with the operational use of those cryptographic\n                keys.', 'FCS'),
('normal', 'PGFID-34267', 'For each cryptographic key distribution method implemented by\n                the TOE, if any, the PP/ST author should select the, FCS_CKM.2, component.', 'FCS'),
('normal', 'PGFID-34274', 'For each cryptographic key access method implemented by the\n                TOE, if any, the PP/ST author should select the, FCS_CKM.3, component.', 'FCS'),
('normal', 'PGFID-34281', 'For each cryptographic key destruction method implemented by\n                the TOE, if any, the PP/ST author should select the, FCS_CKM.4, component.', 'FCS'),
('normal', 'PGFID-34288', 'For each cryptographic operation (such as digital signature,\n                data encryption, key agreement, secure hash, etc.) performed\n                by the TOE, if any, the PP/ST author should select the, FCS_COP.1, component.', 'FCS'),
('normal', 'PGFID-34693', 'Cryptographic functionality may be used to meet objectives\n                specified in class, FCO, , and in families, FDP_DAU, ,, FDP_SDI, ,, FDP_UCT, ,, FDP_UIT, ,, FIA_SOS, ,, FIA_UAU, , to meet a variety of objectives. In the cases\n                where cryptographic functionality is used to meet objectives\n                for other classes, the individual functional components\n                specify the objectives that cryptographic functionality must\n                satisfy. The objectives in class, FCS, should be\n                used when cryptographic functionality of the TOE is sought by\n                consumers.', 'FCS'),
('normal', 'PGFID-34877', 'For each cryptographic key generation method implemented by\n                the TOE, if any, the PP/ST author should select the, FCS_CKM.1, component.', 'FCS'),
('normal', 'PGFID-4325', 'This class provides three families that support the\n                availability of required resources such as processing\n                capability and/or storage capacity. The family Fault Tolerance\n                provides protection against unavailability of capabilities\n                caused by failure of the TOE. The family Priority of Service\n                ensures that the resources will be allocated to the more\n                important or time-critical tasks, and cannot be monopolised by\n                lower priority tasks. The family Resource Allocation provides\n                limits on the use of available resources, therefore preventing\n                users from monopolising the resources.', 'FRU'),
('normal', 'PGFID-4692', 'In the literature, the terms ``proof of receipt\'\'\n                and ``proof of origin\'\' are commonly used\n                terms. However it is recognised that the term\n                ``proof\'\' might be interpreted in a legal sense to\n                imply a form of mathematical rationale. The components in this\n                class interpret the de-facto use of the word\n                ``proof\'\' in the context of ``evidence\'\'\n                that the TSF demonstrates the non-repudiated transport of\n                types of information.', 'FCO'),
('normal', 'PGFID-4863', 'In this class the concept of ``information\'\' is\n                used. This information should be interpreted as the object\n                being communicated, and could contain an electronic mail\n                message, a file, or a set of predefined attribute types.', 'FCO'),
('normal', 'PGFID-5371', 'This class describes requirements specifically of interest for\n                TOEs that are used for the transport of information. Families\n                within this class deal with non-repudiation.', 'FCO'),
('normal', 'PGFID-557892', 'Families in this class address the requirements for functions\n                to establish and verify a claimed user\n                identity. Identification and Authentication is required to\n                ensure that users are associated with the proper security\n                attributes (e.g. identity, groups, roles, security or\n                integrity levels).', 'FIA'),
('normal', 'PGFID-557893', 'The unambiguous identification of authorised users and the\n                correct association of security attributes with users and\n                subjects is critical to the enforcement of the security\n                policies.', 'FIA'),
('normal', 'PGFID-557897', 'The, FIA_UID, family addresses determining the\n                identity of a user.', 'FIA'),
('normal', 'PGFID-557901', 'The, FIA_UAU, family addresses verifying the\n                identity of a user.', 'FIA'),
('normal', 'PGFID-557905', 'The, FIA_AFL, family addresses defining limits on\n                repeated unsuccessful authentication attempts.', 'FIA'),
('normal', 'PGFID-557909', 'The, FIA_ATD, family address the definition of user\n                attributes that are used in the enforcement of the SFRs.', 'FIA'),
('normal', 'PGFID-557913', 'The, FIA_USB, family addresses the correct\n                association of security attributes for each authorised user.', 'FIA'),
('normal', 'PGFID-557917', 'The, FIA_SOS, family addresses the generation and\n                verification of secrets that satisfy a defined metric.', 'FIA'),
('normal', 'PGFID-559376', 'A common security requirement is to unambiguously identify the\n                person and/or entity performing functions in a TOE. This\n                involves not only establishing the claimed identity of each\n                user, but also verifying that each user is indeed who he/she\n                claims to be. This is achieved by requiring users to provide\n                the TSF with some information that is known by the TSF to be\n                associated with the user in question.', 'FIA'),
('normal', 'PGFID-797822', ', FDP, does not explicitly deal with\n                confidentiality, integrity, or availability, as all three are\n                most often intertwined in the policy and mechanisms. However,\n                the TOE security policy must adequately cover these three\n                objectives in the PP/ST.', 'FDP'),
('normal', 'PGFID-797823', 'A final aspect of this class is that it specifies access\n                control in terms of ``operations\'\'. An operation\n                is defined as a specific type of access on a specific\n                object. It depends on the level of abstraction of the PP/ST\n                author whether these operations are described as\n                ``read\'\' and/or ``write\'\'\n                operations, or as more complex operations such as\n                ``update the database\'\'.', 'FDP'),
('normal', 'PGFID-798488', 'Each instantiation of a component can apply to only one\n                SFP. Therefore if an SFP is specified in a component then\n                this SFP will apply to all the elements in this\n                component. The components may be instantiated multiple times\n                within a PP/ST to account for different policies if so\n                desired.', 'FDP'),
('normal', 'PGFID-801347', 'The requirements in the, FDP, class are defined in\n                terms of a set of SFRs that will\n                implement a SFP. Since a TOE may implement multiple SFPs\n                simultaneously, the PP/ST author must specify the name for\n                each SFP, so it can be referenced in other families. This name\n                will then be used in each component selected to indicate that\n                it is being used as part of the definition of requirements for\n                that SFP. This allows the author to easily indicate the\n                scope for operations such as objects covered, operations\n                covered, authorised users, etc.', 'FDP'),
('normal', 'PGFID-801583', 'A set of SFRs may encompass many security function\n                policies (SFPs), each to be identified by the two policy\n                oriented components, FDP_ACC, , and, FDP_IFC, . These policies will typically take\n                confidentiality, integrity, and availability aspects into\n                consideration as required, to satisfy the TOE\n                requirements. Care should be taken to ensure that all objects\n                are covered by at least one SFP and that there are no\n                conflicts arising from implementing the multiple SFPs.', 'FDP'),
('normal', 'PGFID-803898', 'For example, one could imagine a goal of having user-imposed\n                (and user-defined) controls on information flow (e.g. an\n                automated implementation of the NO FOREIGN handling\n                caveat). Such concepts could be handled as refinements of, or\n                extensions to the, FDP, components.', 'FDP'),
('normal', 'PGFID-803899', 'Finally, it is important when looking at the components in, FDP, to remember that these components are\n                requirements for functions that may be implemented by a\n                mechanism that also serves or could serve another purpose. For\n                example, it is possible to build an access control policy\n                (, FDP_ACC, ) that uses labels (, FDP_IFF.1, ) as the basis of the access control\n                mechanism.', 'FDP'),
('normal', 'PGFID-805223', 'This class contains families specifying requirements related\n                to protecting user data. This class differs from FIA and FPT\n                in that, FDP, specifies components to\n                protect user data, FIA specifies components to protect\n                attributes associated with the user, and FPT specifies\n                components to protect TSF information.', 'FDP'),
('normal', 'PGFID-805260', 'The key to selecting components from this family is to have a\n                well defined set of TOE security objectives to enable proper\n                selection of the components from the two policy components;, FDP_ACC, and, FDP_IFC, . In, FDP_ACC, and, FDP_IFC, respectively, all access control\n                policies and all information flow control policies are\n                named. Furthermore the scope of control of these components in\n                terms of the subjects, objects and operations covered by this\n                security functionality. The names of these policies are meant\n                to be used throughout the remainder of the functional\n                components that have an operation that calls for an assignment\n                or selection of an ``access control SFP\'\' or an ``information\n                flow control SFP\'\'.  The rules that define the functionality\n                of the named access control and information flow control SFPs\n                will be defined in the, FDP_ACF, and, FDP_IFF, families\n                (respectively).', 'FDP'),
('normal', 'PGFID-805279', 'The following steps are guidance on how this class is applied\n                in the construction of a PP/ST:', 'FDP'),
('normal', 'PGFID-806113', 'The access control policies are policies that control access\n                to the information container. The attributes represent\n                attributes of the container. Once the information is out of\n                the container, the accessor is free to modify that\n                information, including writing the information into a\n                different container with different attributes. By contrast, an\n                information flow policies controls access to the information,\n                independent of the container. The attributes of the\n                information, which may be associated with the attributes of\n                the container (or may not, as in the case of a multi-level\n                database) stay with the information as it moves. The accessor\n                does not have the ability, in the absence of an explicit\n                authorisation, to change the attributes of the information.', 'FDP'),
('normal', 'PGFID-806115', 'This class is not meant to be a complete taxonomy of IT access\n                policies, as others can be imagined. Those policies included\n                here are simply those for which current experience with actual\n                systems provides a basis for specifying requirements. There\n                may be other forms of intent that are not captured in the\n                definitions here.', 'FDP'),
('normal', 'PGFID-806624', 'The class does not contain explicit requirements for\n                traditional Mandatory Access Controls (MAC) or traditional\n                Discretionary Access Controls (DAC); however, such\n                requirements may be constructed using components from this\n                class.', 'FDP'),
('normal', 'PGFID-808464', 'When building a PP/ST using components from the, FDP, class, the following information provides guidance\n                on where to look and what to select from the class.', 'FDP'),
('normal', 'PGFID-852565', 'While developing the security audit requirements, the PP/ST\n                author should take note of the inter-relationships among the\n                audit families and components. The potential exists to specify\n                a set of audit requirements that comply with the\n                family/component dependencies lists, while at the same time\n                resulting in a deficient audit function (e.g. an audit\n                function that requires all security relevant events to be\n                audited but without the selectivity to control them on any\n                reasonable basis such as individual user or object).', 'FAU'),
('normal', 'PGFID-855534', 'CC audit families allow PP/ST authors the ability to define\n                requirements for monitoring user activities and, in some\n                cases, detecting real, possible, or imminent violations of\n                the enforcement of the SFRs. The TOE\'s security audit functions are\n                defined to help monitor security-relevant events, and act as a\n                deterrent against security violations. The requirements of the\n                audit families refer to functions that include audit data\n                protection, record format, and event selection, as well as\n                analysis tools, violation alarms, and real-time analysis. The\n                audit trail should be presented in human-readable format\n                either directly (e.g. storing the audit trail in\n                human-readable format) or indirectly (e.g. using audit\n                reduction tools), or both.', 'FAU'),
('normal', 'PGFID-8919', 'In the components of this class there is flexibility as to\n                whether or not authorised users are covered by the required\n                security functionality. For example, a PP/ST author might\n                consider it appropriate not to require protection of the privacy\n                of users against a suitably authorised user.', 'FPR'),
('normal', 'PGFID-8999', 'In an environment where the TOE is made up of multiple\n                physically separated parts, the timing issues with respect to\n                propagation of security attributes, TSF data, and function\n                modification become very complex, especially if the\n                information is required to be replicated across the parts of\n                the TOE. This should be considered when selecting components\n                such as, FMT_REV.1, , or, FMT_SAE.1, , where the behaviour might be\n                impaired. In such situations, use of components from, FPT_TRC, is advisable.', 'FMT'),
('normal', 'PGFID-9017', 'This class, together with other classes (such as those\n                concerned with audit, access control, trusted path, and\n                non-repudiation) provides the flexibility to specify the\n                desired privacy behaviour. On the other hand, the requirements\n                in this class might impose limitations on the use of the\n                components of other classes, such as, FIA, or, FAU, . For example, if\n                authorised users are not allowed to see the user identity\n                (e.g. Anonymity or Pseudonymity), it will obviously not be\n                possible to hold individual users accountable for any security\n                relevant actions they perform that are covered by the privacy\n                requirements. However, it may still be possible to include\n                audit requirements in a PP/ST, where the fact that a\n                particular security relevant event has occurred is more\n                important than knowing who was responsible for it.', 'FPR'),
('normal', 'PGFID-9018', 'Additional information is provided in the application notes\n                for class, FAU, , where it is explained that the\n                definition of ``identity\'\' in the context of\n                auditing can also be an alias or other information that could\n                identify a user.', 'FPR'),
('normal', 'PGFID-9019', 'This class describes four families: Anonymity, Pseudonymity,\n                Unlinkability and Unobservability. Anonymity, Pseudonymity and\n                Unlinkability have a complex interrelationship. When choosing\n                a family, the choice should depend on the threats\n                identified. For some types of privacy threats, pseudonymity\n                will be more appropriate than anonymity (e.g. if there is a\n                requirement for auditing). In addition, some types of privacy\n                threats are best countered by a combination of components from\n                several families.', 'FPR'),
('normal', 'PGFID-9020', 'All families assume that a user does not explicitly perform an\n                action that discloses the user\'s own identity. For\n                example, the TSF is not expected to screen the user name in\n                electronic messages or databases.', 'FPR'),
('normal', 'PGFID-9021', 'All families in this class have components that can be scoped\n                through operations. These operations allow the PP/ST author to\n                state the cooperating users/subjects to which the TSF must be\n                resistant. An example of an instantiation of anonymity could\n                be: `` The TSF shall ensure that the users and/or\n                subjects are unable to determine the user identity bound to\n                the teleconsulting application\'\'.', 'FPR');

-- --------------------------------------------------------

--
-- Table structure for table `fcintroduction`
--

CREATE TABLE `fcintroduction` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcintroduction`
--

INSERT INTO `fcintroduction` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-10899', '\n                Identification and Authentication is required to ensure that\n                users are associated with the proper security attributes\n                (e.g. identity, groups, roles, security or integrity levels).', 'FIA'),
('normal', 'PGFID-10900', '\n                The unambiguous identification of authorised users and the\n                correct association of security attributes with users and\n                subjects is critical to the enforcement of the intended\n                security policies. The families in this class deal with\n                determining and verifying the identity of users, determining\n                their authority to interact with the TOE, and with the correct\n                association of security attributes for each authorised\n                user. Other classes of requirements (e.g. User Data\n                Protection, Security Audit) are dependent upon correct\n                identification and authentication of users in order to be\n                effective.', 'FIA'),
('normal', 'PGFID-117030', '\n                Security auditing involves recognising, recording, storing,\n                and analysing information related to security relevant\n                activities (i.e. activities controlled by the TSF). The\n                resulting audit records can be examined to determine which\n                security relevant activities took place and whom (which user)\n                is responsible for them.', 'FAU'),
('normal', 'PGFID-11954', '\n                This class contains privacy requirements. These requirements\n                provide a user protection against discovery and misuse of\n                identity by other users.', 'FPR'),
('normal', 'PGFID-11987', '\n                Families in this class address the requirements for functions\n                to establish and verify a claimed user identity.', 'FIA'),
('normal', 'PGFID-12441', '\n                This class has several objectives:\n                ', 'FMT'),
('normal', 'PGFID-12768', '\n                This class is intended to specify the management of several\n                aspects of the TSF: security attributes, TSF data and\n                functions. The different management roles and their\n                interaction, such as separation of capability, can be\n                specified.', 'FMT'),
('normal', 'PGFID-20590', '\n                From the point of view of this class, regarding to the\n                TSF there are three significant elements:\n                ', 'FPT'),
('normal', 'PGFID-23211', 'This class contains families of functional requirements that\n                relate to the integrity and management of the mechanisms that\n                constitute the TSF and to the integrity of TSF data. In some\n                sense, families in this class may appear to duplicate\n                components in the, FDP, class; they may\n                even be implemented using the same mechanisms. However,, FDP, focuses on user data protection, while, FPT, focuses on TSF data\n                protection. In fact, components from the, FPT, class are necessary to provide requirements that\n                the SFPs in the TOE cannot be tampered with or\n                bypassed.', 'FPT'),
('normal', 'PGFID-246', '\n                In this paradigm, a trusted channel is a communication channel\n                that may be initiated by either side of the channel, and\n                provides non-repudiation characteristics with respect to the\n                identity of the sides of the channel.', 'FTP'),
('normal', 'PGFID-3078', '\n                This class provides two families specifically concerned with\n                assuring the identity of a party participating in a data\n                exchange. These families are related to assuring the identity\n                of the originator of transmitted information (proof of origin)\n                and assuring the identity of the recipient of transmitted\n                information (proof of receipt). These families ensure that an\n                originator cannot deny having sent the message, nor can the\n                recipient deny having received it.', 'FCO'),
('normal', 'PGFID-31996', '\n                The families in this class are organised into four groups:\n                ', 'FDP'),
('normal', 'PGFID-34523', '\n                The TSF may employ cryptographic functionality to help satisfy\n                several high-level security objectives. These include (but are\n                not limited to): identification and authentication,\n                non-repudiation, trusted path, trusted channel and data\n                separation. This class is used when the TOE implements\n                cryptographic functions, the implementation of which could be\n                in hardware, firmware and/or software.', 'FCS'),
('normal', 'PGFID-35221', 'The, FCS, class is composed of two families:, FCS_CKM, and, FCS_COP, . The, FCS_CKM, family addresses the management aspects of\n                cryptographic keys, while the, FCS_COP, family is\n                concerned with the operational use of those cryptographic\n                keys.', 'FCS'),
('normal', 'PGFID-38329', 'This class contains families specifying requirements related\n                to protecting user data., FDP, is split\n                into four groups of families (listed below) that address user\n                data within a TOE, during import, export, and storage as well\n                as security attributes directly related to user data.', 'FDP'),
('normal', 'PGFID-4074', '\n                This class provides three families that support the\n                availability of required resources such as processing\n                capability and/or storage capacity. The family Fault Tolerance\n                provides protection against unavailability of capabilities\n                caused by failure of the TOE. The family Priority of Service\n                ensures that the resources will be allocated to the more\n                important or time-critical tasks and cannot be monopolised by\n                lower priority tasks. The family Resource Allocation provides\n                limits on the use of available resources, therefore preventing\n                users from monopolising the resources.', 'FRU'),
('normal', 'PGFID-5202', '\n                This family specifies functional requirements for controlling\n                the establishment of a user\'s session.', 'FTA'),
('normal', 'PGFID-582', '\n                Families in this class provide requirements for a trusted\n                communication path between users and the TSF, and for a\n                trusted communication channel between the TSF and other\n                trusted IT products. Trusted paths and channels have the\n                following general characteristics:\n                ', 'FTP'),
('normal', 'PGFID-641', '\n                A trusted path provides a means for users to perform functions\n                through an assured direct interaction with the TSF. Trusted\n                path is usually desired for user actions such as initial\n                identification and/or authentication, but may also be desired\n                at other times during a user\'s session. Trusted\n                path exchanges may be initiated by a user or the TSF. User\n                responses via the trusted path are guaranteed to be protected\n                from modification by or disclosure to untrusted applications.', 'FTP');

-- --------------------------------------------------------

--
-- Table structure for table `fclass`
--

CREATE TABLE `fclass` (
  `id` varchar(4) NOT NULL,
  `name` varchar(40) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fclass`
--

INSERT INTO `fclass` (`id`, `name`) VALUES
('FAU', 'Security audit'),
('FCO', 'Communication'),
('FCS', 'Cryptographic support'),
('FDP', 'User data protection'),
('FIA', 'Identification and authentication'),
('FMT', 'Security management'),
('FPR', 'Privacy'),
('FPT', 'Protection of the TSF'),
('FRU', 'Resource utilisation'),
('FTA', 'TOE access'),
('FTP', 'Trusted path/channels');

-- --------------------------------------------------------

--
-- Table structure for table `fcoaudit`
--

CREATE TABLE `fcoaudit` (
  `num` varchar(2) DEFAULT NULL,
  `id` varchar(20) NOT NULL,
  `level` varchar(10) DEFAULT NULL,
  `equal` varchar(12) DEFAULT NULL,
  `text` varchar(500) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcoaudit`
--

INSERT INTO `fcoaudit` (`num`, `id`, `level`, `equal`, `text`, `idf`) VALUES
('', '', '', '', '', 'FCS_COP.1'),
('0', 'fau_arp.10', 'minimal', NULL, '\n                    Actions taken due to potential security violations.\n                ', 'FAU_ARP.1'),
('0', 'fau_saa.10', 'minimal', NULL, '\n                    Enabling and disabling of any of the analysis mechanisms;\n                ', 'FAU_SAA.1'),
('1', 'fau_saa.11', 'minimal', NULL, '\n                    Automated responses performed by the tool.\n                ', 'FAU_SAA.1'),
('0', 'fau_saa.20', 'minimal', 'fau_saa.1', '', 'FAU_SAA.2'),
('0', 'fau_saa.30', 'minimal', 'fau_saa.1', '', 'FAU_SAA.3'),
('0', 'fau_saa.40', 'minimal', 'fau_saa.1', '', 'FAU_SAA.4'),
('0', 'fau_sar.10', 'basic', NULL, '\n                    Reading of information from the audit records.\n                ', 'FAU_SAR.1'),
('0', 'fau_sel.10', 'minimal', NULL, '\n                    All modifications to the audit configuration that occur\n                    while the audit collection functions are operating.\n                ', 'FAU_SEL.1'),
('0', 'fau_stg.30', 'basic', NULL, '\n                    Actions taken due to exceeding of a threshold.\n                ', 'FAU_STG.3'),
('0', 'fau_stg.40', 'basic', NULL, '\n                    Actions taken due to the audit storage failure.\n                ', 'FAU_STG.4'),
('0', 'fco_nro.10', 'minimal', NULL, '\n                    The identity of the user who requested that evidence of\n                    origin would be generated.\n                ', 'FCO_NRO.1'),
('1', 'fco_nro.11', 'minimal', NULL, '\n                    The invocation of the non-repudiation service.\n                ', 'FCO_NRO.1'),
('2', 'fco_nro.12', 'basic', NULL, '\n                    Identification of the information, the destination, and a\n                    copy of the evidence provided.\n                ', 'FCO_NRO.1'),
('3', 'fco_nro.13', 'detailed', NULL, '\n                    The identity of the user who requested a verification of the\n                    evidence.\n                ', 'FCO_NRO.1'),
('0', 'fco_nro.20', 'minimal', NULL, '\n                    The invocation of the non-repudiation service.\n                ', 'FCO_NRO.2'),
('1', 'fco_nro.21', 'basic', NULL, '\n                    Identification of the information, the destination, and a\n                    copy of the evidence provided.\n                ', 'FCO_NRO.2'),
('2', 'fco_nro.22', 'detailed', NULL, '\n                    The identity of the user who requested a verification of the\n                    evidence.\n                ', 'FCO_NRO.2'),
('0', 'fco_nrr.10', 'minimal', NULL, '\n                    The identity of the user who requested that evidence of\n                    receipt would be generated.\n                ', 'FCO_NRR.1'),
('1', 'fco_nrr.11', 'minimal', NULL, '\n                    The invocation of the non-repudiation service.\n                ', 'FCO_NRR.1'),
('2', 'fco_nrr.12', 'basic', NULL, '\n                    Identification of the information, the destination, and a\n                    copy of the evidence provided.\n                ', 'FCO_NRR.1'),
('3', 'fco_nrr.13', 'detailed', NULL, '\n                    The identity of the user who requested a verification of the\n                    evidence.\n                ', 'FCO_NRR.1'),
('0', 'fco_nrr.20', 'minimal', NULL, '\n                    The invocation of the non-repudiation service.\n                ', 'FCO_NRR.2'),
('1', 'fco_nrr.21', 'basic', NULL, '\n                    Identification of the information, the destination, and a\n                    copy of the evidence provided.\n                ', 'FCO_NRR.2'),
('2', 'fco_nrr.22', 'detailed', NULL, '\n                    The identity of the user who requested a verification of the\n                    evidence.\n                ', 'FCO_NRR.2'),
('0', 'fdp_acf.10', 'minimal', NULL, '\n                    Successful requests to perform an operation on an object\n                    covered by the SFP.\n                ', 'FDP_ACF.1'),
('1', 'fdp_acf.11', 'basic', NULL, '\n                    All requests to perform an operation on an object covered by\n                    the SFP.\n                ', 'FDP_ACF.1'),
('2', 'fdp_acf.12', 'detailed', NULL, '\n                    The specific security attributes used in making an access\n                    check.\n                ', 'FDP_ACF.1'),
('0', 'fdp_dau.10', 'minimal', NULL, '\n                    Successful generation of validity evidence.\n                ', 'FDP_DAU.1'),
('1', 'fdp_dau.11', 'basic', NULL, '\n                    Unsuccessful generation of validity evidence.\n                ', 'FDP_DAU.1'),
('2', 'fdp_dau.12', 'detailed', NULL, '\n                    The identity of the subject that requested the evidence.\n                ', 'FDP_DAU.1'),
('0', 'fdp_dau.20', 'minimal', NULL, '\n                    Successful generation of validity evidence.\n                ', 'FDP_DAU.2'),
('1', 'fdp_dau.21', 'basic', NULL, '\n                    Unsuccessful generation of validity evidence.\n                ', 'FDP_DAU.2'),
('2', 'fdp_dau.22', 'detailed', NULL, '\n                    The identity of the subject that requested the evidence.\n                ', 'FDP_DAU.2'),
('3', 'fdp_dau.23', 'detailed', NULL, '\n                    The identity of the subject that generated the evidence.\n                ', 'FDP_DAU.2'),
('0', 'fdp_etc.20', 'minimal', 'fdp_etc.1', '', 'FDP_ETC.2'),
('1', 'fdp_etc.21', 'basic', 'fdp_etc.1', '', 'FDP_ETC.2'),
('0', 'fdp_iff.10', 'minimal', NULL, '\n                    Decisions to permit requested information flows.\n                ', 'FDP_IFF.1'),
('1', 'fdp_iff.11', 'basic', NULL, '\n                    All decisions on requests for information flow.\n                ', 'FDP_IFF.1'),
('2', 'fdp_iff.12', 'detailed', NULL, '\n                    The specific security attributes used in making an\n                    information flow enforcement decision.\n                ', 'FDP_IFF.1'),
('3', 'fdp_iff.13', 'detailed', NULL, '\n                    Some specific subsets of the information that has flowed\n                    based upon policy goals (e.g. auditing of downgraded\n                    material).\n                ', 'FDP_IFF.1'),
('0', 'fdp_iff.20', 'minimal', 'fdp_iff.1', '', 'FDP_IFF.2'),
('1', 'fdp_iff.21', 'basic', 'fdp_iff.1', '', 'FDP_IFF.2'),
('2', 'fdp_iff.22', 'detailed', 'fdp_iff.1', '', 'FDP_IFF.2'),
('0', 'fdp_iff.60', 'minimal', 'fdp_iff.3', '', 'FDP_IFF.6'),
('1', 'fdp_iff.61', 'basic', 'fdp_iff.3', '', 'FDP_IFF.6'),
('2', 'fdp_iff.62', 'detailed', 'fdp_iff.3', '', 'FDP_IFF.6'),
('0', 'fdp_itc.10', 'minimal', NULL, '\n                    Successful import of user data, including any security\n                    attributes.\n                ', 'FDP_ITC.1'),
('1', 'fdp_itc.11', 'basic', NULL, '\n                    All attempts to import user data, including any security\n                    attributes.\n                ', 'FDP_ITC.1'),
('2', 'fdp_itc.12', 'detailed', NULL, '\n                    The specification of security attributes for imported user\n                    data supplied by an authorised user.\n                ', 'FDP_ITC.1'),
('0', 'fdp_itc.20', 'minimal', 'fdp_itc.1', '', 'FDP_ITC.2'),
('1', 'fdp_itc.21', 'basic', 'fdp_itc.1', '', 'FDP_ITC.2'),
('2', 'fdp_itc.22', 'detailed', 'fdp_itc.1', '', 'FDP_ITC.2'),
('0', 'fdp_itt.10', 'minimal', NULL, '\n                    Successful transfers of user data, including identification\n                    of the protection method used.\n                ', 'FDP_ITT.1'),
('1', 'fdp_itt.11', 'basic', NULL, '\n                    All attempts to transfer user data, including the protection\n                    method used and any errors that occurred.\n                ', 'FDP_ITT.1'),
('0', 'fdp_itt.20', 'minimal', 'fdp_itt.1', '', 'FDP_ITT.2'),
('1', 'fdp_itt.21', 'basic', 'fdp_itt.1', '', 'FDP_ITT.2'),
('0', 'fdp_itt.30', 'minimal', NULL, '\n                    Successful transfers of user data, including identification\n                    of the integrity protection method used.\n                ', 'FDP_ITT.3'),
('1', 'fdp_itt.31', 'basic', NULL, '\n                    All attempts to transfer user data, including the integrity\n                    protection method used and any errors that occurred.\n                ', 'FDP_ITT.3'),
('2', 'fdp_itt.32', 'basic', NULL, '\n                    Unauthorised attempts to change the integrity protection\n                    method.\n                ', 'FDP_ITT.3'),
('3', 'fdp_itt.33', 'detailed', NULL, '\n                    The action taken upon detection of an integrity error.\n                ', 'FDP_ITT.3'),
('0', 'fdp_itt.40', 'minimal', 'fdp_itt.3', '', 'FDP_ITT.4'),
('1', 'fdp_itt.41', 'basic', 'fdp_itt.3', '', 'FDP_ITT.4'),
('2', 'fdp_itt.42', 'detailed', 'fdp_itt.3', '', 'FDP_ITT.4'),
('0', 'fdp_rol.10', 'minimal', NULL, '\n                    All successful rollback operations.\n                ', 'FDP_ROL.1'),
('1', 'fdp_rol.11', 'basic', NULL, '\n                    All attempts to perform rollback operations.\n                ', 'FDP_ROL.1'),
('2', 'fdp_rol.12', 'detailed', NULL, '\n                    All attempts to perform rollback operations, including\n                    identification of the types of operations rolled back.\n                ', 'FDP_ROL.1'),
('0', 'fdp_rol.20', 'minimal', 'fdp_rol.1', '', 'FDP_ROL.2'),
('1', 'fdp_rol.21', 'basic', 'fdp_rol.1', '', 'FDP_ROL.2'),
('2', 'fdp_rol.22', 'detailed', 'fdp_rol.1', '', 'FDP_ROL.2'),
('0', 'fdp_sdi.20', 'minimal', NULL, '\n                    Successful attempts to check the integrity of user data,\n                    including an indication of the results of the check.\n                ', 'FDP_SDI.2'),
('1', 'fdp_sdi.21', 'basic', NULL, '\n                    All attempts to check the integrity of user data, including\n                    an indication of the results of the check, if performed.\n                ', 'FDP_SDI.2'),
('2', 'fdp_sdi.22', 'detailed', NULL, '\n                    The type of integrity error that occurred.\n                ', 'FDP_SDI.2'),
('3', 'fdp_sdi.23', 'detailed', NULL, '\n                    The action taken upon detection of an integrity error.\n                ', 'FDP_SDI.2'),
('0', 'fia_afl.10', 'minimal', NULL, '\n                    the reaching of the threshold for the unsuccessful\n                    authentication attempts and the actions (e.g. disabling of a\n                    terminal) taken and the subsequent, if appropriate,\n                    restoration to the normal state (e.g. re-enabling of a\n                    terminal).\n                ', 'FIA_AFL.1'),
('0', 'fia_sos.10', 'minimal', NULL, '\n                    Rejection by the TSF of any tested secret;\n                ', 'FIA_SOS.1'),
('1', 'fia_sos.11', 'basic', NULL, '\n                    Rejection or acceptance by the TSF of any tested secret;\n                ', 'FIA_SOS.1'),
('2', 'fia_sos.12', 'detailed', NULL, '\n                    Identification of any changes to the defined quality\n                    metrics.\n                ', 'FIA_SOS.1'),
('0', 'fia_sos.20', 'minimal', 'fia_sos.1', '', 'FIA_SOS.2'),
('1', 'fia_sos.21', 'basic', 'fia_sos.1', '', 'FIA_SOS.2'),
('2', 'fia_sos.22', 'detailed', 'fia_sos.1', '', 'FIA_SOS.2'),
('0', 'fia_uau.10', 'minimal', NULL, '\n                    Unsuccessful use of the authentication mechanism;\n                ', 'FIA_UAU.1'),
('1', 'fia_uau.11', 'basic', NULL, '\n                    All use of the authentication mechanism;\n                ', 'FIA_UAU.1'),
('2', 'fia_uau.12', 'detailed', NULL, '\n                    All TSF mediated actions performed before authentication of\n                    the user.\n                ', 'FIA_UAU.1'),
('0', 'fia_uau.20', 'minimal', NULL, '\n                    Unsuccessful use of the authentication mechanism;\n                ', 'FIA_UAU.2'),
('1', 'fia_uau.21', 'basic', NULL, '\n                    All use of the authentication mechanism.\n                ', 'FIA_UAU.2'),
('0', 'fia_uau.50', 'minimal', NULL, '\n                    The final decision on authentication;\n                ', 'FIA_UAU.5'),
('1', 'fia_uau.51', 'basic', NULL, '\n                    The result of each activated mechanism together with the\n                    final decision.\n                ', 'FIA_UAU.5'),
('0', 'fia_uau.60', 'minimal', NULL, '\n                    Failure of reauthentication;\n                ', 'FIA_UAU.6'),
('1', 'fia_uau.61', 'basic', NULL, '\n                    All reauthentication attempts.\n                ', 'FIA_UAU.6'),
('0', 'fia_uid.10', 'minimal', NULL, '\n                    Unsuccessful use of the user identification mechanism,\n                    including the user identity provided;\n                ', 'FIA_UID.1'),
('1', 'fia_uid.11', 'basic', NULL, '\n                    All use of the user identification mechanism, including the\n                    user identity provided.\n                ', 'FIA_UID.1'),
('0', 'fia_uid.20', 'minimal', 'fia_uid.1', '', 'FIA_UID.2'),
('1', 'fia_uid.21', 'basic', 'fia_uid.1', '', 'FIA_UID.2'),
('0', 'fia_usb.10', 'minimal', NULL, '\n                Unsuccessful binding of user security attributes to a subject\n                (e.g. creation of a subject).\n            ', 'FIA_USB.1'),
('1', 'fia_usb.11', 'basic', NULL, '\n                Success and failure of binding of user security attributes to a\n                subject (e.g. success or failure to create a subject).\n            ', 'FIA_USB.1'),
('0', 'fmt_mof.10', 'basic', NULL, '\n                    All modifications in the behaviour of the functions in the\n                    TSF.\n                ', 'FMT_MOF.1'),
('0', 'fmt_msa.10', 'basic', NULL, '\n                    All modifications of the values of security attributes.\n                ', 'FMT_MSA.1'),
('0', 'fmt_msa.20', 'minimal', NULL, '\n                    All offered and rejected values for a security attribute;\n                ', 'FMT_MSA.2'),
('1', 'fmt_msa.21', 'detailed', NULL, '\n                    All offered and accepted secure values for a security\n                    attribute.\n                ', 'FMT_MSA.2'),
('0', 'fmt_msa.30', 'basic', NULL, '\n                    Modifications of the default setting of permissive or\n                    restrictive rules.\n                ', 'FMT_MSA.3'),
('1', 'fmt_msa.31', 'basic', NULL, '\n                    All modifications of the initial values of security\n                    attributes.\n                ', 'FMT_MSA.3'),
('0', 'fmt_msa.40', 'basic', NULL, '\n            Modifications of security attributes, possibly with the old\n            and/or values of security attributes that were modified.\n        ', 'FMT_MSA.4'),
('0', 'fmt_mtd.10', 'basic', NULL, '\n                    All modifications to the values of TSF data.\n                ', 'FMT_MTD.1'),
('0', 'fmt_mtd.20', 'basic', NULL, '\n                    All modifications to the limits on TSF data;\n                ', 'FMT_MTD.2'),
('1', 'fmt_mtd.21', 'basic', NULL, '\n                    All modifications in the actions to be taken in case of\n                    violation of the limits.\n                ', 'FMT_MTD.2'),
('0', 'fmt_rev.10', 'minimal', NULL, '\n                    Unsuccessful revocation of security attributes;\n                ', 'FMT_REV.1'),
('1', 'fmt_rev.11', 'basic', NULL, '\n                    All attempts to revoke security attributes.\n                ', 'FMT_REV.1'),
('0', 'fmt_sae.10', 'basic', NULL, '\n                    Specification of the expiration time for an attribute;\n                ', 'FMT_SAE.1'),
('1', 'fmt_sae.11', 'basic', NULL, '\n                    Action taken due to attribute expiration.\n                ', 'FMT_SAE.1'),
('0', 'fmt_smr.10', 'minimal', NULL, '\n                    modifications to the group of users that are part of a role;\n                ', 'FMT_SMR.1'),
('1', 'fmt_smr.11', 'detailed', NULL, '\n                    every use of the rights of a role.\n                ', 'FMT_SMR.1'),
('0', 'fmt_smr.20', 'minimal', NULL, '\n                    modifications to the group of users that are part of a role;\n                ', 'FMT_SMR.2'),
('1', 'fmt_smr.21', 'minimal', NULL, '\n                    unsuccessful attempts to use a role due to the given\n                    conditions on the roles;\n                ', 'FMT_SMR.2'),
('2', 'fmt_smr.22', 'detailed', NULL, '\n                    every use of the rights of a role.\n                ', 'FMT_SMR.2'),
('0', 'fpr_unl.10', 'minimal', NULL, '\n                    The invocation of the unlinkability mechanism.\n                ', 'FPR_UNL.1'),
('0', 'fpr_uno.10', 'minimal', NULL, '\n                    The invocation of the unobservability mechanism.\n                ', 'FPR_UNO.1'),
('0', 'fpr_uno.20', 'minimal', 'fpr_uno.1', '', 'FPR_UNO.2'),
('0', 'fpr_uno.40', 'minimal', NULL, '\n                    The observation of the use of a resource or service by a\n                    user or subject.\n                ', 'FPR_UNO.4'),
('0', 'fpt_ita.10', 'minimal', NULL, '\n                    the absence of TSF data when required by a TOE.\n                ', 'FPT_ITA.1'),
('0', 'fpt_iti.20', 'minimal', NULL, '\n                    the detection of modification of transmitted TSF data;\n                ', 'FPT_ITI.2'),
('1', 'fpt_iti.21', 'basic', NULL, '\n                    the action taken upon detection of modification of\n                    transmitted TSF data.\n                ', 'FPT_ITI.2'),
('2', 'fpt_iti.22', 'basic', NULL, '\n                    the use of the correction mechanism.\n                ', 'FPT_ITI.2'),
('0', 'fpt_itt.30', 'minimal', NULL, '\n                    the detection of modification of TSF data;\n                ', 'FPT_ITT.3'),
('1', 'fpt_itt.31', 'basic', NULL, '\n                    the action taken following detection of an integrity error.\n                ', 'FPT_ITT.3'),
('0', 'fpt_php.10', 'minimal', NULL, '\n                    if detection by IT means, detection of intrusion.\n                ', 'FPT_PHP.1'),
('0', 'fpt_php.20', 'minimal', NULL, '\n                    detection of intrusion.\n                ', 'FPT_PHP.2'),
('0', 'fpt_rcv.10', 'minimal', NULL, '\n                    the fact that a failure or service discontinuity occurred;\n                ', 'FPT_RCV.1'),
('1', 'fpt_rcv.11', 'minimal', NULL, '\n                    resumption of the regular operation;\n                ', 'FPT_RCV.1'),
('2', 'fpt_rcv.12', 'basic', NULL, '\n                    type of failure or service discontinuity.\n                ', 'FPT_RCV.1'),
('0', 'fpt_rcv.20', 'minimal', 'fpt_rcv.1', '', 'FPT_RCV.2'),
('1', 'fpt_rcv.21', 'basic', 'fpt_rcv.1', '', 'FPT_RCV.2'),
('0', 'fpt_rcv.30', 'minimal', 'fpt_rcv.1', '', 'FPT_RCV.3'),
('1', 'fpt_rcv.31', 'basic', 'fpt_rcv.1', '', 'FPT_RCV.3'),
('0', 'fpt_rpl.10', 'basic', NULL, '\n                    Detected replay attacks.\n                ', 'FPT_RPL.1'),
('1', 'fpt_rpl.11', 'detailed', NULL, '\n                    Action to be taken based on the specific actions.\n                ', 'FPT_RPL.1'),
('0', 'fpt_stm.10', 'minimal', NULL, '\n                    changes to the time;\n                ', 'FPT_STM.1'),
('1', 'fpt_stm.11', 'detailed', NULL, '\n                    providing a timestamp.\n                ', 'FPT_STM.1'),
('0', 'fpt_tee.10', 'basic', NULL, '\n        Execution of the tests of the external entities and the results of\n        the tests.\n    ', 'FPT_TEE.1'),
('0', 'fpt_tst.10', 'basic', NULL, '\n                    Execution of the TSF self tests and the results of the\n                    tests.\n                ', 'FPT_TST.1'),
('0', 'fru_prs.10', 'minimal', NULL, '\n                    Rejection of operation based on the use of priority within\n                    an allocation.\n                ', 'FRU_PRS.1'),
('1', 'fru_prs.11', 'basic', NULL, '\n                    All attempted uses of the allocation function which involves\n                    the priority of the service functions.\n                ', 'FRU_PRS.1'),
('0', 'fru_prs.20', 'minimal', 'fru_prs.1', '', 'FRU_PRS.2'),
('1', 'fru_prs.21', 'basic', 'fru_prs.1', '', 'FRU_PRS.2'),
('0', 'fru_rsa.10', 'minimal', NULL, '\n                    Rejection of allocation operation due to resource limits.\n                ', 'FRU_RSA.1'),
('1', 'fru_rsa.11', 'basic', NULL, '\n                    All attempted uses of the resource allocation functions for\n                    resources that are under control of the TSF.\n                ', 'FRU_RSA.1'),
('0', 'fru_rsa.20', 'minimal', 'fru_rsa.1', '', 'FRU_RSA.2'),
('1', 'fru_rsa.21', 'basic', 'fru_rsa.1', '', 'FRU_RSA.2'),
('0', 'fta_lsa.10', 'minimal', NULL, '\n                    All failed attempts at selecting a session security\n                    attributes;\n                ', 'FTA_LSA.1'),
('1', 'fta_lsa.11', 'basic', NULL, '\n                    All attempts at selecting a session security attributes;\n                ', 'FTA_LSA.1'),
('2', 'fta_lsa.12', 'detailed', NULL, '\n                    Capture of the values of each session security attributes.\n                ', 'FTA_LSA.1'),
('0', 'fta_mcs.10', 'minimal', NULL, '\n                    Rejection of a new session based on the limitation of\n                    multiple concurrent sessions.\n                ', 'FTA_MCS.1'),
('1', 'fta_mcs.11', 'detailed', NULL, '\n                    Capture of the number of currently concurrent user sessions\n                    and the user security attribute(s).\n                ', 'FTA_MCS.1'),
('0', 'fta_mcs.20', 'minimal', 'fta_mcs.1', '', 'FTA_MCS.2'),
('1', 'fta_mcs.21', 'detailed', 'fta_mcs.1', '', 'FTA_MCS.2'),
('0', 'fta_ssl.10', 'minimal', NULL, '\n                    Locking of an interactive session by the session locking\n                    mechanism.\n                ', 'FTA_SSL.1'),
('1', 'fta_ssl.11', 'minimal', NULL, '\n                    Successful unlocking of an interactive session.\n                ', 'FTA_SSL.1'),
('2', 'fta_ssl.12', 'basic', NULL, '\n                    Any attempts at unlocking an interactive session.\n                ', 'FTA_SSL.1'),
('0', 'fta_ssl.20', 'minimal', 'fta_ssl.1', '', 'FTA_SSL.2'),
('1', 'fta_ssl.21', 'basic', 'fta_ssl.1', '', 'FTA_SSL.2'),
('0', 'fta_ssl.30', 'minimal', NULL, '\n                    Termination of an interactive session by the session locking\n                    mechanism.\n                ', 'FTA_SSL.3'),
('0', 'fta_tse.10', 'minimal', NULL, '\n                    Denial of a session establishment due to the session\n                    establishment mechanism.\n                ', 'FTA_TSE.1'),
('1', 'fta_tse.11', 'basic', NULL, '\n                    All attempts at establishment of a user session.\n                ', 'FTA_TSE.1'),
('2', 'fta_tse.12', 'detailed', NULL, '\n                    Capture of the value of the selected access parameters\n                    (e.g. location of access, time of access).\n                ', 'FTA_TSE.1'),
('0', 'ftp_itc.10', 'minimal', NULL, '\n                    Failure of the trusted channel functions.\n                ', 'FTP_ITC.1'),
('1', 'ftp_itc.11', 'minimal', NULL, '\n                    Identification of the initiator and target of failed trusted\n                    channel functions.\n                ', 'FTP_ITC.1'),
('2', 'ftp_itc.12', 'basic', NULL, '\n                    All attempted uses of the trusted channel functions.\n                ', 'FTP_ITC.1'),
('3', 'ftp_itc.13', 'basic', NULL, '\n                    Identification of the initiator and target of all trusted\n                    channel functions.\n                ', 'FTP_ITC.1'),
('0', 'ftp_trp.10', 'minimal', NULL, '\n                    Failures of the trusted path functions.\n                ', 'FTP_TRP.1'),
('1', 'ftp_trp.11', 'minimal', NULL, '\n                    Identification of the user associated with all trusted path\n                    failures, if available.\n                ', 'FTP_TRP.1'),
('2', 'ftp_trp.12', 'basic', NULL, '\n                    All attempted uses of the trusted path functions.\n                ', 'FTP_TRP.1'),
('3', 'ftp_trp.13', 'basic', NULL, '\n                    Identification of the user associated with all trusted path\n                    invocations, if available.\n                ', 'FTP_TRP.1');

-- --------------------------------------------------------

--
-- Table structure for table `fcodependencies`
--

CREATE TABLE `fcodependencies` (
  `id` varchar(30) NOT NULL,
  `fcomponent` varchar(10) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcodependencies`
--

INSERT INTO `fcodependencies` (`id`, `fcomponent`, `idf`) VALUES
('FAU_ARP.1FAU_SAA.1', 'FAU_SAA.1', 'FAU_ARP.1'),
('FAU_GEN.1FPT_STM.1', 'FPT_STM.1', 'FAU_GEN.1'),
('FAU_GEN.2FAU_GEN.1', 'FAU_GEN.1', 'FAU_GEN.2'),
('FAU_GEN.2FIA_UID.1', 'FIA_UID.1', 'FAU_GEN.2'),
('FAU_SAA.1FAU_GEN.1', 'FAU_GEN.1', 'FAU_SAA.1'),
('FAU_SAA.2FIA_UID.1', 'FIA_UID.1', 'FAU_SAA.2'),
('FAU_SAR.1FAU_GEN.1', 'FAU_GEN.1', 'FAU_SAR.1'),
('FAU_SAR.2FAU_SAR.1', 'FAU_SAR.1', 'FAU_SAR.2'),
('FAU_SAR.3FAU_SAR.1', 'FAU_SAR.1', 'FAU_SAR.3'),
('FAU_SEL.1FAU_GEN.1', 'FAU_GEN.1', 'FAU_SEL.1'),
('FAU_SEL.1FMT_MTD.1', 'FMT_MTD.1', 'FAU_SEL.1'),
('FAU_STG.1FAU_GEN.1', 'FAU_GEN.1', 'FAU_STG.1'),
('FAU_STG.2FAU_GEN.1', 'FAU_GEN.1', 'FAU_STG.2'),
('FAU_STG.3FAU_STG.1', 'FAU_STG.1', 'FAU_STG.3'),
('FAU_STG.4FAU_STG.1', 'FAU_STG.1', 'FAU_STG.4'),
('FCO_NRO.1FIA_UID.1', 'FIA_UID.1', 'FCO_NRO.1'),
('FCO_NRO.2FIA_UID.1', 'FIA_UID.1', 'FCO_NRO.2'),
('FCO_NRR.1FIA_UID.1', 'FIA_UID.1', 'FCO_NRR.1'),
('FCO_NRR.2FIA_UID.1', 'FIA_UID.1', 'FCO_NRR.2'),
('FCS_CKM.1FCS_CKM.4', 'FCS_CKM.4', 'FCS_CKM.1'),
('FCS_CKM.2FCS_CKM.4', 'FCS_CKM.4', 'FCS_CKM.2'),
('FCS_CKM.3FCS_CKM.4', 'FCS_CKM.4', 'FCS_CKM.3'),
('FCS_COP.1FCS_CKM.4', 'FCS_CKM.4', 'FCS_COP.1'),
('FDP_ACC.1FDP_ACF.1', 'FDP_ACF.1', 'FDP_ACC.1'),
('FDP_ACC.2FDP_ACF.1', 'FDP_ACF.1', 'FDP_ACC.2'),
('FDP_ACF.1FDP_ACC.1', 'FDP_ACC.1', 'FDP_ACF.1'),
('FDP_ACF.1FMT_MSA.3', 'FMT_MSA.3', 'FDP_ACF.1'),
('FDP_DAU.2FIA_UID.1', 'FIA_UID.1', 'FDP_DAU.2'),
('FDP_IFC.1FDP_IFF.1', 'FDP_IFF.1', 'FDP_IFC.1'),
('FDP_IFC.2FDP_IFF.1', 'FDP_IFF.1', 'FDP_IFC.2'),
('FDP_IFF.1FDP_IFC.1', 'FDP_IFC.1', 'FDP_IFF.1'),
('FDP_IFF.1FMT_MSA.3', 'FMT_MSA.3', 'FDP_IFF.1'),
('FDP_IFF.2FDP_IFC.1', 'FDP_IFC.1', 'FDP_IFF.2'),
('FDP_IFF.2FMT_MSA.3', 'FMT_MSA.3', 'FDP_IFF.2'),
('FDP_IFF.3FDP_IFC.1', 'FDP_IFC.1', 'FDP_IFF.3'),
('FDP_IFF.4FDP_IFC.1', 'FDP_IFC.1', 'FDP_IFF.4'),
('FDP_IFF.5FDP_IFC.1', 'FDP_IFC.1', 'FDP_IFF.5'),
('FDP_IFF.6FDP_IFC.1', 'FDP_IFC.1', 'FDP_IFF.6'),
('FDP_ITC.1FMT_MSA.3', 'FMT_MSA.3', 'FDP_ITC.1'),
('FDP_ITC.2FPT_TDC.1', 'FPT_TDC.1', 'FDP_ITC.2'),
('FDP_ITT.3FDP_ITT.1', 'FDP_ITT.1', 'FDP_ITT.3'),
('FDP_ITT.4FDP_ITT.2', 'FDP_ITT.2', 'FDP_ITT.4'),
('FIA_AFL.1FIA_UAU.1', 'FIA_UAU.1', 'FIA_AFL.1'),
('FIA_UAU.1FIA_UID.1', 'FIA_UID.1', 'FIA_UAU.1'),
('FIA_UAU.2FIA_UID.1', 'FIA_UID.1', 'FIA_UAU.2'),
('FIA_UAU.7FIA_UAU.1', 'FIA_UAU.1', 'FIA_UAU.7'),
('FIA_USB.1FIA_ATD.1', 'FIA_ATD.1', 'FIA_USB.1'),
('FMT_MOF.1FMT_SMF.1', 'FMT_SMF.1', 'FMT_MOF.1'),
('FMT_MOF.1FMT_SMR.1', 'FMT_SMR.1', 'FMT_MOF.1'),
('FMT_MSA.1FMT_SMF.1', 'FMT_SMF.1', 'FMT_MSA.1'),
('FMT_MSA.1FMT_SMR.1', 'FMT_SMR.1', 'FMT_MSA.1'),
('FMT_MSA.2FMT_MSA.1', 'FMT_MSA.1', 'FMT_MSA.2'),
('FMT_MSA.2FMT_SMR.1', 'FMT_SMR.1', 'FMT_MSA.2'),
('FMT_MSA.3FMT_MSA.1', 'FMT_MSA.1', 'FMT_MSA.3'),
('FMT_MSA.3FMT_SMR.1', 'FMT_SMR.1', 'FMT_MSA.3'),
('FMT_MTD.1FMT_SMF.1', 'FMT_SMF.1', 'FMT_MTD.1'),
('FMT_MTD.1FMT_SMR.1', 'FMT_SMR.1', 'FMT_MTD.1'),
('FMT_MTD.2FMT_MTD.1', 'FMT_MTD.1', 'FMT_MTD.2'),
('FMT_MTD.2FMT_SMR.1', 'FMT_SMR.1', 'FMT_MTD.2'),
('FMT_MTD.3FMT_MTD.1', 'FMT_MTD.1', 'FMT_MTD.3'),
('FMT_REV.1FMT_SMR.1', 'FMT_SMR.1', 'FMT_REV.1'),
('FMT_SAE.1FMT_SMR.1', 'FMT_SMR.1', 'FMT_SAE.1'),
('FMT_SAE.1FPT_STM.1', 'FPT_STM.1', 'FMT_SAE.1'),
('FMT_SMR.1FIA_UID.1', 'FIA_UID.1', 'FMT_SMR.1'),
('FMT_SMR.2FIA_UID.1', 'FIA_UID.1', 'FMT_SMR.2'),
('FMT_SMR.3FMT_SMR.1', 'FMT_SMR.1', 'FMT_SMR.3'),
('FPR_PSE.2FIA_UID.1', 'FIA_UID.1', 'FPR_PSE.2'),
('FPR_UNO.3FPR_UNO.1', 'FPR_UNO.1', 'FPR_UNO.3'),
('FPT_ITT.3FPT_ITT.1', 'FPT_ITT.1', 'FPT_ITT.3'),
('FPT_PHP.2FMT_MOF.1', 'FMT_MOF.1', 'FPT_PHP.2'),
('FPT_RCV.1AGD_OPE.1', 'AGD_OPE.1', 'FPT_RCV.1'),
('FPT_RCV.2AGD_OPE.1', 'AGD_OPE.1', 'FPT_RCV.2'),
('FPT_RCV.3AGD_OPE.1', 'AGD_OPE.1', 'FPT_RCV.3'),
('FPT_SSP.1FPT_ITT.1', 'FPT_ITT.1', 'FPT_SSP.1'),
('FPT_SSP.2FPT_ITT.1', 'FPT_ITT.1', 'FPT_SSP.2'),
('FPT_TRC.1FPT_ITT.1', 'FPT_ITT.1', 'FPT_TRC.1'),
('FRU_FLT.1FPT_FLS.1', 'FPT_FLS.1', 'FRU_FLT.1'),
('FRU_FLT.2FPT_FLS.1', 'FPT_FLS.1', 'FRU_FLT.2'),
('FTA_MCS.1FIA_UID.1', 'FIA_UID.1', 'FTA_MCS.1'),
('FTA_MCS.2FIA_UID.1', 'FIA_UID.1', 'FTA_MCS.2'),
('FTA_SSL.1FIA_UAU.1', 'FIA_UAU.1', 'FTA_SSL.1'),
('FTA_SSL.2FIA_UAU.1', 'FIA_UAU.1', 'FTA_SSL.2');

-- --------------------------------------------------------

--
-- Table structure for table `fcoevaluatornotes`
--

CREATE TABLE `fcoevaluatornotes` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcoevaluatornotes`
--

INSERT INTO `fcoevaluatornotes` (`type`, `id`, `para`, `idf`) VALUES
('', '', '', 'fco_nrr.2'),
('normal', 'PGFID-270752', 'It is acceptable for the functions for periodic testing to be available only in\n        an off-line or maintenance mode. Controls should be in place to limit access,\n        during maintenance, to authorised users.', 'FPT_TEE.1'),
('normal', 'PGFID-270850', 'Some possible means of satisfying this requirement\n                        involves the use of cryptographic functions or some form\n                        of checksum.', 'FPT_ITI.2'),
('normal', 'PGFID-271031', 'It is acceptable for the functions that are available to\n                        an authorised user for trusted recovery to be available\n                        only in a maintenance mode. Controls should be in place to\n                        limit access during maintenance to authorised users.', 'FPT_RCV.1'),
('normal', 'PGFID-271045', 'It is acceptable for the functions that are available to\n                        an authorised user for trusted recovery to be available\n                        only in a maintenance mode. Controls should be in place to\n                        limit access during maintenance to authorised users.', 'FPT_RCV.2'),
('normal', 'PGFID-271049', 'For, FPT_RCV.2.1, , it is the responsibility of\n                        the developer of the TSF to determine the set of\n                        recoverable failures and service discontinuities.', 'FPT_RCV.2'),
('normal', 'PGFID-271050', 'It is assumed that the robustness of the automated\n                        recovery mechanisms will be verified.', 'FPT_RCV.2'),
('normal', 'PGFID-271076', 'It is acceptable for the functions that are available to\n                        an authorised user for trusted recovery to be available\n                        only in a maintenance mode. Controls should be in place to\n                        limit access during maintenance to authorised users.', 'FPT_RCV.3'),
('normal', 'PGFID-271077', 'It is assumed that the evaluators will verify the\n                        robustness of the automated recovery mechanisms.', 'FPT_RCV.3'),
('normal', 'PGFID-271631', 'It is acceptable for the functions that are available to\n                        the authorised user for periodic testing to be available\n                        only in an off-line or maintenance mode. Controls should\n                        be in place to limit access during these modes to\n                        authorised users.', 'FPT_TST.1'),
('normal', 'PGFID-853012', 'There is a dependency on, FPT_STM, . If correctness of time is not an issue for\n                        this TOE, elimination of this dependency could be\n                        justified.', 'FAU_GEN.1');

-- --------------------------------------------------------

--
-- Table structure for table `fcohierarchical`
--

CREATE TABLE `fcohierarchical` (
  `fcomponent` varchar(10) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcohierarchical`
--

INSERT INTO `fcohierarchical` (`fcomponent`, `idf`) VALUES
('FAU_SAA.3', 'FAU_SAA.4'),
('FAU_STG.1', 'FAU_STG.2'),
('FAU_STG.3', 'FAU_STG.4'),
('FCO_NRO.1', 'FCO_NRO.2'),
('FCO_NRR.1', 'FCO_NRR.2'),
('', 'FCS_COP.1'),
('FDP_ACC.1', 'FDP_ACC.2'),
('FDP_DAU.1', 'FDP_DAU.2'),
('FDP_IFC.1', 'FDP_IFC.2'),
('FDP_IFF.1', 'FDP_IFF.2'),
('FDP_IFF.3', 'FDP_IFF.4'),
('FDP_IFF.4', 'FDP_IFF.5'),
('FDP_ITT.1', 'FDP_ITT.2'),
('FDP_ITT.3', 'FDP_ITT.4'),
('FDP_RIP.1', 'FDP_RIP.2'),
('FDP_ROL.1', 'FDP_ROL.2'),
('FDP_SDI.1', 'FDP_SDI.2'),
('FDP_UIT.2', 'FDP_UIT.3'),
('FIA_UAU.1', 'FIA_UAU.2'),
('FIA_UID.1', 'FIA_UID.2'),
('FMT_SMR.1', 'FMT_SMR.2'),
('FPR_ANO.1', 'FPR_ANO.2'),
('FPR_PSE.1', 'FPR_PSE.2'),
('FPR_UNO.1', 'FPR_UNO.2'),
('FPT_ITI.1', 'FPT_ITI.2'),
('FPT_ITT.1', 'FPT_ITT.2'),
('FPT_PHP.1', 'FPT_PHP.2'),
('FPT_RCV.1', 'FPT_RCV.2'),
('FPT_RCV.2', 'FPT_RCV.3'),
('FPT_SSP.1', 'FPT_SSP.2'),
('FRU_FLT.1', 'FRU_FLT.2'),
('FRU_PRS.1', 'FRU_PRS.2'),
('FRU_RSA.1', 'FRU_RSA.2'),
('FTA_MCS.1', 'FTA_MCS.2');

-- --------------------------------------------------------

--
-- Table structure for table `fcolevelling`
--

CREATE TABLE `fcolevelling` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) DEFAULT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcolevelling`
--

INSERT INTO `fcolevelling` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-114790', 'At, FAU_ARP.1, , the TSF shall take actions in\n                        case a potential security violation is detected.', 'FAU_ARP.1'),
('normal', 'fau_gen.10', ', FAU_GEN.1, defines the level of auditable\n                        events, and specifies the list of data that shall be\n                        recorded in each record.', 'FAU_GEN.1'),
('normal', 'PGFID-114856', 'At, FAU_GEN.2, , the TSF shall associate\n                        auditable events to individual user identities.', 'FAU_GEN.2'),
('normal', 'fau_saa.10', 'In, FAU_SAA.1, , basic threshold\n                        detection on the basis of a fixed rule set is\n                        required.', 'FAU_SAA.1'),
('normal', 'PGFID-114947', 'In, FAU_SAA.2, , the TSF maintains\n                        individual profiles of system usage, where a profile\n                        represents the historical patterns of usage performed by\n                        members of the profile target group. A profile target group\n                        refers to a group of one or more individuals (e.g. a single\n                        user, users who share a group ID or group account, users who\n                        operate under an assigned role, users of an entire system or\n                        network node) who interact with the TSF. Each member of a\n                        profile target group is assigned an individual suspicion\n                        rating that represents how well that member\'s current\n                        activity corresponds to the established patterns of usage\n                        represented in the profile. This analysis can be performed\n                        at runtime or during a post-collection batch-mode\n                        analysis.', 'FAU_SAA.2'),
('normal', 'fau_saa.30', 'In, FAU_SAA.3, , the TSF shall be able\n                        to detect the occurrence of signature events that represent\n                        a significant threat to enforcement of the SFRs. This search\n                        for signature events may occur in real-time or during a\n                        post-collection batch-mode analysis.', 'FAU_SAA.3'),
('normal', 'fau_saa.40', 'In, FAU_SAA.4, , the TSF shall be able to\n                        represent and detect multi-step intrusion scenarios. The\n                        TSF is able to compare system events (possibly performed\n                        by multiple individuals) against event sequences known to\n                        represent entire intrusion scenarios. The TSF shall be\n                        able to indicate when a signature event or event sequence\n                        is found that indicates a potential violation of the\n                        enforcement of the SFRs.', 'FAU_SAA.4'),
('normal', 'fau_sar.10', ', FAU_SAR.1, , provides the capability to read\n                        information from the audit records.', 'FAU_SAR.1'),
('normal', 'fau_sar.20', ', FAU_SAR.2, , requires that there are\n                        no other users except those that have been identified in, FAU_SAR.1, that can read the\n                        information.', 'FAU_SAR.2'),
('normal', 'fau_sar.30', ', FAU_SAR.3, , requires audit review\n                        tools to select the audit data to be reviewed based on\n                        criteria.', 'FAU_SAR.3'),
('normal', 'fau_sel.10', 'In, FAU_SEL.1, , requires the ability to\n                        select the set of events to be audited from the set of all\n                        auditable events, identified in, FAU_GEN.1, , based upon attributes to be specified by the\n                        PP/ST author.', 'FAU_SEL.1'),
('normal', 'PGFID-115283', 'At, FAU_STG.1, , requirements are\n                        placed on the audit trail. It will be protected from\n                        unauthorised deletion and/or modification.', 'FAU_STG.1'),
('normal', 'PGFID-115287', ', FAU_STG.2, , specifies the guarantees\n                        that the TSF maintains over the audit data given the\n                        occurrence of an undesired condition.', 'FAU_STG.2'),
('normal', 'fau_stg.30', ', FAU_STG.3, , specifies actions to be taken if a\n                        threshold on the audit trail is exceeded.', 'FAU_STG.3'),
('normal', 'PGFID-115295', ', FAU_STG.4, , specifies actions in case the\n                        audit trail is full.', 'FAU_STG.4'),
('', '', '', 'fco_nrr.2'),
('normal', 'PGFID-33782', ', FCS_CKM.1, , requires cryptographic keys to be\n                        generated in accordance with a specified algorithm and key\n                        sizes which can be based on an assigned standard.', 'FCS_CKM.1'),
('normal', 'PGFID-35233', ', FCS_CKM.2, , requires cryptographic keys to be\n                        distributed in accordance with a specified distribution\n                        method which can be based on an assigned standard.', 'FCS_CKM.2'),
('normal', 'fcs_ckm.30', ', FCS_CKM.3, , requires access to cryptographic\n                        keys to be performed in accordance with a specified access\n                        method which can be based on an assigned standard.', 'FCS_CKM.3'),
('normal', 'PGFID-35263', ', FCS_CKM.4, , requires cryptographic keys to be\n                        destroyed in accordance with a specified destruction\n                        method which can be based on an assigned standard.', 'FCS_CKM.4'),
('normal', 'PGFID-34027', ', FCS_COP.1, , requires a cryptographic operation\n                        to be performed in accordance with a specified algorithm\n                        and with a cryptographic key of specified sizes. The\n                        specified algorithm and cryptographic key sizes can be\n                        based on an assigned standard.', 'FCS_COP.1'),
('normal', 'PGFID-38853', ', FDP_ACC.1, , requires that each identified\n                        access control SFP be in place for a subset of the\n                        possible operations on a subset of the objects in the TOE.', 'FDP_ACC.1'),
('normal', 'PGFID-35554', ', FDP_ACC.2, , requires that each identified\n                        access control SFP cover all operations on subjects and\n                        objects covered by that SFP. It further requires that all\n                        objects and operations protected by the TSF are covered by at\n                        least one identified access control SFP.', 'FDP_ACC.2'),
('normal', 'PGFID-39176', 'This family addresses security attribute usage and\n                        characteristics of policies. The component within this\n                        family is meant to be used to describe the rules for the\n                        function that implements the SFP as identified in, FDP_ACC, . The PP/ST author may also\n                        iterate this component to address multiple policies in the\n                        TOE.', 'FDP_ACF.1'),
('normal', 'PGFID-38867', ', FDP_ACF.1, Security attribute\n                        based access control allows the TSF to enforce access\n                        based upon security attributes and named groups of\n                        attributes.  Furthermore, the TSF may have the ability to\n                        explicitly authorise or deny access to an object based\n                        upon security attributes.', 'FDP_ACF.1'),
('normal', 'PGFID-33012', ', FDP_DAU.1, , requires that the TSF is capable\n                        of generating a guarantee of authenticity of the\n                        information content of objects (e.g. documents).', 'FDP_DAU.1'),
('normal', 'PGFID-35140', ', FDP_DAU.2, additionally requires that the TSF\n                        is capable of establishing the identity of the subject who\n                        provided the guarantee of authenticity.', 'FDP_DAU.2'),
('normal', 'PGFID-33070', ', FDP_ETC.1, , requires that the TSF enforce the\n                        appropriate SFPs when exporting user data outside the\n                        TSF. User data that is exported by this function is\n                        exported without its associated security attributes.', 'FDP_ETC.1'),
('normal', 'PGFID-35727', ', FDP_ETC.2, , requires that the TSF enforce the\n                        appropriate SFPs using a function that accurately and\n                        unambiguously associates security attributes with the user\n                        data that is exported.', 'FDP_ETC.2'),
('normal', 'fdp_ifc.10', ', FDP_IFC.1, , requires that each identified\n                        information flow control SFPs be in place for a subset of\n                        the possible operations on a subset of information flows\n                        in the TOE.', 'FDP_IFC.1'),
('normal', 'PGFID-33166', ', FDP_IFC.2, , requires that each identified\n                        information flow control SFP cover all operations on\n                        subjects and information covered by that SFP. It further\n                        requires that all information flows and operations controlled\n                        by the TSF are covered by at least one identified information\n                        flow control SFP.', 'FDP_IFC.2'),
('normal', 'PGFID-39198', ', FDP_IFF.1, , requires security attributes on\n                        information, and on subjects that cause that information\n                        to flow and on subjects that act as recipients of that\n                        information. It specifies the rules that must be enforced\n                        by the function, and describes how security attributes are\n                        derived by the function.', 'FDP_IFF.1'),
('normal', 'fdp_iff.20', 'expands on the requirements\n                        of, FDP_IFF.2, by requiring that all\n                        information flow control SFPs in the set of SFRs use\n                        hierarchical security attributes that form a lattice (as defined\n                        in mathematics)., FDP_IFF.1, is derived from the\n                        mathematical properties of a lattice. A lattice consists of a\n                        set of elements with an ordering relationship with the property\n                        defined in the first bullet, a least upper bound which is the\n                        unique element in the set that is greater or equal (in the\n                        ordering relationship) than any other element of the lattice,\n                        and a greatest lower bound, which is the unique element in the set\n                        that is smaller or equal than any other element of the lattice., FDP_IFF.2.6', 'FDP_IFF.2'),
('normal', 'PGFID-33271', ', FDP_IFF.3, , requires the SFP to cover illicit\n                        information flows, but not necessarily eliminate them.', 'FDP_IFF.3'),
('normal', 'PGFID-33275', ', FDP_IFF.4, , requires the SFP to cover the\n                        elimination of some (but not necessarily all) illicit\n                        information flows.', 'FDP_IFF.4'),
('normal', 'PGFID-33279', ', FDP_IFF.5, , requires SFP to cover the\n                        elimination of all illicit information flows.', 'FDP_IFF.5'),
('normal', 'PGFID-39346', ', FDP_IFF.6, , requires the SFP to monitor\n                        illicit information flows for specified and maximum\n                        capacities.', 'FDP_IFF.6'),
('normal', 'PGFID-33459', ', FDP_ITC.1, , requires that the security\n                        attributes correctly represent the user data and are\n                        supplied separately from the object.', 'FDP_ITC.1'),
('normal', 'PGFID-33463', ', FDP_ITC.2, , requires that security attributes\n                        correctly represent the user data and are accurately and\n                        unambiguously associated with the user data imported from\n                        outside the TOE.', 'FDP_ITC.2'),
('normal', 'PGFID-33583', ', FDP_ITT.2, , requires separation of data based\n                        on the value of SFP-relevant attributes in addition to the\n                        first component.', 'FDP_ITT.2'),
('normal', 'PGFID-33587', ', FDP_ITT.3, , requires that the TSF monitor user\n                        data transmitted between parts of the TOE for identified\n                        integrity errors.', 'FDP_ITT.3'),
('normal', 'PGFID-33591', ', FDP_ITT.4, expands on the third component by\n                        allowing the form of integrity monitoring to differ by\n                        SFP-relevant attribute.', 'FDP_ITT.4'),
('normal', 'fdp_rip.10', ', FDP_RIP.1, , requires that the TSF\n                        ensure that any residual information content of any\n                        resources is unavailable to a defined subset of the\n                        objects controlled by the TSF upon the resource\'s\n                        allocation or deallocation.', 'FDP_RIP.1'),
('normal', 'fdp_rip.20', ', FDP_RIP.2, , requires that the TSF ensure that\n                        any residual information content of any resources is\n                        unavailable to all objects upon the resource\'s\n                        allocation or deallocation.', 'FDP_RIP.2'),
('normal', 'fdp_rol.10', ', FDP_ROL.1, addresses a need to roll back or\n                        undo a limited number of operations within the defined\n                        bounds.', 'FDP_ROL.1'),
('normal', 'PGFID-33786', ', FDP_ROL.2, addresses the need to roll back or\n                        undo all operations within the defined bounds.', 'FDP_ROL.2'),
('normal', 'PGFID-34058', ', FDP_SDI.1, , requires that the TSF monitor user\n                        data stored within containers controlled by the TSF for identified integrity\n                        errors.', 'FDP_SDI.1'),
('normal', 'PGFID-34062', ', FDP_SDI.2, adds the additional capability to\n                        the first component by allowing for actions to be taken as\n                        a result of an error detection.', 'FDP_SDI.2'),
('normal', 'fdp_uct.10', 'In, FDP_UCT.1, , the goal is to provide\n                        protection from disclosure of user data while in transit.', 'FDP_UCT.1'),
('normal', 'fdp_uit.10', ', FDP_UIT.1, addresses detection of\n                        modifications, deletions, insertions, and replay errors of\n                        the user data transmitted.', 'FDP_UIT.1'),
('normal', 'fdp_uit.20', ', FDP_UIT.2, addresses recovery of the original\n                        user data by the receiving TSF with help from the source\n                        trusted IT product.', 'FDP_UIT.2'),
('normal', 'fdp_uit.30', ', FDP_UIT.3, addresses recovery of the original\n                        user data by the receiving TSF on its own without any help\n                        from the source trusted IT product.', 'FDP_UIT.3'),
('normal', 'fia_afl.10', ', FIA_AFL.1, , requires that the TSF be able to\n                        terminate the session establishment process after a\n                        specified number of unsuccessful user authentication\n                        attempts. It also requires that, after termination of the\n                        session establishment process, the TSF be able to disable\n                        the user account or the point of entry (e.g. workstation)\n                        from which the attempts were made until an\n                        administrator-defined condition occurs.', 'FIA_AFL.1'),
('normal', 'fia_atd.10', ', FIA_ATD.1, , allows user security attributes\n                        for each user to be maintained individually.', 'FIA_ATD.1'),
('normal', 'fia_sos.10', ', FIA_SOS.1, , requires the TSF to verify that\n                        secrets meet defined quality metrics.', 'FIA_SOS.1'),
('normal', 'fia_sos.20', ', FIA_SOS.2, , requires the TSF to be able to\n                        generate secrets that meet defined quality metrics.', 'FIA_SOS.2'),
('normal', 'fia_uau.10', ', FIA_UAU.1, , allows a user to perform certain\n                        actions prior to the authentication of the\n                        user\'s identity.', 'FIA_UAU.1'),
('normal', 'fia_uau.20', ', requires that users are\n                        authenticated before any other action will be allowed by the TSF.', 'FIA_UAU.2'),
('normal', 'fia_uau.30', ', FIA_UAU.3, Unforgeable authentication,\n                        requires the authentication mechanism to be able to detect\n                        and prevent the use of authentication data that has been\n                        forged or copied.', 'FIA_UAU.3'),
('normal', 'PGFID-11297', ', FIA_UAU.4, , requires an authentication\n                        mechanism that operates with single-use authentication\n                        data.', 'FIA_UAU.4'),
('normal', 'PGFID-11301', ', FIA_UAU.5, , requires that different\n                        authentication mechanisms be provided and used to\n                        authenticate user identities for specific events.', 'FIA_UAU.5'),
('normal', 'PGFID-11305', ', FIA_UAU.6, , requires the ability to specify\n                        events for which the user needs to be re-authenticated.', 'FIA_UAU.6'),
('normal', 'PGFID-11309', ', FIA_UAU.7, , requires that only limited\n                        feedback information is provided to the user during the\n                        authentication.', 'FIA_UAU.7'),
('normal', 'PGFID-11488', ', FIA_UID.1, , allows users to perform certain\n                        actions before being identified by the TSF.', 'FIA_UID.1'),
('normal', 'PGFID-11492', ', FIA_UID.2, , requires that users identify\n                        themselves before any other action will be allowed by the TSF.', 'FIA_UID.2'),
('normal', 'fia_usb.10', ', requires the specification of any rules\n                governing the association between user attributes and the\n                subject attributes into which they are mapped.', 'FIA_USB.1'),
('normal', 'PGFID-12095', ', FMT_MOF.1, allows the authorised users (roles)\n                        to manage the behaviour of functions in the TSF that use\n                        rules or have specified conditions that may be manageable.', 'FMT_MOF.1'),
('normal', 'PGFID-11050', ', FMT_MSA.1, allows authorised users (roles) to\n                        manage the specified security attributes.', 'FMT_MSA.1'),
('normal', 'fmt_msa.20', ', FMT_MSA.2, ensures that values assigned to\n                        security attributes are valid with respect to the secure\n                        state.', 'FMT_MSA.2'),
('normal', 'PGFID-11894', ', FMT_MSA.3, ensures that the default values of\n                        security attributes are appropriately either permissive or\n                        restrictive in nature.', 'FMT_MSA.3'),
('normal', 'fmt_msa.40', 'allows the rules/policies\n            to be specified that will dictate the value to be inherited\n            by a security attribute.', 'FMT_MSA.4'),
('normal', 'PGFID-11136', ', FMT_MTD.1, allows authorised users to manage\n                        TSF data.', 'FMT_MTD.1'),
('normal', 'PGFID-11140', ', FMT_MTD.2, specifies the action to be taken if\n                        limits on TSF data are reached or exceeded.', 'FMT_MTD.2'),
('normal', 'PGFID-11144', ', FMT_MTD.3, ensures that values assigned to TSF\n                        data are valid with respect to the secure state.', 'FMT_MTD.3'),
('normal', 'PGFID-11529', ', FMT_REV.1, provides for revocation of security\n                        attributes to be enforced at some point in time.', 'FMT_REV.1'),
('normal', 'fmt_smf.10', 'requires that the TSF provide\n        specific management functions.', 'FMT_SMF.1'),
('normal', 'PGFID-11306', ', FMT_SMR.1, specifies the roles with respect to\n                        security that the TSF recognises.', 'FMT_SMR.1'),
('normal', 'PGFID-11310', ', FMT_SMR.2, specifies that in addition to the\n                        specification of the roles, there are rules that control\n                        the relationship between the roles.', 'FMT_SMR.2'),
('normal', 'PGFID-11314', ', FMT_SMR.3, , requires that an explicit request\n                        is given to the TSF to assume a role.', 'FMT_SMR.3'),
('normal', 'PGFID-10855', ', FPR_ANO.1, , requires that other users or\n                        subjects are unable to determine the identity of a user\n                        bound to a subject or operation.', 'FPR_ANO.1'),
('normal', 'PGFID-10862', ', FPR_ANO.2, enhances the\n                        requirements of, FPR_ANO.1, by\n                        ensuring that the TSF does not ask for the user\n                        identity.', 'FPR_ANO.2'),
('normal', 'fpr_pse.10', ', FPR_PSE.1, requires that a set of users and/or\n                        subjects are unable to determine the identity of a user\n                        bound to a subject or operation, but that this user is\n                        still accountable for its actions.', 'FPR_PSE.1'),
('normal', 'PGFID-10930', ', FPR_PSE.2, , requires the TSF to provide a\n                        capability to determine the original user identity based\n                        on a provided alias.', 'FPR_PSE.2'),
('normal', 'PGFID-10934', ', FPR_PSE.3, , requires the TSF to\n                        follow certain construction rules for the alias to the user\n                        identity.', 'FPR_PSE.3'),
('normal', 'PGFID-11010', ', FPR_UNL.1, , requires that users and/or subjects\n                        are unable to determine whether the same user caused\n                        certain specific operations.', 'FPR_UNL.1'),
('normal', 'PGFID-11054', ', FPR_UNO.1, , requires that users and/or\n                        subjects cannot determine whether an operation is being\n                        performed.', 'FPR_UNO.1'),
('normal', 'PGFID-12335', ', FPR_UNO.2, , requires that the TSF\n                        provide specific mechanisms to avoid the concentration of\n                        privacy related information within the TOE. Such\n                        concentrations might impact unobservability if a security\n                        compromise occurs.', 'FPR_UNO.2'),
('normal', 'PGFID-12349', ', FPR_UNO.3, , requires that the TSF\n                        does not try to obtain privacy related information that\n                        might be used to compromise unobservability.', 'FPR_UNO.3'),
('normal', 'PGFID-11058', ', FPR_UNO.4, , requires the TSF to\n                        provide one or more authorised users with a capability to\n                        observe the usage of resources and/or services.', 'FPR_UNO.4'),
('normal', 'PGFID-21294', 'This family consists of only one component,, FPT_FLS.1, , which requires that the TSF preserve a\n                        secure state in the face of the identified failures.', 'FPT_FLS.1'),
('normal', 'fpt_iti.10', ', provides the ability to detect\n                        modification of TSF data during transmission between the\n                        TSF and another trusted IT product, under the assumption\n                        that another trusted IT product is cognisant of the mechanism used.', 'FPT_ITI.1'),
('normal', 'fpt_iti.20', ', provides the ability for\n                        another trusted IT product not only to detect modification,\n                        but to correct modified TSF data under the assumption that\n                        another trusted IT product is cognisant of the mechanism used.', 'FPT_ITI.2'),
('normal', 'PGFID-21468', ', FPT_ITT.2, , requires that the TSF separate\n                        user data from TSF data during transmission.', 'FPT_ITT.2'),
('normal', 'PGFID-26559', ', FPT_PHP.1, , provides for features that\n                        indicate when a TSF device or TSF element is subject to\n                        tampering. However, notification of tampering is not\n                        automatic; an authorised user must invoke a security\n                        administrative function or perform manual inspection to\n                        determining if tampering has occurred.', 'FPT_PHP.1'),
('normal', 'PGFID-21548', ', FPT_PHP.2, , provides for automatic\n                        notification of tampering for an identified subset of\n                        physical penetrations.', 'FPT_PHP.2'),
('normal', 'PGFID-21552', ', FPT_PHP.3, , provides for features that prevent\n                        or resist physical tampering with TSF devices and TSF\n                        elements.', 'FPT_PHP.3'),
('normal', 'PGFID-26784', ', FPT_RCV.1, , allows a TOE to only provide\n                        mechanisms that involve human intervention to return to a\n                        secure state.', 'FPT_RCV.1'),
('normal', 'PGFID-21674', ', FPT_RCV.2, , provides, for at least one type of\n                        service discontinuity, recovery to a secure state without\n                        human intervention; recovery for other discontinuities may\n                        require human intervention.', 'FPT_RCV.2'),
('normal', 'PGFID-21678', ', FPT_RCV.3, , also provides for automated\n                        recovery, but strengthens the requirements by disallowing\n                        undue loss of protected objects.', 'FPT_RCV.3'),
('normal', 'PGFID-21682', ', FPT_RCV.4, , provides for recovery at the level\n                        of particular functions, ensuring either successful completion\n                        or rollback of TSF data to a secure state.', 'FPT_RCV.4'),
('normal', 'PGFID-21860', 'The family consists of only one component,, FPT_RPL.1, , which requires that the TSF shall be\n                        able to detect the replay of identified entities.', 'FPT_RPL.1'),
('normal', 'PGFID-22085', ', FPT_SSP.1, , requires only a simple\n                        acknowledgment by the data recipient.', 'FPT_SSP.1'),
('normal', 'PGFID-22089', ', FPT_SSP.2, , requires mutual acknowledgment of\n                        the data exchange.', 'FPT_SSP.2'),
('normal', 'PGFID-22143', 'This family consists of only one component,, FPT_STM.1, , which requires that the TSF provide\n                        reliable time stamps for TSF functions.', 'FPT_STM.1'),
('normal', 'PGFID-27306', ', FPT_TDC.1, , requires that the TSF provide the\n                        capability to ensure consistency of attributes between\n                        TSFs.', 'FPT_TDC.1'),
('normal', 'PGFID-21230', ', provides for testing of the\n        external entities by the TSF.', 'FPT_TEE.1'),
('normal', 'fpt_tst.10', ', provides the ability to test the\n                        TSF\'s correct operation. These tests may be\n                        performed at start-up, periodically, at the request of the\n                        authorised user, or when other conditions are met. It also\n                        provides the ability to verify the integrity of TSF data\n                        and TSF itself.', 'FPT_TST.1'),
('normal', 'PGFID-4182', ', FRU_FLT.1, , requires the TOE to continue\n                        correct operation of identified capabilities in the event\n                        of identified failures.', 'FRU_FLT.1'),
('normal', 'PGFID-4186', ', FRU_FLT.2, , requires the TOE to continue\n                        correct operation of all capabilities in the event of\n                        identified failures.', 'FRU_FLT.2'),
('normal', 'PGFID-4267', ', FRU_PRS.1, , provides priorities for a\n                        subject\'s use of a subset of the resources\n                        under the control of the TSF.', 'FRU_PRS.1'),
('normal', 'PGFID-4271', ', FRU_PRS.2, , provides priorities for a\n                        subject\'s use of all of the resources under the control of the TSF.', 'FRU_PRS.2'),
('normal', 'PGFID-4374', ', FRU_RSA.1, , provides requirements for quota\n                        mechanisms that ensure that users and subjects will not\n                        monopolise a controlled resource.', 'FRU_RSA.1'),
('normal', 'PGFID-4378', ', FRU_RSA.2, , provides requirements for quota\n                        mechanisms that ensure that users and subjects will always\n                        have at least a minimum of a specified resource and that\n                        they will not be able to monopolise a controlled resource.', 'FRU_RSA.2'),
('normal', 'PGFID-5409', ', FTA_MCS.1, , provides limitations that apply to\n                        all users of the TSF.', 'FTA_MCS.1'),
('normal', 'PGFID-5413', ', FTA_MCS.2, extends, FTA_MCS.1, by\n                        requiring the ability to specify limitations on the number\n                        of concurrent sessions based on the related security\n                        attributes.', 'FTA_MCS.2'),
('normal', 'PGFID-5506', ', FTA_SSL.1, includes system initiated locking\n                        of an interactive session after a specified period of user\n                        inactivity.', 'FTA_SSL.1'),
('normal', 'PGFID-5510', ', FTA_SSL.2, , provides capabilities for the user\n                        to lock and unlock the user\'s own interactive\n                        sessions.', 'FTA_SSL.2'),
('normal', 'PGFID-5514', ', provides requirements for\n                        the TSF to terminate the session after a specified period of\n                        user inactivity.', 'FTA_SSL.3'),
('normal', 'fta_ssl.40', ', FTA_SSL.4, , provides capabilities for the user\n            to terminate the user\'s own interactive sessions.', 'FTA_SSL.4'),
('normal', 'PGFID-5598', ', FTA_TAB.1, , provides the requirement for a TOE\n                        Access Banner. This banner is displayed prior to the\n                        establishment dialogue for a session.', 'FTA_TAB.1'),
('normal', 'PGFID-5652', ', FTA_TAH.1, , provides the requirement for a TOE\n                        to display information related to previous attempts to\n                        establish a session.', 'FTA_TAH.1'),
('normal', 'PGFID-318', ', FTP_ITC.1, , requires that the TSF provide a\n                        trusted communication channel between itself and another\n                        trusted IT product.', 'FTP_ITC.1'),
('normal', 'PGFID-364', ', FTP_TRP.1, , requires that a trusted path\n                        between the TSF and a user be provided for a set of events\n                        defined by a PP/ST author. The user and/or the TSF may\n                        have the ability to initiate the trusted path.', 'FTP_TRP.1');

-- --------------------------------------------------------

--
-- Table structure for table `fcomanagement`
--

CREATE TABLE `fcomanagement` (
  `num` varchar(2) DEFAULT NULL,
  `id` varchar(20) NOT NULL,
  `equal` varchar(50) DEFAULT NULL,
  `text` varchar(500) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcomanagement`
--

INSERT INTO `fcomanagement` (`num`, `id`, `equal`, `text`, `idf`) VALUES
('0', 'FAU_ARP.10', '', '\n                    the management (addition, removal, or modification) of\n                    actions.\n                ', 'FAU_ARP.1'),
('0', 'FAU_SAA.10', '', '\n                    maintenance of the rules by (adding, modifying, deletion)\n                    of rules from the set of rules.\n                ', 'FAU_SAA.1'),
('0', 'FAU_SAA.20', '', '\n                    maintenance (deletion, modification, addition) of the\n                    group of users in the profile target group.\n                ', 'FAU_SAA.2'),
('0', 'FAU_SAA.30', '', '\n                    maintenance (deletion, modification, addition) of the subset\n                    of system events.\n                ', 'FAU_SAA.3'),
('0', 'FAU_SAA.40', '', '\n                    maintenance (deletion, modification, addition) of the subset\n                    of system events;\n                ', 'FAU_SAA.4'),
('1', 'FAU_SAA.41', '', '\n                    maintenance (deletion, modification, addition) of the set of\n                    sequence of system events.\n                ', 'FAU_SAA.4'),
('0', 'FAU_SAR.10', '', '\n                    maintenance (deletion, modification, addition) of the group\n                    of users with read access right to the audit records.\n                ', 'FAU_SAR.1'),
('0', 'FAU_SEL.10', '', '\n                    maintenance of the rights to view/modify the audit events.\n                ', 'FAU_SEL.1'),
('0', 'FAU_STG.20', '', '\n                    maintenance of the parameters that control the audit storage\n                    capability.\n                ', 'FAU_STG.2'),
('0', 'FAU_STG.30', '', '\n                    maintenance of the threshold;\n                ', 'FAU_STG.3'),
('1', 'FAU_STG.31', '', '\n                    maintenance (deletion, modification, addition) of actions to\n                    be taken in case of imminent audit storage failure.\n                ', 'FAU_STG.3'),
('0', 'FAU_STG.40', '', '\n                    maintenance (deletion, modification, addition) of actions to\n                    be taken in case of audit storage failure.\n                ', 'FAU_STG.4'),
('0', 'FCO_NRO.10', '', '\n                    The management of changes to information types, fields,\n                    originator attributes and recipients of evidence.\n                ', 'FCO_NRO.1'),
('0', 'FCO_NRO.20', 'fco_nro.1', '', 'FCO_NRO.2'),
('0', 'FCO_NRR.10', '', '\n                    The management of changes to information types, fields,\n                    originator attributes and third parties recipients of\n                    evidence.\n                ', 'FCO_NRR.1'),
('0', 'FCO_NRR.20', 'fco_nrr.1', '', 'FCO_NRR.2'),
('0', 'FDP_ACF.10', '', '\n                    Managing the attributes used to make explicit access or\n                    denial based decisions.\n                ', 'FDP_ACF.1'),
('0', 'FDP_DAU.10', '', '\n                    The assignment or modification of the objects for which data\n                    authentication may apply could be configurable.\n                ', 'FDP_DAU.1'),
('0', 'FDP_DAU.20', 'fdp_dau.1', '', 'FDP_DAU.2'),
('0', 'FDP_ETC.20', '', '\n                    The additional exportation control rules could be\n                    configurable by a user in a defined role.\n                ', 'FDP_ETC.2'),
('0', 'FDP_IFF.10', '', '\n                    Managing the attributes used to make explicit access based\n                    decisions.\n                ', 'FDP_IFF.1'),
('0', 'FDP_IFF.20', 'fdp_iff.1', '', 'FDP_IFF.2'),
('0', 'FDP_IFF.60', '', '\n                    The enabling or disabling of the monitoring function.\n                ', 'FDP_IFF.6'),
('1', 'FDP_IFF.61', '', '\n                    Modification of the maximum capacity at which the monitoring\n                    occurs.\n                ', 'FDP_IFF.6'),
('0', 'FDP_ITC.10', '', '\n                    The modification of the additional control rules used for\n                    import.\n                ', 'FDP_ITC.1'),
('0', 'FDP_ITC.20', 'fdp_itc.1', '', 'FDP_ITC.2'),
('0', 'FDP_ITT.10', '', '\n                    If the TSF provides multiple methods to protect user data\n                    during transmission between physically separated parts of\n                    the TOE, the TSF could provide a pre-defined role with the\n                    ability to select the method that will be used.\n                ', 'FDP_ITT.1'),
('0', 'FDP_ITT.20', 'fdp_itt.1', '', 'FDP_ITT.2'),
('0', 'FDP_ITT.30', '', '\n                    The specification of the actions to be taken upon detection\n                    of an integrity error could be configurable.\n                ', 'FDP_ITT.3'),
('0', 'FDP_ITT.40', 'fdp_itt.3', '', 'FDP_ITT.4'),
('0', 'FDP_RIP.10', '', '\n                    The choice of when to perform residual information\n                    protection (i.e. upon allocation or deallocation) could be\n                    made configurable within the TOE.\n                ', 'FDP_RIP.1'),
('0', 'FDP_RIP.20', 'fdp_rip.1', '', 'FDP_RIP.2'),
('0', 'FDP_ROL.10', '', '\n                    The boundary limit to which rollback may be performed could\n                    be a configurable item within the TOE.\n                ', 'FDP_ROL.1'),
('1', 'FDP_ROL.11', '', '\n                    Permission to perform a rollback operation could be\n                    restricted to a well defined role.\n                ', 'FDP_ROL.1'),
('0', 'FDP_ROL.20', 'fdp_rol.1', '', 'FDP_ROL.2'),
('0', 'FDP_SDI.20', '', '\n                    The actions to be taken upon the detection of an integrity\n                    error could be configurable.\n                ', 'FDP_SDI.2'),
('0', 'FIA_AFL.10', '', '\n                    management of the threshold for unsuccessful authentication\n                    attempts;\n                ', 'FIA_AFL.1'),
('1', 'FIA_AFL.11', '', '\n                    management of actions to be taken in the event of an\n                    authentication failure.\n                ', 'FIA_AFL.1'),
('0', 'FIA_ATD.10', '', '\n                    if so indicated in the assignment, the authorised\n                    administrator might be able to define additional security\n                    attributes for users.\n                ', 'FIA_ATD.1'),
('0', 'FIA_SOS.10', '', '\n                    the management of the metric used to verify the secrets.\n                ', 'FIA_SOS.1'),
('0', 'FIA_SOS.20', '', '\n                    the management of the metric used to generate the secrets.\n                ', 'FIA_SOS.2'),
('0', 'FIA_UAU.10', '', '\n                    management of the authentication data by an administrator;\n                ', 'FIA_UAU.1'),
('1', 'FIA_UAU.11', '', '\n                    management of the authentication data by the associated\n                    user;\n                ', 'FIA_UAU.1'),
('2', 'FIA_UAU.12', '', '\n                    managing the list of actions that can be taken before the\n                    user is authenticated.\n                ', 'FIA_UAU.1'),
('0', 'FIA_UAU.20', '', '\n                    management of the authentication data by an administrator;\n                ', 'FIA_UAU.2'),
('1', 'FIA_UAU.21', '', '\n                    management of the authentication data by the user associated\n                    with this data.\n                ', 'FIA_UAU.2'),
('0', 'FIA_UAU.50', '', '\n                    the management of authentication mechanisms;\n                ', 'FIA_UAU.5'),
('1', 'FIA_UAU.51', '', '\n                    the management of the rules for authentication.\n                ', 'FIA_UAU.5'),
('0', 'FIA_UAU.60', '', '\n                    if an authorised administrator could request\n                    re-authentication, the management includes a\n                    re-authentication request.\n                ', 'FIA_UAU.6'),
('0', 'FIA_UID.10', '', '\n                    the management of the user identities;\n                ', 'FIA_UID.1'),
('1', 'FIA_UID.11', '', '\n                    if an authorised administrator can change the actions\n                    allowed before identification, the managing of the action\n                    lists.\n                ', 'FIA_UID.1'),
('0', 'FIA_UID.20', '', '\n                    the management of the user identities.\n                ', 'FIA_UID.2'),
('0', 'FIA_USB.10', '', '\n                an authorised administrator can define default subject security\n                attributes.\n            ', 'FIA_USB.1'),
('1', 'FIA_USB.11', '', '\n                an authorised administrator can change subject security\n                attributes.\n            ', 'FIA_USB.1'),
('0', 'FMT_MOF.10', '', '\n                    managing the group of roles that can interact with the\n                    functions in the TSF;\n                ', 'FMT_MOF.1'),
('0', 'FMT_MSA.10', '', '\n                    managing the group of roles that can interact with the\n                    security attributes;\n                ', 'FMT_MSA.1'),
('1', 'FMT_MSA.11', '', '\n                management of rules by which security attributes inherit\n                specified values.\n            ', 'FMT_MSA.1'),
('0', 'FMT_MSA.20', '', '\n                management of rules by which security attributes inherit\n                specified values.\n            ', 'FMT_MSA.2'),
('0', 'FMT_MSA.30', '', '\n                    managing the group of roles that can specify initial values;\n                ', 'FMT_MSA.3'),
('1', 'FMT_MSA.31', '', '\n                    managing the permissive or restrictive setting of default values\n                    for a given access control SFP;\n                ', 'FMT_MSA.3'),
('2', 'FMT_MSA.32', '', '\n                management of rules by which security attributes inherit specified values.\n            ', 'FMT_MSA.3'),
('0', 'FMT_MSA.40', '', '\n            specification of the role permitted to establish or modify\n            security attributes.\n        ', 'FMT_MSA.4'),
('0', 'FMT_MTD.10', '', '\n                    managing the group of roles that can interact with the TSF\n                    data.\n                ', 'FMT_MTD.1'),
('0', 'FMT_MTD.20', '', '\n                    managing the group of roles that can interact with the\n                    limits on the TSF data.\n                ', 'FMT_MTD.2'),
('0', 'FMT_REV.10', '', '\n                    managing the group of roles that can invoke revocation of\n                    security attributes;\n                ', 'FMT_REV.1'),
('1', 'FMT_REV.11', '', '\n                    managing the lists of users, subjects, objects and other\n                    resources for which revocation is possible;\n                ', 'FMT_REV.1'),
('2', 'FMT_REV.12', '', '\n                    managing the revocation rules.\n                ', 'FMT_REV.1'),
('0', 'FMT_SAE.10', '', '\n                    managing the list of security attributes for which\n                    expiration is to be supported;\n                ', 'FMT_SAE.1'),
('1', 'FMT_SAE.11', '', '\n                    the actions to be taken if the expiration time has passed.\n                ', 'FMT_SAE.1'),
('0', 'FMT_SMR.10', '', '\n                    managing the group of users that are part of a role.\n                ', 'FMT_SMR.1'),
('0', 'FMT_SMR.20', '', '\n                    managing the group of users that are part of a role;\n                ', 'FMT_SMR.2'),
('1', 'FMT_SMR.21', '', '\n                    managing the conditions that the roles must satisfy.\n                ', 'FMT_SMR.2'),
('0', 'FPR_UNL.10', '', '\n                    the management of the unlinkability function.\n                ', 'FPR_UNL.1'),
('0', 'FPR_UNO.10', '', '\n                    the management of the behaviour of the unobservability\n                    function.\n                ', 'FPR_UNO.1'),
('0', 'FPR_UNO.20', 'fpr_uno.1', '', 'FPR_UNO.2'),
('0', 'FPR_UNO.40', '', '\n                    the list of authorised users that are capable of determining\n                    the occurrence of operations.\n                ', 'FPR_UNO.4'),
('0', 'FPT_ITA.10', '', '\n                    management of the list of types of TSF data that must be\n                    available to another trusted IT product.\n                ', 'FPT_ITA.1'),
('0', 'FPT_ITI.20', '', '\n                    management of the types of TSF data that the TSF should try\n                    to correct if modified in transit;\n                ', 'FPT_ITI.2'),
('1', 'FPT_ITI.21', '', '\n                    management of the types of action that the TSF could take if\n                    TSF data is modified in transit.\n                ', 'FPT_ITI.2'),
('0', 'FPT_ITT.10', '', '\n                    management of the types of modification against which the\n                    TSF should protect;\n                ', 'FPT_ITT.1'),
('1', 'FPT_ITT.11', '', '\n                    management of the mechanism used to provide the protection\n                    of the data in transit between different parts of the TSF.\n                ', 'FPT_ITT.1'),
('0', 'FPT_ITT.20', '', '\n                    management of the types of modification against which the\n                    TSF should protect;\n                ', 'FPT_ITT.2'),
('1', 'FPT_ITT.21', '', '\n                    management of the mechanism used to provide the protection\n                    of the data in transit between different parts of the TSF;\n                ', 'FPT_ITT.2'),
('2', 'FPT_ITT.22', '', '\n                    management of the separation mechanism.\n                ', 'FPT_ITT.2'),
('0', 'FPT_ITT.30', '', '\n                    writerFcoEvaluatorNotes()\n                ', 'FPT_ITT.3'),
('1', 'FPT_ITT.31', '', '\n                    management of the mechanism used to provide the protection\n                    of the data in transit between different parts of the TSF;\n                ', 'FPT_ITT.3'),
('2', 'FPT_ITT.32', '', '\n                    management of the types of modification of TSF data the TSF\n                    should try to detect;\n                ', 'FPT_ITT.3'),
('3', 'FPT_ITT.33', '', '\n                    management of the action>s that will be taken.\n                ', 'FPT_ITT.3'),
('0', 'FPT_PHP.10', '', '\n                management of the user or role that determines whether physical\n                tampering has occurred.\n            ', 'FPT_PHP.1'),
('0', 'FPT_PHP.20', '', '\n                    management of the user or role that gets informed about\n                    intrusions;\n                ', 'FPT_PHP.2'),
('1', 'FPT_PHP.21', '', '\n                    management of the list of devices that should inform the\n                    indicated user or role about the intrusion.\n                ', 'FPT_PHP.2'),
('0', 'FPT_PHP.30', '', '\n                    management of the automatic responses to physical tampering.\n                ', 'FPT_PHP.3'),
('0', 'FPT_RCV.10', '', '\n                    management of who can access the restore capability within\n                    the maintenance mode.\n                ', 'FPT_RCV.1'),
('0', 'FPT_RCV.20', '', '\n                    management of who can access the restore capability within\n                    the maintenance mode;\n                ', 'FPT_RCV.2'),
('1', 'FPT_RCV.21', '', '\n                    management of the list of failures/service discontinuities\n                    that will be handled through the automatic procedures.\n                ', 'FPT_RCV.2'),
('0', 'FPT_RCV.30', 'fpt_rcv.2', '', 'FPT_RCV.3'),
('0', 'FPT_RPL.10', '', '\n                    management of the list of identified entities for which\n                    replay shall be detected;\n                ', 'FPT_RPL.1'),
('1', 'FPT_RPL.11', '', '\n                    management of the list of actions that need to be taken in\n                    case of replay.\n                ', 'FPT_RPL.1'),
('0', 'FPT_STM.10', '', '\n                    management of the time.\n                ', 'FPT_STM.1'),
('0', 'FPT_TEE.10', '', '\n        management of the conditions under which the testing of external\n        entities occurs, such as during initial start-up, regular interval, or\n        under specified conditions;\n    ', 'FPT_TEE.1'),
('1', 'FPT_TEE.11', '', '\n        management of the time interval if appropriate.\n    ', 'FPT_TEE.1'),
('0', 'FPT_TST.10', '', '\n                    management of the conditions under which TSF self testing\n                    occurs, such as during initial start-up, regular interval,\n                    or under specified conditions;\n                ', 'FPT_TST.1'),
('1', 'FPT_TST.11', '', '\n                    management of the time interval if appropriate.\n                ', 'FPT_TST.1'),
('0', 'FRU_PRS.10', '', '\n                    assignment of priorities to each subject in the TSF.\n                ', 'FRU_PRS.1'),
('0', 'FRU_PRS.20', 'fru_prs.1', '', 'FRU_PRS.2'),
('0', 'FRU_RSA.10', '', '\n                    specifying maximum limits for a resource for groups and/or\n                    individual users and/or subjects by an administrator.\n                ', 'FRU_RSA.1'),
('0', 'FRU_RSA.20', '', '\n                    specifying minimum and maximum limits for a resource for\n                    groups and/or individual users and/or subjects by an\n                    administrator.\n                ', 'FRU_RSA.2'),
('0', 'FTA_LSA.10', '', '\n                    management of the scope of the session security attributes\n                    by an administrator.\n                ', 'FTA_LSA.1'),
('0', 'FTA_MCS.10', '', '\n                    management of the maximum allowed number of concurrent user\n                    sessions by an administrator.\n                ', 'FTA_MCS.1'),
('0', 'FTA_MCS.20', '', '\n                    management of the rules that govern the maximum allowed\n                    number of concurrent user sessions by an administrator.\n                ', 'FTA_MCS.2'),
('0', 'FTA_SSL.10', '', '\n                    specification of the time of user inactivity after which\n                    lock-out occurs for an individual user;\n                ', 'FTA_SSL.1'),
('1', 'FTA_SSL.11', '', '\n                    specification of the default time of user inactivity after\n                    which lock-out occurs;\n                ', 'FTA_SSL.1'),
('2', 'FTA_SSL.12', '', '\n                    management of the events that should occur prior to\n                    unlocking the session.\n                ', 'FTA_SSL.1'),
('0', 'FTA_SSL.20', '', '\n                    management of the events that should occur prior to\n                    unlocking the session.\n                ', 'FTA_SSL.2'),
('0', 'FTA_SSL.30', '', '\n                    specification of the time of user inactivity after which\n                    termination of the interactive session occurs for an\n                    individual user;\n                ', 'FTA_SSL.3'),
('1', 'FTA_SSL.31', '', '\n                    specification of the default time of user inactivity after\n                    which termination of the interactive session occurs.\n                ', 'FTA_SSL.3'),
('0', 'FTA_TAB.10', '', '\n                    maintenance of the banner by the authorised administrator.\n                ', 'FTA_TAB.1'),
('0', 'FTA_TSE.10', '', '\n                    management of the session establishment conditions by the\n                    authorised administrator.\n                ', 'FTA_TSE.1'),
('0', 'FTP_ITC.10', '', '\n                    Configuring the actions that require trusted channel, if\n                    supported.\n                ', 'FTP_ITC.1'),
('0', 'FTP_TRP.10', '', '\n                    Configuring the actions that require trusted path, if\n                    supported.\n                ', 'FTP_TRP.1');

-- --------------------------------------------------------

--
-- Table structure for table `fcomponent`
--

CREATE TABLE `fcomponent` (
  `id` varchar(10) NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcomponent`
--

INSERT INTO `fcomponent` (`id`, `name`, `idf`) VALUES
('FAU_ARP.1', 'Security alarms', 'FAU_ARP'),
('FAU_GEN.1', 'Audit data generation', 'FAU_GEN'),
('FAU_GEN.2', 'User identity association', 'FAU_GEN'),
('FAU_SAA.1', 'Potential violation analysis', 'FAU_SAA'),
('FAU_SAA.2', 'Profile based anomaly detection', 'FAU_SAA'),
('FAU_SAA.3', 'Simple attack heuristics', 'FAU_SAA'),
('FAU_SAA.4', 'Complex attack heuristics', 'FAU_SAA'),
('FAU_SAR.1', 'Audit review', 'FAU_SAR'),
('FAU_SAR.2', 'Restricted audit review', 'FAU_SAR'),
('FAU_SAR.3', 'Selectable audit review', 'FAU_SAR'),
('FAU_SEL.1', 'Selective audit', 'FAU_SEL'),
('FAU_STG.1', 'Protected audit trail storage', 'FAU_STG'),
('FAU_STG.2', 'Guarantees of audit data availability', 'FAU_STG'),
('FAU_STG.3', 'Action in case of possible audit data loss', 'FAU_STG'),
('FAU_STG.4', 'Prevention of audit data loss', 'FAU_STG'),
('FCO_NRO.1', 'Selective proof of origin', 'FCO_NRO'),
('FCO_NRO.2', 'Enforced proof of origin', 'FCO_NRO'),
('FCO_NRR.1', 'Selective proof of receipt', 'FCO_NRR'),
('FCO_NRR.2', 'Enforced proof of receipt', 'FCO_NRR'),
('FCS_CKM.1', 'Cryptographic key generation', 'FCS_CKM'),
('FCS_CKM.2', 'Cryptographic key distribution', 'FCS_CKM'),
('FCS_CKM.3', 'Cryptographic key access', 'FCS_CKM'),
('FCS_CKM.4', 'Cryptographic key destruction', 'FCS_CKM'),
('FCS_COP.1', 'Cryptographic operation', 'FCS_COP'),
('FDP_ACC.1', 'Subset access control', 'FDP_ACC'),
('FDP_ACC.2', 'Complete access control', 'FDP_ACC'),
('FDP_ACF.1', 'Security attribute based access control', 'FDP_ACF'),
('FDP_DAU.1', 'Basic Data Authentication', 'FDP_DAU'),
('FDP_DAU.2', 'Data Authentication with Identity of           Guarantor', 'FDP_DAU'),
('FDP_ETC.1', 'Export of user data without security           attributes', 'FDP_ETC'),
('FDP_ETC.2', 'Export of user data with security attributes', 'FDP_ETC'),
('FDP_IFC.1', 'Subset information flow control', 'FDP_IFC'),
('FDP_IFC.2', 'Complete information flow control', 'FDP_IFC'),
('FDP_IFF.1', 'Simple security attributes', 'FDP_IFF'),
('FDP_IFF.2', 'Hierarchical security attributes', 'FDP_IFF'),
('FDP_IFF.3', 'Limited illicit information flows', 'FDP_IFF'),
('FDP_IFF.4', 'Partial elimination of illicit information         flows', 'FDP_IFF'),
('FDP_IFF.5', 'No illicit information flows', 'FDP_IFF'),
('FDP_IFF.6', 'Illicit information flow monitoring', 'FDP_IFF'),
('FDP_ITC.1', 'Import of user data without security           attributes', 'FDP_ITC'),
('FDP_ITC.2', 'Import of user data with security attributes', 'FDP_ITC'),
('FDP_ITT.1', 'Basic internal transfer protection', 'FDP_ITT'),
('FDP_ITT.2', 'Transmission separation by attribute', 'FDP_ITT'),
('FDP_ITT.3', 'Integrity monitoring', 'FDP_ITT'),
('FDP_ITT.4', 'Attribute-based integrity monitoring', 'FDP_ITT'),
('FDP_RIP.1', 'Subset residual information protection', 'FDP_RIP'),
('FDP_RIP.2', 'Full residual information protection', 'FDP_RIP'),
('FDP_ROL.1', 'Basic rollback', 'FDP_ROL'),
('FDP_ROL.2', 'Advanced rollback', 'FDP_ROL'),
('FDP_SDI.1', 'Stored data integrity monitoring', 'FDP_SDI'),
('FDP_SDI.2', 'Stored data integrity monitoring and action', 'FDP_SDI'),
('FDP_UCT.1', 'Basic data exchange confidentiality', 'FDP_UCT'),
('FDP_UIT.1', 'Data exchange integrity', 'FDP_UIT'),
('FDP_UIT.2', 'Source data exchange recovery', 'FDP_UIT'),
('FDP_UIT.3', 'Destination data exchange recovery', 'FDP_UIT'),
('FIA_AFL.1', 'Authentication failure handling', 'FIA_AFL'),
('FIA_ATD.1', 'User attribute definition', 'FIA_ATD'),
('FIA_SOS.1', 'Verification of secrets', 'FIA_SOS'),
('FIA_SOS.2', 'TSF Generation of secrets', 'FIA_SOS'),
('FIA_UAU.1', 'Timing of authentication', 'FIA_UAU'),
('FIA_UAU.2', 'User authentication before any action', 'FIA_UAU'),
('FIA_UAU.3', 'Unforgeable authentication', 'FIA_UAU'),
('FIA_UAU.4', 'Single-use authentication mechanisms', 'FIA_UAU'),
('FIA_UAU.5', 'Multiple authentication mechanisms', 'FIA_UAU'),
('FIA_UAU.6', 'Re-authenticating', 'FIA_UAU'),
('FIA_UAU.7', 'Protected authentication feedback', 'FIA_UAU'),
('FIA_UID.1', 'Timing of identification', 'FIA_UID'),
('FIA_UID.2', 'User identification before any action', 'FIA_UID'),
('FIA_USB.1', 'User-subject binding', 'FIA_USB'),
('FMT_MOF.1', 'Management of security functions behaviour', 'FMT_MOF'),
('FMT_MSA.1', 'Management of security attributes', 'FMT_MSA'),
('FMT_MSA.2', 'Secure security attributes', 'FMT_MSA'),
('FMT_MSA.3', 'Static attribute initialisation', 'FMT_MSA'),
('FMT_MSA.4', 'Security attribute value inheritance', 'FMT_MSA'),
('FMT_MTD.1', 'Management of TSF data', 'FMT_MTD'),
('FMT_MTD.2', 'Management of limits on TSF data', 'FMT_MTD'),
('FMT_MTD.3', 'Secure TSF data', 'FMT_MTD'),
('FMT_REV.1', 'Revocation', 'FMT_REV'),
('FMT_SAE.1', 'Time-limited authorisation', 'FMT_SAE'),
('FMT_SMF.1', 'Specification of Management Functions', 'FMT_SMF'),
('FMT_SMR.1', 'Security roles', 'FMT_SMR'),
('FMT_SMR.2', 'Restrictions on security roles', 'FMT_SMR'),
('FMT_SMR.3', 'Assuming roles', 'FMT_SMR'),
('FPR_ANO.1', 'Anonymity', 'FPR_ANO'),
('FPR_ANO.2', 'Anonymity without soliciting information', 'FPR_ANO'),
('FPR_PSE.1', 'Pseudonymity', 'FPR_PSE'),
('FPR_PSE.2', 'Reversible pseudonymity', 'FPR_PSE'),
('FPR_PSE.3', 'Alias pseudonymity', 'FPR_PSE'),
('FPR_UNL.1', 'Unlinkability', 'FPR_UNL'),
('FPR_UNO.1', 'Unobservability', 'FPR_UNO'),
('FPR_UNO.2', 'Allocation of information impacting       unobservability', 'FPR_UNO'),
('FPR_UNO.3', 'Unobservability without soliciting information', 'FPR_UNO'),
('FPR_UNO.4', 'Authorised user observability', 'FPR_UNO'),
('FPT_FLS.1', 'Failure with preservation of secure state', 'FPT_FLS'),
('FPT_ITA.1', 'Inter-TSF availability within a defined           availability metric', 'FPT_ITA'),
('FPT_ITC.1', 'Inter-TSF confidentiality during           transmission', 'FPT_ITC'),
('FPT_ITI.1', 'Inter-TSF detection of modification', 'FPT_ITI'),
('FPT_ITI.2', 'Inter-TSF detection and correction of         modification', 'FPT_ITI'),
('FPT_ITT.1', 'Basic internal TSF data transfer protection', 'FPT_ITT'),
('FPT_ITT.2', 'TSF data transfer separation', 'FPT_ITT'),
('FPT_ITT.3', 'TSF data integrity monitoring', 'FPT_ITT'),
('FPT_PHP.1', 'Passive detection of physical attack', 'FPT_PHP'),
('FPT_PHP.2', 'Notification of physical attack', 'FPT_PHP'),
('FPT_PHP.3', 'Resistance to physical attack', 'FPT_PHP'),
('FPT_RCV.1', 'Manual recovery', 'FPT_RCV'),
('FPT_RCV.2', 'Automated recovery', 'FPT_RCV'),
('FPT_RCV.3', 'Automated recovery without undue loss', 'FPT_RCV'),
('FPT_RCV.4', 'Function recovery', 'FPT_RCV'),
('FPT_RPL.1', 'Replay detection', 'FPT_RPL'),
('FPT_SSP.1', 'Simple trusted acknowledgement', 'FPT_SSP'),
('FPT_SSP.2', 'Mutual trusted acknowledgement', 'FPT_SSP'),
('FPT_STM.1', 'Reliable time stamps', 'FPT_STM'),
('FPT_TDC.1', 'Inter-TSF basic TSF data consistency', 'FPT_TDC'),
('FPT_TEE.1', 'Testing of external entities', 'FPT_TEE'),
('FPT_TRC.1', 'Internal TSF consistency', 'FPT_TRC'),
('FPT_TST.1', 'TSF testing', 'FPT_TST'),
('FRU_FLT.1', 'Degraded fault tolerance', 'FRU_FLT'),
('FRU_FLT.2', 'Limited fault tolerance', 'FRU_FLT'),
('FRU_PRS.1', 'Limited priority of service', 'FRU_PRS'),
('FRU_PRS.2', 'Full priority of service', 'FRU_PRS'),
('FRU_RSA.1', 'Maximum quotas', 'FRU_RSA'),
('FRU_RSA.2', 'Minimum and maximum quotas', 'FRU_RSA'),
('FTA_LSA.1', 'Limitation on scope of selectable attributes', 'FTA_LSA'),
('FTA_MCS.1', 'Basic limitation on multiple concurrent           sessions', 'FTA_MCS'),
('FTA_MCS.2', 'Per user attribute limitation on multiple         concurrent sessions', 'FTA_MCS'),
('FTA_SSL.1', 'TSF-initiated session locking', 'FTA_SSL'),
('FTA_SSL.2', 'User-initiated locking', 'FTA_SSL'),
('FTA_SSL.3', 'TSF-initiated termination', 'FTA_SSL'),
('FTA_SSL.4', 'User-initiated termination', 'FTA_SSL'),
('FTA_TAB.1', 'Default TOE access banners', 'FTA_TAB'),
('FTA_TAH.1', 'TOE access history', 'FTA_TAH'),
('FTA_TSE.1', 'TOE session establishment', 'FTA_TSE'),
('FTP_ITC.1', 'Inter-TSF trusted channel', 'FTP_ITC'),
('FTP_TRP.1', 'Trusted path', 'FTP_TRP');

-- --------------------------------------------------------

--
-- Table structure for table `fcorationale`
--

CREATE TABLE `fcorationale` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcorationale`
--

INSERT INTO `fcorationale` (`type`, `id`, `para`, `idf`) VALUES
('', '', '', 'FAU_ARP.1'),
('normal', 'PGFID-115157', 'This component will provide authorised users the\n                        capability to obtain and interpret the information. In\n                        case of human users this information needs to be in a\n                        human understandable presentation. In case of external IT\n                        entities the information needs to be unambiguously\n                        represented in an electronic fashion.', 'FAU_SAR.1');

-- --------------------------------------------------------

--
-- Table structure for table `fcousernotes`
--

CREATE TABLE `fcousernotes` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `fcousernotes`
--

INSERT INTO `fcousernotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'fau_gen.12', 'If the subject is a user, the user identity may be recorded as\n                        the subject identity. The identity of the user may not yet been\n                        verified if, FIA_UAU, has not been\n                        applied. Therefore in the instance of an invalid login the\n                        claimed user identity should be recorded. It should be\n                        considered to indicate when a recorded identity has not been\n                        authenticated.', 'FAU_GEN.1'),
('normal', 'fau_gen.22', 'If the identity of the user has not yet been verified through\n                        authentication, in the instance of an invalid login the claimed\n                        user identity should be recorded. It should be considered to\n                        indicate when a recorded identity has not been authenticated.', 'FAU_GEN.2'),
('normal', 'fau_saa.10', 'This component is used to specify the set of auditable\n                        events whose occurrence or accumulated occurrence held to\n                        indicate a potential violation of the enforcement of the\n                        SFRs, and any rules to be used to perform the violation\n                        analysis.', 'FAU_SAA.1'),
('normal', 'fau_stg.30', 'This component requires that actions will be taken when\n                        the audit trail exceeds certain pre-defined limits.', 'FAU_STG.3'),
('normal', 'fia_usb.10', 'It is intended that a subject is\n                acting on behalf of the user who caused the subject to come into\n                being or to be activated to perform a certain task.', 'FIA_USB.1'),
('normal', 'fia_usb.11', 'Therefore, when a subject is created, that subject is acting on\n                behalf of the user who initiated the creation. In cases where\n                anonymity is used, the subject is still acting on behalf of a\n                user, but the identity of that user is unknown. A special\n                category of subjects are those subjects that serve multiple\n                users (e.g. a server process). In such cases the user that\n                created this subject is assumed to be the ``owner\'\'.', 'FIA_USB.1'),
('normal', 'fmt_msa.10', 'This component allows users acting in certain roles to\n                        manage identified security attributes. The users are\n                        assigned to a role within the component, FMT_SMR.1, .', 'FMT_MSA.1'),
('normal', 'fmt_msa.11', 'The default value of a parameter is the value the\n                        parameter takes when it is instantiated without\n                        specifically assigned values. An initial value is provided\n                        during the instantiation (creation) of a parameter, and\n                        overrides the default value.', 'FMT_MSA.1'),
('normal', 'fmt_msa.40', 'This component requires specification of the set of rules\n            through which the security attribute inherits values and the\n            conditions to be met for these rules to be applied.', 'FMT_MSA.4'),
('normal', 'fmt_mtd.30', 'This component covers requirements on the values that can\n                        be assigned to TSF data. The assigned values should be\n                        such that the TOE will remain in a secure state.', 'FMT_MTD.3'),
('normal', 'fmt_mtd.31', 'The definition of what ``secure\'\' means is not\n                        answered in this component but is left to the development of\n                        the TOE and the\n                        resulting information in the guidance.', 'FMT_MTD.3'),
('normal', 'fmt_smf.10', 'This component specifies the management functions to be\n        provided.', 'FMT_SMF.1'),
('normal', 'fmt_smf.11', 'PP/ST authors should consult the ``Management\'\' sections\n        for components included in their PP/ST to provide a basis\n        for the management functions to be listed via this\n        component.', 'FMT_SMF.1'),
('normal', 'fpr_unl.10', 'This component ensures that users cannot link different\n                        operations in the system and thereby obtain information.', 'FPR_UNL.1'),
('normal', 'fpr_uno.20', 'This component requires that the use of a function or\n                        resource cannot be observed by specified users or\n                        subjects. Furthermore this component specifies that\n                        information related to the privacy of the user is\n                        distributed within the TOE such that attackers might not\n                        know which part of the TOE to target, or they need to\n                        attack multiple parts of the TOE.', 'FPR_UNO.2'),
('normal', 'fpt_tee.12', 'The PP/ST author may refine the requirement to state whether the function\n        should be available in off-line, on-line or maintenance mode.', 'FPT_TEE.1'),
('normal', 'fta_ssl.40', ', provides the capability for an\n            authorised user to terminate his/her interactive\n            session..', 'FTA_SSL.4'),
('normal', 'fta_ssl.41', 'The PP/ST author should be aware that a session may continue\n            after the user terminated his/her activity, for example,\n            background processing. This requirement would allow the user\n            to terminate this background subject without regard to the\n            status of the subject.', 'FTA_SSL.4'),
('normal', 'PGFID-10440', 'This component provides the user protection against\n                        disclosure of identity to other users. The user will\n                        remain accountable for its actions.', 'FPR_PSE.1'),
('normal', 'PGFID-11390', 'An example of the use of this component is the use of a\n                        randomly allocated node to provide a function. In such a\n                        case the component might require that the privacy related\n                        information shall only be available to one identified part\n                        of the TOE, and will not be communicated outside this part\n                        of the TOE.', 'FPR_UNO.2'),
('normal', 'PGFID-11393', 'A more complex example can be found in some\n                        ``voting algorithms\'\'. Several parts of the\n                        TOE will be involved in the service, but no individual\n                        part of the TOE will be able to violate the policy. So a\n                        person may cast a vote (or not) without the TOE being able\n                        to determine whether a vote has been cast and what the\n                        vote happened to be (unless the vote was unanimous).', 'FPR_UNO.2'),
('normal', 'PGFID-11450', 'This component is used to require that the TSF does not\n                        try to obtain information that might compromise\n                        unobservability when provided specific services. Therefore\n                        the TSF will not solicit (i.e. try to obtain from other\n                        entities) any information that might be used to compromise\n                        unobservability.', 'FPR_UNO.3'),
('normal', 'PGFID-1858', 'This component should be used when a trusted communication\n                        channel between the TSF and another trusted IT product is\n                        required.', 'FTP_ITC.1'),
('normal', 'PGFID-1887', 'This component should be used when trusted communication\n                        between a user and the TSF is required, either for initial\n                        authentication purposes only or for additional specified\n                        user operations.', 'FTP_TRP.1'),
('normal', 'PGFID-270749', 'This component is not intended to be applied to human users.', 'FPT_TEE.1'),
('normal', 'PGFID-270750', 'This component provides support for the periodic testing of properties\n        related to external entities upon which the TSF\'s operation depends, by\n        requiring the ability to periodically invoke testing functions.', 'FPT_TEE.1'),
('normal', 'PGFID-270780', 'The term ``secure state\'\' refers to a state in which the\n                        TSF data are consistent and the TSF continues correct\n                        enforcement of the SFRs.', 'FPT_FLS.1'),
('normal', 'PGFID-270830', 'This component should be used in situations where it is\n                        sufficient to detect when data have been modified. An\n                        example of such a situation is one in which another\n                        trusted IT product can request the TOE\'s TSF to\n                        retransmit data when modification has been detected, or\n                        respond to such types of request.', 'FPT_ITI.1'),
('normal', 'PGFID-270844', 'This component should be used in situations where it is\n                        necessary to detect or correct modifications of TSF\n                        critical data.', 'FPT_ITI.2'),
('normal', 'PGFID-270846', 'The desired strength of modification detection is based\n                        upon a specified modification metric that is a function of\n                        the algorithm used, which may range from a checksum and\n                        parity mechanisms that may fail to detect multiple bit\n                        changes, to more complicated cryptographic checksum\n                        approaches. The metric that needs to be defined can either\n                        refer to the attacks it will resist (e.g. only 1 in a 1000\n                        random messages will be accepted), or to mechanisms that\n                        are well known in the public literature (e.g. the strength\n                        must be conformant to the strength offered by Secure Hash\n                        Algorithm).', 'FPT_ITI.2'),
('normal', 'PGFID-270848', 'The approach taken to correct modification might be done\n                        through some form of error correcting checksum.', 'FPT_ITI.2'),
('normal', 'PGFID-270885', 'One of the ways to achieve separation of TSF data based on\n                        SFP-relevant attributes is through the use of separate\n                        logical or physical channels.', 'FPT_ITT.2'),
('normal', 'PGFID-270950', 'should be used when threats from\n                        unauthorised physical tampering with parts of the TOE are\n                        not countered by procedural methods, and it is required\n                        that designated individuals be notified of physical\n                        tampering. It addresses the threat that physical tampering\n                        with TSF elements, although detected, may not be noticed.\n                        Specification of management functions in FMT_MOF.1 Management of\n                        security functions behaviour should be considered to specify who\n                        can make use of that capability, and how they can make use of that capability.', 'FPT_PHP.2'),
('normal', 'PGFID-270964', 'For some forms of tampering, it is necessary that the TSF\n                        not only detects the tampering, but actually resists it or\n                        delays the attacker.', 'FPT_PHP.3'),
('normal', 'PGFID-271027', 'In the hierarchy of the trusted recovery family, recovery\n                        that requires only manual intervention is the least\n                        desirable, for it precludes the use of the system in an\n                        unattended fashion.', 'FPT_RCV.1'),
('normal', 'PGFID-271029', 'This component is intended for use in TOEs that do not\n                        require unattended recovery to a secure state. The\n                        requirements of this component reduce the threat of\n                        protection compromise resulting from an attended TOE\n                        returning to an insecure state after recovery from a\n                        failure or other discontinuity.', 'FPT_RCV.1'),
('normal', 'PGFID-271034', 'Automated recovery is considered to be more useful than\n                        manual recovery, as it allows the machine to operate in an\n                        unattended fashion.', 'FPT_RCV.2'),
('normal', 'PGFID-271043', 'The component, FPT_RCV.2, extends the feature\n                        coverage of, FPT_RCV.1, by requiring that there\n                        be at least one automated method of recovery from failure\n                        or service discontinuity. It addresses the threat of\n                        protection compromise resulting from an unattended TOE\n                        returning to an insecure state after recovery from a\n                        failure or other discontinuity.', 'FPT_RCV.2'),
('normal', 'PGFID-271059', 'Automated recovery is considered to be more useful than\n                        manual recovery, but it runs the risk of losing a\n                        substantial number of objects. Preventing undue loss of\n                        objects provides additional utility to the recovery\n                        effort.', 'FPT_RCV.3'),
('normal', 'PGFID-271067', 'The component, FPT_RCV.3, extends the feature\n                        coverage of, FPT_RCV.2, by requiring that there\n                        not be undue loss of TSF data or objects under the control\n                        of the TSF. At, FPT_RCV.2, , the automated recovery\n                        mechanisms could conceivably recover by deleting all\n                        objects and returning the TSF to a known secure\n                        state. This type of drastic automated recovery is\n                        precluded in, FPT_RCV.3, .', 'FPT_RCV.3'),
('normal', 'PGFID-271074', 'This component addresses the threat of protection\n                        compromise resulting from an unattended TOE returning to\n                        an insecure state after recovery from a failure or other\n                        discontinuity with a large loss of TSF data or objects\n                        under the control of the TSF.', 'FPT_RCV.3'),
('normal', 'PGFID-271144', 'The entities included here are, for example, messages,\n                        service requests, service responses, or sessions.', 'FPT_RPL.1'),
('normal', 'PGFID-271330', 'In this component, the TSF must supply an acknowledgement\n                        to another part of the TSF when requested. This\n                        acknowledgement should indicate that one part of a\n                        distributed TOE successfully received an unmodified\n                        transmission from a different part of the distributed TOE.', 'FPT_SSP.1'),
('normal', 'PGFID-271333', 'In this component, in addition to the TSF being able to\n                        provide an acknowledgement for the receipt of a data\n                        transmission, the TSF must comply with a request from\n                        another part of the TSF for an acknowledgement to the\n                        acknowledgement.', 'FPT_SSP.2'),
('normal', 'PGFID-271334', 'For example, the local TSF transmits some data to a remote\n                        part of the TSF. The remote part of the TSF acknowledges\n                        the successful receipt of the data and requests that the\n                        sending TSF confirm that it receives the\n                        acknowledgement. This mechanism provides additional\n                        confidence that both parts of the TSF involved in the data\n                        transmission know that the transmission completed\n                        successfully.', 'FPT_SSP.2'),
('normal', 'PGFID-271367', 'The TSF is responsible for maintaining the consistency of\n                        TSF data used by or associated with the specified function\n                        and that are common between two or more trusted\n                        systems. For example, the TSF data of two different\n                        systems may have different conventions internally. For the\n                        TSF data to be used properly (e.g. to afford the user data\n                        the same protection as within the TOE) by the receiving\n                        trusted IT product, the TOE and the other trusted IT\n                        product must use a pre-established protocol to exchange\n                        TSF data.', 'FPT_TDC.1'),
('normal', 'PGFID-271629', 'This component provides support for the testing of the\n                        critical functions of the TSF\'s operation by\n                        requiring the ability to invoke testing functions and\n                        check the integrity of TSF data and executable code.', 'FPT_TST.1'),
('normal', 'PGFID-273409', 'Although it is desirable to audit situations in which\n                        failure with preservation of secure state occurs, it is\n                        not possible in all situations. The PP/ST author should\n                        specify those situations in which audit is desired and\n                        feasible.', 'FPT_FLS.1'),
('normal', 'PGFID-275064', 'The desired strength of modification detection is based\n                        upon a specified modification metric that is a function of\n                        the algorithm used, which may range from a weak checksum\n                        and parity mechanisms that may fail to detect multiple bit\n                        changes, to more complicated cryptographic checksum\n                        approaches.', 'FPT_ITI.1'),
('normal', 'PGFID-275103', 'Function recovery requires that if there should be some\n                        failure in the TSF, that certain functions in the TSF should\n                        either complete successfully or recover to a secure state.', 'FPT_RCV.4'),
('normal', 'PGFID-275540', 'Failures in the TSF may include\n                        ``hard\'\' failures, which indicate an\n                        equipment malfunction and which may require maintenance,\n                        service or repair of the TSF. Failures in the TSF may also\n                        include recoverable ``soft\'\' failures,\n                        which may only require initialisation or resetting of the\n                        TSF.', 'FPT_FLS.1'),
('normal', 'PGFID-275578', 'should be used when threats from\n                        unauthorised physical tampering with parts of the TOE are not\n                        countered by procedural methods. It addresses the threat of\n                        undetected physical tampering with the TSF. Typically, an\n                        authorised user would be given the function to verify whether\n                        tampering took place. As written, this component simply provides\n                        a TSF capability to detect tampering. Specification of\n                        management functions in, FPT_PHP.1, should be\n                        considered to specify who can make use of that capability, and\n                        how they can make use of that capability. If this is done  by non-IT mechanisms\n                        (e.g. physical inspection) management functions are not required., FMT_MOF.1', 'FPT_PHP.1'),
('normal', 'PGFID-275587', 'This component should be used when TSF devices and TSF\n                        elements are expected to operate in an environment where a\n                        physical tampering (e.g. observation, analysis, or\n                        modification) of the internals of a TSF device or TSF\n                        element itself is a threat.', 'FPT_PHP.3'),
('normal', 'PGFID-277123', 'Some possible uses of this component include providing\n                        reliable time stamps for the purposes of audit as well as\n                        for security attribute expiration.', 'FPT_STM.1'),
('normal', 'PGFID-292360', 'This component provides additional capabilities over those\n                        of, FTA_MCS.1, , by allowing further constraints\n                        to be placed on the number of concurrent sessions that\n                        users are able to invoke. These constraints are in terms\n                        of a user\'s security attributes, such as a\n                        user\'s identity, or membership of a role.', 'FTA_MCS.2'),
('normal', 'PGFID-292410', ', FTA_SSL.1, , provides the capability for the\n                        TSF to lock an active user session after a specified\n                        period of time. Locking a terminal would prevent any\n                        further interaction with an existing active session\n                        through the use of the locked terminal.', 'FTA_SSL.1'),
('normal', 'PGFID-292411', 'This component allows the PP/ST author to specify what\n                        events will unlock the session. These events may be\n                        related to the terminal (e.g. fixed set of keystrokes to\n                        unlock the session), the user (e.g. reauthentication), or\n                        time.', 'FTA_SSL.1'),
('normal', 'PGFID-292432', ', provides the capability for\n                        an authorised user to lock and unlock his/her own interactive\n                        session. This would provide authorised users with the ability to\n                        effectively block further use of their active sessions without\n                        having to terminate the active session.', 'FTA_SSL.2'),
('normal', 'PGFID-292448', ', FTA_SSL.3, , requires that the TSF terminate an\n                        interactive user session after a period of inactivity.', 'FTA_SSL.3'),
('normal', 'PGFID-292449', 'The PP/ST author should be aware that a session may\n                        continue after the user terminated his/her activity, for\n                        example, background processing. This requirement would\n                        terminate this background subject after a period of\n                        inactivity of the user without regard to the status of the\n                        subject.', 'FTA_SSL.3'),
('normal', 'PGFID-292475', 'This component requires that there is an advisory warning\n                        regarding the unauthorised use of the TOE. A PP/ST author\n                        could refine the requirement to include a default banner.', 'FTA_TAB.1'),
('normal', 'PGFID-292506', 'This family can provide authorised users with information\n                        that may indicate the possible misuse of their user\n                        account.', 'FTA_TAH.1'),
('normal', 'PGFID-293361', 'This component request that the user is presented with the\n                        information. The user should be able to review the\n                        information, but is not forced to do so. If a user so\n                        desires he might, for example, create scripts that ignore\n                        this information and start other processes.', 'FTA_TAH.1'),
('normal', 'PGFID-293588', 'This component allows the system to limit the number of\n                        sessions in order to effectively use the resources of the\n                        TOE.', 'FTA_MCS.1'),
('normal', 'PGFID-293618', 'If display devices are overwritten, the replacement\n                        contents need not be static (i.e. ``screen\n                        savers\'\' are permitted).', 'FTA_SSL.1'),
('normal', 'PGFID-293619', 'If devices are overwritten, the replacement contents need\n                        not be static (i.e. ``screen savers\'\'\n                        are permitted).', 'FTA_SSL.2'),
('normal', 'PGFID-34324', 'This component requires the method used to distribute\n                        cryptographic keys to be specified, this can be in\n                        accordance with an assigned standard.', 'FCS_CKM.2'),
('normal', 'PGFID-34338', 'This component requires the method used to access\n                        cryptographic keys be specified, this can be in accordance\n                        with an assigned standard.', 'FCS_CKM.3'),
('normal', 'PGFID-34937', 'This component requires the cryptographic algorithm and\n                        key size used to perform specified cryptographic\n                        operation(s) which can be based on an assigned standard.', 'FCS_COP.1'),
('normal', 'PGFID-34975', 'This component requires the method used to destroy\n                        cryptographic keys be specified, this can be in accordance\n                        with an assigned standard.', 'FCS_CKM.4'),
('normal', 'PGFID-35070', 'This component requires the cryptographic key sizes and\n                        method used to generate cryptographic keys to be\n                        specified, this can be in accordance with an assigned\n                        standard. It should be used to specify the cryptographic\n                        key sizes and the method (e.g. algorithm) used to generate\n                        the cryptographic keys. Only one instance of the component\n                        is needed for the same method and multiple key sizes. The\n                        key size could be common or different for the various\n                        entities, and could be either the input to or the output\n                        from the method.', 'FCS_CKM.1'),
('normal', 'PGFID-3711', 'This component is intended to specify which capabilities\n                        the TOE will still provide after a failure of the\n                        system. Since it would be difficult to describe all\n                        specific failures, categories of failures may be\n                        specified. Examples of general failures are flooding of\n                        the computer room, short term power interruption,\n                        breakdown of a CPU or host, software failure, or buffer\n                        overflow.', 'FRU_FLT.1'),
('normal', 'PGFID-3729', 'This component is intended to specify against what type of\n                        failures the TOE must be resistant. Since it would be\n                        difficult to describe all specific failures, categories of\n                        failures may be specified. Examples of general failures\n                        are flooding of the computer room, short term power\n                        interruption, breakdown of a CPU or host, software\n                        failure, or overflow of buffer.', 'FRU_FLT.2'),
('normal', 'PGFID-3766', 'This component defines priorities for a subject, and the\n                        resources for which this priority will be used. If a\n                        subject attempts to take action on a resource controlled\n                        by the Priority of Service requirements, the access and/or\n                        time of access will be dependent on the subject\'s\n                        priority, the priority of the currently acting subject,\n                        and the priority of the subjects still in the queue.', 'FRU_PRS.1'),
('normal', 'PGFID-3779', 'This component defines priorities for a subject. All\n                        shareable resources under the control of the TSF will be subjected to the\n                        Priority of Service mechanism. If a subject attempts to\n                        take action on a shareable TSF resource, the access and/or\n                        time of access will be dependent on the subject\'s\n                        priority, the priority of the currently acting subject,\n                        and the priority of the subjects still in the queue.', 'FRU_PRS.2'),
('normal', 'PGFID-3815', 'This component provides requirements for quota mechanisms\n                        that apply to only a specified set of the shareable\n                        resources in the TOE. The requirements allow the quotas to\n                        be associated with a user, possibly assigned to groups of\n                        users or subjects as applicable to the TOE.', 'FRU_RSA.1'),
('normal', 'PGFID-3838', 'This component provides requirements for quota mechanisms\n                        that apply to a specified set of the shareable resources\n                        in the TOE. The requirements allow the quotas to be\n                        associated with a user, or possibly assigned to groups of\n                        users as applicable to the TOE.', 'FRU_RSA.2'),
('normal', 'PGFID-558207', 'The PP/ST author may define the number of unsuccessful\n                        authentication attempts or may choose to let the TOE\n                        developer or the authorised user to define this\n                        number. The unsuccessful authentication attempts need not\n                        be consecutive, but rather related to an authentication\n                        event. Such an authentication event could be the count\n                        from the last successful session establishment at a given\n                        terminal.', 'FIA_AFL.1'),
('normal', 'PGFID-558208', 'The PP/ST author could specify a list of actions that the\n                        TSF shall take in the case of authentication failure. An\n                        authorised administrator could also be allowed to manage\n                        the events, if deemed opportune by the PP/ST author. These\n                        actions could be, among other things, terminal\n                        deactivation, user account deactivation, or administrator\n                        alarm. The conditions under which the situation will be\n                        restored to normal must be specified on the action.', 'FIA_AFL.1'),
('normal', 'PGFID-558209', 'In order to prevent denial of service, TOEs usually ensure\n                        that there is at least one user account that cannot be\n                        disabled.', 'FIA_AFL.1'),
('normal', 'PGFID-558210', 'Further actions for the TSF can be stated by the PP/ST\n                        author, including rules for re-enabling the user session\n                        establishment process, or sending an alarm to the\n                        administrator. Examples of these actions are: until a\n                        specified time has lapsed, until the authorised\n                        administrator re-enables the terminal/account, a time\n                        related to failed previous attempts (every time the\n                        attempt fails, the disabling time is doubled).', 'FIA_AFL.1'),
('normal', 'PGFID-558278', 'This component specifies the security attributes that\n                        should be maintained at the level of the user. This means\n                        that the security attributes listed are assigned to and\n                        can be changed at the level of the user. In other words,\n                        changing a security attribute in this list associated with\n                        a user should have no impact on the security attributes of\n                        any other user.', 'FIA_ATD.1'),
('normal', 'PGFID-558279', 'In case security attributes belong to a group of users\n                        (such as Capability List for a group), the user will need\n                        to have a reference (as security attribute) to the\n                        relevant group.', 'FIA_ATD.1'),
('normal', 'PGFID-558310', 'Secrets can be generated by the user. This component\n                        ensures that those user generated secrets can be verified\n                        to meet a certain quality metric.', 'FIA_SOS.1'),
('normal', 'PGFID-558322', 'This component allows the TSF to generate secrets for\n                        specific functions such as authentication by means of\n                        passwords.', 'FIA_SOS.2'),
('normal', 'PGFID-558324', 'When a pseudo-random number generator is used in a secret\n                        generation algorithm, it should accept as input random\n                        data that would provide output that has a high degree of\n                        unpredictability. This random data (seed) can be derived\n                        from a number of available parameters such as a system\n                        clock, system registers, date, time, etc. The parameters\n                        should be selected to ensure that the number of unique\n                        seeds that can be generated from these inputs should be at\n                        least equal to the minimum number of secrets that must be\n                        generated.', 'FIA_SOS.2'),
('normal', 'PGFID-558362', 'This component requires that the PP/ST author define the\n                        TSF-mediated actions that can be performed by the TSF on\n                        behalf of the user before the claimed identity of the user\n                        is authenticated. The TSF-mediated actions should have no\n                        security concerns with users incorrectly identifying\n                        themselves prior to being authenticated. For all other\n                        TSF-mediated actions not in the list, the user must be\n                        authenticated before the action can be performed by the\n                        TSF on behalf of the user.', 'FIA_UAU.1'),
('normal', 'PGFID-558363', 'This component cannot control whether the actions can also\n                        be performed before the identification took place. This\n                        requires the use of either, FIA_UID.1, or, FIA_UID.2, with the appropriate assignments.', 'FIA_UAU.1'),
('normal', 'PGFID-558379', 'This component requires that a user is authenticated before any other\n                        TSF-mediated action can take place on behalf of that user.', 'FIA_UAU.2'),
('normal', 'PGFID-558387', 'This component addresses requirements for mechanisms that\n                        provide protection of authentication data. Authentication\n                        data that is copied from another user, or is in some way\n                        constructed should be detected and/or rejected. These\n                        mechanisms provide confidence that users authenticated by\n                        the TSF are actually who they claim to be.', 'FIA_UAU.3'),
('normal', 'PGFID-558388', 'This component may be useful only with authentication\n                        mechanisms that are based on authentication data that\n                        cannot be shared (e.g. biometrics). It is impossible for a\n                        TSF to detect or prevent the sharing of passwords outside\n                        the control of the TSF.', 'FIA_UAU.3'),
('normal', 'PGFID-558395', 'This component addresses requirements for authentication\n                        mechanisms based on single-use authentication\n                        data. Single-use authentication data can be something the\n                        user has or knows, but not something the user is. Examples\n                        of single-use authentication data include single-use\n                        passwords, encrypted time-stamps, and/or random numbers\n                        from a secret lookup table.', 'FIA_UAU.4'),
('normal', 'PGFID-558396', 'The PP/ST author can specify to which authentication\n                        mechanism(s) this requirement applies.', 'FIA_UAU.4'),
('normal', 'PGFID-558409', 'The use of this component allows specification of\n                        requirements for more than one authentication mechanism to\n                        be used within a TOE. For each distinct mechanism,\n                        applicable requirements must be chosen from the, FIA, class to be applied to each\n                        mechanism. It is possible that the same component could be\n                        selected multiple times in order to reflect different\n                        requirements for the different use of the authentication\n                        mechanism.', 'FIA_UAU.5'),
('normal', 'PGFID-558410', 'The management functions in the class FMT may provide\n                        maintenance capabilities for the set of authentication\n                        mechanisms, as well as the rules that determine whether\n                        the authentication was successful.', 'FIA_UAU.5'),
('normal', 'PGFID-558411', 'To allow anonymous users to interact with the TOE, a\n                        ``none\'\' authentication mechanism can be incorporated. The\n                        use of such access should be clearly explained in the\n                        rules of, FIA_UAU.5.2, .', 'FIA_UAU.5'),
('normal', 'PGFID-558428', 'This component addresses potential needs to\n                        re-authenticate users at defined points in time. These may\n                        include user requests for the TSF to perform security\n                        relevant actions, as well as requests from non-TSF\n                        entities for re-authentication (e.g. a server application\n                        requesting that the TSF re-authenticate the client it is\n                        serving).', 'FIA_UAU.6'),
('normal', 'PGFID-558440', 'This component addresses the feedback on the\n                        authentication process that will be provided to the\n                        user. In some systems the feedback consists of indicating\n                        how many characters have been typed but not showing the\n                        characters themselves, in other systems even this\n                        information might not be appropriate.', 'FIA_UAU.7'),
('normal', 'PGFID-558441', 'This component requires that the authentication data is\n                        not provided as-is back to the user. In a workstation\n                        environment, it could display a\n                        ``dummy\'\' (e.g. star) for each\n                        password character provided, and not the original\n                        character.', 'FIA_UAU.7'),
('normal', 'PGFID-558596', 'This component poses requirements for the user to be\n                        identified. The PP/ST author can indicate specific actions\n                        that can be performed before the identification takes\n                        place.', 'FIA_UID.1'),
('normal', 'PGFID-558603', 'If, FIA_UID.1, is used, the TSF-mediated\n                        actions mentioned in, FIA_UID.1, should also\n                        appear in this, FIA_UAU.1, .', 'FIA_UID.1'),
('normal', 'PGFID-558619', 'In this component users will be identified. A user is not\n                        allowed by the TSF to perform any action before being\n                        identified.', 'FIA_UID.2'),
('normal', 'PGFID-798612', 'The terms object and subject refer to generic elements in\n                        the TOE. For a policy to be implementable, the entities\n                        must be clearly identified. For a PP, the objects and\n                        operations might be expressed as types such as: named\n                        objects, data repositories, observe accesses, etc. For a\n                        specific TOE these generic terms (subject, object) must be\n                        refined, e.g. files, registers, ports, daemons, open\n                        calls, etc.', 'FDP_ACC.1'),
('normal', 'PGFID-798613', 'This component specifies that the policy cover some\n                        well-defined set of operations on some subset of the\n                        objects. It places no constraints on any operations\n                        outside the set - including operations on objects for\n                        which other operations are controlled.', 'FDP_ACC.1'),
('normal', 'PGFID-798711', 'Examples of the attributes that a PP/ST author might\n                        assign are presented in the following paragraphs.', 'FDP_ACF.1'),
('normal', 'PGFID-798712', 'An identity attribute may be associated with users,\n                        subjects, or objects to be used for mediation. Examples of\n                        such attributes might be the name of the program image\n                        used in the creation of the subject, or a security\n                        attribute assigned to the program image.', 'FDP_ACF.1'),
('normal', 'PGFID-798713', 'A time attribute can be used to specify that access will\n                        be authorised during certain times of the day, during\n                        certain days of the week, or during a certain calendar\n                        year.', 'FDP_ACF.1'),
('normal', 'PGFID-798714', 'A location attribute could specify whether the location is\n                        the location of the request for the operation, the\n                        location where the operation will be carried out, or\n                        both. It could be based upon internal tables to translate\n                        the logical interfaces of the TSF into locations such as\n                        through terminal locations, CPU locations, etc.', 'FDP_ACF.1'),
('normal', 'PGFID-798929', 'This component may be satisfied by one-way hash functions\n                        (cryptographic checksum, fingerprint, message digest), to\n                        generate a hash value for a definitive document that may\n                        be used as verification of the validity or authenticity of\n                        its information content.', 'FDP_DAU.1'),
('normal', 'PGFID-798945', 'This component additionally requires the ability to verify\n                        the identity of the user that provided the guarantee of\n                        authenticity (e.g. a trusted third party).', 'FDP_DAU.2'),
('normal', 'PGFID-798975', 'This component is used to specify the TSF-mediated exporting of user data\n                        without the export of its security attributes.', 'FDP_ETC.1'),
('normal', 'PGFID-798987', 'The user data is exported together with its security\n                        attributes. The security attributes are unambiguously\n                        associated with the user data. There are several ways of\n                        achieving this association. One way that this can be\n                        achieved is by physically collocating the user data and\n                        the security attributes (e.g. the same floppy), or by\n                        using cryptographic techniques such as secure signatures\n                        to associate the attributes and the user data., FTP_ITC, could be used to assure that the attributes\n                        are correctly received at the other trusted IT product\n                        while, FPT_TDC, can be used to make sure that\n                        those attributes are properly interpreted. Furthermore,, FTP_TRP, could be used to make sure that the\n                        export is being initiated by the proper user.', 'FDP_ETC.2'),
('normal', 'PGFID-799038', 'This component requires that an information flow control\n                        policy apply to a subset of the possible operations in the\n                        TOE.', 'FDP_IFC.1'),
('normal', 'PGFID-799138', 'It is important to note that the hierarchical relationship\n                        requirements identified in, FDP_IFF.2.4, need\n                        only apply to the information flow control security\n                        attributes for the information flow control SFPs that have\n                        been identified in, FDP_IFF.2.1, . This\n                        component is not meant to apply to other SFPs such as\n                        access control SFPs.', 'FDP_IFF.2'),
('normal', 'PGFID-799139', 'If it is the case that multiple information flow control\n                        SFPs are to be specified, and that each of these SFPs will\n                        have their own security attributes that are not related to\n                        one another, then the PP/ST author should iterate this\n                        component once for each of those SFPs. Otherwise a\n                        conflict might arise with the sub-items of, FDP_IFF.2.4, since the required relationships will\n                        not exist.', 'FDP_IFF.2'),
('normal', 'PGFID-799168', 'This component should be used when at least one of the\n                        SFPs that requires control of illicit information flows\n                        does not require elimination of flows.', 'FDP_IFF.3'),
('normal', 'PGFID-799169', 'For the specified illicit information flows, certain\n                        maximum capacities should be provided. In addition a PP/ST\n                        author has the ability to specify whether the illicit\n                        information flows must be audited.', 'FDP_IFF.3'),
('normal', 'PGFID-799190', 'This component should be used when all the SFPs that\n                        requires control of illicit information flows require\n                        elimination of some (but not necessarily all) illicit\n                        information flows.', 'FDP_IFF.4'),
('normal', 'PGFID-799297', 'This component is used to specify the import of user data\n                        that does not have reliable (or any) security attributes\n                        associated with it. This function requires that the\n                        security attributes for the imported user data be\n                        initialised within the TSF. It could also be the case that\n                        the PP/ST author specifies the rules for import. It may be\n                        appropriate, in some environments, to require that these\n                        attributes be supplied via a trusted path or a trusted\n                        channel mechanism.', 'FDP_ITC.1'),
('normal', 'PGFID-799315', 'This component is used to specify the import of user data\n                        that has reliable security attributes associated with\n                        it. This function relies upon the security attributes that\n                        are accurately and unambiguously associated with the\n                        objects on the import medium. Once imported, those objects\n                        will have those same attributes. This requires, FPT_TDC, to ensure the consistency of the data. It\n                        could also be the case that the PP/ST author specifies the\n                        rules for import.', 'FDP_ITC.2'),
('normal', 'PGFID-799387', 'This component is used in combination with either, FDP_ITT.1, or, FDP_ITT.2, . It ensures\n                        that the TSF checks received user data (and their\n                        attributes) for integrity., FDP_ITT.1, or, FDP_ITT.2, will provide the data in a manner such\n                        that it is protected from modification (so that, FDP_ITT.3, can detect any modifications).', 'FDP_ITT.3'),
('normal', 'PGFID-799388', 'The PP/ST author has to specify the types of errors that\n                        must be detected. The PP/ST author should consider:\n                        modification of data, substitution of data, unrecoverable\n                        ordering change of data, replay of data, incomplete data,\n                        in addition to other integrity errors.', 'FDP_ITT.3'),
('normal', 'PGFID-799389', 'The PP/ST author must specify the actions that the TSF\n                        should take on detection of a failure. For example: ignore\n                        the user data, request the data again, inform the\n                        authorised administrator, reroute traffic for other lines.', 'FDP_ITT.3'),
('normal', 'PGFID-799413', 'The PP/ST author has to specify the types of errors that\n                        must be detected. The PP/ST author should consider:\n                        modification of data, substitution of data, unrecoverable\n                        ordering change of data, replay of data, incomplete data,\n                        in addition to other integrity errors.', 'FDP_ITT.4'),
('normal', 'PGFID-799414', 'The PP/ST author should specify the attributes (and\n                        associated transmission channels) that necessitate\n                        integrity error monitoring', 'FDP_ITT.4'),
('normal', 'PGFID-799415', 'The PP/ST author must specify the actions that the TSF\n                        should take on detection of a failure. For example: ignore\n                        the user data, request the data again, inform the\n                        authorised administrator, reroute traffic for other lines.', 'FDP_ITT.4'),
('normal', 'PGFID-799455', 'This component requires that, for a subset of the objects\n                        in the TOE, the TSF will ensure that there is no available\n                        residual information contained in a resource allocated to\n                        those objects or deallocated from those objects.', 'FDP_RIP.1'),
('normal', 'PGFID-799473', 'This component requires that for all objects in the TOE,\n                        the TSF will ensure that there is no available residual\n                        information contained in a resource allocated to those\n                        objects or deallocated from those objects.', 'FDP_RIP.2'),
('normal', 'PGFID-799491', 'This component allows a user or subject to undo a set of\n                        operations on a predefined set of objects. The undo is\n                        only possible within certain limits, for example up to a\n                        number of characters or up to a time limit.', 'FDP_ROL.1');
INSERT INTO `fcousernotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-799505', 'This component enforces that the TSF provide the\n                        capability to rollback all operations; however, the user\n                        can choose to rollback only a part of them.', 'FDP_ROL.2'),
('normal', 'PGFID-799618', 'This component monitors data stored on media for integrity\n                        errors. The PP/ST author can specify different kinds of\n                        user data attributes that will be used as the basis for\n                        monitoring.', 'FDP_SDI.1'),
('normal', 'PGFID-799632', 'This component monitors data stored on media for integrity\n                        errors. The PP/ST author can specify which action should\n                        be taken in case an integrity error is detected.', 'FDP_SDI.2'),
('normal', 'PGFID-799656', 'Depending on the access control or information flow policies the TSF is\n                        required to send or receive user data in a manner such that the\n                        confidentiality of the user data is protected.', 'FDP_UCT.1'),
('normal', 'PGFID-799679', 'Depending on the access control or information flow policies the TSF is\n                        required to send or receive user data in a manner such that modification\n                        of the user data is detected. There is no requirement for a TSF mechanism\n                        to attempt to recover from the modification.', 'FDP_UIT.1'),
('normal', 'PGFID-801716', 'This component requires that all possible operations on\n                        objects, that are included in the SFP, are covered by an\n                        access control SFP.', 'FDP_ACC.2'),
('normal', 'PGFID-801717', 'The PP/ST author must demonstrate that each combination of\n                        objects and subjects is covered by an access control SFP.', 'FDP_ACC.2'),
('normal', 'PGFID-801719', 'This component requires that all possible operations that\n                        cause information to flow to and from subjects included in\n                        the SFP, are covered by an information flow control SFP.', 'FDP_IFC.2'),
('normal', 'PGFID-801720', 'The PP/ST author must demonstrate that each combination of\n                        information flows and subjects is covered by an\n                        information flow control SFP.', 'FDP_IFC.2'),
('normal', 'PGFID-802680', 'A grouping attribute allows a single group of users to be\n                        associated with an operation for the purposes of access\n                        control. If required, the refinement operation should be\n                        used to specify the maximum number of definable groups,\n                        the maximum membership of a group, and the maximum number\n                        of groups to which a user can concurrently be\n                        associated.', 'FDP_ACF.1'),
('normal', 'PGFID-804073', 'This component provides the ability to recover from a set\n                        of identified transmission errors. It accomplishes this\n                        task without help from the source trusted IT product. For\n                        example, if certain errors are detected, the transmission\n                        protocol must be robust enough to allow the TSF to recover\n                        from the error based on checksums and other information\n                        available within that protocol.', 'FDP_UIT.3'),
('normal', 'PGFID-804347', 'This component requires security attributes on\n                        information, and on subjects that cause that information\n                        to flow and subjects that act as recipients of that\n                        information. The attributes of the containers of the\n                        information should also be considered if it is desired\n                        that they should play a part in information flow control\n                        decisions or if they are covered by an access control\n                        policy. This component specifies the key rules that are\n                        enforced, and describes how security attributes are\n                        derived.', 'FDP_IFF.1'),
('normal', 'PGFID-804361', 'This component should be used when the SFPs that require\n                        control of illicit information flows require elimination\n                        of all illicit information flows. However, the PP/ST\n                        author should carefully consider the potential impact that\n                        eliminating all illicit information flows might have on\n                        the normal functional operation of the TOE. Many practical\n                        applications have shown that there is an indirect\n                        relationship between illicit information flows and normal\n                        functionality within a TOE and eliminating all illicit\n                        information flows may result in less than desired\n                        functionality.', 'FDP_IFF.5'),
('normal', 'PGFID-804370', 'This component should be used when it is desired that the\n                        TSF provide the ability to monitor the use of illicit\n                        information flows that exceed a specified capacity. If it\n                        is desired that such flows be audited, then this component\n                        could serve as the source of audit events to be used by\n                        components from the, FAU_GEN, family.', 'FDP_IFF.6'),
('normal', 'PGFID-804454', 'This component is used in combination with, FDP_ITT.2, . It ensures that the TSF checks received\n                        user data, that has been transmitted by separate channels\n                        (based on values of specified security attributes), for\n                        integrity. It allows the PP/ST author to specify actions\n                        to be taken upon detection of an integrity error.', 'FDP_ITT.4'),
('normal', 'PGFID-804455', 'For example, this component could be used to provide\n                        different integrity error detection and action for\n                        information at different integrity levels.', 'FDP_ITT.4'),
('normal', 'PGFID-804701', 'This component also provides requirements for the access\n                        control security functions to be able to explicitly\n                        authorise or deny access to an object based upon security\n                        attributes. This could be used to provide privilege,\n                        access rights, or access authorisations within the\n                        TOE. Such privileges, rights, or authorisations could\n                        apply to users, subjects (representing users or\n                        applications), and objects.', 'FDP_ACF.1'),
('normal', 'PGFID-804897', 'This component does not specify the details of how a\n                        security attribute is assigned (i.e. user versus\n                        process). Flexibility in policy is provided by having\n                        assignments that allow specification of additional policy\n                        and function requirements, as necessary.', 'FDP_IFF.1'),
('normal', 'PGFID-804914', 'phrases the requirements for the set of\n                        security attributes to form a lattice. A number of information\n                        flow policies defined in the literature and implemented in IT\n                        products are based on a set of security attributes that form a\n                        lattice., FDP_IFF.2.6, is specifically included to\n                        address this type of information flow policies., FDP_IFF.2.6', 'FDP_IFF.2'),
('normal', 'PGFID-806161', 'This component provides requirements for a mechanism that\n                        mediates access control based on security attributes\n                        associated with subjects and objects. Each object and\n                        subject has a set of associated attributes, such as\n                        location, time of creation, access rights (e.g., Access\n                        Control Lists (ACLs)). This component allows the PP/ST\n                        author to specify the attributes that will be used for the\n                        access control mediation. This component allows access\n                        control rules, using these attributes, to be\n                        specified.', 'FDP_ACF.1'),
('normal', 'PGFID-806416', 'This component also provides requirements for the\n                        information flow control functions to be able to\n                        explicitly authorise and deny an information flow based\n                        upon security attributes.  This could be used to implement\n                        a privilege policy that covers exceptions to the basic\n                        policy defined in this component.', 'FDP_IFF.1'),
('normal', 'PGFID-806640', 'This component provides the ability to recover from a set\n                        of identified transmission errors, if required, with the\n                        help of the other trusted IT product. As the other trusted\n                        IT product is outside the TOE, the TSF cannot control its\n                        behaviour. However, it can provide functions that have the\n                        ability to cooperate with the other trusted IT product for\n                        the purposes of recovery. For example, the TSF could\n                        include functions that depend upon the source trusted IT\n                        product to re-send the data in the event that an error is\n                        detected. This component deals with the ability of the TSF\n                        to handle such an error recovery.', 'FDP_UIT.2'),
('normal', 'PGFID-806670', 'This component could, for example, be used to provide\n                        different forms of protection to information with\n                        different clearance levels.', 'FDP_ITT.2'),
('normal', 'PGFID-807100', 'One of the ways to achieve separation of data when it is\n                        transmitted is through the use of separate logical or\n                        physical channels.', 'FDP_ITT.2'),
('normal', 'PGFID-807930', 'This component requires that the named information flow control\n                        SFP uses hierarchical security attributes that\n                        form a lattice.', 'FDP_IFF.2'),
('normal', 'PGFID-852957', 'An action should be taken for follow up action in the\n                        event of an alarm. This action can be to inform the\n                        authorised user, to present the authorised user with a set\n                        of possible containment actions, or to take corrective\n                        actions. The timing of the actions should be carefully\n                        considered by the PP/ST author.', 'FAU_ARP.1'),
('normal', 'PGFID-853004', 'This component defines requirements to identify the\n                        auditable events for which audit records should be\n                        generated, and the information to be provided in the audit\n                        records.', 'FAU_GEN.1'),
('normal', 'PGFID-853008', ', FAU_GEN.1, by itself might be used\n                        when the SFRs do not require that individual user identities\n                        be associated with audit events. This could be appropriate\n                        when the PP/ST also contains privacy requirements. If the\n                        user identity must be incorporated, FAU_GEN.2, could be used in addition.', 'FAU_GEN.1'),
('normal', 'PGFID-853040', 'This component addresses the requirement of accountability\n                        of auditable events at the level of individual user\n                        identity. This component should be used in addition to, FAU_GEN.1, .', 'FAU_GEN.2'),
('normal', 'PGFID-853044', 'There is a potential conflict between the audit and privacy\n                        requirements. For audit purposes it may be desirable to know\n                        who performed an action. The user may want to keep his/her\n                        actions to himself/herself and not be identified by other\n                        persons (e.g. a site with job offers). Or it might be\n                        required in the Organisational Security Policy that the\n                        identity of the users must be protected. In those cases the\n                        objectives for audit and privacy might contradict each\n                        other. Therefore if this requirement is selected and privacy\n                        is important, inclusion of the component user pseudonimity\n                        might be considered. Requirements on determining the real\n                        user name based on its pseudonym are specified in the\n                        privacy class.', 'FAU_GEN.2'),
('normal', 'PGFID-853091', 'A, com.unicampania.xmltodb.model.parasequence.Italic@721d8ab5, is a structure that\n                        characterises the behaviour of users and/or subjects; it\n                        represents how the users/subjects interact with the TSF in\n                        a variety of ways. Patterns of usage are established with\n                        respect to the various types of activity the\n                        users/subjects engage in (e.g. patterns in exceptions\n                        raised, patterns in resource utilisation (when, which,\n                        how), patterns in actions performed). The ways in which\n                        the various types of activity are recorded in the profile\n                        (e.g. resource measures, event counters, timers) are\n                        referred to as, com.unicampania.xmltodb.model.parasequence.Italic@33bb3f86, .', 'FAU_SAA.2'),
('normal', 'PGFID-853092', 'Each profile represents the expected patterns of usage\n                        performed by members of the, com.unicampania.xmltodb.model.parasequence.Italic@1946384, . This pattern may be based on past use\n                        (historical patterns) or on normal use for users of\n                        similar target groups (expected behaviour). A profile\n                        target group refers to one or more users who interact with\n                        the TSF. The activity of each member of the profile group\n                        is used by the analysis tool in establishing the usage\n                        patterns represented in the profile. The following are\n                        some examples of profile target groups:', 'FAU_SAA.2'),
('normal', 'PGFID-853098', 'Each member of a profile target group is assigned an\n                        individual, com.unicampania.xmltodb.model.parasequence.Italic@6ac4c3f7, that\n                        represents how closely that member\'s new\n                        activity corresponds to the established patterns of usage\n                        represented in the group profile.', 'FAU_SAA.2'),
('normal', 'PGFID-853099', 'The sophistication of the anomaly detection tool will\n                        largely be determined by the number of target profile\n                        groups required by the PP/ST and the complexity of the\n                        required profile metrics.', 'FAU_SAA.2'),
('normal', 'PGFID-853103', 'The PP/ST author should enumerate specifically what activity\n                        should be monitored and/or analysed by the TSF. The PP/ST\n                        author should also identify specifically what information\n                        pertaining to the activity is necessary to construct the\n                        usage profiles.', 'FAU_SAA.2'),
('normal', 'PGFID-853107', ', FAU_SAA.2, requires that the TSF\n                        maintain profiles of system usage. The word maintain implies\n                        that the anomaly detector is actively updating the usage\n                        profile based on new activity performed by the profile\n                        target members. It is important here that the metrics for\n                        representing user activity are defined by the PP/ST\n                        author. For example, there may be a thousand different\n                        actions an individual may be capable of performing, but the\n                        anomaly detector may choose to monitor a subset of that\n                        activity. Anomalous activity gets integrated into the\n                        profile just like non-anomalous activity (assuming the tool\n                        is monitoring those actions). Things that may have appeared\n                        anomalous four months ago, might over time become the norm\n                        (and vice-versa) as the user\'s work duties change. The TSF\n                        wouldn\'t be able to capture this notion if it filtered out\n                        anomalous activity from the profile updating\n                        algorithms.', 'FAU_SAA.2'),
('normal', 'PGFID-853108', 'Administrative notification should be provided such that\n                        the authorised user understands the significance of the\n                        suspicion rating.', 'FAU_SAA.2'),
('normal', 'PGFID-853109', 'The PP/ST author should define how to interpret suspicion\n                        ratings and the conditions under which anomalous activity is\n                        indicated to the, FAU_ARP, mechanism.', 'FAU_SAA.2'),
('normal', 'PGFID-853126', 'In practice, it is at best rare when an analysis tool can\n                        detect with certainty when a security violation is\n                        imminent. However, there do exist some system events that\n                        are so significant that they are always worthy of\n                        independent review. Example of such events include the\n                        deletion of a key TSF security data file (e.g. the\n                        password file) or activity such as a remote user\n                        attempting to gain administrative privilege. These events\n                        are referred to as signature events in that their\n                        occurrence in isolation from the rest of the system\n                        activity are indicative of intrusive activity.', 'FAU_SAA.3'),
('normal', 'PGFID-853127', 'The complexity of a given tool will depend greatly on the\n                        assignments defined by the PP/ST author in identifying the\n                        base set of, com.unicampania.xmltodb.model.parasequence.Italic@7412a438, .', 'FAU_SAA.3'),
('normal', 'PGFID-853128', 'The PP/ST author should enumerate specifically what events\n                        should be monitored by the TSF in order to perform the\n                        analysis. The PP/ST author should identify specifically\n                        what information pertaining to the event is necessary to\n                        determine if the event maps to a signature event.', 'FAU_SAA.3'),
('normal', 'PGFID-853129', 'Administrative notification should be provided such that\n                        the authorised user understands the significance of the\n                        event and the appropriate possible responses.', 'FAU_SAA.3'),
('normal', 'PGFID-853130', 'An effort was made in the specification of these\n                        requirements to avoid a dependency on audit data as the\n                        sole input for monitoring system activity. This was done\n                        in recognition of the existence of previously developed\n                        intrusion detection tools that do not perform their\n                        analyses of system activity solely through the use of\n                        audit data (examples of other input data include network\n                        datagrams, resource/accounting data, or combinations of\n                        various system data).', 'FAU_SAA.3'),
('normal', 'PGFID-853134', 'The elements of, FAU_SAA.3, do not\n                        require that the TSF implementing the immediate attack\n                        heuristics be the same TSF whose activity is being\n                        monitored. Thus, one can develop an intrusion detection\n                        component that operates independently of the system whose\n                        system activity is being analysed.', 'FAU_SAA.3'),
('normal', 'PGFID-853153', 'In practice, it is at best rare when an analysis tool can\n                        detect with certainty when a security violation is\n                        imminent. However, there do exist some system events that\n                        are so significant they are always worthy of independent\n                        review. Example of such events include the deletion of a key\n                        TSF security data file (e.g. the password file) or activity\n                        such as a remote user attempting to gain administrative\n                        privilege. These events are referred to as signature events\n                        in that their occurrence in isolation from the rest of the\n                        system activity are indicative of intrusive activity. Event\n                        sequences are an ordered set of signature events that might\n                        indicate intrusive activity.', 'FAU_SAA.4'),
('normal', 'PGFID-853154', 'The complexity of a given tool will depend greatly on the\n                        assignments defined by the PP/ST author in identifying the\n                        base set of signature events and event sequences.', 'FAU_SAA.4'),
('normal', 'PGFID-853156', 'The PP/ST author should enumerate specifically what events\n                        should be monitored by the TSF in order to perform the\n                        analysis. The PP/ST author should identify specifically\n                        what information pertaining to the event is necessary to\n                        determine if the event maps to a signature event.', 'FAU_SAA.4'),
('normal', 'PGFID-853157', 'Administrative notification should be provided such that\n                        the authorised user understands the significance of the\n                        event and the appropriate possible responses.', 'FAU_SAA.4'),
('normal', 'PGFID-853158', 'An effort was made in the specification of these\n                        requirements to avoid a dependency on audit data as the\n                        sole input for monitoring system activity. This was done\n                        in recognition of the existence of previously developed\n                        intrusion detection tools that do not perform their\n                        analyses of system activity solely through the use of\n                        audit data (examples of other input data include network\n                        datagrams, resource/accounting data, or combinations of\n                        various system data). Levelling, therefore, requires the\n                        PP/ST author to specify the type of input data used to\n                        monitor system activity.', 'FAU_SAA.4'),
('normal', 'PGFID-853163', 'The elements of, FAU_SAA.4, do not\n                        require that the TSF implementing the complex attack\n                        heuristics be the same TSF whose activity is being\n                        monitored. Thus, one can develop an intrusion detection\n                        component that operates independently of the system whose\n                        system activity is being analysed.', 'FAU_SAA.4'),
('normal', 'PGFID-853203', 'This component is used to specify that users and/or\n                        authorised users can read the audit records. These audit\n                        records will be provided in a manner appropriate to the\n                        user. There are different types of users (human users,\n                        machine users) that might have different needs.', 'FAU_SAR.1'),
('normal', 'PGFID-853204', 'The content of the audit records that can be viewed can be\n                        specified.', 'FAU_SAR.1'),
('normal', 'PGFID-853222', 'This component specifies that any users not identified in, FAU_SAR.1, will not be able to read\n                        the audit records.', 'FAU_SAR.2'),
('normal', 'PGFID-853229', 'This component is used to specify that it should be\n                        possible to perform selection of the audit data to be\n                        reviewed. If based on multiple criteria, those criteria\n                        should be related together with logical\n                        (i.e. ``and\'\' or\n                        ``or\'\') relations, and the tools\n                        should provide the ability to manipulate audit data\n                        (e.g. sort, filter).', 'FAU_SAR.3'),
('normal', 'PGFID-853268', 'This component defines the selection criteria used, and the\n                        resulting audited subsets of the set of all auditable events,\n                        based on user attributes, subject attributes, object attributes,\n                        or event types.', 'FAU_SEL.1'),
('normal', 'PGFID-853269', 'The existence of individual user identities is not assumed\n                        for this component. This allows for TOEs such as routers\n                        that may not support the notion of users.', 'FAU_SEL.1'),
('normal', 'PGFID-853270', 'For a distributed environment, the host identity could be\n                        used as a selection criteria for events to be audited.', 'FAU_SEL.1'),
('normal', 'PGFID-853271', 'The management function, FMT_MTD.1, will handle the rights of authorised users to query or\n                        modify the selections.', 'FAU_SEL.1'),
('normal', 'PGFID-853316', 'In a distributed environment, as the location of the audit\n                        trail is in the TSF, but not necessarily co-located with\n                        the function generating the audit data, the PP/ST author\n                        could request authentication of the originator of the\n                        audit record, or non-repudiation of the origin of the\n                        record prior storing this record in the audit trail.', 'FAU_STG.1'),
('normal', 'PGFID-853323', 'This component allows the PP/ST author to specify to which\n                        metrics the audit trail should conform.', 'FAU_STG.2'),
('normal', 'PGFID-853324', 'In a distributed environment, as the location of the audit\n                        trail is in the TSF, but not necessarily co-located with\n                        the function generating the audit data, the PP/ST author\n                        could request authentication of the originator of the\n                        audit record, or non-repudiation of the origin of the\n                        record prior storing this record in the audit trail.', 'FAU_STG.2'),
('normal', 'PGFID-853360', 'This component specifies the behaviour of the TOE if the audit\n                        trail is full: either audit records are ignored, or the TOE is\n                        frozen such that no audited events can take place. The\n                        requirement also states that no matter how the requirement is\n                        instantiated, the authorised user with specific rights to this\n                        effect, can continue to generate audited events (actions). The\n                        reason is that otherwise the authorised user could not even\n                        reset the TOE. Consideration should be given to the choice of\n                        the action to be taken by the TSF in the case of audit storage\n                        exhaustion, as ignoring events, which provides better\n                        availability of the TOE, will also permit actions to be\n                        performed without being recorded and without the user being\n                        accountable.', 'FAU_STG.4'),
('normal', 'PGFID-854537', 'The TSF will protect the stored audit records in the audit trail from unauthorised\n                        deletion and modification. It is noted that in some TOEs the\n                        auditor (role) might not be authorised to delete the audit\n                        records for a certain period of time.', 'FAU_STG.1'),
('normal', 'PGFID-9045', 'This component contains requirements on the values that\n                        can be assigned to security attributes. The assigned\n                        values should be such that the TOE will remain in a secure\n                        state.', 'FMT_MSA.2'),
('normal', 'PGFID-9046', 'The definition of what ``secure\'\' means is\n                        not answered in this component but is left to the\n                        development of the TOE and the resulting information in the\n                        guidance. An example could be that if a user account is\n                        created, it should have a non-trivial password.', 'FMT_MSA.2'),
('normal', 'PGFID-9047', 'This component ensures that the identity of a user is\n                        protected from disclosure. There may be instances,\n                        however, that a given authorised user can determine who\n                        performed certain actions. This component gives the\n                        flexibility to capture either a limited or total privacy\n                        policy.', 'FPR_ANO.1'),
('normal', 'PGFID-9060', 'The default value of a parameter is the values the\n                        parameter takes when it is instantiated without\n                        specifically assigned values. An initial value is provided\n                        during the instantiation (creation) of a parameter and\n                        overrides the default value.', 'FMT_MTD.1'),
('normal', 'PGFID-9070', 'This component is used to ensure that the TSF is not\n                        allowed to know the identity of the user.', 'FPR_ANO.2'),
('normal', 'PGFID-9084', 'This component specifies limits on TSF data, and actions\n                        to be taken if these limits are exceeded. This component,\n                        for example, will allow limits on the size of the audit\n                        trail to be defined, and specification of the actions to\n                        be taken when these limits are exceeded.', 'FMT_MTD.2'),
('normal', 'PGFID-9153', 'This component specifies the different roles that the TSF\n                        should recognise. Often the system distinguishes between\n                        the owner of an entity, an administrator and other users.', 'FMT_SMR.1'),
('normal', 'PGFID-9164', 'This component specifies the different roles that the TSF\n                        should recognise, and conditions on how those roles could\n                        be managed. Often the system distinguishes between the\n                        owner of an entity, an administrator and other users.', 'FMT_SMR.2'),
('normal', 'PGFID-9180', 'This component specifies that an explicit request must be\n                        given to assume the specific role.', 'FMT_SMR.3'),
('normal', 'PGFID-9200', 'In this component, the TSF shall ensure that under\n                        specified conditions the user identity related to a\n                        provided reference can be determined.', 'FPR_PSE.2'),
('normal', 'PGFID-9204', 'In, FPR_PSE.1, the TSF shall provide an alias\n                        instead of the user identity. When the specified\n                        conditions are satisfied, the user identity to which the\n                        alias belong can be determined. An example of such a\n                        condition in an electronic cash environment is: ``\n                        The TSF shall provide the notary a capability to determine\n                        the user identity based on the provided alias only under\n                        the conditions that a check has been issued\n                        twice.\'\'.', 'FPR_PSE.2'),
('normal', 'PGFID-9208', 'This component specifies requirements on the revocation of\n                        rights. It requires the specification of the revocation\n                        rules. Examples are:', 'FMT_REV.1'),
('normal', 'PGFID-9262', 'In this component, the TSF shall ensure that the provided\n                        reference meets certain construction rules, and thereby\n                        can be used in a secure way by potentially insecure\n                        subjects.', 'FPR_PSE.3'),
('normal', 'PGFID-9263', 'If a user wants to use disk resources without disclosing\n                        its identity, pseudonymity can be used. However, every\n                        time the user accesses the system, the same alias must be\n                        used. Such conditions can be specified in this component.', 'FPR_PSE.3'),
('normal', 'PGFID-9281', 'This component requires that the TSF provide default\n                        values for relevant object security attributes, which can\n                        be overridden by an initial value. It may still be\n                        possible for a new object to have different security\n                        attributes at creation, if a mechanism exists to specify\n                        the permissions at time of creation.', 'FMT_MSA.3'),
('normal', 'PGFID-9368', 'This component requires that the use of a function or\n                        resource cannot be observed by unauthorised users.', 'FPR_UNO.1'),
('normal', 'PGFID-9396', 'This component is used to require that there will be one\n                        or more authorised users with the rights to view the\n                        resource utilisation. Without this component, this review\n                        is allowed, but not mandated.', 'FPR_UNO.4'),
('normal', 'PGFID-9581', 'This component allows identified roles to manage the\n                        security functions of the TSF. This might entail obtaining\n                        the current status of a security function, disabling or\n                        enabling the security function, or modifying the behaviour\n                        of the security function. An example of modifying the\n                        behaviour of the security functions is changing of\n                        authentication mechanisms.', 'FMT_MOF.1'),
('normal', 'PGFID-9651', 'This component allows users with a certain role to manage\n                        values of TSF data. The users are assigned to a role\n                        within the component, FMT_SMR.1, .', 'FMT_MTD.1'),
('normal', 'PGFID-9970', 'The conditions on those roles specify the\n                        interrelationship between the different roles, as well as\n                        restrictions on when the role can be assumed by a user.', 'FMT_SMR.2');

-- --------------------------------------------------------

--
-- Table structure for table `feassignmentitem`
--

CREATE TABLE `feassignmentitem` (
  `idr` varchar(20) DEFAULT NULL,
  `text` varchar(500) DEFAULT NULL,
  `idf` varchar(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `feassignmentitem`
--

INSERT INTO `feassignmentitem` (`idr`, `text`, `idf`) VALUES
('FAU_ARP.1.10', '\n                            list of actions\n                        ', 'FAU_ARP.1.10'),
('FAU_SAA.2.10', '\n                            the profile target group\n                        ', 'FAU_SAA.2.10'),
('FAU_SAA.2.30', '\n                            conditions under which anomalous activity is reported by\n                            the TSF\n                        ', 'FAU_SAA.2.30'),
('FAU_SAA.3.10', '\n                            a subset of system events\n                        ', 'FAU_SAA.3.10'),
('FAU_SAA.3.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.3.20'),
('FAU_SAA.4.10', '\n                            list of sequences of system events whose occurrence are\n                            representative of known penetration scenarios\n                        ', 'FAU_SAA.4.10'),
('FAU_SAA.4.11', '\n                            a subset of system events\n                        ', 'FAU_SAA.4.11'),
('FAU_SAA.4.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.4.20'),
('FAU_SAR.1.10', '\n                            authorised users\n                        ', 'FAU_SAR.1.10'),
('FAU_SAR.1.11', '\n                            list of audit information\n                        ', 'FAU_SAR.1.11'),
('FAU_SAR.3.10', '\n                        methods of selection and/or ordering\n                    ', 'FAU_SAR.3.10'),
('FAU_SAR.3.11', '\n                        criteria with logical relations\n                    ', 'FAU_SAR.3.11'),
('FAU_STG.2.30', '\n                            metric for saving audit records\n                        ', 'FAU_STG.2.30'),
('FAU_STG.3.10', '\n                            actions to be taken in case\n                            of possible audit storage failure\n                        ', 'FAU_STG.3.10'),
('FAU_STG.3.11', '\n                            pre-defined limit\n                        ', 'FAU_STG.3.11'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FCO_NRO.1.10', '\n                            list of information types\n                        ', 'FCO_NRO.1.10'),
('FCO_NRO.1.20', '\n                            list of attributes\n                        ', 'FCO_NRO.1.20'),
('FCO_NRO.1.21', 'list of information fields', 'FCO_NRO.1.21'),
('FCO_NRO.1.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.1.30'),
('FCO_NRO.2.10', '\n                            list of information types\n                        ', 'FCO_NRO.2.10'),
('FCO_NRO.2.20', '\n                            list of attributes\n                        ', 'FCO_NRO.2.20'),
('FCO_NRO.2.21', '\n                            list of information fields\n                        ', 'FCO_NRO.2.21'),
('FCO_NRO.2.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.2.30'),
('FCO_NRR.1.10', '\n                            list of information types\n                        ', 'FCO_NRR.1.10'),
('FCO_NRR.1.20', 'list of attributes', 'FCO_NRR.1.20'),
('FCO_NRR.1.21', '\n                            list of information fields\n                        ', 'FCO_NRR.1.21'),
('FCO_NRR.1.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.1.30'),
('FCO_NRR.2.10', '\n                        list of information types\n                    ', 'FCO_NRR.2.10'),
('FCO_NRR.2.20', 'list of attributes', 'FCO_NRR.2.20'),
('FCO_NRR.2.21', '\n                            list of information fields\n                        ', 'FCO_NRR.2.21'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCS_CKM.1.10', '\n                            cryptographic key generation algorithm\n                        ', 'FCS_CKM.1.10'),
('FCS_CKM.1.11', '\n                            cryptographic key sizes\n                        ', 'FCS_CKM.1.11'),
('FCS_CKM.1.12', '\n                            list of standards\n                        ', 'FCS_CKM.1.12'),
('FCS_CKM.2.10', '\n                            cryptographic key distribution method\n                        ', 'FCS_CKM.2.10'),
('FCS_CKM.2.11', '\n                            list of standards\n                        ', 'FCS_CKM.2.11'),
('FCS_CKM.3.10', '\n                            type of cryptographic key access\n                        ', 'FCS_CKM.3.10'),
('FCS_CKM.3.11', '\n                            cryptographic key access method\n                        ', 'FCS_CKM.3.11'),
('FCS_CKM.3.12', '\n                            list of standards\n                        ', 'FCS_CKM.3.12'),
('FCS_CKM.4.10', '\n                            cryptographic key destruction method\n                        ', 'FCS_CKM.4.10'),
('FCS_CKM.4.11', '\n                            list of standards\n                        ', 'FCS_CKM.4.11'),
('FCS_COP.1.10', '\n                            list of cryptographic operations\n                        ', 'FCS_COP.1.10'),
('FCS_COP.1.11', '\n                            cryptographic algorithm\n                        ', 'FCS_COP.1.11'),
('FCS_COP.1.12', '\n                            cryptographic key sizes\n                        ', 'FCS_COP.1.12'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FDP_ACC.1.10', '\n                            access control SFP\n                        ', 'FDP_ACC.1.10'),
('FDP_ACC.1.11', '\n                            list of subjects, objects, and operations among subjects\n                            and objects covered by the SFP\n                        ', 'FDP_ACC.1.11'),
('FDP_ACC.2.10', '\n                            access control SFP\n                        ', 'FDP_ACC.2.10'),
('FDP_ACC.2.11', '\n                            list of subjects and objects\n                        ', 'FDP_ACC.2.11'),
('FDP_ACF.1.10', '\n                        access control SFP\n                    ', 'FDP_ACF.1.10'),
('FDP_ACF.1.11', '\n                        list of subjects and objects controlled under the\n                        indicated SFP, and for each, the SFP-relevant security\n                        attributes, or named groups of SFP-relevant security\n                        attributes\n                    ', 'FDP_ACF.1.11'),
('FDP_ACF.1.20', '\n                            rules governing access among controlled subjects and\n                            controlled objects using controlled operations on\n                            controlled objects\n                        ', 'FDP_ACF.1.20'),
('FDP_ACF.1.30', '\n                            rules, based on security attributes, that explicitly\n                            authorise access of subjects to objects\n                        ', 'FDP_ACF.1.30'),
('FDP_ACF.1.40', 'rules, based on security attributes, that\n                        explicitly deny access of subjects to objects', 'FDP_ACF.1.40'),
('FDP_DAU.1.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.1.10'),
('FDP_DAU.1.20', '\n                            list of subjects\n                        ', 'FDP_DAU.1.20'),
('FDP_DAU.2.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.2.10'),
('FDP_DAU.2.20', '\n                            list of subjects\n                        ', 'FDP_DAU.2.20'),
('FDP_ETC.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.1.10'),
('FDP_ETC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.2.10'),
('FDP_ETC.2.40', '\n                            additional exportation control rules\n                        ', 'FDP_ETC.2.40'),
('FDP_IFC.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.1.10'),
('FDP_IFC.1.11', '\n                            list of subjects, information, and operations that cause\n                            controlled information to flow to and from controlled\n                            subjects covered by the SFP\n                        ', 'FDP_IFC.1.11'),
('FDP_IFC.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.2.10'),
('FDP_IFC.2.11', '\n                            list of subjects and information\n                        ', 'FDP_IFC.2.11'),
('FDP_IFF.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.1.10'),
('FDP_IFF.1.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.1.11'),
('FDP_IFF.1.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.1.20'),
('FDP_IFF.1.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.1.30'),
('FDP_IFF.1.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.1.40'),
('FDP_IFF.1.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.1.50'),
('FDP_IFF.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.2.10'),
('FDP_IFF.2.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.2.11'),
('FDP_IFF.2.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.2.20'),
('FDP_IFF.2.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.2.30'),
('FDP_IFF.2.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.2.40'),
('FDP_IFF.2.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.2.50'),
('FDP_IFF.3.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.3.10'),
('FDP_IFF.3.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.3.11'),
('FDP_IFF.3.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.3.12'),
('FDP_IFF.4.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.4.10'),
('FDP_IFF.4.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.11'),
('FDP_IFF.4.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.4.12'),
('FDP_IFF.4.20', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.20'),
('FDP_IFF.5.10', '\n                            name of information flow control SFP\n                        ', 'FDP_IFF.5.10'),
('FDP_IFF.6.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.6.10'),
('FDP_IFF.6.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.6.11'),
('FDP_IFF.6.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.6.12'),
('FDP_ITC.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_ITC.1.10'),
('FDP_ITC.1.30', '\n                            additional importation control rules\n                        ', 'FDP_ITC.1.30'),
('FDP_ITC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITC.2.10'),
('FDP_ITC.2.50', '\n                            additional importation control rules\n                        ', 'FDP_ITC.2.50'),
('FDP_ITT.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.1.10'),
('FDP_ITT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.2.10'),
('FDP_ITT.2.20', '\n                            security attributes that require separation\n                        ', 'FDP_ITT.2.20'),
('FDP_ITT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.3.10'),
('FDP_ITT.3.11', '\n                            integrity errors\n                        ', 'FDP_ITT.3.11'),
('FDP_ITT.3.20', '\n                            specify the action to be taken upon integrity error\n                        ', 'FDP_ITT.3.20'),
('FDP_ITT.4.10', '\n                            access control SFP(s) and/or information flow\n                            control SFP(s)\n                        ', 'FDP_ITT.4.10'),
('FDP_ITT.4.11', '\n                            integrity errors\n                        ', 'FDP_ITT.4.11'),
('FDP_ITT.4.12', '\n                            security attributes that require separate transmission\n                            channels\n                        ', 'FDP_ITT.4.12'),
('FDP_ITT.4.20', '\n                            specify the action to be taken upon integrity\n                            error\n                        ', 'FDP_ITT.4.20'),
('FDP_RIP.1.10', '\n                            list of objects\n                        ', 'FDP_RIP.1.10'),
('FDP_ROL.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.1.10'),
('FDP_ROL.1.11', '\n                            list of operations\n                        ', 'FDP_ROL.1.11'),
('FDP_ROL.1.12', '\n                        information and/or list of objects\n                    ', 'FDP_ROL.1.12'),
('FDP_ROL.1.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.1.20'),
('FDP_ROL.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.2.10'),
('FDP_ROL.2.11', '\n                            list of objects\n                        ', 'FDP_ROL.2.11'),
('FDP_ROL.2.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.2.20'),
('FDP_SDI.1.10', '\n                            integrity errors\n                        ', 'FDP_SDI.1.10'),
('FDP_SDI.1.11', '\n                            user data attributes\n                        ', 'FDP_SDI.1.11'),
('FDP_SDI.2.10', '\n                            integrity errors\n                        ', 'FDP_SDI.2.10'),
('FDP_SDI.2.11', '\n                            user data attributes\n                        ', 'FDP_SDI.2.11'),
('FDP_SDI.2.20', '\n                            action to be taken\n                        ', 'FDP_SDI.2.20'),
('FDP_UCT.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UCT.1.10'),
('FDP_UIT.1.10', 'access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UIT.1.10'),
('FDP_UIT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.2.10'),
('FDP_UIT.2.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.2.11'),
('FDP_UIT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.3.10'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FIA_AFL.1.10', '\n                            list of authentication events\n                        ', 'FIA_AFL.1.10'),
('FIA_AFL.1.20', '\n                        list of actions\n                    ', 'FIA_AFL.1.20'),
('FIA_ATD.1.10', '\n                            list of security attributes\n                        ', 'FIA_ATD.1.10'),
('FIA_SOS.1.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.1.10'),
('FIA_SOS.2.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.2.10'),
('FIA_SOS.2.20', '\n                            list of TSF functions\n                        ', 'FIA_SOS.2.20'),
('FIA_UAU.1.10', '\n                            list of TSF mediated actions\n                        ', 'FIA_UAU.1.10'),
('FIA_UAU.4.10', '\n                            identified authentication mechanism(s)\n                        ', 'FIA_UAU.4.10'),
('FIA_UAU.5.10', '\n                            list of multiple authentication mechanisms\n                        ', 'FIA_UAU.5.10'),
('FIA_UAU.5.20', '\n                            rules describing how the multiple authentication\n                            mechanisms provide authentication\n                        ', 'FIA_UAU.5.20'),
('FIA_UAU.6.10', '\n                            list of conditions under which re-authentication is\n                            required\n                        ', 'FIA_UAU.6.10'),
('FIA_UAU.7.10', '\n                            list of feedback\n                        ', 'FIA_UAU.7.10'),
('FIA_UID.1.10', '\n                            list of TSF-mediated actions\n                        ', 'FIA_UID.1.10'),
('FIA_USB.1.10', '\n                    list of user security attributes\n                ', 'FIA_USB.1.10'),
('FIA_USB.1.20', '\n                    rules for the initial association of attributes\n                ', 'FIA_USB.1.20'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FMT_MOF.1.10', '\n                            list of functions\n                        ', 'FMT_MOF.1.10'),
('FMT_MOF.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MOF.1.11'),
('FMT_MSA.1.10', '\n                        access control SFP(s), information flow control SFP(s)\n                    ', 'FMT_MSA.1.10'),
('FMT_MSA.1.11', '\n                            list of security attributes\n                        ', 'FMT_MSA.1.11'),
('FMT_MSA.1.12', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.1.12'),
('FMT_MSA.2.10', '\n                    list of security attributes\n                ', 'FMT_MSA.2.10'),
('FMT_MSA.3.10', '\n                            access control SFP, information flow control SFP\n                        ', 'FMT_MSA.3.10'),
('FMT_MSA.3.20', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.3.20'),
('FMT_MSA.4.10', '\n                rules for setting the values of security attributes\n            ', 'FMT_MSA.4.10'),
('FMT_MTD.1.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.1.10'),
('FMT_MTD.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.1.11'),
('FMT_MTD.2.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.2.10'),
('FMT_MTD.2.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.2.11'),
('FMT_MTD.2.20', '\n                            actions to be taken\n                        ', 'FMT_MTD.2.20'),
('FMT_MTD.3.10', '\n                    list of TSF data\n                ', 'FMT_MTD.3.10'),
('FMT_REV.1.10', '\n                        list of security attributes\n                    ', 'FMT_REV.1.10'),
('FMT_REV.1.11', '\n                        the authorised identified roles\n                    ', 'FMT_REV.1.11'),
('FMT_REV.1.20', '\n                            specification of revocation rules\n                        ', 'FMT_REV.1.20'),
('FMT_SAE.1.10', '\n                            list of security attributes for which expiration is to\n                            be supported\n                        ', 'FMT_SAE.1.10'),
('FMT_SAE.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_SAE.1.11'),
('FMT_SAE.1.20', '\n                            list of actions to be taken for each security attribute\n                        ', 'FMT_SAE.1.20'),
('FMT_SMF.1.10', '\n            list of management functions to be provided by\n            the TSF\n        ', 'FMT_SMF.1.10'),
('FMT_SMR.1.10', '\n                            the authorised identified roles\n                        ', 'FMT_SMR.1.10'),
('FMT_SMR.2.10', '\n                            authorised identified roles\n                        ', 'FMT_SMR.2.10'),
('FMT_SMR.2.30', '\n                            conditions for the different roles\n                        ', 'FMT_SMR.2.30'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FPR_ANO.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.1.10'),
('FPR_ANO.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.1.11'),
('FPR_ANO.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.2.10'),
('FPR_ANO.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.2.11'),
('FPR_ANO.2.20', '\n                            list of services\n                        ', 'FPR_ANO.2.20'),
('FPR_ANO.2.21', '\n                            list of subjects\n                        ', 'FPR_ANO.2.21'),
('FPR_PSE.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.1.10'),
('FPR_PSE.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.1.11'),
('FPR_PSE.1.20', '\n                            number of aliases\n                        ', 'FPR_PSE.1.20'),
('FPR_PSE.1.21', '\n                            list of subjects\n                        ', 'FPR_PSE.1.21'),
('FPR_PSE.1.30', '\n                            alias metric\n                        ', 'FPR_PSE.1.30'),
('FPR_PSE.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.2.10'),
('FPR_PSE.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.2.11'),
('FPR_PSE.2.20', '\n                            number of aliases\n                        ', 'FPR_PSE.2.20'),
('FPR_PSE.2.21', '\n                            list of subjects\n                        ', 'FPR_PSE.2.21'),
('FPR_PSE.2.30', '\n                            alias metric\n                        ', 'FPR_PSE.2.30'),
('FPR_PSE.2.40', '\n                            list of conditions\n                        ', 'FPR_PSE.2.40'),
('FPR_PSE.3.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.3.10'),
('FPR_PSE.3.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.3.11'),
('FPR_PSE.3.20', '\n                            number of aliases\n                        ', 'FPR_PSE.3.20'),
('FPR_PSE.3.21', '\n                            list of subjects\n                        ', 'FPR_PSE.3.21'),
('FPR_PSE.3.30', '\n                            alias metric\n                        ', 'FPR_PSE.3.30'),
('FPR_PSE.3.40', '\n                            list of conditions\n                        ', 'FPR_PSE.3.40'),
('FPR_UNL.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_UNL.1.10'),
('FPR_UNL.1.11', '\n                            list of operations\n                        ', 'FPR_UNL.1.11'),
('FPR_UNO.1.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.1.10'),
('FPR_UNO.1.11', '\n                            list of operations\n                        ', 'FPR_UNO.1.11'),
('FPR_UNO.1.12', '\n                            list of objects\n                        ', 'FPR_UNO.1.12'),
('FPR_UNO.1.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.1.13'),
('FPR_UNO.2.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.2.10'),
('FPR_UNO.2.11', '\n                            list of operations\n                        ', 'FPR_UNO.2.11'),
('FPR_UNO.2.12', '\n                            list of objects\n                        ', 'FPR_UNO.2.12'),
('FPR_UNO.2.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.2.13'),
('FPR_UNO.2.20', '\n                            unobservability related information\n                        ', 'FPR_UNO.2.20'),
('FPR_UNO.2.21', '\n                            list of conditions\n                        ', 'FPR_UNO.2.21'),
('FPR_UNO.3.10', '\n                            list of services\n                        ', 'FPR_UNO.3.10'),
('FPR_UNO.3.11', '\n                            list of subjects\n                        ', 'FPR_UNO.3.11'),
('FPR_UNO.3.12', '\n                            privacy related information\n                        ', 'FPR_UNO.3.12'),
('FPR_UNO.4.10', '\n                            set of authorised users\n                        ', 'FPR_UNO.4.10'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPT_FLS.1.10', '\n                            list of types of failures in the TSF\n                        ', 'FPT_FLS.1.10'),
('FPT_ITA.1.10', '\n                        list of types of TSF data\n                    ', 'FPT_ITA.1.10'),
('FPT_ITA.1.11', '\n                        a defined availability metric\n                    ', 'FPT_ITA.1.11'),
('FPT_ITA.1.12', '\n                        conditions to ensure availability\n                    ', 'FPT_ITA.1.12'),
('FPT_ITI.1.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.1.10'),
('FPT_ITI.1.20', '\n                        action to be taken\n                    ', 'FPT_ITI.1.20'),
('FPT_ITI.2.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.2.10'),
('FPT_ITI.2.20', '\n                        action to be taken\n                    ', 'FPT_ITI.2.20'),
('FPT_ITI.2.30', '\n                        type of modification\n                    ', 'FPT_ITI.2.30'),
('FPT_ITT.3.20', '\n                            specify the action to be taken\n                        ', 'FPT_ITT.3.20'),
('FPT_PHP.2.30', '\n                            list of TSF devices/elements for which active detection\n                            is required\n                        ', 'FPT_PHP.2.30'),
('FPT_PHP.2.31', '\n                            a designated user or role\n                        ', 'FPT_PHP.2.31'),
('FPT_PHP.3.10', '\n                            physical tampering scenarios\n                        ', 'FPT_PHP.3.10'),
('FPT_PHP.3.11', '\n                            list of TSF devices/elements\n                        ', 'FPT_PHP.3.11'),
('FPT_RCV.1.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.1.10'),
('FPT_RCV.2.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.2.10'),
('FPT_RCV.2.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.2.20'),
('FPT_RCV.3.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.3.10'),
('FPT_RCV.3.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.3.20'),
('FPT_RCV.3.30', '\n                            quantification\n                        ', 'FPT_RCV.3.30'),
('FPT_RCV.4.10', '\n                            list of functions and failure scenarios\n                        ', 'FPT_RCV.4.10'),
('FPT_RPL.1.10', '\n                            list of identified entities\n                        ', 'FPT_RPL.1.10'),
('FPT_RPL.1.20', '\n                            list of specific actions\n                        ', 'FPT_RPL.1.20'),
('FPT_TDC.1.10', '\n                            list of TSF data types\n                        ', 'FPT_TDC.1.10'),
('FPT_TDC.1.20', '\n                            list of interpretation rules to be applied by the TSF\n                        ', 'FPT_TDC.1.20'),
('FPT_TEE.1.10', '\n            list of properties of the external entities\n        ', 'FPT_TEE.1.10'),
('FPT_TEE.1.20', '\n            action(s)\n        ', 'FPT_TEE.1.20'),
('FPT_TRC.1.20', '\n                            list of functions dependent on TSF data replication\n                            consistency\n                        ', 'FPT_TRC.1.20'),
('', '', 'FPT_TST.1.30'),
('FRU_FLT.1.10', '\n                            list of TOE capabilities\n                        ', 'FRU_FLT.1.10'),
('FRU_FLT.1.11', '\n                            list of type of failures\n                        ', 'FRU_FLT.1.11'),
('FRU_FLT.2.10', '\n                            list of type of failures\n                        ', 'FRU_FLT.2.10'),
('FRU_PRS.1.20', '\n                            controlled resources\n                        ', 'FRU_PRS.1.20'),
('FRU_RSA.1.10', '\n                            controlled resources\n                        ', 'FRU_RSA.1.10'),
('FRU_RSA.2.10', '\n                            controlled resources\n                        ', 'FRU_RSA.2.10'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FTA_LSA.1.10', '\n                            session security attributes\n                        ', 'FTA_LSA.1.10'),
('FTA_LSA.1.11', '\n                            attributes\n                        ', 'FTA_LSA.1.11'),
('FTA_MCS.1.20', '\n                            default number\n                        ', 'FTA_MCS.1.20'),
('FTA_MCS.2.10', '\n                            rules for the number of maximum concurrent sessions\n                        ', 'FTA_MCS.2.10'),
('FTA_MCS.2.20', '\n                            default number\n                        ', 'FTA_MCS.2.20'),
('FTA_SSL.1.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.1.10'),
('FTA_SSL.1.20', '\n                            events to occur\n                        ', 'FTA_SSL.1.20'),
('FTA_SSL.2.20', '\n                            events to occur\n                        ', 'FTA_SSL.2.20'),
('FTA_SSL.3.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.3.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTP_ITC.1.30', '\n                            list of functions for which a trusted channel is\n                            required\n                        ', 'FTP_ITC.1.30'),
('', '', 'FTP_TRP.1.30'),
('FAU_ARP.1.10', '\n                            list of actions\n                        ', 'FAU_ARP.1.10'),
('FAU_SAA.2.10', '\n                            the profile target group\n                        ', 'FAU_SAA.2.10'),
('FAU_SAA.2.30', '\n                            conditions under which anomalous activity is reported by\n                            the TSF\n                        ', 'FAU_SAA.2.30'),
('FAU_SAA.3.10', '\n                            a subset of system events\n                        ', 'FAU_SAA.3.10'),
('FAU_SAA.3.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.3.20'),
('FAU_SAA.4.10', '\n                            list of sequences of system events whose occurrence are\n                            representative of known penetration scenarios\n                        ', 'FAU_SAA.4.10'),
('FAU_SAA.4.11', '\n                            a subset of system events\n                        ', 'FAU_SAA.4.11'),
('FAU_SAA.4.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.4.20'),
('FAU_SAR.1.10', '\n                            authorised users\n                        ', 'FAU_SAR.1.10'),
('FAU_SAR.1.11', '\n                            list of audit information\n                        ', 'FAU_SAR.1.11'),
('FAU_SAR.3.10', '\n                        methods of selection and/or ordering\n                    ', 'FAU_SAR.3.10'),
('FAU_SAR.3.11', '\n                        criteria with logical relations\n                    ', 'FAU_SAR.3.11'),
('FAU_STG.2.30', '\n                            metric for saving audit records\n                        ', 'FAU_STG.2.30'),
('FAU_STG.3.10', '\n                            actions to be taken in case\n                            of possible audit storage failure\n                        ', 'FAU_STG.3.10'),
('FAU_STG.3.11', '\n                            pre-defined limit\n                        ', 'FAU_STG.3.11'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FCO_NRO.1.10', '\n                            list of information types\n                        ', 'FCO_NRO.1.10'),
('FCO_NRO.1.20', '\n                            list of attributes\n                        ', 'FCO_NRO.1.20'),
('FCO_NRO.1.21', 'list of information fields', 'FCO_NRO.1.21'),
('FCO_NRO.1.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.1.30'),
('FCO_NRO.2.10', '\n                            list of information types\n                        ', 'FCO_NRO.2.10'),
('FCO_NRO.2.20', '\n                            list of attributes\n                        ', 'FCO_NRO.2.20'),
('FCO_NRO.2.21', '\n                            list of information fields\n                        ', 'FCO_NRO.2.21'),
('FCO_NRO.2.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.2.30'),
('FCO_NRR.1.10', '\n                            list of information types\n                        ', 'FCO_NRR.1.10'),
('FCO_NRR.1.20', 'list of attributes', 'FCO_NRR.1.20'),
('FCO_NRR.1.21', '\n                            list of information fields\n                        ', 'FCO_NRR.1.21'),
('FCO_NRR.1.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.1.30'),
('FCO_NRR.2.10', '\n                        list of information types\n                    ', 'FCO_NRR.2.10'),
('FCO_NRR.2.20', 'list of attributes', 'FCO_NRR.2.20'),
('FCO_NRR.2.21', '\n                            list of information fields\n                        ', 'FCO_NRR.2.21'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCS_CKM.1.10', '\n                            cryptographic key generation algorithm\n                        ', 'FCS_CKM.1.10'),
('FCS_CKM.1.11', '\n                            cryptographic key sizes\n                        ', 'FCS_CKM.1.11'),
('FCS_CKM.1.12', '\n                            list of standards\n                        ', 'FCS_CKM.1.12'),
('FCS_CKM.2.10', '\n                            cryptographic key distribution method\n                        ', 'FCS_CKM.2.10'),
('FCS_CKM.2.11', '\n                            list of standards\n                        ', 'FCS_CKM.2.11'),
('FCS_CKM.3.10', '\n                            type of cryptographic key access\n                        ', 'FCS_CKM.3.10'),
('FCS_CKM.3.11', '\n                            cryptographic key access method\n                        ', 'FCS_CKM.3.11'),
('FCS_CKM.3.12', '\n                            list of standards\n                        ', 'FCS_CKM.3.12'),
('FCS_CKM.4.10', '\n                            cryptographic key destruction method\n                        ', 'FCS_CKM.4.10'),
('FCS_CKM.4.11', '\n                            list of standards\n                        ', 'FCS_CKM.4.11'),
('FCS_COP.1.10', '\n                            list of cryptographic operations\n                        ', 'FCS_COP.1.10'),
('FCS_COP.1.11', '\n                            cryptographic algorithm\n                        ', 'FCS_COP.1.11'),
('FCS_COP.1.12', '\n                            cryptographic key sizes\n                        ', 'FCS_COP.1.12'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FDP_ACC.1.10', '\n                            access control SFP\n                        ', 'FDP_ACC.1.10'),
('FDP_ACC.1.11', '\n                            list of subjects, objects, and operations among subjects\n                            and objects covered by the SFP\n                        ', 'FDP_ACC.1.11'),
('FDP_ACC.2.10', '\n                            access control SFP\n                        ', 'FDP_ACC.2.10'),
('FDP_ACC.2.11', '\n                            list of subjects and objects\n                        ', 'FDP_ACC.2.11'),
('FDP_ACF.1.10', '\n                        access control SFP\n                    ', 'FDP_ACF.1.10'),
('FDP_ACF.1.11', '\n                        list of subjects and objects controlled under the\n                        indicated SFP, and for each, the SFP-relevant security\n                        attributes, or named groups of SFP-relevant security\n                        attributes\n                    ', 'FDP_ACF.1.11'),
('FDP_ACF.1.20', '\n                            rules governing access among controlled subjects and\n                            controlled objects using controlled operations on\n                            controlled objects\n                        ', 'FDP_ACF.1.20'),
('FDP_ACF.1.30', '\n                            rules, based on security attributes, that explicitly\n                            authorise access of subjects to objects\n                        ', 'FDP_ACF.1.30'),
('FDP_ACF.1.40', 'rules, based on security attributes, that\n                        explicitly deny access of subjects to objects', 'FDP_ACF.1.40'),
('FDP_DAU.1.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.1.10'),
('FDP_DAU.1.20', '\n                            list of subjects\n                        ', 'FDP_DAU.1.20'),
('FDP_DAU.2.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.2.10'),
('FDP_DAU.2.20', '\n                            list of subjects\n                        ', 'FDP_DAU.2.20'),
('FDP_ETC.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.1.10'),
('FDP_ETC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.2.10'),
('FDP_ETC.2.40', '\n                            additional exportation control rules\n                        ', 'FDP_ETC.2.40'),
('FDP_IFC.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.1.10'),
('FDP_IFC.1.11', '\n                            list of subjects, information, and operations that cause\n                            controlled information to flow to and from controlled\n                            subjects covered by the SFP\n                        ', 'FDP_IFC.1.11'),
('FDP_IFC.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.2.10'),
('FDP_IFC.2.11', '\n                            list of subjects and information\n                        ', 'FDP_IFC.2.11'),
('FDP_IFF.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.1.10'),
('FDP_IFF.1.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.1.11'),
('FDP_IFF.1.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.1.20'),
('FDP_IFF.1.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.1.30'),
('FDP_IFF.1.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.1.40'),
('FDP_IFF.1.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.1.50'),
('FDP_IFF.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.2.10'),
('FDP_IFF.2.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.2.11'),
('FDP_IFF.2.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.2.20'),
('FDP_IFF.2.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.2.30'),
('FDP_IFF.2.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.2.40'),
('FDP_IFF.2.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.2.50'),
('FDP_IFF.3.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.3.10'),
('FDP_IFF.3.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.3.11'),
('FDP_IFF.3.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.3.12'),
('FDP_IFF.4.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.4.10'),
('FDP_IFF.4.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.11'),
('FDP_IFF.4.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.4.12'),
('FDP_IFF.4.20', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.20'),
('FDP_IFF.5.10', '\n                            name of information flow control SFP\n                        ', 'FDP_IFF.5.10'),
('FDP_IFF.6.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.6.10'),
('FDP_IFF.6.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.6.11'),
('FDP_IFF.6.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.6.12'),
('FDP_ITC.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_ITC.1.10'),
('FDP_ITC.1.30', '\n                            additional importation control rules\n                        ', 'FDP_ITC.1.30'),
('FDP_ITC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITC.2.10'),
('FDP_ITC.2.50', '\n                            additional importation control rules\n                        ', 'FDP_ITC.2.50'),
('FDP_ITT.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.1.10'),
('FDP_ITT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.2.10'),
('FDP_ITT.2.20', '\n                            security attributes that require separation\n                        ', 'FDP_ITT.2.20'),
('FDP_ITT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.3.10'),
('FDP_ITT.3.11', '\n                            integrity errors\n                        ', 'FDP_ITT.3.11'),
('FDP_ITT.3.20', '\n                            specify the action to be taken upon integrity error\n                        ', 'FDP_ITT.3.20'),
('FDP_ITT.4.10', '\n                            access control SFP(s) and/or information flow\n                            control SFP(s)\n                        ', 'FDP_ITT.4.10'),
('FDP_ITT.4.11', '\n                            integrity errors\n                        ', 'FDP_ITT.4.11'),
('FDP_ITT.4.12', '\n                            security attributes that require separate transmission\n                            channels\n                        ', 'FDP_ITT.4.12'),
('FDP_ITT.4.20', '\n                            specify the action to be taken upon integrity\n                            error\n                        ', 'FDP_ITT.4.20'),
('FDP_RIP.1.10', '\n                            list of objects\n                        ', 'FDP_RIP.1.10'),
('FDP_ROL.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.1.10'),
('FDP_ROL.1.11', '\n                            list of operations\n                        ', 'FDP_ROL.1.11'),
('FDP_ROL.1.12', '\n                        information and/or list of objects\n                    ', 'FDP_ROL.1.12'),
('FDP_ROL.1.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.1.20'),
('FDP_ROL.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.2.10'),
('FDP_ROL.2.11', '\n                            list of objects\n                        ', 'FDP_ROL.2.11'),
('FDP_ROL.2.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.2.20'),
('FDP_SDI.1.10', '\n                            integrity errors\n                        ', 'FDP_SDI.1.10'),
('FDP_SDI.1.11', '\n                            user data attributes\n                        ', 'FDP_SDI.1.11'),
('FDP_SDI.2.10', '\n                            integrity errors\n                        ', 'FDP_SDI.2.10');
INSERT INTO `feassignmentitem` (`idr`, `text`, `idf`) VALUES
('FDP_SDI.2.11', '\n                            user data attributes\n                        ', 'FDP_SDI.2.11'),
('FDP_SDI.2.20', '\n                            action to be taken\n                        ', 'FDP_SDI.2.20'),
('FDP_UCT.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UCT.1.10'),
('FDP_UIT.1.10', 'access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UIT.1.10'),
('FDP_UIT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.2.10'),
('FDP_UIT.2.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.2.11'),
('FDP_UIT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.3.10'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FIA_AFL.1.10', '\n                            list of authentication events\n                        ', 'FIA_AFL.1.10'),
('FIA_AFL.1.20', '\n                        list of actions\n                    ', 'FIA_AFL.1.20'),
('FIA_ATD.1.10', '\n                            list of security attributes\n                        ', 'FIA_ATD.1.10'),
('FIA_SOS.1.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.1.10'),
('FIA_SOS.2.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.2.10'),
('FIA_SOS.2.20', '\n                            list of TSF functions\n                        ', 'FIA_SOS.2.20'),
('FIA_UAU.1.10', '\n                            list of TSF mediated actions\n                        ', 'FIA_UAU.1.10'),
('FIA_UAU.4.10', '\n                            identified authentication mechanism(s)\n                        ', 'FIA_UAU.4.10'),
('FIA_UAU.5.10', '\n                            list of multiple authentication mechanisms\n                        ', 'FIA_UAU.5.10'),
('FIA_UAU.5.20', '\n                            rules describing how the multiple authentication\n                            mechanisms provide authentication\n                        ', 'FIA_UAU.5.20'),
('FIA_UAU.6.10', '\n                            list of conditions under which re-authentication is\n                            required\n                        ', 'FIA_UAU.6.10'),
('FIA_UAU.7.10', '\n                            list of feedback\n                        ', 'FIA_UAU.7.10'),
('FIA_UID.1.10', '\n                            list of TSF-mediated actions\n                        ', 'FIA_UID.1.10'),
('FIA_USB.1.10', '\n                    list of user security attributes\n                ', 'FIA_USB.1.10'),
('FIA_USB.1.20', '\n                    rules for the initial association of attributes\n                ', 'FIA_USB.1.20'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FMT_MOF.1.10', '\n                            list of functions\n                        ', 'FMT_MOF.1.10'),
('FMT_MOF.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MOF.1.11'),
('FMT_MSA.1.10', '\n                        access control SFP(s), information flow control SFP(s)\n                    ', 'FMT_MSA.1.10'),
('FMT_MSA.1.11', '\n                            list of security attributes\n                        ', 'FMT_MSA.1.11'),
('FMT_MSA.1.12', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.1.12'),
('FMT_MSA.2.10', '\n                    list of security attributes\n                ', 'FMT_MSA.2.10'),
('FMT_MSA.3.10', '\n                            access control SFP, information flow control SFP\n                        ', 'FMT_MSA.3.10'),
('FMT_MSA.3.20', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.3.20'),
('FMT_MSA.4.10', '\n                rules for setting the values of security attributes\n            ', 'FMT_MSA.4.10'),
('FMT_MTD.1.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.1.10'),
('FMT_MTD.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.1.11'),
('FMT_MTD.2.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.2.10'),
('FMT_MTD.2.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.2.11'),
('FMT_MTD.2.20', '\n                            actions to be taken\n                        ', 'FMT_MTD.2.20'),
('FMT_MTD.3.10', '\n                    list of TSF data\n                ', 'FMT_MTD.3.10'),
('FMT_REV.1.10', '\n                        list of security attributes\n                    ', 'FMT_REV.1.10'),
('FMT_REV.1.11', '\n                        the authorised identified roles\n                    ', 'FMT_REV.1.11'),
('FMT_REV.1.20', '\n                            specification of revocation rules\n                        ', 'FMT_REV.1.20'),
('FMT_SAE.1.10', '\n                            list of security attributes for which expiration is to\n                            be supported\n                        ', 'FMT_SAE.1.10'),
('FMT_SAE.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_SAE.1.11'),
('FMT_SAE.1.20', '\n                            list of actions to be taken for each security attribute\n                        ', 'FMT_SAE.1.20'),
('FMT_SMF.1.10', '\n            list of management functions to be provided by\n            the TSF\n        ', 'FMT_SMF.1.10'),
('FMT_SMR.1.10', '\n                            the authorised identified roles\n                        ', 'FMT_SMR.1.10'),
('FMT_SMR.2.10', '\n                            authorised identified roles\n                        ', 'FMT_SMR.2.10'),
('FMT_SMR.2.30', '\n                            conditions for the different roles\n                        ', 'FMT_SMR.2.30'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FPR_ANO.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.1.10'),
('FPR_ANO.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.1.11'),
('FPR_ANO.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.2.10'),
('FPR_ANO.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.2.11'),
('FPR_ANO.2.20', '\n                            list of services\n                        ', 'FPR_ANO.2.20'),
('FPR_ANO.2.21', '\n                            list of subjects\n                        ', 'FPR_ANO.2.21'),
('FPR_PSE.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.1.10'),
('FPR_PSE.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.1.11'),
('FPR_PSE.1.20', '\n                            number of aliases\n                        ', 'FPR_PSE.1.20'),
('FPR_PSE.1.21', '\n                            list of subjects\n                        ', 'FPR_PSE.1.21'),
('FPR_PSE.1.30', '\n                            alias metric\n                        ', 'FPR_PSE.1.30'),
('FPR_PSE.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.2.10'),
('FPR_PSE.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.2.11'),
('FPR_PSE.2.20', '\n                            number of aliases\n                        ', 'FPR_PSE.2.20'),
('FPR_PSE.2.21', '\n                            list of subjects\n                        ', 'FPR_PSE.2.21'),
('FPR_PSE.2.30', '\n                            alias metric\n                        ', 'FPR_PSE.2.30'),
('FPR_PSE.2.40', '\n                            list of conditions\n                        ', 'FPR_PSE.2.40'),
('FPR_PSE.3.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.3.10'),
('FPR_PSE.3.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.3.11'),
('FPR_PSE.3.20', '\n                            number of aliases\n                        ', 'FPR_PSE.3.20'),
('FPR_PSE.3.21', '\n                            list of subjects\n                        ', 'FPR_PSE.3.21'),
('FPR_PSE.3.30', '\n                            alias metric\n                        ', 'FPR_PSE.3.30'),
('FPR_PSE.3.40', '\n                            list of conditions\n                        ', 'FPR_PSE.3.40'),
('FPR_UNL.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_UNL.1.10'),
('FPR_UNL.1.11', '\n                            list of operations\n                        ', 'FPR_UNL.1.11'),
('FPR_UNO.1.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.1.10'),
('FPR_UNO.1.11', '\n                            list of operations\n                        ', 'FPR_UNO.1.11'),
('FPR_UNO.1.12', '\n                            list of objects\n                        ', 'FPR_UNO.1.12'),
('FPR_UNO.1.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.1.13'),
('FPR_UNO.2.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.2.10'),
('FPR_UNO.2.11', '\n                            list of operations\n                        ', 'FPR_UNO.2.11'),
('FPR_UNO.2.12', '\n                            list of objects\n                        ', 'FPR_UNO.2.12'),
('FPR_UNO.2.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.2.13'),
('FPR_UNO.2.20', '\n                            unobservability related information\n                        ', 'FPR_UNO.2.20'),
('FPR_UNO.2.21', '\n                            list of conditions\n                        ', 'FPR_UNO.2.21'),
('FPR_UNO.3.10', '\n                            list of services\n                        ', 'FPR_UNO.3.10'),
('FPR_UNO.3.11', '\n                            list of subjects\n                        ', 'FPR_UNO.3.11'),
('FPR_UNO.3.12', '\n                            privacy related information\n                        ', 'FPR_UNO.3.12'),
('FPR_UNO.4.10', '\n                            set of authorised users\n                        ', 'FPR_UNO.4.10'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPT_FLS.1.10', '\n                            list of types of failures in the TSF\n                        ', 'FPT_FLS.1.10'),
('FPT_ITA.1.10', '\n                        list of types of TSF data\n                    ', 'FPT_ITA.1.10'),
('FPT_ITA.1.11', '\n                        a defined availability metric\n                    ', 'FPT_ITA.1.11'),
('FPT_ITA.1.12', '\n                        conditions to ensure availability\n                    ', 'FPT_ITA.1.12'),
('FPT_ITI.1.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.1.10'),
('FPT_ITI.1.20', '\n                        action to be taken\n                    ', 'FPT_ITI.1.20'),
('FPT_ITI.2.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.2.10'),
('FPT_ITI.2.20', '\n                        action to be taken\n                    ', 'FPT_ITI.2.20'),
('FPT_ITI.2.30', '\n                        type of modification\n                    ', 'FPT_ITI.2.30'),
('FPT_ITT.3.20', '\n                            specify the action to be taken\n                        ', 'FPT_ITT.3.20'),
('FPT_PHP.2.30', '\n                            list of TSF devices/elements for which active detection\n                            is required\n                        ', 'FPT_PHP.2.30'),
('FPT_PHP.2.31', '\n                            a designated user or role\n                        ', 'FPT_PHP.2.31'),
('FPT_PHP.3.10', '\n                            physical tampering scenarios\n                        ', 'FPT_PHP.3.10'),
('FPT_PHP.3.11', '\n                            list of TSF devices/elements\n                        ', 'FPT_PHP.3.11'),
('FPT_RCV.1.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.1.10'),
('FPT_RCV.2.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.2.10'),
('FPT_RCV.2.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.2.20'),
('FPT_RCV.3.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.3.10'),
('FPT_RCV.3.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.3.20'),
('FPT_RCV.3.30', '\n                            quantification\n                        ', 'FPT_RCV.3.30'),
('FPT_RCV.4.10', '\n                            list of functions and failure scenarios\n                        ', 'FPT_RCV.4.10'),
('FPT_RPL.1.10', '\n                            list of identified entities\n                        ', 'FPT_RPL.1.10'),
('FPT_RPL.1.20', '\n                            list of specific actions\n                        ', 'FPT_RPL.1.20'),
('FPT_TDC.1.10', '\n                            list of TSF data types\n                        ', 'FPT_TDC.1.10'),
('FPT_TDC.1.20', '\n                            list of interpretation rules to be applied by the TSF\n                        ', 'FPT_TDC.1.20'),
('FPT_TEE.1.10', '\n            list of properties of the external entities\n        ', 'FPT_TEE.1.10'),
('FPT_TEE.1.20', '\n            action(s)\n        ', 'FPT_TEE.1.20'),
('FPT_TRC.1.20', '\n                            list of functions dependent on TSF data replication\n                            consistency\n                        ', 'FPT_TRC.1.20'),
('', '', 'FPT_TST.1.30'),
('FRU_FLT.1.10', '\n                            list of TOE capabilities\n                        ', 'FRU_FLT.1.10'),
('FRU_FLT.1.11', '\n                            list of type of failures\n                        ', 'FRU_FLT.1.11'),
('FRU_FLT.2.10', '\n                            list of type of failures\n                        ', 'FRU_FLT.2.10'),
('FRU_PRS.1.20', '\n                            controlled resources\n                        ', 'FRU_PRS.1.20'),
('FRU_RSA.1.10', '\n                            controlled resources\n                        ', 'FRU_RSA.1.10'),
('FRU_RSA.2.10', '\n                            controlled resources\n                        ', 'FRU_RSA.2.10'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FTA_LSA.1.10', '\n                            session security attributes\n                        ', 'FTA_LSA.1.10'),
('FTA_LSA.1.11', '\n                            attributes\n                        ', 'FTA_LSA.1.11'),
('FTA_MCS.1.20', '\n                            default number\n                        ', 'FTA_MCS.1.20'),
('FTA_MCS.2.10', '\n                            rules for the number of maximum concurrent sessions\n                        ', 'FTA_MCS.2.10'),
('FTA_MCS.2.20', '\n                            default number\n                        ', 'FTA_MCS.2.20'),
('FTA_SSL.1.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.1.10'),
('FTA_SSL.1.20', '\n                            events to occur\n                        ', 'FTA_SSL.1.20'),
('FTA_SSL.2.20', '\n                            events to occur\n                        ', 'FTA_SSL.2.20'),
('FTA_SSL.3.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.3.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTP_ITC.1.30', '\n                            list of functions for which a trusted channel is\n                            required\n                        ', 'FTP_ITC.1.30'),
('', '', 'FTP_TRP.1.30'),
('FAU_ARP.1.10', '\n                            list of actions\n                        ', 'FAU_ARP.1.10'),
('FAU_SAA.2.10', '\n                            the profile target group\n                        ', 'FAU_SAA.2.10'),
('FAU_SAA.2.30', '\n                            conditions under which anomalous activity is reported by\n                            the TSF\n                        ', 'FAU_SAA.2.30'),
('FAU_SAA.3.10', '\n                            a subset of system events\n                        ', 'FAU_SAA.3.10'),
('FAU_SAA.3.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.3.20'),
('FAU_SAA.4.10', '\n                            list of sequences of system events whose occurrence are\n                            representative of known penetration scenarios\n                        ', 'FAU_SAA.4.10'),
('FAU_SAA.4.11', '\n                            a subset of system events\n                        ', 'FAU_SAA.4.11'),
('FAU_SAA.4.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.4.20'),
('FAU_SAR.1.10', '\n                            authorised users\n                        ', 'FAU_SAR.1.10'),
('FAU_SAR.1.11', '\n                            list of audit information\n                        ', 'FAU_SAR.1.11'),
('FAU_SAR.3.10', '\n                        methods of selection and/or ordering\n                    ', 'FAU_SAR.3.10'),
('FAU_SAR.3.11', '\n                        criteria with logical relations\n                    ', 'FAU_SAR.3.11'),
('FAU_STG.2.30', '\n                            metric for saving audit records\n                        ', 'FAU_STG.2.30'),
('FAU_STG.3.10', '\n                            actions to be taken in case\n                            of possible audit storage failure\n                        ', 'FAU_STG.3.10'),
('FAU_STG.3.11', '\n                            pre-defined limit\n                        ', 'FAU_STG.3.11'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FCO_NRO.1.10', '\n                            list of information types\n                        ', 'FCO_NRO.1.10'),
('FCO_NRO.1.20', '\n                            list of attributes\n                        ', 'FCO_NRO.1.20'),
('FCO_NRO.1.21', 'list of information fields', 'FCO_NRO.1.21'),
('FCO_NRO.1.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.1.30'),
('FCO_NRO.2.10', '\n                            list of information types\n                        ', 'FCO_NRO.2.10'),
('FCO_NRO.2.20', '\n                            list of attributes\n                        ', 'FCO_NRO.2.20'),
('FCO_NRO.2.21', '\n                            list of information fields\n                        ', 'FCO_NRO.2.21'),
('FCO_NRO.2.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.2.30'),
('FCO_NRR.1.10', '\n                            list of information types\n                        ', 'FCO_NRR.1.10'),
('FCO_NRR.1.20', 'list of attributes', 'FCO_NRR.1.20'),
('FCO_NRR.1.21', '\n                            list of information fields\n                        ', 'FCO_NRR.1.21'),
('FCO_NRR.1.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.1.30'),
('FCO_NRR.2.10', '\n                        list of information types\n                    ', 'FCO_NRR.2.10'),
('FCO_NRR.2.20', 'list of attributes', 'FCO_NRR.2.20'),
('FCO_NRR.2.21', '\n                            list of information fields\n                        ', 'FCO_NRR.2.21'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCS_CKM.1.10', '\n                            cryptographic key generation algorithm\n                        ', 'FCS_CKM.1.10'),
('FCS_CKM.1.11', '\n                            cryptographic key sizes\n                        ', 'FCS_CKM.1.11'),
('FCS_CKM.1.12', '\n                            list of standards\n                        ', 'FCS_CKM.1.12'),
('FCS_CKM.2.10', '\n                            cryptographic key distribution method\n                        ', 'FCS_CKM.2.10'),
('FCS_CKM.2.11', '\n                            list of standards\n                        ', 'FCS_CKM.2.11'),
('FCS_CKM.3.10', '\n                            type of cryptographic key access\n                        ', 'FCS_CKM.3.10'),
('FCS_CKM.3.11', '\n                            cryptographic key access method\n                        ', 'FCS_CKM.3.11'),
('FCS_CKM.3.12', '\n                            list of standards\n                        ', 'FCS_CKM.3.12'),
('FCS_CKM.4.10', '\n                            cryptographic key destruction method\n                        ', 'FCS_CKM.4.10'),
('FCS_CKM.4.11', '\n                            list of standards\n                        ', 'FCS_CKM.4.11'),
('FCS_COP.1.10', '\n                            list of cryptographic operations\n                        ', 'FCS_COP.1.10'),
('FCS_COP.1.11', '\n                            cryptographic algorithm\n                        ', 'FCS_COP.1.11'),
('FCS_COP.1.12', '\n                            cryptographic key sizes\n                        ', 'FCS_COP.1.12'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FDP_ACC.1.10', '\n                            access control SFP\n                        ', 'FDP_ACC.1.10'),
('FDP_ACC.1.11', '\n                            list of subjects, objects, and operations among subjects\n                            and objects covered by the SFP\n                        ', 'FDP_ACC.1.11'),
('FDP_ACC.2.10', '\n                            access control SFP\n                        ', 'FDP_ACC.2.10'),
('FDP_ACC.2.11', '\n                            list of subjects and objects\n                        ', 'FDP_ACC.2.11'),
('FDP_ACF.1.10', '\n                        access control SFP\n                    ', 'FDP_ACF.1.10'),
('FDP_ACF.1.11', '\n                        list of subjects and objects controlled under the\n                        indicated SFP, and for each, the SFP-relevant security\n                        attributes, or named groups of SFP-relevant security\n                        attributes\n                    ', 'FDP_ACF.1.11'),
('FDP_ACF.1.20', '\n                            rules governing access among controlled subjects and\n                            controlled objects using controlled operations on\n                            controlled objects\n                        ', 'FDP_ACF.1.20'),
('FDP_ACF.1.30', '\n                            rules, based on security attributes, that explicitly\n                            authorise access of subjects to objects\n                        ', 'FDP_ACF.1.30'),
('FDP_ACF.1.40', 'rules, based on security attributes, that\n                        explicitly deny access of subjects to objects', 'FDP_ACF.1.40'),
('FDP_DAU.1.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.1.10'),
('FDP_DAU.1.20', '\n                            list of subjects\n                        ', 'FDP_DAU.1.20'),
('FDP_DAU.2.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.2.10'),
('FDP_DAU.2.20', '\n                            list of subjects\n                        ', 'FDP_DAU.2.20'),
('FDP_ETC.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.1.10'),
('FDP_ETC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.2.10'),
('FDP_ETC.2.40', '\n                            additional exportation control rules\n                        ', 'FDP_ETC.2.40'),
('FDP_IFC.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.1.10'),
('FDP_IFC.1.11', '\n                            list of subjects, information, and operations that cause\n                            controlled information to flow to and from controlled\n                            subjects covered by the SFP\n                        ', 'FDP_IFC.1.11'),
('FDP_IFC.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.2.10'),
('FDP_IFC.2.11', '\n                            list of subjects and information\n                        ', 'FDP_IFC.2.11'),
('FDP_IFF.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.1.10'),
('FDP_IFF.1.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.1.11'),
('FDP_IFF.1.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.1.20'),
('FDP_IFF.1.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.1.30'),
('FDP_IFF.1.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.1.40'),
('FDP_IFF.1.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.1.50'),
('FDP_IFF.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.2.10'),
('FDP_IFF.2.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.2.11'),
('FDP_IFF.2.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.2.20'),
('FDP_IFF.2.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.2.30'),
('FDP_IFF.2.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.2.40'),
('FDP_IFF.2.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.2.50'),
('FDP_IFF.3.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.3.10'),
('FDP_IFF.3.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.3.11'),
('FDP_IFF.3.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.3.12'),
('FDP_IFF.4.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.4.10'),
('FDP_IFF.4.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.11'),
('FDP_IFF.4.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.4.12'),
('FDP_IFF.4.20', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.20'),
('FDP_IFF.5.10', '\n                            name of information flow control SFP\n                        ', 'FDP_IFF.5.10'),
('FDP_IFF.6.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.6.10'),
('FDP_IFF.6.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.6.11'),
('FDP_IFF.6.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.6.12'),
('FDP_ITC.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_ITC.1.10'),
('FDP_ITC.1.30', '\n                            additional importation control rules\n                        ', 'FDP_ITC.1.30'),
('FDP_ITC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITC.2.10'),
('FDP_ITC.2.50', '\n                            additional importation control rules\n                        ', 'FDP_ITC.2.50'),
('FDP_ITT.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.1.10'),
('FDP_ITT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.2.10'),
('FDP_ITT.2.20', '\n                            security attributes that require separation\n                        ', 'FDP_ITT.2.20'),
('FDP_ITT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.3.10'),
('FDP_ITT.3.11', '\n                            integrity errors\n                        ', 'FDP_ITT.3.11'),
('FDP_ITT.3.20', '\n                            specify the action to be taken upon integrity error\n                        ', 'FDP_ITT.3.20'),
('FDP_ITT.4.10', '\n                            access control SFP(s) and/or information flow\n                            control SFP(s)\n                        ', 'FDP_ITT.4.10'),
('FDP_ITT.4.11', '\n                            integrity errors\n                        ', 'FDP_ITT.4.11'),
('FDP_ITT.4.12', '\n                            security attributes that require separate transmission\n                            channels\n                        ', 'FDP_ITT.4.12'),
('FDP_ITT.4.20', '\n                            specify the action to be taken upon integrity\n                            error\n                        ', 'FDP_ITT.4.20'),
('FDP_RIP.1.10', '\n                            list of objects\n                        ', 'FDP_RIP.1.10'),
('FDP_ROL.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.1.10'),
('FDP_ROL.1.11', '\n                            list of operations\n                        ', 'FDP_ROL.1.11'),
('FDP_ROL.1.12', '\n                        information and/or list of objects\n                    ', 'FDP_ROL.1.12'),
('FDP_ROL.1.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.1.20'),
('FDP_ROL.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.2.10'),
('FDP_ROL.2.11', '\n                            list of objects\n                        ', 'FDP_ROL.2.11'),
('FDP_ROL.2.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.2.20'),
('FDP_SDI.1.10', '\n                            integrity errors\n                        ', 'FDP_SDI.1.10'),
('FDP_SDI.1.11', '\n                            user data attributes\n                        ', 'FDP_SDI.1.11'),
('FDP_SDI.2.10', '\n                            integrity errors\n                        ', 'FDP_SDI.2.10'),
('FDP_SDI.2.11', '\n                            user data attributes\n                        ', 'FDP_SDI.2.11'),
('FDP_SDI.2.20', '\n                            action to be taken\n                        ', 'FDP_SDI.2.20'),
('FDP_UCT.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UCT.1.10'),
('FDP_UIT.1.10', 'access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UIT.1.10'),
('FDP_UIT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.2.10'),
('FDP_UIT.2.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.2.11'),
('FDP_UIT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.3.10'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FIA_AFL.1.10', '\n                            list of authentication events\n                        ', 'FIA_AFL.1.10'),
('FIA_AFL.1.20', '\n                        list of actions\n                    ', 'FIA_AFL.1.20'),
('FIA_ATD.1.10', '\n                            list of security attributes\n                        ', 'FIA_ATD.1.10'),
('FIA_SOS.1.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.1.10'),
('FIA_SOS.2.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.2.10'),
('FIA_SOS.2.20', '\n                            list of TSF functions\n                        ', 'FIA_SOS.2.20'),
('FIA_UAU.1.10', '\n                            list of TSF mediated actions\n                        ', 'FIA_UAU.1.10'),
('FIA_UAU.4.10', '\n                            identified authentication mechanism(s)\n                        ', 'FIA_UAU.4.10'),
('FIA_UAU.5.10', '\n                            list of multiple authentication mechanisms\n                        ', 'FIA_UAU.5.10'),
('FIA_UAU.5.20', '\n                            rules describing how the multiple authentication\n                            mechanisms provide authentication\n                        ', 'FIA_UAU.5.20'),
('FIA_UAU.6.10', '\n                            list of conditions under which re-authentication is\n                            required\n                        ', 'FIA_UAU.6.10'),
('FIA_UAU.7.10', '\n                            list of feedback\n                        ', 'FIA_UAU.7.10'),
('FIA_UID.1.10', '\n                            list of TSF-mediated actions\n                        ', 'FIA_UID.1.10'),
('FIA_USB.1.10', '\n                    list of user security attributes\n                ', 'FIA_USB.1.10'),
('FIA_USB.1.20', '\n                    rules for the initial association of attributes\n                ', 'FIA_USB.1.20'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FMT_MOF.1.10', '\n                            list of functions\n                        ', 'FMT_MOF.1.10'),
('FMT_MOF.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MOF.1.11'),
('FMT_MSA.1.10', '\n                        access control SFP(s), information flow control SFP(s)\n                    ', 'FMT_MSA.1.10'),
('FMT_MSA.1.11', '\n                            list of security attributes\n                        ', 'FMT_MSA.1.11'),
('FMT_MSA.1.12', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.1.12'),
('FMT_MSA.2.10', '\n                    list of security attributes\n                ', 'FMT_MSA.2.10'),
('FMT_MSA.3.10', '\n                            access control SFP, information flow control SFP\n                        ', 'FMT_MSA.3.10'),
('FMT_MSA.3.20', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.3.20'),
('FMT_MSA.4.10', '\n                rules for setting the values of security attributes\n            ', 'FMT_MSA.4.10'),
('FMT_MTD.1.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.1.10'),
('FMT_MTD.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.1.11'),
('FMT_MTD.2.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.2.10'),
('FMT_MTD.2.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.2.11'),
('FMT_MTD.2.20', '\n                            actions to be taken\n                        ', 'FMT_MTD.2.20'),
('FMT_MTD.3.10', '\n                    list of TSF data\n                ', 'FMT_MTD.3.10'),
('FMT_REV.1.10', '\n                        list of security attributes\n                    ', 'FMT_REV.1.10'),
('FMT_REV.1.11', '\n                        the authorised identified roles\n                    ', 'FMT_REV.1.11'),
('FMT_REV.1.20', '\n                            specification of revocation rules\n                        ', 'FMT_REV.1.20'),
('FMT_SAE.1.10', '\n                            list of security attributes for which expiration is to\n                            be supported\n                        ', 'FMT_SAE.1.10'),
('FMT_SAE.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_SAE.1.11'),
('FMT_SAE.1.20', '\n                            list of actions to be taken for each security attribute\n                        ', 'FMT_SAE.1.20'),
('FMT_SMF.1.10', '\n            list of management functions to be provided by\n            the TSF\n        ', 'FMT_SMF.1.10'),
('FMT_SMR.1.10', '\n                            the authorised identified roles\n                        ', 'FMT_SMR.1.10'),
('FMT_SMR.2.10', '\n                            authorised identified roles\n                        ', 'FMT_SMR.2.10'),
('FMT_SMR.2.30', '\n                            conditions for the different roles\n                        ', 'FMT_SMR.2.30'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FPR_ANO.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.1.10'),
('FPR_ANO.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.1.11'),
('FPR_ANO.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.2.10'),
('FPR_ANO.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.2.11'),
('FPR_ANO.2.20', '\n                            list of services\n                        ', 'FPR_ANO.2.20'),
('FPR_ANO.2.21', '\n                            list of subjects\n                        ', 'FPR_ANO.2.21'),
('FPR_PSE.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.1.10'),
('FPR_PSE.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.1.11'),
('FPR_PSE.1.20', '\n                            number of aliases\n                        ', 'FPR_PSE.1.20'),
('FPR_PSE.1.21', '\n                            list of subjects\n                        ', 'FPR_PSE.1.21'),
('FPR_PSE.1.30', '\n                            alias metric\n                        ', 'FPR_PSE.1.30'),
('FPR_PSE.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.2.10'),
('FPR_PSE.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.2.11'),
('FPR_PSE.2.20', '\n                            number of aliases\n                        ', 'FPR_PSE.2.20'),
('FPR_PSE.2.21', '\n                            list of subjects\n                        ', 'FPR_PSE.2.21'),
('FPR_PSE.2.30', '\n                            alias metric\n                        ', 'FPR_PSE.2.30'),
('FPR_PSE.2.40', '\n                            list of conditions\n                        ', 'FPR_PSE.2.40'),
('FPR_PSE.3.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.3.10'),
('FPR_PSE.3.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.3.11'),
('FPR_PSE.3.20', '\n                            number of aliases\n                        ', 'FPR_PSE.3.20'),
('FPR_PSE.3.21', '\n                            list of subjects\n                        ', 'FPR_PSE.3.21'),
('FPR_PSE.3.30', '\n                            alias metric\n                        ', 'FPR_PSE.3.30'),
('FPR_PSE.3.40', '\n                            list of conditions\n                        ', 'FPR_PSE.3.40'),
('FPR_UNL.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_UNL.1.10'),
('FPR_UNL.1.11', '\n                            list of operations\n                        ', 'FPR_UNL.1.11'),
('FPR_UNO.1.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.1.10'),
('FPR_UNO.1.11', '\n                            list of operations\n                        ', 'FPR_UNO.1.11'),
('FPR_UNO.1.12', '\n                            list of objects\n                        ', 'FPR_UNO.1.12'),
('FPR_UNO.1.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.1.13'),
('FPR_UNO.2.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.2.10'),
('FPR_UNO.2.11', '\n                            list of operations\n                        ', 'FPR_UNO.2.11'),
('FPR_UNO.2.12', '\n                            list of objects\n                        ', 'FPR_UNO.2.12'),
('FPR_UNO.2.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.2.13'),
('FPR_UNO.2.20', '\n                            unobservability related information\n                        ', 'FPR_UNO.2.20'),
('FPR_UNO.2.21', '\n                            list of conditions\n                        ', 'FPR_UNO.2.21'),
('FPR_UNO.3.10', '\n                            list of services\n                        ', 'FPR_UNO.3.10'),
('FPR_UNO.3.11', '\n                            list of subjects\n                        ', 'FPR_UNO.3.11'),
('FPR_UNO.3.12', '\n                            privacy related information\n                        ', 'FPR_UNO.3.12'),
('FPR_UNO.4.10', '\n                            set of authorised users\n                        ', 'FPR_UNO.4.10'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPT_FLS.1.10', '\n                            list of types of failures in the TSF\n                        ', 'FPT_FLS.1.10'),
('FPT_ITA.1.10', '\n                        list of types of TSF data\n                    ', 'FPT_ITA.1.10'),
('FPT_ITA.1.11', '\n                        a defined availability metric\n                    ', 'FPT_ITA.1.11'),
('FPT_ITA.1.12', '\n                        conditions to ensure availability\n                    ', 'FPT_ITA.1.12'),
('FPT_ITI.1.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.1.10'),
('FPT_ITI.1.20', '\n                        action to be taken\n                    ', 'FPT_ITI.1.20'),
('FPT_ITI.2.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.2.10'),
('FPT_ITI.2.20', '\n                        action to be taken\n                    ', 'FPT_ITI.2.20'),
('FPT_ITI.2.30', '\n                        type of modification\n                    ', 'FPT_ITI.2.30'),
('FPT_ITT.3.20', '\n                            specify the action to be taken\n                        ', 'FPT_ITT.3.20'),
('FPT_PHP.2.30', '\n                            list of TSF devices/elements for which active detection\n                            is required\n                        ', 'FPT_PHP.2.30'),
('FPT_PHP.2.31', '\n                            a designated user or role\n                        ', 'FPT_PHP.2.31'),
('FPT_PHP.3.10', '\n                            physical tampering scenarios\n                        ', 'FPT_PHP.3.10'),
('FPT_PHP.3.11', '\n                            list of TSF devices/elements\n                        ', 'FPT_PHP.3.11'),
('FPT_RCV.1.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.1.10'),
('FPT_RCV.2.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.2.10'),
('FPT_RCV.2.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.2.20'),
('FPT_RCV.3.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.3.10'),
('FPT_RCV.3.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.3.20'),
('FPT_RCV.3.30', '\n                            quantification\n                        ', 'FPT_RCV.3.30'),
('FPT_RCV.4.10', '\n                            list of functions and failure scenarios\n                        ', 'FPT_RCV.4.10'),
('FPT_RPL.1.10', '\n                            list of identified entities\n                        ', 'FPT_RPL.1.10'),
('FPT_RPL.1.20', '\n                            list of specific actions\n                        ', 'FPT_RPL.1.20'),
('FPT_TDC.1.10', '\n                            list of TSF data types\n                        ', 'FPT_TDC.1.10'),
('FPT_TDC.1.20', '\n                            list of interpretation rules to be applied by the TSF\n                        ', 'FPT_TDC.1.20'),
('FPT_TEE.1.10', '\n            list of properties of the external entities\n        ', 'FPT_TEE.1.10'),
('FPT_TEE.1.20', '\n            action(s)\n        ', 'FPT_TEE.1.20'),
('FPT_TRC.1.20', '\n                            list of functions dependent on TSF data replication\n                            consistency\n                        ', 'FPT_TRC.1.20'),
('', '', 'FPT_TST.1.30'),
('FRU_FLT.1.10', '\n                            list of TOE capabilities\n                        ', 'FRU_FLT.1.10'),
('FRU_FLT.1.11', '\n                            list of type of failures\n                        ', 'FRU_FLT.1.11'),
('FRU_FLT.2.10', '\n                            list of type of failures\n                        ', 'FRU_FLT.2.10'),
('FRU_PRS.1.20', '\n                            controlled resources\n                        ', 'FRU_PRS.1.20'),
('FRU_RSA.1.10', '\n                            controlled resources\n                        ', 'FRU_RSA.1.10'),
('FRU_RSA.2.10', '\n                            controlled resources\n                        ', 'FRU_RSA.2.10'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FTA_LSA.1.10', '\n                            session security attributes\n                        ', 'FTA_LSA.1.10'),
('FTA_LSA.1.11', '\n                            attributes\n                        ', 'FTA_LSA.1.11'),
('FTA_MCS.1.20', '\n                            default number\n                        ', 'FTA_MCS.1.20'),
('FTA_MCS.2.10', '\n                            rules for the number of maximum concurrent sessions\n                        ', 'FTA_MCS.2.10'),
('FTA_MCS.2.20', '\n                            default number\n                        ', 'FTA_MCS.2.20');
INSERT INTO `feassignmentitem` (`idr`, `text`, `idf`) VALUES
('FTA_SSL.1.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.1.10'),
('FTA_SSL.1.20', '\n                            events to occur\n                        ', 'FTA_SSL.1.20'),
('FTA_SSL.2.20', '\n                            events to occur\n                        ', 'FTA_SSL.2.20'),
('FTA_SSL.3.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.3.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTP_ITC.1.30', '\n                            list of functions for which a trusted channel is\n                            required\n                        ', 'FTP_ITC.1.30'),
('', '', 'FTP_TRP.1.30'),
('FAU_ARP.1.10', '\n                            list of actions\n                        ', 'FAU_ARP.1.10'),
('FAU_SAA.2.10', '\n                            the profile target group\n                        ', 'FAU_SAA.2.10'),
('FAU_SAA.2.30', '\n                            conditions under which anomalous activity is reported by\n                            the TSF\n                        ', 'FAU_SAA.2.30'),
('FAU_SAA.3.10', '\n                            a subset of system events\n                        ', 'FAU_SAA.3.10'),
('FAU_SAA.3.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.3.20'),
('FAU_SAA.4.10', '\n                            list of sequences of system events whose occurrence are\n                            representative of known penetration scenarios\n                        ', 'FAU_SAA.4.10'),
('FAU_SAA.4.11', '\n                            a subset of system events\n                        ', 'FAU_SAA.4.11'),
('FAU_SAA.4.20', '\n                            the information to be used to determine system activity\n                        ', 'FAU_SAA.4.20'),
('FAU_SAR.1.10', '\n                            authorised users\n                        ', 'FAU_SAR.1.10'),
('FAU_SAR.1.11', '\n                            list of audit information\n                        ', 'FAU_SAR.1.11'),
('FAU_SAR.3.10', '\n                        methods of selection and/or ordering\n                    ', 'FAU_SAR.3.10'),
('FAU_SAR.3.11', '\n                        criteria with logical relations\n                    ', 'FAU_SAR.3.11'),
('FAU_STG.2.30', '\n                            metric for saving audit records\n                        ', 'FAU_STG.2.30'),
('FAU_STG.3.10', '\n                            actions to be taken in case\n                            of possible audit storage failure\n                        ', 'FAU_STG.3.10'),
('FAU_STG.3.11', '\n                            pre-defined limit\n                        ', 'FAU_STG.3.11'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FAU_STG.4.10', '\n                        other actions to be taken in case of audit storage\n                        failure\n                    ', 'FAU_STG.4.10'),
('FCO_NRO.1.10', '\n                            list of information types\n                        ', 'FCO_NRO.1.10'),
('FCO_NRO.1.20', '\n                            list of attributes\n                        ', 'FCO_NRO.1.20'),
('FCO_NRO.1.21', 'list of information fields', 'FCO_NRO.1.21'),
('FCO_NRO.1.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.1.30'),
('FCO_NRO.2.10', '\n                            list of information types\n                        ', 'FCO_NRO.2.10'),
('FCO_NRO.2.20', '\n                            list of attributes\n                        ', 'FCO_NRO.2.20'),
('FCO_NRO.2.21', '\n                            list of information fields\n                        ', 'FCO_NRO.2.21'),
('FCO_NRO.2.30', '\n                            limitations on the evidence of origin\n                        ', 'FCO_NRO.2.30'),
('FCO_NRR.1.10', '\n                            list of information types\n                        ', 'FCO_NRR.1.10'),
('FCO_NRR.1.20', 'list of attributes', 'FCO_NRR.1.20'),
('FCO_NRR.1.21', '\n                            list of information fields\n                        ', 'FCO_NRR.1.21'),
('FCO_NRR.1.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.1.30'),
('FCO_NRR.2.10', '\n                        list of information types\n                    ', 'FCO_NRR.2.10'),
('FCO_NRR.2.20', 'list of attributes', 'FCO_NRR.2.20'),
('FCO_NRR.2.21', '\n                            list of information fields\n                        ', 'FCO_NRR.2.21'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCO_NRR.2.30', '\n                            limitations on the evidence of receipt\n                        ', 'FCO_NRR.2.30'),
('FCS_CKM.1.10', '\n                            cryptographic key generation algorithm\n                        ', 'FCS_CKM.1.10'),
('FCS_CKM.1.11', '\n                            cryptographic key sizes\n                        ', 'FCS_CKM.1.11'),
('FCS_CKM.1.12', '\n                            list of standards\n                        ', 'FCS_CKM.1.12'),
('FCS_CKM.2.10', '\n                            cryptographic key distribution method\n                        ', 'FCS_CKM.2.10'),
('FCS_CKM.2.11', '\n                            list of standards\n                        ', 'FCS_CKM.2.11'),
('FCS_CKM.3.10', '\n                            type of cryptographic key access\n                        ', 'FCS_CKM.3.10'),
('FCS_CKM.3.11', '\n                            cryptographic key access method\n                        ', 'FCS_CKM.3.11'),
('FCS_CKM.3.12', '\n                            list of standards\n                        ', 'FCS_CKM.3.12'),
('FCS_CKM.4.10', '\n                            cryptographic key destruction method\n                        ', 'FCS_CKM.4.10'),
('FCS_CKM.4.11', '\n                            list of standards\n                        ', 'FCS_CKM.4.11'),
('FCS_COP.1.10', '\n                            list of cryptographic operations\n                        ', 'FCS_COP.1.10'),
('FCS_COP.1.11', '\n                            cryptographic algorithm\n                        ', 'FCS_COP.1.11'),
('FCS_COP.1.12', '\n                            cryptographic key sizes\n                        ', 'FCS_COP.1.12'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FCS_COP.1.13', '\n                            list of standards\n                        ', 'FCS_COP.1.13'),
('FDP_ACC.1.10', '\n                            access control SFP\n                        ', 'FDP_ACC.1.10'),
('FDP_ACC.1.11', '\n                            list of subjects, objects, and operations among subjects\n                            and objects covered by the SFP\n                        ', 'FDP_ACC.1.11'),
('FDP_ACC.2.10', '\n                            access control SFP\n                        ', 'FDP_ACC.2.10'),
('FDP_ACC.2.11', '\n                            list of subjects and objects\n                        ', 'FDP_ACC.2.11'),
('FDP_ACF.1.10', '\n                        access control SFP\n                    ', 'FDP_ACF.1.10'),
('FDP_ACF.1.11', '\n                        list of subjects and objects controlled under the\n                        indicated SFP, and for each, the SFP-relevant security\n                        attributes, or named groups of SFP-relevant security\n                        attributes\n                    ', 'FDP_ACF.1.11'),
('FDP_ACF.1.20', '\n                            rules governing access among controlled subjects and\n                            controlled objects using controlled operations on\n                            controlled objects\n                        ', 'FDP_ACF.1.20'),
('FDP_ACF.1.30', '\n                            rules, based on security attributes, that explicitly\n                            authorise access of subjects to objects\n                        ', 'FDP_ACF.1.30'),
('FDP_ACF.1.40', 'rules, based on security attributes, that\n                        explicitly deny access of subjects to objects', 'FDP_ACF.1.40'),
('FDP_DAU.1.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.1.10'),
('FDP_DAU.1.20', '\n                            list of subjects\n                        ', 'FDP_DAU.1.20'),
('FDP_DAU.2.10', '\n                            list of objects or information types\n                        ', 'FDP_DAU.2.10'),
('FDP_DAU.2.20', '\n                            list of subjects\n                        ', 'FDP_DAU.2.20'),
('FDP_ETC.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.1.10'),
('FDP_ETC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ETC.2.10'),
('FDP_ETC.2.40', '\n                            additional exportation control rules\n                        ', 'FDP_ETC.2.40'),
('FDP_IFC.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.1.10'),
('FDP_IFC.1.11', '\n                            list of subjects, information, and operations that cause\n                            controlled information to flow to and from controlled\n                            subjects covered by the SFP\n                        ', 'FDP_IFC.1.11'),
('FDP_IFC.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFC.2.10'),
('FDP_IFC.2.11', '\n                            list of subjects and information\n                        ', 'FDP_IFC.2.11'),
('FDP_IFF.1.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.1.10'),
('FDP_IFF.1.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.1.11'),
('FDP_IFF.1.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.1.20'),
('FDP_IFF.1.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.1.30'),
('FDP_IFF.1.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.1.40'),
('FDP_IFF.1.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.1.50'),
('FDP_IFF.2.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.2.10'),
('FDP_IFF.2.11', '\n                        list of subjects and information controlled under the\n                        indicated SFP, and for each, the security attributes\n                    ', 'FDP_IFF.2.11'),
('FDP_IFF.2.20', '\n                            for each operation, the security attribute-based\n                            relationship that must hold between subject and\n                            information security attributes\n                        ', 'FDP_IFF.2.20'),
('FDP_IFF.2.30', '\n                            additional information flow control SFP rules\n                        ', 'FDP_IFF.2.30'),
('FDP_IFF.2.40', '\n                            rules, based on security attributes, that explicitly\n                            authorise information flows\n                        ', 'FDP_IFF.2.40'),
('FDP_IFF.2.50', '\n                            rules, based on security attributes, that explicitly\n                            deny information flows\n                        ', 'FDP_IFF.2.50'),
('FDP_IFF.3.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.3.10'),
('FDP_IFF.3.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.3.11'),
('FDP_IFF.3.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.3.12'),
('FDP_IFF.4.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.4.10'),
('FDP_IFF.4.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.11'),
('FDP_IFF.4.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.4.12'),
('FDP_IFF.4.20', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.4.20'),
('FDP_IFF.5.10', '\n                            name of information flow control SFP\n                        ', 'FDP_IFF.5.10'),
('FDP_IFF.6.10', '\n                            information flow control SFP\n                        ', 'FDP_IFF.6.10'),
('FDP_IFF.6.11', '\n                            types of illicit information flows\n                        ', 'FDP_IFF.6.11'),
('FDP_IFF.6.12', '\n                            maximum capacity\n                        ', 'FDP_IFF.6.12'),
('FDP_ITC.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_ITC.1.10'),
('FDP_ITC.1.30', '\n                            additional importation control rules\n                        ', 'FDP_ITC.1.30'),
('FDP_ITC.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITC.2.10'),
('FDP_ITC.2.50', '\n                            additional importation control rules\n                        ', 'FDP_ITC.2.50'),
('FDP_ITT.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.1.10'),
('FDP_ITT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.2.10'),
('FDP_ITT.2.20', '\n                            security attributes that require separation\n                        ', 'FDP_ITT.2.20'),
('FDP_ITT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ITT.3.10'),
('FDP_ITT.3.11', '\n                            integrity errors\n                        ', 'FDP_ITT.3.11'),
('FDP_ITT.3.20', '\n                            specify the action to be taken upon integrity error\n                        ', 'FDP_ITT.3.20'),
('FDP_ITT.4.10', '\n                            access control SFP(s) and/or information flow\n                            control SFP(s)\n                        ', 'FDP_ITT.4.10'),
('FDP_ITT.4.11', '\n                            integrity errors\n                        ', 'FDP_ITT.4.11'),
('FDP_ITT.4.12', '\n                            security attributes that require separate transmission\n                            channels\n                        ', 'FDP_ITT.4.12'),
('FDP_ITT.4.20', '\n                            specify the action to be taken upon integrity\n                            error\n                        ', 'FDP_ITT.4.20'),
('FDP_RIP.1.10', '\n                            list of objects\n                        ', 'FDP_RIP.1.10'),
('FDP_ROL.1.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.1.10'),
('FDP_ROL.1.11', '\n                            list of operations\n                        ', 'FDP_ROL.1.11'),
('FDP_ROL.1.12', '\n                        information and/or list of objects\n                    ', 'FDP_ROL.1.12'),
('FDP_ROL.1.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.1.20'),
('FDP_ROL.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_ROL.2.10'),
('FDP_ROL.2.11', '\n                            list of objects\n                        ', 'FDP_ROL.2.11'),
('FDP_ROL.2.20', '\n                            boundary limit to which rollback may be performed\n                        ', 'FDP_ROL.2.20'),
('FDP_SDI.1.10', '\n                            integrity errors\n                        ', 'FDP_SDI.1.10'),
('FDP_SDI.1.11', '\n                            user data attributes\n                        ', 'FDP_SDI.1.11'),
('FDP_SDI.2.10', '\n                            integrity errors\n                        ', 'FDP_SDI.2.10'),
('FDP_SDI.2.11', '\n                            user data attributes\n                        ', 'FDP_SDI.2.11'),
('FDP_SDI.2.20', '\n                            action to be taken\n                        ', 'FDP_SDI.2.20'),
('FDP_UCT.1.10', '\n                        access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UCT.1.10'),
('FDP_UIT.1.10', 'access control SFP(s) and/or information flow control SFP(s)\n                    ', 'FDP_UIT.1.10'),
('FDP_UIT.2.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.2.10'),
('FDP_UIT.2.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.2.11'),
('FDP_UIT.3.10', '\n                            access control SFP(s) and/or information flow control\n                            SFP(s)\n                        ', 'FDP_UIT.3.10'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FDP_UIT.3.11', '\n                            list of recoverable errors\n                        ', 'FDP_UIT.3.11'),
('FIA_AFL.1.10', '\n                            list of authentication events\n                        ', 'FIA_AFL.1.10'),
('FIA_AFL.1.20', '\n                        list of actions\n                    ', 'FIA_AFL.1.20'),
('FIA_ATD.1.10', '\n                            list of security attributes\n                        ', 'FIA_ATD.1.10'),
('FIA_SOS.1.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.1.10'),
('FIA_SOS.2.10', '\n                            a defined quality metric\n                        ', 'FIA_SOS.2.10'),
('FIA_SOS.2.20', '\n                            list of TSF functions\n                        ', 'FIA_SOS.2.20'),
('FIA_UAU.1.10', '\n                            list of TSF mediated actions\n                        ', 'FIA_UAU.1.10'),
('FIA_UAU.4.10', '\n                            identified authentication mechanism(s)\n                        ', 'FIA_UAU.4.10'),
('FIA_UAU.5.10', '\n                            list of multiple authentication mechanisms\n                        ', 'FIA_UAU.5.10'),
('FIA_UAU.5.20', '\n                            rules describing how the multiple authentication\n                            mechanisms provide authentication\n                        ', 'FIA_UAU.5.20'),
('FIA_UAU.6.10', '\n                            list of conditions under which re-authentication is\n                            required\n                        ', 'FIA_UAU.6.10'),
('FIA_UAU.7.10', '\n                            list of feedback\n                        ', 'FIA_UAU.7.10'),
('FIA_UID.1.10', '\n                            list of TSF-mediated actions\n                        ', 'FIA_UID.1.10'),
('FIA_USB.1.10', '\n                    list of user security attributes\n                ', 'FIA_USB.1.10'),
('FIA_USB.1.20', '\n                    rules for the initial association of attributes\n                ', 'FIA_USB.1.20'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FIA_USB.1.30', '\n                    rules for the changing of attributes\n                ', 'FIA_USB.1.30'),
('FMT_MOF.1.10', '\n                            list of functions\n                        ', 'FMT_MOF.1.10'),
('FMT_MOF.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MOF.1.11'),
('FMT_MSA.1.10', '\n                        access control SFP(s), information flow control SFP(s)\n                    ', 'FMT_MSA.1.10'),
('FMT_MSA.1.11', '\n                            list of security attributes\n                        ', 'FMT_MSA.1.11'),
('FMT_MSA.1.12', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.1.12'),
('FMT_MSA.2.10', '\n                    list of security attributes\n                ', 'FMT_MSA.2.10'),
('FMT_MSA.3.10', '\n                            access control SFP, information flow control SFP\n                        ', 'FMT_MSA.3.10'),
('FMT_MSA.3.20', '\n                            the authorised identified roles\n                        ', 'FMT_MSA.3.20'),
('FMT_MSA.4.10', '\n                rules for setting the values of security attributes\n            ', 'FMT_MSA.4.10'),
('FMT_MTD.1.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.1.10'),
('FMT_MTD.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.1.11'),
('FMT_MTD.2.10', '\n                            list of TSF data\n                        ', 'FMT_MTD.2.10'),
('FMT_MTD.2.11', '\n                            the authorised identified roles\n                        ', 'FMT_MTD.2.11'),
('FMT_MTD.2.20', '\n                            actions to be taken\n                        ', 'FMT_MTD.2.20'),
('FMT_MTD.3.10', '\n                    list of TSF data\n                ', 'FMT_MTD.3.10'),
('FMT_REV.1.10', '\n                        list of security attributes\n                    ', 'FMT_REV.1.10'),
('FMT_REV.1.11', '\n                        the authorised identified roles\n                    ', 'FMT_REV.1.11'),
('FMT_REV.1.20', '\n                            specification of revocation rules\n                        ', 'FMT_REV.1.20'),
('FMT_SAE.1.10', '\n                            list of security attributes for which expiration is to\n                            be supported\n                        ', 'FMT_SAE.1.10'),
('FMT_SAE.1.11', '\n                            the authorised identified roles\n                        ', 'FMT_SAE.1.11'),
('FMT_SAE.1.20', '\n                            list of actions to be taken for each security attribute\n                        ', 'FMT_SAE.1.20'),
('FMT_SMF.1.10', '\n            list of management functions to be provided by\n            the TSF\n        ', 'FMT_SMF.1.10'),
('FMT_SMR.1.10', '\n                            the authorised identified roles\n                        ', 'FMT_SMR.1.10'),
('FMT_SMR.2.10', '\n                            authorised identified roles\n                        ', 'FMT_SMR.2.10'),
('FMT_SMR.2.30', '\n                            conditions for the different roles\n                        ', 'FMT_SMR.2.30'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FMT_SMR.3.10', '\n                            the roles\n                        ', 'FMT_SMR.3.10'),
('FPR_ANO.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.1.10'),
('FPR_ANO.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.1.11'),
('FPR_ANO.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_ANO.2.10'),
('FPR_ANO.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_ANO.2.11'),
('FPR_ANO.2.20', '\n                            list of services\n                        ', 'FPR_ANO.2.20'),
('FPR_ANO.2.21', '\n                            list of subjects\n                        ', 'FPR_ANO.2.21'),
('FPR_PSE.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.1.10'),
('FPR_PSE.1.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.1.11'),
('FPR_PSE.1.20', '\n                            number of aliases\n                        ', 'FPR_PSE.1.20'),
('FPR_PSE.1.21', '\n                            list of subjects\n                        ', 'FPR_PSE.1.21'),
('FPR_PSE.1.30', '\n                            alias metric\n                        ', 'FPR_PSE.1.30'),
('FPR_PSE.2.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.2.10'),
('FPR_PSE.2.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.2.11'),
('FPR_PSE.2.20', '\n                            number of aliases\n                        ', 'FPR_PSE.2.20'),
('FPR_PSE.2.21', '\n                            list of subjects\n                        ', 'FPR_PSE.2.21'),
('FPR_PSE.2.30', '\n                            alias metric\n                        ', 'FPR_PSE.2.30'),
('FPR_PSE.2.40', '\n                            list of conditions\n                        ', 'FPR_PSE.2.40'),
('FPR_PSE.3.10', '\n                            set of users and/or subjects\n                        ', 'FPR_PSE.3.10'),
('FPR_PSE.3.11', '\n                            list of subjects and/or operations and/or objects\n                        ', 'FPR_PSE.3.11'),
('FPR_PSE.3.20', '\n                            number of aliases\n                        ', 'FPR_PSE.3.20'),
('FPR_PSE.3.21', '\n                            list of subjects\n                        ', 'FPR_PSE.3.21'),
('FPR_PSE.3.30', '\n                            alias metric\n                        ', 'FPR_PSE.3.30'),
('FPR_PSE.3.40', '\n                            list of conditions\n                        ', 'FPR_PSE.3.40'),
('FPR_UNL.1.10', '\n                            set of users and/or subjects\n                        ', 'FPR_UNL.1.10'),
('FPR_UNL.1.11', '\n                            list of operations\n                        ', 'FPR_UNL.1.11'),
('FPR_UNO.1.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.1.10'),
('FPR_UNO.1.11', '\n                            list of operations\n                        ', 'FPR_UNO.1.11'),
('FPR_UNO.1.12', '\n                            list of objects\n                        ', 'FPR_UNO.1.12'),
('FPR_UNO.1.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.1.13'),
('FPR_UNO.2.10', '\n                            list of users and/or subjects\n                        ', 'FPR_UNO.2.10'),
('FPR_UNO.2.11', '\n                            list of operations\n                        ', 'FPR_UNO.2.11'),
('FPR_UNO.2.12', '\n                            list of objects\n                        ', 'FPR_UNO.2.12'),
('FPR_UNO.2.13', '\n                            list of protected users and/or subjects\n                        ', 'FPR_UNO.2.13'),
('FPR_UNO.2.20', '\n                            unobservability related information\n                        ', 'FPR_UNO.2.20'),
('FPR_UNO.2.21', '\n                            list of conditions\n                        ', 'FPR_UNO.2.21'),
('FPR_UNO.3.10', '\n                            list of services\n                        ', 'FPR_UNO.3.10'),
('FPR_UNO.3.11', '\n                            list of subjects\n                        ', 'FPR_UNO.3.11'),
('FPR_UNO.3.12', '\n                            privacy related information\n                        ', 'FPR_UNO.3.12'),
('FPR_UNO.4.10', '\n                            set of authorised users\n                        ', 'FPR_UNO.4.10'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPR_UNO.4.11', '\n                            list of resources and/or services\n                        ', 'FPR_UNO.4.11'),
('FPT_FLS.1.10', '\n                            list of types of failures in the TSF\n                        ', 'FPT_FLS.1.10'),
('FPT_ITA.1.10', '\n                        list of types of TSF data\n                    ', 'FPT_ITA.1.10'),
('FPT_ITA.1.11', '\n                        a defined availability metric\n                    ', 'FPT_ITA.1.11'),
('FPT_ITA.1.12', '\n                        conditions to ensure availability\n                    ', 'FPT_ITA.1.12'),
('FPT_ITI.1.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.1.10'),
('FPT_ITI.1.20', '\n                        action to be taken\n                    ', 'FPT_ITI.1.20'),
('FPT_ITI.2.10', '\n                        a defined modification metric\n                    ', 'FPT_ITI.2.10'),
('FPT_ITI.2.20', '\n                        action to be taken\n                    ', 'FPT_ITI.2.20'),
('FPT_ITI.2.30', '\n                        type of modification\n                    ', 'FPT_ITI.2.30'),
('FPT_ITT.3.20', '\n                            specify the action to be taken\n                        ', 'FPT_ITT.3.20'),
('FPT_PHP.2.30', '\n                            list of TSF devices/elements for which active detection\n                            is required\n                        ', 'FPT_PHP.2.30'),
('FPT_PHP.2.31', '\n                            a designated user or role\n                        ', 'FPT_PHP.2.31'),
('FPT_PHP.3.10', '\n                            physical tampering scenarios\n                        ', 'FPT_PHP.3.10'),
('FPT_PHP.3.11', '\n                            list of TSF devices/elements\n                        ', 'FPT_PHP.3.11'),
('FPT_RCV.1.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.1.10'),
('FPT_RCV.2.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.2.10'),
('FPT_RCV.2.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.2.20'),
('FPT_RCV.3.10', '\n                        list of failures/service discontinuities\n                    ', 'FPT_RCV.3.10'),
('FPT_RCV.3.20', '\n                            list of failures/service discontinuities\n                        ', 'FPT_RCV.3.20'),
('FPT_RCV.3.30', '\n                            quantification\n                        ', 'FPT_RCV.3.30'),
('FPT_RCV.4.10', '\n                            list of functions and failure scenarios\n                        ', 'FPT_RCV.4.10'),
('FPT_RPL.1.10', '\n                            list of identified entities\n                        ', 'FPT_RPL.1.10'),
('FPT_RPL.1.20', '\n                            list of specific actions\n                        ', 'FPT_RPL.1.20'),
('FPT_TDC.1.10', '\n                            list of TSF data types\n                        ', 'FPT_TDC.1.10'),
('FPT_TDC.1.20', '\n                            list of interpretation rules to be applied by the TSF\n                        ', 'FPT_TDC.1.20'),
('FPT_TEE.1.10', '\n            list of properties of the external entities\n        ', 'FPT_TEE.1.10'),
('FPT_TEE.1.20', '\n            action(s)\n        ', 'FPT_TEE.1.20'),
('FPT_TRC.1.20', '\n                            list of functions dependent on TSF data replication\n                            consistency\n                        ', 'FPT_TRC.1.20'),
('', '', 'FPT_TST.1.30'),
('FRU_FLT.1.10', '\n                            list of TOE capabilities\n                        ', 'FRU_FLT.1.10'),
('FRU_FLT.1.11', '\n                            list of type of failures\n                        ', 'FRU_FLT.1.11'),
('FRU_FLT.2.10', '\n                            list of type of failures\n                        ', 'FRU_FLT.2.10'),
('FRU_PRS.1.20', '\n                            controlled resources\n                        ', 'FRU_PRS.1.20'),
('FRU_RSA.1.10', '\n                            controlled resources\n                        ', 'FRU_RSA.1.10'),
('FRU_RSA.2.10', '\n                            controlled resources\n                        ', 'FRU_RSA.2.10'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FRU_RSA.2.20', '\n                            controlled resource\n                        ', 'FRU_RSA.2.20'),
('FTA_LSA.1.10', '\n                            session security attributes\n                        ', 'FTA_LSA.1.10'),
('FTA_LSA.1.11', '\n                            attributes\n                        ', 'FTA_LSA.1.11'),
('FTA_MCS.1.20', '\n                            default number\n                        ', 'FTA_MCS.1.20'),
('FTA_MCS.2.10', '\n                            rules for the number of maximum concurrent sessions\n                        ', 'FTA_MCS.2.10'),
('FTA_MCS.2.20', '\n                            default number\n                        ', 'FTA_MCS.2.20'),
('FTA_SSL.1.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.1.10'),
('FTA_SSL.1.20', '\n                            events to occur\n                        ', 'FTA_SSL.1.20'),
('FTA_SSL.2.20', '\n                            events to occur\n                        ', 'FTA_SSL.2.20'),
('FTA_SSL.3.10', '\n                            time interval of user inactivity\n                        ', 'FTA_SSL.3.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTA_TSE.1.10', '\n                            attributes\n                        ', 'FTA_TSE.1.10'),
('FTP_ITC.1.30', '\n                            list of functions for which a trusted channel is\n                            required\n                        ', 'FTP_ITC.1.30'),
('', '', 'FTP_TRP.1.30');

-- --------------------------------------------------------

--
-- Table structure for table `feassignmentnotes`
--

CREATE TABLE `feassignmentnotes` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(20) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `feassignmentnotes`
--

INSERT INTO `feassignmentnotes` (`type`, `id`, `para`, `idf`) VALUES
('', '', '', 'FPT_TST.1.30'),
('normal', 'FAU_ARP.1.10', 'the PP/ST author should specify the actions to be taken\n                                in case of a potential security violation. An example of\n                                such a list is: ``inform the authorised user, disable\n                                the subject that created the potential security\n                                violation.\'\' It can also specify that the action to be\n                                taken can be specified by an authorised user.', 'FAU_ARP.1.10'),
('normal', 'FAU_SAA.2.10', 'the PP/ST author should specify the profile target\n                                group. A single PP/ST may include multiple profile\n                                target groups.', 'FAU_SAA.2.10'),
('normal', 'FAU_SAA.2.30', 'the PP/ST author should specify conditions under which\n                                anomalous activity is reported by the TSF. Conditions\n                                may include the suspicion rating reaching a certain\n                                value, or be based on the type of anomalous activity\n                                observed.', 'FAU_SAA.2.30'),
('normal', 'FAU_SAA.3.10', 'the PP/ST author should identify a base subset of system\n                                events whose occurrence, in isolation from all other\n                                system activity, may indicate a violation of the\n                                enforcement of the SFRs. These include events that by\n                                themselves indicate a clear violation to the enforcement\n                                of the SFRs, or whose occurrence is so significant that\n                                they warrant actions.', 'FAU_SAA.3.10'),
('normal', 'FAU_SAA.3.20', 'the PP/ST author should specify the information used to\n                                determine system activity. This information is the input\n                                data used by the analysis tool to determine the system\n                                activity that has occurred on the TOE. This data may\n                                include audit data, combinations of audit data with\n                                other system data, or may consist of data other than the\n                                audit data. The PP/ST author should define precisely\n                                what system events and event attributes are being\n                                monitored within the input data.', 'FAU_SAA.3.20'),
('normal', 'FAU_SAA.4.10', 'the PP/ST author should identify a base set of list of\n                                sequences of system events whose occurrence are\n                                representative of known penetration scenarios. These\n                                event sequences represent known penetration\n                                scenarios. Each event represented in the sequence should\n                                map to a monitored system event, such that as the system\n                                events are performed, they are bound (mapped) to the\n                                known penetration event sequences.', 'FAU_SAA.4.10'),
('normal', 'FAU_SAA.4.11', 'the PP/ST author should identify a base subset of\n                                system events whose occurrence, in isolation from all\n                                other system activity, may indicate a violation of the\n                                enforcement of the SFRs. These include events that by themselves indicate\n                                a clear violation to the SFRs, or whose occurrence is\n                                so significant they warrant action.', 'FAU_SAA.4.11'),
('normal', 'FAU_SAA.4.20', 'the PP/ST author should specify the information used to\n                                determine system activity. This information is the input\n                                data used by the analysis tool to determine the system\n                                activity that has occurred on the TOE. This data may\n                                include audit data, combinations of audit data with\n                                other system data, or may consist of data other than the\n                                audit data. The PP/ST author should define precisely\n                                what system events and event attributes are being\n                                monitored within the input data.', 'FAU_SAA.4.20'),
('normal', 'FAU_SAR.1.10', 'the PP/ST author should specify the authorised users\n                                that can use this capability. If appropriate the PP/ST\n                                author may include security roles (see, FMT_SMR.1, ).', 'FAU_SAR.1.10'),
('normal', 'FAU_SAR.1.11', 'the PP/ST author should specify the type of information\n                                the specified user is permitted to obtain from the audit\n                                records. Examples are ``all\'\', ``subject identity\'\',\n                                ``all information belonging to audit records referencing\n                                this user\'\'. When employing the SFR, FAU_SAR.1, it is not\n                                necessary to repeat, in full detail, the list of audit\n                                information first specified in FAU_GEN.1. Use of terms\n                                such as ``all\'\' or ``all audit information\'\' assist in\n                                eliminating ambiguity and the further need for\n                                comparative analysis between the two security\n                                requirements.', 'FAU_SAR.1.11'),
('normal', 'FAU_SAR.3.10', 'the PP/ST author should specify whether capabilities to\n                        select and/or order audit data is required from the\n                        TSF.', 'FAU_SAR.3.10'),
('normal', 'FAU_SAR.3.11', 'the PP/ST author should assign the criteria, possibly\n                        with logical relations, to be used to select the audit\n                        data for review. The logical relations are intended to\n                        specify whether the operation can be on an individual\n                        attribute or a collection of attributes. An example of\n                        this assignment could be: ``application, user account\n                        and/or location\'\'. In this case the operation could be\n                        specified using any combination of the three attributes:\n                        application, user account and location.', 'FAU_SAR.3.11'),
('normal', 'FAU_STG.2.30', 'the PP/ST author should specify the metric that the TSF\n                                must ensure with respect to the stored audit\n                                records. This metric limits the data loss by enumerating\n                                the number of records that must be kept, or the time\n                                that records are guaranteed to be maintained. An example\n                                of the metric could be ``100,000\'\' indicating that\n                                100,000 audit records can be stored.', 'FAU_STG.2.30'),
('normal', 'FAU_STG.3.10', 'the PP/ST author should indicate the pre-defined\n                                limit. If the management functions indicate that this\n                                number might be changed by the authorised user, this\n                                value is the default value. The PP/ST author might\n                                choose to let the authorised user define this\n                                limit. In that case the assignment can be for example\n                                ``an authorised user set limit\'\'.', 'FAU_STG.3.10'),
('normal', 'FAU_STG.3.11', 'the PP/ST author should specify actions that should be\n                                taken in case of imminent audit storage failure\n                                indicated by exceeding the threshold. Actions might\n                                include informing an authorised user.', 'FAU_STG.3.11'),
('normal', 'FAU_STG.4.10', 'the PP/ST author should specify other actions that should be\n                        taken in case of audit storage failure, such as informing the\n                        authorised user. If there is no other action to be taken in\n                        case of audit storage failure, this assignment can be\n                        completed with ``none\'\'.', 'FAU_STG.4.10'),
('normal', 'FCO_NRO.1.10', 'the PP/ST author should fill in the types of\n                                information subject to the evidence of origin\n                                function, for example, electronic mail messages.', 'FCO_NRO.1.10'),
('normal', 'FCO_NRO.1.20', 'the PP/ST author should fill in the list of the\n                                attributes that shall be linked to the information;\n                                for example, originator identity, time of origin, and\n                                location of origin.', 'FCO_NRO.1.20'),
('normal', 'FCO_NRO.1.21', 'the PP/ST author should fill in the list of\n                                information fields within the information over which\n                                the attributes provide evidence of origin, such as the\n                                body of a message.', 'FCO_NRO.1.21'),
('normal', 'FCO_NRO.1.30', 'the PP/ST author should fill in the list of\n                                limitations under which the evidence can be\n                                verified. For example the evidence can only be\n                                verified within a 24 hour time interval. An assignment\n                                of ``immediate\'\' or\n                                ``indefinite\'\' is acceptable.', 'FCO_NRO.1.30'),
('normal', 'FCO_NRO.2.10', 'the PP/ST author should fill in the types of\n                                information subject to the evidence of origin\n                                function, for example, electronic mail messages.', 'FCO_NRO.2.10'),
('normal', 'FCO_NRO.2.20', 'the PP/ST author should fill in the list of the\n                                attributes that shall be linked to the information;\n                                for example, originator identity, time of origin, and\n                                location of origin.', 'FCO_NRO.2.20'),
('normal', 'FCO_NRO.2.21', 'the PP/ST author should fill in the list of\n                                information fields within the information over which\n                                the attributes provide evidence of origin, such as the\n                                body of a message.', 'FCO_NRO.2.21'),
('normal', 'FCO_NRO.2.30', 'the PP/ST author should fill in the list of\n                                limitations under which the evidence can be\n                                verified. For example the evidence can only be\n                                verified within a 24 hour time interval. An assignment\n                                of ``immediate\'\' or\n                                ``indefinite\'\' is acceptable.', 'FCO_NRO.2.30'),
('normal', 'FCO_NRR.1.10', 'the PP/ST author should fill in the types of\n                                information subject to the evidence of receipt\n                                function, for example, electronic mail messages.', 'FCO_NRR.1.10'),
('normal', 'FCO_NRR.1.20', 'the PP/ST author should fill in the list of the\n                                attributes that shall be linked to the information;\n                                for example, recipient identity, time of receipt, and\n                                location of receipt.', 'FCO_NRR.1.20'),
('normal', 'FCO_NRR.1.21', 'the PP/ST author should fill in the list of\n                                information fields with the fields within the\n                                information over which the attributes provide evidence\n                                of receipt, such as the body a message.', 'FCO_NRR.1.21'),
('normal', 'FCO_NRR.1.30', 'the PP/ST author should fill in the list of\n                                limitations under which the evidence can be\n                                verified. For example the evidence can only be\n                                verified within a 24 hour time interval. An assignment\n                                of ``immediate\'\' or\n                                ``indefinite\'\' is acceptable.', 'FCO_NRR.1.30'),
('normal', 'FCO_NRR.2.10', 'the PP/ST author should fill in the types of\n                        information subject to the evidence of receipt\n                        function, for example electronic mail messages.', 'FCO_NRR.2.10'),
('normal', 'FCO_NRR.2.20', 'the PP/ST author should fill in the list of the\n                                attributes that shall be linked to the information;\n                                for example, recipient identity, time of receipt, and\n                                location of receipt.', 'FCO_NRR.2.20'),
('normal', 'FCO_NRR.2.21', 'the PP/ST author should fill in the list of\n                                information fields with the fields within the\n                                information over which the attributes provide evidence\n                                of receipt, such as the body of a message.', 'FCO_NRR.2.21'),
('normal', 'FCO_NRR.2.30', 'the PP/ST author should fill in the list of\n                                limitations under which the evidence can be\n                                verified. For example the evidence can only be\n                                verified within a 24 hour time interval. An assignment\n                                of ``immediate\'\' or\n                                ``indefinite\'\' is acceptable.', 'FCO_NRR.2.30'),
('normal', 'FCS_CKM.1.10', 'the PP/ST author should specify the cryptographic key\n                                generation algorithm to be used.', 'FCS_CKM.1.10'),
('normal', 'FCS_CKM.1.11', 'the PP/ST author should specify the cryptographic key\n                                sizes to be used. The key sizes specified should be\n                                appropriate for the algorithm and its intended use.', 'FCS_CKM.1.11'),
('normal', 'FCS_CKM.1.12', 'the PP/ST author should specify the assigned standard\n                                that documents the method used to generate\n                                cryptographic keys. The assigned standard may comprise\n                                none, one or more actual standards publications, for\n                                example, from international, national, industry or\n                                organisational standards.', 'FCS_CKM.1.12'),
('normal', 'FCS_CKM.2.10', 'the PP/ST author should specify the cryptographic key\n                                distribution method to be used.', 'FCS_CKM.2.10'),
('normal', 'FCS_CKM.2.11', 'the PP/ST author should specify the assigned standard\n                                that documents the method used to distribute\n                                cryptographic keys. The assigned standard may comprise\n                                none, one or more actual standards publications, for\n                                example, from international, national, industry or\n                                organisational standards.', 'FCS_CKM.2.11'),
('normal', 'FCS_CKM.3.10', 'the PP/ST author should specify the type of\n                                cryptographic key access being used. Examples of types\n                                of cryptographic key access include (but are not\n                                limited to) cryptographic key backup, cryptographic\n                                key archival, cryptographic key escrow and\n                                cryptographic key recovery.', 'FCS_CKM.3.10'),
('normal', 'FCS_CKM.3.11', 'the PP/ST author should specify the cryptographic key\n                                access method to be used.', 'FCS_CKM.3.11'),
('normal', 'FCS_CKM.3.12', 'the PP/ST author should specify the assigned standard\n                                that documents the method used to access cryptographic\n                                keys. The assigned standard may comprise none, one or\n                                more actual standards publications, for example, from\n                                international, national, industry or organisational\n                                standards.', 'FCS_CKM.3.12'),
('normal', 'FCS_CKM.4.10', 'the PP/ST author should specify the key destruction\n                                method to be used to destroy cryptographic keys.', 'FCS_CKM.4.10'),
('normal', 'FCS_CKM.4.11', 'the PP/ST author should specify the assigned standard\n                                that documents the method used to destroy\n                                cryptographic keys. The assigned standard may comprise\n                                none, one or more actual standards publications, for\n                                example, from international, national, industry or\n                                organisational standards.', 'FCS_CKM.4.11'),
('normal', 'FCS_COP.1.10', 'the PP/ST author should specify the cryptographic\n                                operations being performed. Typical cryptographic\n                                operations include digital signature generation and/or\n                                verification, cryptographic checksum generation for\n                                integrity and/or for verification of checksum, secure\n                                hash (message digest) computation, data encryption\n                                and/or decryption, cryptographic key encryption and/or\n                                decryption, cryptographic key agreement and random\n                                number generation. The cryptographic operation may be\n                                performed on user data or TSF data.', 'FCS_COP.1.10'),
('normal', 'FCS_COP.1.11', 'the PP/ST author should specify the cryptographic\n                                algorithm to be used. Typical cryptographic algorithms\n                                include, but are not limited to, DES, RSA and IDEA.', 'FCS_COP.1.11'),
('normal', 'FCS_COP.1.12', 'the PP/ST author should specify the cryptographic key\n                                sizes to be used. The key sizes specified should be\n                                appropriate for the algorithm and its intended use.', 'FCS_COP.1.12'),
('normal', 'FCS_COP.1.13', 'the PP/ST author should specify the assigned standard\n                                that documents how the identified cryptographic\n                                operation(s) are performed. The assigned standard may\n                                comprise none, one or more actual standards\n                                publications, for example, from international,\n                                national, industry or organisational standards.', 'FCS_COP.1.13'),
('normal', 'FDP_ACC.1.10', 'the PP/ST author should specify a uniquely named\n                                access control SFP to be enforced by the TSF.', 'FDP_ACC.1.10'),
('normal', 'FDP_ACC.1.11', 'the PP/ST author should specify the list of subjects,\n                                objects, and operations among subjects and objects\n                                covered by the SFP.', 'FDP_ACC.1.11'),
('normal', 'FDP_ACC.2.10', 'the PP/ST author should specify a uniquely named\n                                access control SFP to be enforced by the TSF.', 'FDP_ACC.2.10'),
('normal', 'FDP_ACC.2.11', 'the PP/ST author should specify the list of subjects\n                                and objects covered by the SFP. All operations among\n                                those subjects and objects will be covered by the SFP.', 'FDP_ACC.2.11'),
('normal', 'FDP_ACF.1.10', 'the PP/ST author should specify an access control SFP\n                        name that the TSF is to enforce. The name of the access\n                        control SFP, and the scope of control for that policy\n                        are defined in components from, FDP_ACC, .', 'FDP_ACF.1.10'),
('normal', 'FDP_ACF.1.11', 'the PP/ST author should specify, for each controlled\n                        subject and object, the security attributes and/or named\n                        groups of security attributes that the function will use\n                        in the specification of the rules. For example, such\n                        attributes may be things such as the user identity,\n                        subject identity, role, time of day, location, ACLs, or\n                        any other attribute specified by the PP/ST author. Named\n                        groups of security attributes can be specified to\n                        provide a convenient means to refer to multiple security\n                        attributes. Named groups could provide a useful way to\n                        associate ``roles\'\' defined in, FMT_SMR, , and\n                        all of their relevant attributes, with subjects. In\n                        other words, each role could relate to a named group of\n                        attributes.', 'FDP_ACF.1.11'),
('normal', 'FDP_ACF.1.20', 'the PP/ST author should specify the SFP rules\n                                governing access among controlled subjects and\n                                controlled objects using controlled operations on\n                                controlled objects. These rules specify when access\n                                is granted or denied. It can specify general access\n                                control functions (e.g. typical permission bits) or\n                                granular access control functions (e.g. ACLs).', 'FDP_ACF.1.20'),
('normal', 'FDP_ACF.1.30', 'the PP/ST author should specify the rules, based on\n                                security attributes, that explicitly authorise access\n                                of subjects to objects that will be used to explicitly\n                                authorise access. These rules are in addition to those\n                                specified in, FDP_ACF.1.1, . They are\n                                included in, FDP_ACF.1.3, as they are\n                                intended to contain exceptions to the rules in, FDP_ACF.1.1, . An example of rules to explicitly\n                                authorise access is based on a privilege vector\n                                associated with a subject that always grants access to\n                                objects covered by the access control SFP that has\n                                been specified. If such a capability is not desired,\n                                then the PP/ST author should specify\n                                ``none\'\'.', 'FDP_ACF.1.30'),
('normal', 'FDP_ACF.1.40', 'the PP/ST author should specify the rules,\n                        based on security attributes, that explicitly deny access of subjects\n                        to objects. These rules are in addition to those specified in, FDP_ACF.1.1, . They are included in, FDP_ACF.1.4, as they are intended to contain exceptions to the rules in, FDP_ACF.1.1, . An example of rules to explicitly deny access is based on a privilege\n                        vector associated with a subject\n                        that always denies access to objects covered by the access control SFP\n                        that has been specified. If such a capability is not desired, then the\n                        PP/ST author should specify ``none\'\'.', 'FDP_ACF.1.40'),
('normal', 'FDP_DAU.1.10', 'the PP/ST author should specify the list of objects or\n                                information types for which the TSF shall be capable\n                                of generating data authentication evidence.', 'FDP_DAU.1.10'),
('normal', 'FDP_DAU.1.20', 'the PP/ST author should specify the list of subjects\n                                that will have the ability to verify data\n                                authentication evidence for the objects identified in\n                                the previous element. The list of subjects could be\n                                very specific, if the subjects are known, or it could\n                                be more generic and refer to a\n                                ``type\'\' of subject such\n                                as an identified role.', 'FDP_DAU.1.20'),
('normal', 'FDP_DAU.2.10', 'the PP/ST author should specify the list of objects or\n                                information types for which the TSF shall be capable\n                                of generating data authentication evidence.', 'FDP_DAU.2.10'),
('normal', 'FDP_DAU.2.20', 'the PP/ST author should specify the list of subjects\n                                that will have the ability to verify data\n                                authentication evidence for the objects identified in\n                                the previous element as well as the identity of the\n                                user that created the data authentication evidence.', 'FDP_DAU.2.20'),
('normal', 'FDP_ETC.1.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when exporting user data. The user\n                                data that this function exports is scoped by the\n                                assignment of these SFPs.', 'FDP_ETC.1.10'),
('normal', 'FDP_ETC.2.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when exporting user data. The user\n                                data that this function exports is scoped by the\n                                assignment of these SFPs.', 'FDP_ETC.2.10'),
('normal', 'FDP_ETC.2.40', 'the PP/ST author should specify any additional\n                                exportation control rules or\n                                ``none\'\' if there are no\n                                additional exportation control rules. These rules will\n                                be enforced by the TSF in addition to the access\n                                control SFPs and/or information flow control SFPs\n                                selected in, FDP_ETC.2.1, .', 'FDP_ETC.2.40'),
('normal', 'FDP_IFC.1.10', 'the PP/ST author should specify a uniquely named\n                                information flow control SFP to be enforced by the\n                                TSF.', 'FDP_IFC.1.10'),
('normal', 'FDP_IFC.1.11', 'the PP/ST author should specify the list of subjects,\n                                information, and operations which cause controlled\n                                information to flow to and from controlled subjects\n                                covered by the SFP.  As mentioned above, the list of\n                                subjects could be at various levels of detail\n                                depending on the needs of the PP/ST author. It could\n                                specify users, machines, or processes for\n                                example. Information could refer to data such as email\n                                or network protocols, or more specific objects similar\n                                to those specified under an access control policy. If\n                                the information that is specified is contained within\n                                an object that is subject to an access control policy,\n                                then both the access control policy and information\n                                flow control policy must be enforced before the\n                                specified information could flow to or from the\n                                object.', 'FDP_IFC.1.11'),
('normal', 'FDP_IFC.2.10', 'the PP/ST author should specify a uniquely named\n                                information flow control SFP to be enforced by the\n                                TSF.', 'FDP_IFC.2.10'),
('normal', 'FDP_IFC.2.11', 'the PP/ST author should specify the list of subjects\n                                and information that will be covered by the SFP. All\n                                operations that cause that information to flow to and\n                                from subjects will be covered by the SFP. As mentioned\n                                above, the list of subjects could be at various levels\n                                of detail depending on the needs of the PP/ST\n                                author. It could specify users, machines, or processes\n                                for example. Information could refer to data such as\n                                email or network protocols, or more specific objects\n                                similar to those specified under an access control\n                                policy. If the information that is specified is\n                                contained within an object that is subject to an\n                                access control policy, then both the access control\n                                policy and information flow control policy must be\n                                enforced before the specified information could flow\n                                to or from the object.', 'FDP_IFC.2.11'),
('normal', 'FDP_IFF.1.10', 'the PP/ST author should specify the information flow\n                                control SFPs enforced by the TSF. The name of the\n                                information flow control SFP, and the scope of control\n                                for that policy are defined in components from, FDP_IFC, .', 'FDP_IFF.1.10'),
('normal', 'FDP_IFF.1.11', 'the PP/ST author should specify, for each type of\n                        controlled subject and information, the security\n                        attributes that are relevant to the specification of the\n                        SFP rules. For example, such security attributes may be\n                        things such the subject identifier, subject sensitivity\n                        label, subject clearance label, information sensitivity\n                        label, etc. The types of security attributes should be\n                        sufficient to support the environmental needs.', 'FDP_IFF.1.11'),
('normal', 'FDP_IFF.1.20', 'the PP/ST author should specify for each operation,\n                                the security attribute-based relationship that must\n                                hold between subject and information security\n                                attributes that the TSF will enforce.', 'FDP_IFF.1.20'),
('normal', 'FDP_IFF.1.30', 'the PP/ST author should specify any additional information\n                            flow control SFP rules that the TSF is to enforce. This\n                            includes all rules of the SFP that are either not based on the\n                            security attributes of the information and the subject or\n                            rules that automatically modify the security attributes of\n                            information or subjects as a result of an access operation.\n                            An example for the first case is a rule of the SFP controlling\n                            a threshold value for specific types of information. This\n                            would for example be the case when the information flow SFP\n                            contains rules on access to statistical data where a subject\n                            is only allowed to access this type of information up to a\n                            specific number of accesses.  An example for the second case\n                            would be a rule stating under which conditions and how the\n                            security attributes of a subject or object change as the\n                            result of an access operation. Some information flow policies\n                            for example may limit the number of access operations to\n                            information with specific security attributes.  If there are\n                            no additional rules then the PP/ST author should specify\n                            ``none\'\'.', 'FDP_IFF.1.30'),
('normal', 'FDP_IFF.1.40', 'the PP/ST author should specify the rules, based on\n                                security attributes, that explicitly authorise\n                                information flows. These rules are in addition to\n                                those specified in the preceding elements. They are\n                                included in, FDP_IFF.1.4, as they are\n                                intended to contain exceptions to the rules in the\n                                preceding elements. An example of rules to explicitly\n                                authorise information flows is based on a privilege\n                                vector associated with a subject that always grants\n                                the subject the ability to cause an information flow\n                                for information that is covered by the SFP that has\n                                been specified. If such a capability is not desired,\n                                then the PP/ST author should specify\n                                ``none\'\'.', 'FDP_IFF.1.40'),
('normal', 'FDP_IFF.1.50', 'the PP/ST author should specify the rules, based on security\n                                attributes, that explicitly deny information flows. These rules\n                                are in addition to those specified in the preceding\n                                elements. They are included in, FDP_IFF.1.5, as they\n                                are intended to contain exceptions to the rules in the preceding\n                                elements. An example of rules to explicitly deny information\n                                flows is based on a privilege vector associated with a subject\n                                that always denies the subject the ability to cause an\n                                information flow for information that is covered by the SFP that\n                                has been specified. If such a capability is not desired, then\n                                the PP/ST author should specify ``none\'\'.', 'FDP_IFF.1.50'),
('normal', 'FDP_IFF.2.10', 'the PP/ST author should specify the information flow\n                                control SFPs enforced by the TSF. The name of the\n                                information flow control SFP, and the scope of control\n                                for that policy are defined in components from, FDP_IFC, .', 'FDP_IFF.2.10'),
('normal', 'FDP_IFF.2.11', 'the PP/ST author should specify, for each type of\n                        controlled subject and information, the security\n                        attributes that are relevant to the specification of the\n                        SFP rules. For example, such security attributes may be\n                        things such the subject identifier, subject sensitivity\n                        label, subject clearance label, information sensitivity\n                        label, etc. The types of security attributes should be\n                        sufficient to support the environmental needs.', 'FDP_IFF.2.11'),
('normal', 'FDP_IFF.2.20', 'the PP/ST author should specify for each operation,\n                                the security attribute-based relationship that must\n                                hold between subject and information security\n                                attributes that the TSF will enforce. These\n                                relationships should be based upon the ordering\n                                relationships between the security attributes.', 'FDP_IFF.2.20'),
('normal', 'FDP_IFF.2.30', 'the PP/ST author should specify any additional information\n                            flow control SFP rules that the TSF is to enforce. This\n                            includes all rules of the SFP that are either not based on the\n                            security attributes of the information and the subject or\n                            rules that automatically modify the security attributes of\n                            information or subjects as a result of an access operation.\n                            An example for the first case is a rule of the SFP controlling\n                            a threshold value for specific types of information. This\n                            would for example be the case when the information flow SFP\n                            contains rules on access to statistical data where a subject\n                            is only allowed to access this type of information up to a\n                            specific number of accesses.  An example for the second case\n                            would be a rule stating under which conditions and how the\n                            security attributes of a subject or object change as the\n                            result of an access operation. Some information flow policies\n                            for example may limit the number of access operations to\n                            information with specific security attributes.  If there are\n                            no additional rules then the PP/ST author should specify\n                            ``none\'\'.', 'FDP_IFF.2.30'),
('normal', 'FDP_IFF.2.40', 'the PP/ST author should specify the rules, based on\n                                security attributes, that explicitly authorise\n                                information flows. These rules are in addition to\n                                those specified in the preceding elements. They are\n                                included in, FDP_IFF.2.4, as they are\n                                intended to contain exceptions to the rules in the\n                                preceding elements. An example of rules to explicitly\n                                authorise information flows is based on a privilege\n                                vector associated with a subject that always grants\n                                the subject the ability to cause an information flow\n                                for information that is covered by the SFP that has\n                                been specified. If such a capability is not desired,\n                                then the PP/ST author should specify\n                                ``none\'\'.', 'FDP_IFF.2.40'),
('normal', 'FDP_IFF.2.50', 'the PP/ST author should specify the rules, based on security\n                                attributes, that explicitly deny information flows. These rules\n                                are in addition to those specified in the preceding\n                                elements. They are included in, FDP_IFF.2.5, as they are intended to contain exceptions to the\n                                rules in the preceding elements. An example of rules to\n                                explicitly deny information flows is based on a privilege vector\n                                associated with a subject that always denies the subject the\n                                ability to cause an information flow for information that is\n                                covered by the SFP that has been specified. If such a capability\n                                is not desired, then the PP/ST author should specify\n                                ``none\'\'.', 'FDP_IFF.2.50'),
('normal', 'FDP_IFF.3.10', 'the PP/ST author should specify the information flow\n                                control SFPs enforced by the TSF. The name of the\n                                information flow control SFP, and the scope of control\n                                for that policy are defined in components from, FDP_IFC, .', 'FDP_IFF.3.10'),
('normal', 'FDP_IFF.3.11', 'the PP/ST author should specify the types of illicit\n                                information flows that are subject to a maximum\n                                capacity limitation.', 'FDP_IFF.3.11'),
('normal', 'FDP_IFF.3.12', 'the PP/ST author should specify the maximum capacity\n                                permitted for any identified illicit information\n                                flows.', 'FDP_IFF.3.12'),
('normal', 'FDP_IFF.4.10', 'the PP/ST author should specify the information flow\n                                control SFPs enforced by the TSF. The name of the\n                                information flow control SFP, and the scope of control\n                                for that policy are defined in components from, FDP_IFC, .', 'FDP_IFF.4.10'),
('normal', 'FDP_IFF.4.11', 'the PP/ST author should specify the types of illicit\n                                information flows which are subject to a maximum\n                                capacity limitation.', 'FDP_IFF.4.11'),
('normal', 'FDP_IFF.4.12', 'the PP/ST author should specify the maximum capacity\n                                permitted for any identified illicit information\n                                flows.', 'FDP_IFF.4.12'),
('normal', 'FDP_IFF.4.20', 'the PP/ST author should specify the types of illicit\n                                information flows to be eliminated. This list may not\n                                be empty as this component requires that some illicit\n                                information flows are to be eliminated.', 'FDP_IFF.4.20'),
('normal', 'FDP_IFF.5.10', 'the PP/ST author should specify the information flow\n                                control SFP for which illicit information flows are to\n                                be eliminated. The name of the information flow\n                                control SFP, and the scope of control for that policy\n                                are defined in components from, FDP_IFC, .', 'FDP_IFF.5.10'),
('normal', 'FDP_IFF.6.10', 'the PP/ST author should specify the information flow\n                                control SFPs enforced by the TSF. The name of the\n                                information flow control SFP, and the scope of control\n                                for that policy are defined in components from, FDP_IFC, .', 'FDP_IFF.6.10'),
('normal', 'FDP_IFF.6.11', 'the PP/ST author should specify the types of illicit\n                                information flows that will be monitored for exceeding\n                                a maximum capacity.', 'FDP_IFF.6.11'),
('normal', 'FDP_IFF.6.12', 'the PP/ST author should specify the maximum capacity\n                                above which illicit information flows will be\n                                monitored by the TSF.', 'FDP_IFF.6.12'),
('normal', 'FDP_ITC.1.10', 'the PP/ST author should specify the access control SFP(s)\n                        and/or information flow control SFP(s) that will be\n                        enforced when importing user data from outside of the\n                        TOE. The user data that this function imports is\n                        scoped by the assignment of these SFPs.', 'FDP_ITC.1.10'),
('normal', 'FDP_ITC.1.30', 'the PP/ST author should specify any additional\n                                importation control rules or\n                                ``none\'\' if there are no\n                                additional importation control rules. These rules will\n                                be enforced by the TSF in addition to the access\n                                control SFPs and/or information flow control SFPs\n                                selected in, FDP_ITC.1.1, .', 'FDP_ITC.1.30'),
('normal', 'FDP_ITC.2.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when importing user data from outside\n                                of the TOE. The user data that this function imports\n                                is scoped by the assignment of these SFPs.', 'FDP_ITC.2.10'),
('normal', 'FDP_ITC.2.50', 'the PP/ST author should specify any additional\n                                importation control rules or\n                                ``none\'\' if there are no\n                                additional importation control rules. These rules will\n                                be enforced by the TSF in addition to the access\n                                control SFPs and/or information flow control SFPs\n                                selected in, FDP_ITC.2.1, .', 'FDP_ITC.2.50'),
('normal', 'FDP_ITT.1.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) covering\n                                the information being transferred.', 'FDP_ITT.1.10'),
('normal', 'FDP_ITT.2.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) covering\n                                the information being transferred.', 'FDP_ITT.2.10'),
('normal', 'FDP_ITT.2.20', 'the PP/ST author should specify the security\n                                attributes, the values of which the TSF will use to\n                                determine when to separate data that is being\n                                transmitted between physically-separated parts of the\n                                TOE. An example is that user data associated with the\n                                identity of one owner is transmitted separately from\n                                the user data associated with the identify of a\n                                different owner. In this case, the value of the\n                                identity of the owner of the data is what is used to\n                                determine when to separate the data for transmission.', 'FDP_ITT.2.20'),
('normal', 'FDP_ITT.3.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) covering\n                                the information being transferred and monitored for\n                                integrity errors.', 'FDP_ITT.3.10'),
('normal', 'FDP_ITT.3.11', 'the PP/ST author should specify the type of possible\n                                integrity errors to be monitored during transmission\n                                of the user data.', 'FDP_ITT.3.11'),
('normal', 'FDP_ITT.3.20', 'the PP/ST author should specify the action to be taken\n                                by the TSF when an integrity error is encountered. An\n                                example might be that the TSF should request the\n                                resubmission of the user data. The SFP(s) specified in, FDP_ITT.3.1, will be enforced as the\n                                actions are taken by the TSF.', 'FDP_ITT.3.20'),
('normal', 'FDP_ITT.4.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) covering\n                                the information being transferred and monitored for\n                                integrity errors.', 'FDP_ITT.4.10'),
('normal', 'FDP_ITT.4.11', 'the PP/ST author should specify the type of possible\n                                integrity errors to be monitored during transmission\n                                of the user data.', 'FDP_ITT.4.11'),
('normal', 'FDP_ITT.4.12', 'the PP/ST author should specify a list of security\n                                attributes that require separate transmission\n                                channels. This list is used to determine which user\n                                data to monitor for integrity errors., based on its\n                                security attributes and its transmission channel. This\n                                element is directly related to, FDP_ITT.2, .', 'FDP_ITT.4.12'),
('normal', 'FDP_ITT.4.20', 'the PP/ST author should specify the action to be taken\n                                by the TSF when an integrity error is encountered. An\n                                example might be that the TSF should request the\n                                resubmission of the user data. The SFP(s) specified in, FDP_ITT.4.1, will be enforced as the\n                                actions are taken by the TSF.', 'FDP_ITT.4.20'),
('normal', 'FDP_RIP.1.10', 'the PP/ST author should specify the list of objects\n                                subject to residual information protection.', 'FDP_RIP.1.10');
INSERT INTO `feassignmentnotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'FDP_ROL.1.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when performing rollback\n                                operations. This is necessary to make sure that roll\n                                back is not used to circumvent the specified SFPs.', 'FDP_ROL.1.10'),
('normal', 'FDP_ROL.1.11', 'the PP/ST author should specify the list of operations\n                                that can be rolled back.', 'FDP_ROL.1.11'),
('normal', 'FDP_ROL.1.12', 'the PP/ST author should specify the information and/or\n                        list of objects that are subjected to the rollback policy.', 'FDP_ROL.1.12'),
('normal', 'FDP_ROL.1.20', 'the PP/ST author should specify the boundary limit to\n                                which rollback operations may be performed. The\n                                boundary may be specified as a predefined period of\n                                time, for example, operations may be undone which were\n                                performed within the past two minutes. Other possible\n                                boundaries may be defined as the maximum number of\n                                operations allowable or the size of a buffer.', 'FDP_ROL.1.20'),
('normal', 'FDP_ROL.2.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when performing rollback\n                                operations. This is necessary to make sure that roll\n                                back is not used to circumvent the specified SFPs.', 'FDP_ROL.2.10'),
('normal', 'FDP_ROL.2.11', 'the PP/ST author should specify the list of objects\n                                that are subjected to the rollback policy.', 'FDP_ROL.2.11'),
('normal', 'FDP_ROL.2.20', 'the PP/ST author should specify the boundary limit to\n                                which rollback operations may be performed. The\n                                boundary may be specified as a predefined period of\n                                time, for example, operations may be undone which were\n                                performed within the past two minutes. Other possible\n                                boundaries may be defined as the maximum number of\n                                operations allowable or the size of a buffer.', 'FDP_ROL.2.20'),
('normal', 'FDP_SDI.1.10', 'the PP/ST author should specify the integrity errors\n                                that the TSF will detect.', 'FDP_SDI.1.10'),
('normal', 'FDP_SDI.1.11', 'the PP/ST author should specify the user data\n                                attributes that will be used as the basis for the\n                                monitoring.', 'FDP_SDI.1.11'),
('normal', 'FDP_SDI.2.10', 'the PP/ST author should specify the integrity errors\n                                that the TSF will detect.', 'FDP_SDI.2.10'),
('normal', 'FDP_SDI.2.11', 'the PP/ST author should specify the user data\n                                attributes that will be used as the basis for the\n                                monitoring.', 'FDP_SDI.2.11'),
('normal', 'FDP_SDI.2.20', 'the PP/ST author should specify the actions to be\n                                taken in case an integrity error is detected.', 'FDP_SDI.2.20'),
('normal', 'FDP_UCT.1.10', 'the PP/ST author should specify the access control SFP(s)\n                        and/or information flow control SFP(s) that will be enforced when exchanging\n                        user data. The specified policies will be enforced to make decisions about\n                        who can exchange data and which data can be exchanged.', 'FDP_UCT.1.10'),
('normal', 'FDP_UIT.1.10', 'the PP/ST author should specify the access control SFP(s)\n                        and/or information flow control SFP(s) that will be enforced on the transmitted\n                        data or on the received data. The specified policies will be enforced to make\n                        decisions about who can transmit or who can receive data, and which data can be\n                        transmitted or received.', 'FDP_UIT.1.10'),
('normal', 'FDP_UIT.2.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when recovering user data.  The\n                                specified policies will be enforced to make decisions\n                                about which data can be recovered and how it can be\n                                recovered.', 'FDP_UIT.2.10'),
('normal', 'FDP_UIT.2.11', 'the PP/ST author should specify the list of integrity\n                                errors from which the TSF, with the help of the source\n                                trusted IT product, is be able to recover the original\n                                user data.', 'FDP_UIT.2.11'),
('normal', 'FDP_UIT.3.10', 'the PP/ST author should specify the access control\n                                SFP(s) and/or information flow control SFP(s) that\n                                will be enforced when recovering user data.  The\n                                specified policies will be enforced to make decisions\n                                about which data can be recovered and how it can be\n                                recovered.', 'FDP_UIT.3.10'),
('normal', 'FDP_UIT.3.11', 'the PP/ST author should specify the list of integrity\n                                errors from which the receiving TSF, alone, is able to\n                                recover the original user data.', 'FDP_UIT.3.11'),
('normal', 'FIA_AFL.1.10', 'the PP/ST author should specify the authentication\n                                events. Examples of these authentication events are:\n                                the unsuccessful authentication attempts since the\n                                last successful authentication for the indicated user\n                                identity, the unsuccessful authentication attempts\n                                since the last successful authentication for the\n                                current terminal, the number of unsuccessful\n                                authentication attempts in the last 10 minutes. At\n                                least one authentication event must be specified.', 'FIA_AFL.1.10'),
('normal', 'FIA_AFL.1.20', 'the PP/ST author should specify the actions to be taken in\n                        case the threshold is met or surpassed, as selected. These\n                        actions could be disabling of an account for 5 minutes,\n                        disabling the terminal for an increasing amount of time (2\n                        to the power of the number of unsuccessful attempts in\n                        seconds), or disabling of the account until unlocked by\n                        the administrator and simultaneously informing the\n                        administrator. The actions should specify the measures and\n                        if applicable the duration of the measure (or the\n                        conditions under which the measure will be ended).', 'FIA_AFL.1.20'),
('normal', 'FIA_ATD.1.10', 'the PP/ST author should specify the security\n                                attributes that are associated to an individual\n                                user. An example of such a list is\n                                {``clearance\'\', ``group\n                                identifier\'\', ``rights\'\'}.', 'FIA_ATD.1.10'),
('normal', 'FIA_SOS.1.10', 'the PP/ST author should provide a defined quality\n                                metric. The quality metric specification can be as\n                                simple as a description of the quality checks to be\n                                performed, or as formal as a reference to a government\n                                published standard that defines the quality metrics\n                                that secrets must meet. Examples of quality metrics\n                                could include a description of the alphanumeric\n                                structure of acceptable secrets and/or the space size\n                                that acceptable secrets must meet.', 'FIA_SOS.1.10'),
('normal', 'FIA_SOS.2.10', 'the PP/ST author should provide a defined quality\n                                metric. The quality metric specification can be as\n                                simple as a description of the quality checks to be\n                                performed or as formal as a reference to a government\n                                published standard that defines the quality metrics\n                                that secrets must meet. Examples of quality metrics\n                                could include a description of the alphanumeric\n                                structure of acceptable secrets and/or the space size\n                                that acceptable secrets must meet.', 'FIA_SOS.2.10'),
('normal', 'FIA_SOS.2.20', 'the PP/ST author should provide a list of TSF\n                                functions for which the TSF generated secrets must be\n                                used. An example of such a function could include a\n                                password based authentication mechanism.', 'FIA_SOS.2.20'),
('normal', 'FIA_UAU.1.10', 'the PP/ST author should specify a list of TSF-mediated\n                                actions that can be performed by the TSF on behalf of\n                                a user before the claimed identity of the user is\n                                authenticated. This list cannot be empty. If no\n                                actions are appropriate, component, FIA_UAU.2, should be used instead. An example of\n                                such an action might include the request for help on\n                                the login procedure.', 'FIA_UAU.1.10'),
('normal', 'FIA_UAU.4.10', 'the PP/ST author should specify the list of\n                                authentication mechanisms to which this requirement\n                                applies. This assignment can be ``all\n                                authentication mechanisms\'\'. An example of\n                                this assignment could be ``the\n                                authentication mechanism employed to authenticate\n                                people on the external network\'\'.', 'FIA_UAU.4.10'),
('normal', 'FIA_UAU.5.10', 'the PP/ST author should define the available\n                                authentication mechanisms. An example of such a list\n                                could be: ``none, password mechanism,\n                                biometric (retinal scan), S/key mechanism\'\'.', 'FIA_UAU.5.10'),
('normal', 'FIA_UAU.5.20', 'The PP/ST author might give the boundaries within\n                                which the authorised administrator may specify\n                                specific rules. An example of a rule is:\n                                ``the user shall always be authenticated by\n                                means of a token; the administrator might specify\n                                additional authentication mechanisms that also must be\n                                used.\'\' The PP/ST author also might choose\n                                not to specify any boundaries but leave the\n                                authentication mechanisms and their rules completely\n                                up to the authorised administrator.', 'FIA_UAU.5.20'),
('normal', 'FIA_UAU.6.10', 'The PP/ST author might give the boundaries within\n                                which the reauthentication should occur and leave the\n                                specifics to the authorised administrator. An example\n                                of such a rule is: ``the user shall always\n                                be re-authenticated at least once a day; the\n                                administrator might specify that the re-authentication\n                                should happen more often but not more often than once\n                                every 10 minutes.\'\'', 'FIA_UAU.6.10'),
('normal', 'FIA_UAU.7.10', 'the PP/ST author should specify the feedback related\n                                to the authentication process that will be provided to\n                                the user. An example of a feedback assignment is\n                                ``the number of characters\n                                typed\'\', another type of feedback is\n                                ``the authentication mechanism that failed\n                                the authentication\'\'.', 'FIA_UAU.7.10'),
('normal', 'FIA_UID.1.10', 'the PP/ST author should specify a list of TSF-mediated\n                                actions that can be performed by the TSF on behalf of\n                                a user before the user has to identify itself. If no\n                                actions are appropriate, component, FIA_UID.2, should be used instead. An example of\n                                such an action might include the request for help on\n                                the login procedure.', 'FIA_UID.1.10'),
('normal', 'FIA_USB.1.10', 'the PP/ST author should specify a list of the user security\n                    attributes that are to be bound to subjects.', 'FIA_USB.1.10'),
('normal', 'FIA_USB.1.20', 'the PP/ST author should specify any rules that are to apply\n                    upon initial association of attributes with subjects, or\n                    ``none\'\'.', 'FIA_USB.1.20'),
('normal', 'FIA_USB.1.30', 'the PP/ST author should specify any rules that are to apply\n                    when changes are made to the user security attributes\n                    associated with subjects acting on behalf of users, or\n                    ``none\'\'.', 'FIA_USB.1.30'),
('normal', 'FMT_MOF.1.10', 'the PP/ST author should specify the functions that can\n                                be modified by the identified roles. Examples include\n                                auditing and time determination.', 'FMT_MOF.1.10'),
('normal', 'FMT_MOF.1.11', 'the PP/ST author should specify the roles that are\n                                allowed to modify the functions in the TSF. The\n                                possible roles are specified in, FMT_SMR.1, .', 'FMT_MOF.1.11'),
('normal', 'FMT_MSA.1.10', 'the PP/ST author should list the access control SFP(s) or\n                        the information flow control SFP(s) for which the security\n                        attributes are applicable.', 'FMT_MSA.1.10'),
('normal', 'FMT_MSA.1.11', 'the PP/ST author should specify the security\n                                attributes that can be operated on by the identified\n                                roles. It is possible for the PP/ST author to specify\n                                that the default value such as default access-rights\n                                can be managed. Examples of these security attributes\n                                are user-clearance, priority of service level, access\n                                control list, default access rights.', 'FMT_MSA.1.11'),
('normal', 'FMT_MSA.1.12', 'the PP/ST author should specify the roles that are\n                                allowed to operate on the security attributes. The\n                                possible roles are specified in, FMT_SMR.1, .', 'FMT_MSA.1.12'),
('normal', 'FMT_MSA.2.10', 'the PP/ST author should specify the list of security\n                    attributes that require only secure values to be provided.', 'FMT_MSA.2.10'),
('normal', 'FMT_MSA.3.10', 'the PP/ST author should list the access control SFP or\n                                the information flow control SFP for which the\n                                security attributes are applicable.', 'FMT_MSA.3.10'),
('normal', 'FMT_MSA.3.20', 'the PP/ST author should specify the roles that are\n                                allowed to modify the values of the security\n                                attributes. The possible roles are specified in, FMT_SMR.1, .', 'FMT_MSA.3.20'),
('normal', 'FMT_MSA.4.10', 'the PP/ST author specifies the rules governing the value\n                that will be inherited by the specified security\n                attribute, including the conditions that are to be met\n                for the rules to be applied. For example, if a new file\n                or directory is created (in a multilevel filesystem),\n                its label is the label at which the user is logged in at\n                the time it is created.', 'FMT_MSA.4.10'),
('normal', 'FMT_MTD.1.10', 'the PP/ST author should specify the TSF data that can\n                                be operated on by the identified roles. It is possible\n                                for the PP/ST author to specify that the default value\n                                can be managed.', 'FMT_MTD.1.10'),
('normal', 'FMT_MTD.1.11', 'the PP/ST author should specify the roles that are\n                                allowed to operate on the TSF data. The possible roles\n                                are specified in, FMT_SMR.1, .', 'FMT_MTD.1.11'),
('normal', 'FMT_MTD.2.10', 'the PP/ST author should specify the TSF data that can\n                                have limits, and the value of those limits. An example\n                                of such TSF data is the number of users logged-in.', 'FMT_MTD.2.10'),
('normal', 'FMT_MTD.2.11', 'the PP/ST author should specify the roles that are\n                                allowed to modify the limits on the TSF data and the\n                                actions to be taken. The possible roles are specified\n                                in, FMT_SMR.1, .', 'FMT_MTD.2.11'),
('normal', 'FMT_MTD.2.20', 'the PP/ST author should specify the actions to be\n                                taken if the specified limit on the specified TSF data\n                                is exceeded. An example of such TSF action is that the\n                                authorised user is informed and an audit record is\n                                generated.', 'FMT_MTD.2.20'),
('normal', 'FMT_MTD.3.10', 'the PP/ST author should specify what TSF data require only\n                    secure values to be accepted.', 'FMT_MTD.3.10'),
('normal', 'FMT_REV.1.10', 'the PP/ST author should specify which security attributes\n                        are to be revoked when a change is made to the associated\n                        object/subject/user/other resource.', 'FMT_REV.1.10'),
('normal', 'FMT_REV.1.11', 'the PP/ST author should specify the roles that are allowed\n                        to modify the functions in the TSF. The possible roles are\n                        specified in, FMT_SMR.1, .', 'FMT_REV.1.11'),
('normal', 'FMT_REV.1.20', 'the PP/ST author should specify the revocation\n                                rules. Examples of these rules could include:\n                                ``prior to the next operation on the\n                                associated resource\'\', or ``for\n                                all new subject creations\'\'.', 'FMT_REV.1.20'),
('normal', 'FMT_SAE.1.10', 'the PP/ST author should provide the list of security\n                                attributes for which expiration is to be supported. An\n                                example of such an attribute might be a\n                                user\'s security clearance.', 'FMT_SAE.1.10'),
('normal', 'FMT_SAE.1.11', 'the PP/ST author should specify the roles that are\n                                allowed to modify the security attributes in the\n                                TSF. The possible roles are specified in, FMT_SMR.1, .', 'FMT_SAE.1.11'),
('normal', 'FMT_SAE.1.20', 'the PP/ST author should provide a list of actions to\n                                be taken for each security attribute when it\n                                expires. An example might be that the\n                                user\'s security clearance, when it expires,\n                                is set to the lowest allowable clearance on the\n                                TOE. If immediate revocation is desired by the PP/ST,\n                                the action ``immediate\n                                revocation\'\' should be specified.', 'FMT_SAE.1.20'),
('normal', 'FMT_SMF.1.10', 'the PP/ST author should specify the management\n            functions to be provided by the TSF, either security\n            attribute management, TSF data management, or security\n            function management.', 'FMT_SMF.1.10'),
('normal', 'FMT_SMR.1.10', 'the PP/ST author should specify the roles that are\n                                recognised by the system. These are the roles that\n                                users could occupy with respect to security. Examples\n                                are: owner, auditor and administrator.', 'FMT_SMR.1.10'),
('normal', 'FMT_SMR.2.10', 'the PP/ST author should specify the roles that are\n                                recognised by the system. These are the roles that\n                                users could occupy with respect to security. Examples\n                                are: owner, auditor, administrator.', 'FMT_SMR.2.10'),
('normal', 'FMT_SMR.2.30', 'the PP/ST author should specify the conditions that\n                                govern role assignment. Examples of these conditions\n                                are: ``an account cannot have both the\n                                auditor and administrator role\'\' or\n                                ``a user with the assistant role must also\n                                have the owner role\'\'.', 'FMT_SMR.2.30'),
('normal', 'FMT_SMR.3.10', 'the PP/ST author should specify the roles that require\n                                an explicit request to be assumed. Examples are:\n                                auditor and administrator.', 'FMT_SMR.3.10'),
('normal', 'FPR_ANO.1.10', 'the PP/ST author should specify the set of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_ANO.1.10'),
('normal', 'FPR_ANO.1.11', 'the PP/ST author should identify the list of subjects\n                                and/or operations and/or objects where the real user\n                                name of the subject should be protected, for example,\n                                ``the voting application\'\'.', 'FPR_ANO.1.11'),
('normal', 'FPR_ANO.2.10', 'the PP/ST author should specify the set of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_ANO.2.10'),
('normal', 'FPR_ANO.2.11', 'the PP/ST author should identify the list of subjects\n                                and/or operations and/or objects where the real user\n                                name of the subject should be protected, for example,\n                                ``the voting application\'\'.', 'FPR_ANO.2.11'),
('normal', 'FPR_ANO.2.20', 'the PP/ST author should identify the list of services\n                                which are subject to the anonymity requirement, for\n                                example, ``the accessing of job\n                                descriptions\'\'.', 'FPR_ANO.2.20'),
('normal', 'FPR_ANO.2.21', 'the PP/ST author should identify the list of subjects\n                                from which the real user name of the subject should be\n                                protected when the specified services are provided.', 'FPR_ANO.2.21'),
('normal', 'FPR_PSE.1.10', 'the PP/ST author should specify the set of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_PSE.1.10'),
('normal', 'FPR_PSE.1.11', 'the PP/ST author should identify the list of subjects\n                                and/or operations and/or objects where the real user\n                                name of the subject should be protected, for example,\n                                ``the accessing of job offers\'\'. Note\n                                that ``objects\'\' includes any other\n                                attributes that might enable another user or subject\n                                to derive the actual identity of the user.', 'FPR_PSE.1.11'),
('normal', 'FPR_PSE.1.20', 'the PP/ST author should identify the (one or more)\n                                number of aliases the TSF is able to provide.', 'FPR_PSE.1.20'),
('normal', 'FPR_PSE.1.21', 'the PP/ST author should identify the list of subjects\n                                to whom the TSF is able to provide an alias.', 'FPR_PSE.1.21'),
('normal', 'FPR_PSE.1.30', 'the PP/ST author should identify the metric to which\n                                the TSF-generated or user-generated alias should\n                                conform.', 'FPR_PSE.1.30'),
('normal', 'FPR_PSE.2.10', 'the PP/ST author should specify the set of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_PSE.2.10'),
('normal', 'FPR_PSE.2.11', 'the PP/ST author should identify the list of subjects\n                                and/or operations and/or objects where the real user\n                                name of the subject should be protected, for example,\n                                ``the accessing of job offers\'\'. Note\n                                that ``objects\'\' includes any other\n                                attributes that might enable another user or subject\n                                to derive the actual identity of the user.', 'FPR_PSE.2.11'),
('normal', 'FPR_PSE.2.20', 'the PP/ST author should identify the (one or more)\n                                number of aliases the TSF, is able to provide.', 'FPR_PSE.2.20'),
('normal', 'FPR_PSE.2.21', 'the PP/ST author should identify the list of subjects\n                                to whom the TSF is able to provide an alias.', 'FPR_PSE.2.21'),
('normal', 'FPR_PSE.2.30', 'the PP/ST author should identify the metric to which\n                                the TSF-generated or user-generated alias should\n                                conform.', 'FPR_PSE.2.30'),
('normal', 'FPR_PSE.2.40', 'the PP/ST author should identify the list of\n                                conditions under which the trusted subjects and\n                                authorised user can determine the real user name based\n                                on the provided reference. These conditions can be\n                                conditions such as time of day, or they can be\n                                administrative such as on a court order.', 'FPR_PSE.2.40'),
('normal', 'FPR_PSE.3.10', 'the PP/ST author should specify the set of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_PSE.3.10'),
('normal', 'FPR_PSE.3.11', 'the PP/ST author should identify the list of subjects\n                                and/or operations and/or objects where the real user\n                                name of the subject should be protected, for example,\n                                ``the accessing of job offers\'\'. Note\n                                that ``objects\'\' includes any other\n                                attributes which might enable another user or subject\n                                to derive the actual identity of the user.', 'FPR_PSE.3.11'),
('normal', 'FPR_PSE.3.20', 'the PP/ST author should identify the (one or more)\n                                number of aliases the TSF is able to provide.', 'FPR_PSE.3.20'),
('normal', 'FPR_PSE.3.21', 'the PP/ST author should identify the list of subjects\n                                to whom the TSF is able to provide an alias.', 'FPR_PSE.3.21'),
('normal', 'FPR_PSE.3.30', 'the PP/ST author should identify the metric to which\n                                the TSF-generated or user-generated alias should\n                                conform.', 'FPR_PSE.3.30'),
('normal', 'FPR_PSE.3.40', 'the PP/ST author should identify the list of\n                                conditions that indicate when the used reference for\n                                the real user name shall be identical and when it\n                                shall be different, for example, ``when the\n                                user logs on to the same host\'\' it will use a\n                                unique alias.', 'FPR_PSE.3.40'),
('normal', 'FPR_UNL.1.10', 'the PP/ST author should specify the set of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_UNL.1.10'),
('normal', 'FPR_UNL.1.11', 'the PP/ST author should identify the list of\n                                operations which should be subjected to the\n                                unlinkability requirement, for example,\n                                ``sending email\'\'.', 'FPR_UNL.1.11'),
('normal', 'FPR_UNO.1.10', 'the PP/ST author should specify the list of users and/or\n                                subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual user\n                                or subject, but must protect with respect to cooperating\n                                users and/or subjects. A set of users, for example,\n                                could be a group of users which can operate under the\n                                same role or can all use the same process(es).', 'FPR_UNO.1.10'),
('normal', 'FPR_UNO.1.11', 'the PP/ST author should identify the list of\n                                operations that are subjected to the unobservability\n                                requirement. Other users/subjects will then not be\n                                able to observe the operations on a covered object in\n                                the specified list (e.g. reading and writing to the\n                                object).', 'FPR_UNO.1.11'),
('normal', 'FPR_UNO.1.12', 'the PP/ST author should identify the list of objects\n                                which are covered by the unobservability\n                                requirement. An example could be a specific mail\n                                server or ftp site.', 'FPR_UNO.1.12'),
('normal', 'FPR_UNO.1.13', 'the PP/ST author should specify the set of protected\n                                users and/or subjects whose unobservability\n                                information will be protected. An example could be:\n                                ``users accessing the system through the\n                                internet\'\'.', 'FPR_UNO.1.13'),
('normal', 'FPR_UNO.2.10', 'the PP/ST author should specify the list of users\n                                and/or subjects against which the TSF must provide\n                                protection. For example, even if the PP/ST author\n                                specifies a single user or subject role, the TSF must\n                                not only provide protection against each individual\n                                user or subject, but must protect with respect to\n                                cooperating users and/or subjects. A set of users, for\n                                example, could be a group of users which can operate\n                                under the same role or can all use the same\n                                process(es).', 'FPR_UNO.2.10'),
('normal', 'FPR_UNO.2.11', 'the PP/ST author should identify the list of\n                                operations that are subjected to the unobservability\n                                requirement. Other users/subjects will then not be\n                                able to observe the operations on a covered object in\n                                the specified list (e.g. reading and writing to the\n                                object).', 'FPR_UNO.2.11'),
('normal', 'FPR_UNO.2.12', 'the PP/ST author should identify the list of objects\n                                which are covered by the unobservability\n                                requirement. An example could be a specific mail\n                                server or ftp site.', 'FPR_UNO.2.12'),
('normal', 'FPR_UNO.2.13', 'the PP/ST author should specify the set of protected\n                                users and/or subjects whose unobservability\n                                information will be protected. An example could be:\n                                ``users accessing the system through the\n                                internet\'\'.', 'FPR_UNO.2.13'),
('normal', 'FPR_UNO.2.20', 'the PP/ST author should identify which privacy related\n                                information should be distributed in a controlled\n                                manner. Examples of this information could be: IP\n                                address of subject, IP address of object, time, used\n                                encryption keys.', 'FPR_UNO.2.20'),
('normal', 'FPR_UNO.2.21', 'the PP/ST author should specify the conditions to\n                                which the dissemination of the information should\n                                adhere. These conditions should be maintained\n                                throughout the lifetime of the privacy related\n                                information of each instance. Examples of these\n                                conditions could be: ``the information shall\n                                only be present at a single separated part of the TOE\n                                and shall not be communicated outside this part of the\n                                TOE.\'\', ``the information shall only\n                                reside in a single separated part of the TOE, but\n                                shall be moved to another part of the TOE\n                                periodically\'\', ``the information shall\n                                be distributed between the different parts of the TOE\n                                such that compromise of any 5 separated parts of the\n                                TOE will not compromise the security policy\'\'.', 'FPR_UNO.2.21'),
('normal', 'FPR_UNO.3.10', 'the PP/ST author should identify the list of services\n                                which are subject to the unobservability requirement,\n                                for example, ``the accessing of job\n                                descriptions\'\'.', 'FPR_UNO.3.10'),
('normal', 'FPR_UNO.3.11', 'the PP/ST author should identify the list of subjects\n                                from which privacy related information should be\n                                protected when the specified services are provided.', 'FPR_UNO.3.11'),
('normal', 'FPR_UNO.3.12', 'the PP/ST author should specify the privacy related\n                                information that will be protected from the specified\n                                subjects. Examples include the identity of the subject\n                                that used a service and the quantity of a service that\n                                has been used such as memory resource\n                                utilisation.', 'FPR_UNO.3.12'),
('normal', 'FPR_UNO.4.10', 'the PP/ST author should specify the set of authorised\n                                users for which the TSF must provide the capability to\n                                observe the resource utilisation. A set of authorised\n                                users, for example, could be a group of authorised users\n                                which can operate under the same role or can all use the\n                                same process(es).', 'FPR_UNO.4.10'),
('normal', 'FPR_UNO.4.11', 'the PP/ST author should specify the set of resources\n                                and/or services that the authorised user must be able\n                                to observe.', 'FPR_UNO.4.11'),
('normal', 'FPT_FLS.1.10', 'the PP/ST author should list the types of failures in\n                                the TSF for which the TSF should ``fail\n                                secure,\'\' that is, should preserve a secure\n                                state and continue to correctly enforce the SFRs.', 'FPT_FLS.1.10'),
('normal', 'FPT_ITA.1.10', 'the PP/ST author should specify the types of TSF data\n                        that are subject to the availability metric.', 'FPT_ITA.1.10'),
('normal', 'FPT_ITA.1.11', 'the PP/ST should specify the availability metric for\n                        the applicable TSF data.', 'FPT_ITA.1.11'),
('normal', 'FPT_ITA.1.12', 'the PP/ST author should specify the conditions under\n                        which availability must be ensured. For example:\n                        there must be a connection between the TOE and\n                        another trusted IT product.', 'FPT_ITA.1.12'),
('normal', 'FPT_ITI.1.10', 'the PP/ST should specify the modification metric that\n                        the detection mechanism must satisfy. This\n                        modification metric shall specify the desired strength\n                        of the modification detection.', 'FPT_ITI.1.10'),
('normal', 'FPT_ITI.1.20', 'the PP/ST should specify the actions to be taken if a\n                        modification of TSF data has been detected. An example\n                        of an action is: ``ignore the TSF data, and\n                        request the originating trusted product to send the\n                        TSF data again\'\'.', 'FPT_ITI.1.20'),
('normal', 'FPT_ITI.2.10', 'the PP/ST should specify the modification metric that\n                        the detection mechanism must satisfy. This\n                        modification metric shall specify the desired strength\n                        of the modification detection.', 'FPT_ITI.2.10'),
('normal', 'FPT_ITI.2.20', 'the PP/ST should specify the actions to be taken if a\n                        modification of TSF data has been detected. An example\n                        of an action is: ``ignore the TSF data, and\n                        request the originating trusted product to send the\n                        TSF data again\'\'.', 'FPT_ITI.2.20'),
('normal', 'FPT_ITI.2.30', 'the PP/ST author should define the types of\n                        modification from which the TSF should be capable of\n                        recovering.', 'FPT_ITI.2.30'),
('normal', 'FPT_ITT.3.20', 'the PP/ST author should specify the action to be taken\n                                when an integrity error is identified.', 'FPT_ITT.3.20'),
('normal', 'FPT_PHP.2.30', 'the PP/ST author should provide a list of TSF\n                                devices/elements for which active detection of\n                                physical tampering is required.', 'FPT_PHP.2.30'),
('normal', 'FPT_PHP.2.31', 'the PP/ST author should designate a user or role that\n                                is to be notified when tampering is detected. The type\n                                of user or role may vary depending on the particular\n                                security administration component (from the, FMT_MOF.1, family) included in the PP/ST.', 'FPT_PHP.2.31'),
('normal', 'FPT_PHP.3.10', 'the PP/ST author should specify tampering scenarios to\n                                a list of TSF devices/elements for which the TSF\n                                should resist physical tampering. This list may be\n                                applied to a defined subset of the TSF physical\n                                devices and elements based on considerations such as\n                                technology limitations and relative physical exposure\n                                of the device. Such subsetting should be clearly\n                                defined and justified. Furthermore, the TSF should\n                                automatically respond to physical tampering. The\n                                automatic response should be such that the policy of\n                                the device is preserved; for example, with a\n                                confidentiality policy, it would be acceptable to\n                                physically disable the device so that the protected\n                                information may not be retrieved.', 'FPT_PHP.3.10'),
('normal', 'FPT_PHP.3.11', 'the PP/ST author should specify the list of TSF\n                                devices/elements for which the TSF should resist\n                                physical tampering in the scenarios that have been\n                                identified.', 'FPT_PHP.3.11'),
('normal', 'FPT_RCV.1.10', 'the PP/ST author should specify the list of failures or\n                        service discontinuities (e.g. power failure, audit\n                        storage exhaustion, any failure or discontinuity)\n                        following which the TOE will enter a maintenance mode.', 'FPT_RCV.1.10'),
('normal', 'FPT_RCV.2.10', 'the PP/ST author should specify the list of failures or\n                        service discontinuities (e.g. power failure, audit\n                        storage exhaustion) following which the TOE will need to\n                        enter a maintenance mode.', 'FPT_RCV.2.10'),
('normal', 'FPT_RCV.2.20', 'the PP/ST author should specify the list of failures\n                                or other discontinuities for which automated recovery\n                                must be possible.', 'FPT_RCV.2.20'),
('normal', 'FPT_RCV.3.10', 'the PP/ST author should specify the list of failures or\n                        service discontinuities (e.g. power failure, audit\n                        storage exhaustion) following which the TOE will need to\n                        enter a maintenance mode.', 'FPT_RCV.3.10'),
('normal', 'FPT_RCV.3.20', 'the PP/ST author should specify the list of failures\n                                or other discontinuities for which automated recovery\n                                must be possible.', 'FPT_RCV.3.20'),
('normal', 'FPT_RCV.3.30', 'the PP/ST author should provide a quantification for\n                                the amount of loss of TSF data or objects that is\n                                acceptable.', 'FPT_RCV.3.30'),
('normal', 'FPT_RCV.4.10', 'the PP/ST author should specify a list the functions and\n                                failure scenarios. In the event that any of the\n                                identified failure scenarios happen, the functions that have\n                                been specified must either complete successfully or\n                                recover to a consistent and secure state.', 'FPT_RCV.4.10'),
('normal', 'FPT_RPL.1.10', 'the PP/ST author should provide a list of identified\n                                entities for which detection of replay should be\n                                possible. Examples of such entities might include:\n                                messages, service requests, service responses, and\n                                user sessions.', 'FPT_RPL.1.10'),
('normal', 'FPT_RPL.1.20', 'the PP/ST author should specify the list of actions to\n                                be taken by the TSF when replay is detected. The\n                                potential set of actions that can be taken includes:\n                                ignoring the replayed entity, requesting confirmation\n                                of the entity from the identified source, and\n                                terminating the subject from which the re-played\n                                entity originated.', 'FPT_RPL.1.20'),
('normal', 'FPT_TDC.1.10', 'the PP/ST author should define the list of TSF data\n                                types, for which the TSF shall provide the capability\n                                to consistently interpret, when shared between the TSF\n                                and another trusted IT product.', 'FPT_TDC.1.10'),
('normal', 'FPT_TDC.1.20', 'the PP/ST should assign the list of interpretation\n                                rules to be applied by the TSF,', 'FPT_TDC.1.20'),
('normal', 'FPT_TEE.1.10', 'the PP/ST author should specify the properties of the\n            external entities to be checked by the tests. Examples of these\n            properties may include configuration or availability properties of\n            a directory server supporting some access control part of the TSF.', 'FPT_TEE.1.10'),
('normal', 'FPT_TEE.1.20', 'the PP/ST author should specify what are the action(s)\n            that the TSF shall perform when the testing fails. Examples of these\n            action(s), illustrated by a directory server instance, may include to\n            connect to an alternative available server or otherwise to look for a\n            backup server.', 'FPT_TEE.1.20');
INSERT INTO `feassignmentnotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'FPT_TRC.1.20', 'the PP/ST author should specify the list of functions\n                                dependent on TSF data replication consistency.', 'FPT_TRC.1.20'),
('normal', 'FRU_FLT.1.10', 'the PP/ST author should specify the list of TOE\n                                capabilities the TOE will maintain during and after a\n                                specified failure.', 'FRU_FLT.1.10'),
('normal', 'FRU_FLT.1.11', 'the PP/ST author should specify the list of type of\n                                failures against which the TOE has to be explicitly\n                                protected. If a failure in this list occurs, the TOE\n                                will be able to continue its operation.', 'FRU_FLT.1.11'),
('normal', 'FRU_FLT.2.10', 'the PP/ST author should specify the list of type of\n                                failures against which the TOE has to be explicitly\n                                protected. If a failure in this list occurs, the TOE\n                                will be able to continue its operation.', 'FRU_FLT.2.10'),
('normal', 'FRU_PRS.1.20', 'the PP/ST author should specify the list of controlled\n                                resources for which the TSF enforces priority of service\n                                (e.g. resources such as processes, disk space, memory,\n                                bandwidth).', 'FRU_PRS.1.20'),
('normal', 'FRU_RSA.1.10', 'the PP/ST author should specify the list of controlled\n                                resources for which maximum resource allocation limits\n                                are required (e.g. processes, disk space, memory,\n                                bandwidth). If all resources under the control of the TSF need to be\n                                included, the words ``all TSF\n                                resources\'\' can be specified.', 'FRU_RSA.1.10'),
('normal', 'FRU_RSA.2.10', 'the PP/ST author should specify the controlled\n                                resources for which maximum and minimum resource\n                                allocation limits are required (e.g. processes, disk\n                                space, memory, bandwidth). If all resources under the control of the TSF\n                                need to be included, the words ``all TSF\n                                resources\'\' can be specified.', 'FRU_RSA.2.10'),
('normal', 'FRU_RSA.2.20', 'the PP/ST author should specify the controlled\n                                resources for which a minimum allocation limit needs\n                                to be set (e.g. processes, disk space, memory,\n                                bandwidth). If all resources under the control of the TSF need to be\n                                included the words ``all TSF resources\'\'\n                                can be specified.', 'FRU_RSA.2.20'),
('normal', 'FTA_LSA.1.10', 'the PP/ST author should specify the set of session\n                                security attributes that are to be\n                                constrained. Examples of these session security\n                                attributes are user clearance level, integrity level\n                                and roles.', 'FTA_LSA.1.10'),
('normal', 'FTA_LSA.1.11', 'the PP/ST author should specify the set of attributes\n                                that can be use to determine the scope of the session\n                                security attributes. Examples of such attributes are\n                                user identity, originating location, time of access,\n                                and method of access.', 'FTA_LSA.1.11'),
('normal', 'FTA_MCS.1.20', 'the PP/ST author should specify the default number of\n                                maximum concurrent sessions to be used.', 'FTA_MCS.1.20'),
('normal', 'FTA_MCS.2.10', 'the PP/ST author should specify the rules that\n                                determine the maximum number of concurrent\n                                sessions. An example of a rule is ``maximum\n                                number of concurrent sessions is one if the user has a\n                                classification level of ``secret\'\'\n                                and five otherwise\'\'.', 'FTA_MCS.2.10'),
('normal', 'FTA_MCS.2.20', 'the PP/ST author should specify the default number of\n                                maximum concurrent sessions to be used.', 'FTA_MCS.2.20'),
('normal', 'FTA_SSL.1.10', 'the PP/ST author should specify the interval of user\n                                inactivity that will trigger the locking of an\n                                interactive session. If so desired the PP/ST author\n                                could, through the assignment, specify that the time\n                                interval is left to the authorised administrator or\n                                the user. The management functions in the FMT class\n                                can specify the capability to modify this time\n                                interval, making it the default value.', 'FTA_SSL.1.10'),
('normal', 'FTA_SSL.1.20', 'the PP/ST author should specify the event(s) that\n                                should occur before the session is unlocked. Examples\n                                of such an event are: ``user\n                                re-authentication\'\' or ``user\n                                enters unlock key-sequence\'\'.', 'FTA_SSL.1.20'),
('normal', 'FTA_SSL.2.20', 'the PP/ST author should specify the event(s) that\n                                should occur before the session is unlocked. Examples\n                                of such an event are: ``user\n                                re-authentication\'\', or ``user\n                                enters unlock key-sequence\'\'.', 'FTA_SSL.2.20'),
('normal', 'FTA_SSL.3.10', 'the PP/ST author should specify the interval of user\n                                inactivity that will trigger the termination of an\n                                interactive session. If so desired, the PP/ST author\n                                could, through the assignment, specify that the\n                                interval is left to the authorised administrator or\n                                the user. The management functions in the FMT class\n                                can specify the capability to modify this time\n                                interval, making it the default value.', 'FTA_SSL.3.10'),
('normal', 'FTA_TSE.1.10', 'the PP/ST author should specify the attributes that\n                                can be used to restrict the session\n                                establishment. Example of possible attributes are user\n                                identity, originating location (e.g. no remote\n                                terminals), time of access (e.g. outside hours), or\n                                method of access (e.g. X-windows).', 'FTA_TSE.1.10'),
('normal', 'FTP_ITC.1.30', 'the PP/ST author should specify the functions for\n                                which a trusted channel is required. Examples of these\n                                functions may include transfer of user, subject,\n                                and/or object security attributes and ensuring\n                                consistency of TSF data.', 'FTP_ITC.1.30');

-- --------------------------------------------------------

--
-- Table structure for table `felement`
--

CREATE TABLE `felement` (
  `num` varchar(2) DEFAULT NULL,
  `idr` varchar(20) NOT NULL,
  `id` varchar(20) DEFAULT NULL,
  `text` varchar(500) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `felement`
--

INSERT INTO `felement` (`num`, `idr`, `id`, `text`, `idf`) VALUES
('0', 'FAU_ARP.1.10', 'FAU_ARP.1.1', '\n                    The TSF shall take\n                    ', 'FAU_ARP.1'),
('1', 'FAU_ARP.1.11', 'FAU_ARP.1.1', '\n                    upon detection of a potential security violation.\n                ', 'FAU_ARP.1'),
('0', 'FAU_GEN.1.10', 'FAU_GEN.1.1', '\n                    The TSF shall be able to generate an audit record of the\n                    following auditable events:\n                    ', 'FAU_GEN.1'),
('1', 'FAU_GEN.1.11', 'FAU_GEN.1.1', '\n                ', 'FAU_GEN.1'),
('0', 'FAU_GEN.1.20', 'FAU_GEN.1.2', '\n                    The TSF shall record within each audit record at least the\n                    following information:\n                    ', 'FAU_GEN.1'),
('1', 'FAU_GEN.1.21', 'FAU_GEN.1.2', '\n                ', 'FAU_GEN.1'),
('0', 'FAU_GEN.2.10', 'FAU_GEN.2.1', '\n                    For audit events resulting from actions of identified users, the\n                    TSF shall be able to associate each auditable event with the\n                    identity of the user that caused the event.\n                ', 'FAU_GEN.2'),
('0', 'FAU_SAA.1.10', 'FAU_SAA.1.1', '\n                    The TSF shall be able to apply a set of rules in monitoring\n                    the audited events and based upon these rules indicate a\n                    potential violation of the enforcement of the SFRs.\n                ', 'FAU_SAA.1'),
('0', 'FAU_SAA.1.20', 'FAU_SAA.1.2', '\n                    The TSF shall enforce the following rules for monitoring\n                    audited events:\n                    ', 'FAU_SAA.1'),
('1', 'FAU_SAA.1.21', 'FAU_SAA.1.2', '\n                ', 'FAU_SAA.1'),
('0', 'FAU_SAA.2.10', 'FAU_SAA.2.1', '\n                    The TSF shall be able to maintain profiles of system usage,\n                    where an individual profile represents the historical\n                    patterns of usage performed by the member(s) of\n                    ', 'FAU_SAA.2'),
('1', 'FAU_SAA.2.11', 'FAU_SAA.2.1', '.\n                ', 'FAU_SAA.2'),
('0', 'FAU_SAA.2.20', 'FAU_SAA.2.2', '\n                    The TSF shall be able to maintain a suspicion rating\n                    associated with each user whose activity is recorded in a\n                    profile, where the suspicion rating represents the degree to\n                    which the user\'s current activity is found\n                    inconsistent with the established patterns of usage\n                    represented in the profile.\n                ', 'FAU_SAA.2'),
('0', 'FAU_SAA.2.30', 'FAU_SAA.2.3', '\n                    The TSF shall be able to indicate a possible violation of\n                    the enforcement of the SFRs when a user\'s suspicion rating exceeds\n                    the following threshold conditions\n                    ', 'FAU_SAA.2'),
('1', 'FAU_SAA.2.31', 'FAU_SAA.2.3', '.\n                ', 'FAU_SAA.2'),
('0', 'FAU_SAA.3.10', 'FAU_SAA.3.1', '\n                    The TSF shall be able to maintain an internal representation\n                    of the following signature events\n                    ', 'FAU_SAA.3'),
('1', 'FAU_SAA.3.11', 'FAU_SAA.3.1', '\n                    that may indicate a violation of the enforcement of the SFRs.\n                ', 'FAU_SAA.3'),
('0', 'FAU_SAA.3.20', 'FAU_SAA.3.2', '\n                    The TSF shall be able to compare the signature events\n                    against the record of system activity discernible from an\n                    examination of\n                    ', 'FAU_SAA.3'),
('1', 'FAU_SAA.3.21', 'FAU_SAA.3.2', '.\n                ', 'FAU_SAA.3'),
('0', 'FAU_SAA.3.30', 'FAU_SAA.3.3', '\n                    The TSF shall be able to indicate a potential violation of the\n                    enforcement of the SFRs when a system event is found to match\n                    a signature event that indicates a potential violation of the\n                    enforcement of the SFRs.\n                ', 'FAU_SAA.3'),
('0', 'FAU_SAA.4.10', 'FAU_SAA.4.1', '\n                    The TSF shall be able to maintain an internal representation\n                    of the following event sequences of known intrusion\n                    scenarios\n                    ', 'FAU_SAA.4'),
('1', 'FAU_SAA.4.11', 'FAU_SAA.4.1', '\n                    and the following signature events\n                    ', 'FAU_SAA.4'),
('2', 'FAU_SAA.4.12', 'FAU_SAA.4.1', '\n                    that may indicate a potential\n                    violation of the enforcement of the SFRs.\n                ', 'FAU_SAA.4'),
('0', 'FAU_SAA.4.20', 'FAU_SAA.4.2', '\n                    The TSF shall be able to compare the signature events and\n                    event sequences against the record of system activity\n                    discernible from an examination of\n                    ', 'FAU_SAA.4'),
('1', 'FAU_SAA.4.21', 'FAU_SAA.4.2', '.\n                ', 'FAU_SAA.4'),
('0', 'FAU_SAA.4.30', 'FAU_SAA.4.3', '\n                    The TSF shall be able to indicate a potential violation of the\n                    enforcement of the SFRs when system activity is found to match\n                    a signature event or event sequence that indicates a potential\n                    violation of the enforcement of the SFRs.\n                ', 'FAU_SAA.4'),
('0', 'FAU_SAR.1.10', 'FAU_SAR.1.1', '\n                    The TSF shall provide\n                    ', 'FAU_SAR.1'),
('1', 'FAU_SAR.1.11', 'FAU_SAR.1.1', '\n                    with the capability to read\n                    ', 'FAU_SAR.1'),
('2', 'FAU_SAR.1.12', 'FAU_SAR.1.1', '\n                    from the audit records.\n                ', 'FAU_SAR.1'),
('0', 'FAU_SAR.1.20', 'FAU_SAR.1.2', '\n                    The TSF shall provide the audit records in a manner suitable\n                    for the user to interpret the information.\n                ', 'FAU_SAR.1'),
('0', 'FAU_SAR.2.10', 'FAU_SAR.2.1', '\n                    The TSF shall prohibit all users read access to the audit\n                    records, except those users that have been granted explicit\n                    read-access.\n                ', 'FAU_SAR.2'),
('0', 'FAU_SAR.3.10', 'FAU_SAR.3.1', '\n                    The TSF shall provide the ability to apply\n                    ', 'FAU_SAR.3'),
('1', 'FAU_SAR.3.11', 'FAU_SAR.3.1', '\n                    of audit data based on\n                    ', 'FAU_SAR.3'),
('2', 'FAU_SAR.3.12', 'FAU_SAR.3.1', '.\n                ', 'FAU_SAR.3'),
('0', 'FAU_SEL.1.10', 'FAU_SEL.1.1', '\n                    The TSF shall be able to select the set of events to be audited from\n                    the set of all auditable events based on the following\n                    attributes:\n                    ', 'FAU_SEL.1'),
('0', 'FAU_STG.1.10', 'FAU_STG.1.1', '\n                    The TSF shall protect the stored audit records in the audit\n                    trail from unauthorised deletion.\n                ', 'FAU_STG.1'),
('0', 'FAU_STG.1.20', 'FAU_STG.1.2', '\n                    The TSF shall be able to ', 'FAU_STG.1'),
('1', 'FAU_STG.1.21', 'FAU_STG.1.2', ' unauthorised\n                    modifications to the stored audit records in the audit trail.\n                ', 'FAU_STG.1'),
('0', 'FAU_STG.2.10', 'FAU_STG.2.1', '\n                    The TSF shall protect the stored audit records in the audit trail from\n                    unauthorised deletion.\n                ', 'FAU_STG.2'),
('0', 'FAU_STG.2.20', 'FAU_STG.2.2', '\n                    The TSF shall be able to ', 'FAU_STG.2'),
('1', 'FAU_STG.2.21', 'FAU_STG.2.2', ' unauthorised\n                    modifications to the stored audit records in the audit trail.\n                ', 'FAU_STG.2'),
('0', 'FAU_STG.2.30', 'FAU_STG.2.3', '\n                    The TSF shall ensure that\n                    ', 'FAU_STG.2'),
('1', 'FAU_STG.2.31', 'FAU_STG.2.3', '\n                    stored audit records will be maintained when the\n                    following conditions occur:\n                    ', 'FAU_STG.2'),
('2', 'FAU_STG.2.32', 'FAU_STG.2.3', '\n                ', 'FAU_STG.2'),
('0', 'FAU_STG.3.10', 'FAU_STG.3.1', '\n                    The TSF shall\n                    ', 'FAU_STG.3'),
('1', 'FAU_STG.3.11', 'FAU_STG.3.1', '\n                    if the audit trail exceeds\n                    ', 'FAU_STG.3'),
('2', 'FAU_STG.3.12', 'FAU_STG.3.1', '.\n                ', 'FAU_STG.3'),
('0', 'FAU_STG.4.10', 'FAU_STG.4.1', '\n                    The TSF shall\n                    ', 'FAU_STG.4'),
('1', 'FAU_STG.4.11', 'FAU_STG.4.1', '\n                    and\n                    ', 'FAU_STG.4'),
('2', 'FAU_STG.4.12', 'FAU_STG.4.1', '\n                    if the audit trail is full.\n                ', 'FAU_STG.4'),
('0', 'FCO_NRO.1.10', 'FCO_NRO.1.1', '\n                    The TSF shall be able to generate evidence of origin for\n                    transmitted\n                    ', 'FCO_NRO.1'),
('1', 'FCO_NRO.1.11', 'FCO_NRO.1.1', '\n                    at the request of the\n                    ', 'FCO_NRO.1'),
('2', 'FCO_NRO.1.12', 'FCO_NRO.1.1', '.\n                ', 'FCO_NRO.1'),
('0', 'FCO_NRO.1.20', 'FCO_NRO.1.2', '\n                    The TSF shall be able to relate the\n                    ', 'FCO_NRO.1'),
('1', 'FCO_NRO.1.21', 'FCO_NRO.1.2', '\n                    of the originator of the information, and the\n                    ', 'FCO_NRO.1'),
('2', 'FCO_NRO.1.22', 'FCO_NRO.1.2', '\n                    of the information to which the evidence applies.\n                ', 'FCO_NRO.1'),
('0', 'FCO_NRO.1.30', 'FCO_NRO.1.3', '\n                    The TSF shall provide a capability to verify the evidence of\n                    origin of information to\n                    ', 'FCO_NRO.1'),
('1', 'FCO_NRO.1.31', 'FCO_NRO.1.3', '\n                    given\n                    ', 'FCO_NRO.1'),
('2', 'FCO_NRO.1.32', 'FCO_NRO.1.3', '.\n                ', 'FCO_NRO.1'),
('0', 'FCO_NRO.2.10', 'FCO_NRO.2.1', '\n                    The TSF shall enforce the generation of evidence of origin\n                    for transmitted\n                    ', 'FCO_NRO.2'),
('1', 'FCO_NRO.2.11', 'FCO_NRO.2.1', '\n                    at all times.\n                ', 'FCO_NRO.2'),
('0', 'FCO_NRO.2.20', 'FCO_NRO.2.2', '\n                    The TSF shall be able to relate the\n                    ', 'FCO_NRO.2'),
('1', 'FCO_NRO.2.21', 'FCO_NRO.2.2', '\n                    of the originator of the information, and the\n                    ', 'FCO_NRO.2'),
('2', 'FCO_NRO.2.22', 'FCO_NRO.2.2', '\n                    of the information to which the evidence applies.\n                ', 'FCO_NRO.2'),
('0', 'FCO_NRO.2.30', 'FCO_NRO.2.3', '\n                    The TSF shall provide a capability to verify the evidence of\n                    origin of information to\n                    ', 'FCO_NRO.2'),
('1', 'FCO_NRO.2.31', 'FCO_NRO.2.3', '\n                    given\n                    ', 'FCO_NRO.2'),
('2', 'FCO_NRO.2.32', 'FCO_NRO.2.3', '.\n                ', 'FCO_NRO.2'),
('0', 'FCO_NRR.1.10', 'FCO_NRR.1.1', '\n                    The TSF shall be able to generate\n                    evidence of receipt for received\n                    ', 'FCO_NRR.1'),
('1', 'FCO_NRR.1.11', 'FCO_NRR.1.1', '\n                    at the request of the\n                    ', 'FCO_NRR.1'),
('2', 'FCO_NRR.1.12', 'FCO_NRR.1.1', '.\n                ', 'FCO_NRR.1'),
('0', 'FCO_NRR.1.20', 'FCO_NRR.1.2', '\n                    The TSF shall be able to relate the\n                    ', 'FCO_NRR.1'),
('1', 'FCO_NRR.1.21', 'FCO_NRR.1.2', '\n                    of the recipient of the information, and the\n                    ', 'FCO_NRR.1'),
('2', 'FCO_NRR.1.22', 'FCO_NRR.1.2', '\n                    of the information to which the evidence applies.\n                ', 'FCO_NRR.1'),
('0', 'FCO_NRR.1.30', 'FCO_NRR.1.3', '\n                    The TSF shall provide a capability to verify the evidence of\n                    receipt of information to\n                    ', 'FCO_NRR.1'),
('1', 'FCO_NRR.1.31', 'FCO_NRR.1.3', '\n                    given\n                    ', 'FCO_NRR.1'),
('2', 'FCO_NRR.1.32', 'FCO_NRR.1.3', '.\n                ', 'FCO_NRR.1'),
('0', 'FCO_NRR.2.10', 'FCO_NRR.2.1', '\n                    The TSF shall enforce the generation of evidence of receipt\n                    for received\n                    ', 'FCO_NRR.2'),
('1', 'FCO_NRR.2.11', 'FCO_NRR.2.1', ' at all times.\n                ', 'FCO_NRR.2'),
('0', 'FCO_NRR.2.20', 'FCO_NRR.2.2', '\n                    The TSF shall be able to relate the\n                    ', 'FCO_NRR.2'),
('1', 'FCO_NRR.2.21', 'FCO_NRR.2.2', '\n                    of the recipient of the information, and the\n                    ', 'FCO_NRR.2'),
('2', 'FCO_NRR.2.22', 'FCO_NRR.2.2', '\n                    of the information to which the evidence applies.\n                ', 'FCO_NRR.2'),
('0', 'FCO_NRR.2.30', 'FCO_NRR.2.3', '\n                    The TSF shall provide a capability to verify the evidence of\n                    receipt of information to\n                    ', 'FCO_NRR.2'),
('1', 'FCO_NRR.2.31', 'FCO_NRR.2.3', '\n                    given\n                    ', 'FCO_NRR.2'),
('2', 'FCO_NRR.2.32', 'FCO_NRR.2.3', '.\n                ', 'FCO_NRR.2'),
('0', 'FCS_CKM.1.10', 'FCS_CKM.1.1', '\n                    The TSF shall generate cryptographic keys in accordance with\n                    a specified cryptographic key generation algorithm\n                    ', 'FCS_CKM.1'),
('1', 'FCS_CKM.1.11', 'FCS_CKM.1.1', '\n                    and specified cryptographic key sizes\n                    ', 'FCS_CKM.1'),
('2', 'FCS_CKM.1.12', 'FCS_CKM.1.1', '\n                    that meet the following:\n                    ', 'FCS_CKM.1'),
('3', 'FCS_CKM.1.13', 'FCS_CKM.1.1', '.\n                ', 'FCS_CKM.1'),
('0', 'FCS_CKM.2.10', 'FCS_CKM.2.1', '\n                    The TSF shall distribute cryptographic keys in accordance\n                    with a specified cryptographic key distribution method\n                    ', 'FCS_CKM.2'),
('1', 'FCS_CKM.2.11', 'FCS_CKM.2.1', '\n                    that meets the following:\n                    ', 'FCS_CKM.2'),
('2', 'FCS_CKM.2.12', 'FCS_CKM.2.1', '.\n                ', 'FCS_CKM.2'),
('0', 'FCS_CKM.3.10', 'FCS_CKM.3.1', '\n                    The TSF shall perform\n                    ', 'FCS_CKM.3'),
('1', 'FCS_CKM.3.11', 'FCS_CKM.3.1', '\n                    in accordance with a specified cryptographic key access\n                    method\n                    ', 'FCS_CKM.3'),
('2', 'FCS_CKM.3.12', 'FCS_CKM.3.1', '\n                    that meets the following:\n                    ', 'FCS_CKM.3'),
('3', 'FCS_CKM.3.13', 'FCS_CKM.3.1', '.\n                ', 'FCS_CKM.3'),
('0', 'FCS_CKM.4.10', 'FCS_CKM.4.1', '\n                    The TSF shall destroy cryptographic keys in accordance with\n                    a specified cryptographic key destruction method\n                    ', 'FCS_CKM.4'),
('1', 'FCS_CKM.4.11', 'FCS_CKM.4.1', '\n                    that meets the following:\n                    ', 'FCS_CKM.4'),
('2', 'FCS_CKM.4.12', 'FCS_CKM.4.1', '.\n                ', 'FCS_CKM.4'),
('0', 'FCS_COP.1.10', 'FCS_COP.1.1', '\n                    The TSF shall perform\n                    ', 'FCS_COP.1'),
('1', 'FCS_COP.1.11', 'FCS_COP.1.1', '\n                    in accordance with a specified cryptographic algorithm\n                    ', 'FCS_COP.1'),
('2', 'FCS_COP.1.12', 'FCS_COP.1.1', '\n                    and cryptographic key sizes\n                    ', 'FCS_COP.1'),
('3', 'FCS_COP.1.13', 'FCS_COP.1.1', '\n                    that meet the following:\n                    ', 'FCS_COP.1'),
('4', 'FCS_COP.1.14', 'FCS_COP.1.1', '.\n                ', 'FCS_COP.1'),
('0', 'FDP_ACC.1.10', 'FDP_ACC.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ACC.1'),
('1', 'FDP_ACC.1.11', 'FDP_ACC.1.1', '\n                    on\n                    ', 'FDP_ACC.1'),
('2', 'FDP_ACC.1.12', 'FDP_ACC.1.1', '.\n                ', 'FDP_ACC.1'),
('0', 'FDP_ACC.2.10', 'FDP_ACC.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ACC.2'),
('1', 'FDP_ACC.2.11', 'FDP_ACC.2.1', '\n                    on\n                    ', 'FDP_ACC.2'),
('2', 'FDP_ACC.2.12', 'FDP_ACC.2.1', '\n                    and all operations among subjects and objects covered by the\n                    SFP.\n                ', 'FDP_ACC.2'),
('0', 'FDP_ACC.2.20', 'FDP_ACC.2.2', '\n                    The TSF shall ensure that all operations between any subject\n                    controlled by the TSF and any object controlled by the TSF are covered by an\n                    access control SFP.\n                ', 'FDP_ACC.2'),
('0', 'FDP_ACF.1.10', 'FDP_ACF.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ACF.1'),
('1', 'FDP_ACF.1.11', 'FDP_ACF.1.1', '\n                    to objects based on the following:\n                    ', 'FDP_ACF.1'),
('2', 'FDP_ACF.1.12', 'FDP_ACF.1.1', '.\n                ', 'FDP_ACF.1'),
('0', 'FDP_ACF.1.20', 'FDP_ACF.1.2', '\n                    The TSF shall enforce the following rules to determine if an\n                    operation among controlled subjects and controlled objects\n                    is allowed:\n                    ', 'FDP_ACF.1'),
('1', 'FDP_ACF.1.21', 'FDP_ACF.1.2', '.\n                ', 'FDP_ACF.1'),
('0', 'FDP_ACF.1.30', 'FDP_ACF.1.3', '\n                    The TSF shall explicitly authorise access of subjects to\n                    objects based on the following additional rules:\n                    ', 'FDP_ACF.1'),
('1', 'FDP_ACF.1.31', 'FDP_ACF.1.3', '.\n                ', 'FDP_ACF.1'),
('0', 'FDP_ACF.1.40', 'FDP_ACF.1.4', '\n                    The TSF shall explicitly deny access of subjects to objects based on the\n                    following additional rules:\n                    ', 'FDP_ACF.1'),
('1', 'FDP_ACF.1.41', 'FDP_ACF.1.4', '.\n                ', 'FDP_ACF.1'),
('0', 'FDP_DAU.1.10', 'FDP_DAU.1.1', '\n                    The TSF shall provide a capability to generate evidence that\n                    can be used as a guarantee of the validity of\n                    ', 'FDP_DAU.1'),
('1', 'FDP_DAU.1.11', 'FDP_DAU.1.1', '.\n                ', 'FDP_DAU.1'),
('0', 'FDP_DAU.1.20', 'FDP_DAU.1.2', '\n                    The TSF shall provide\n                    ', 'FDP_DAU.1'),
('1', 'FDP_DAU.1.21', 'FDP_DAU.1.2', '\n                    with the ability to verify evidence of the validity of the\n                    indicated information.\n                ', 'FDP_DAU.1'),
('0', 'FDP_DAU.2.10', 'FDP_DAU.2.1', '\n                    The TSF shall provide a capability to generate evidence that\n                    can be used as a guarantee of the validity of\n                    ', 'FDP_DAU.2'),
('1', 'FDP_DAU.2.11', 'FDP_DAU.2.1', '.\n                ', 'FDP_DAU.2'),
('0', 'FDP_DAU.2.20', 'FDP_DAU.2.2', '\n                    The TSF shall provide\n                    ', 'FDP_DAU.2'),
('1', 'FDP_DAU.2.21', 'FDP_DAU.2.2', '\n                    with the ability to verify evidence of the validity of the\n                    indicated information and the identity of the user that\n                    generated the evidence.\n                ', 'FDP_DAU.2'),
('0', 'FDP_ETC.1.10', 'FDP_ETC.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ETC.1'),
('1', 'FDP_ETC.1.11', 'FDP_ETC.1.1', '\n                    when exporting user data, controlled under the SFP(s),\n                    outside of the TOE.\n                ', 'FDP_ETC.1'),
('0', 'FDP_ETC.1.20', 'FDP_ETC.1.2', '\n                    The TSF shall export the user data without the user\n                    data\'s associated security attributes\n                ', 'FDP_ETC.1'),
('0', 'FDP_ETC.2.10', 'FDP_ETC.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ETC.2'),
('1', 'FDP_ETC.2.11', 'FDP_ETC.2.1', '\n                    when exporting user data, controlled under the SFP(s),\n                    outside of the TOE.\n                ', 'FDP_ETC.2'),
('0', 'FDP_ETC.2.20', 'FDP_ETC.2.2', '\n                    The TSF shall export the user data with the user\n                    data\'s associated security attributes.\n                ', 'FDP_ETC.2'),
('0', 'FDP_ETC.2.30', 'FDP_ETC.2.3', '\n                    The TSF shall ensure that the security attributes, when\n                    exported outside the TOE, are unambiguously associated with\n                    the exported user data.\n                ', 'FDP_ETC.2'),
('0', 'FDP_ETC.2.40', 'FDP_ETC.2.4', '\n                    The TSF shall enforce the following rules when user data is\n                    exported from the TOE:\n                    ', 'FDP_ETC.2'),
('1', 'FDP_ETC.2.41', 'FDP_ETC.2.4', '.\n                ', 'FDP_ETC.2'),
('0', 'FDP_IFC.1.10', 'FDP_IFC.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFC.1'),
('1', 'FDP_IFC.1.11', 'FDP_IFC.1.1', '\n                    on\n                    ', 'FDP_IFC.1'),
('2', 'FDP_IFC.1.12', 'FDP_IFC.1.1', '.\n                ', 'FDP_IFC.1'),
('0', 'FDP_IFC.2.10', 'FDP_IFC.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFC.2'),
('1', 'FDP_IFC.2.11', 'FDP_IFC.2.1', '\n                    on\n                    ', 'FDP_IFC.2'),
('2', 'FDP_IFC.2.12', 'FDP_IFC.2.1', '\n                    and all operations that cause that information to flow to\n                    and from subjects covered by the SFP.\n                ', 'FDP_IFC.2'),
('0', 'FDP_IFC.2.20', 'FDP_IFC.2.2', '\n                    The TSF shall ensure that all operations that cause any\n                    information in the TOE to flow to and from any subject in\n                    the TOE are covered by an information flow control SFP.\n                ', 'FDP_IFC.2'),
('0', 'FDP_IFF.1.10', 'FDP_IFF.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.1'),
('1', 'FDP_IFF.1.11', 'FDP_IFF.1.1', '\n                    based on the following types of subject and\n                    information security attributes:\n                    ', 'FDP_IFF.1'),
('2', 'FDP_IFF.1.12', 'FDP_IFF.1.1', '.\n                ', 'FDP_IFF.1'),
('0', 'FDP_IFF.1.20', 'FDP_IFF.1.2', '\n                    The TSF shall permit an information flow between a\n                    controlled subject and controlled information via a\n                    controlled operation if the following rules hold:\n                    ', 'FDP_IFF.1'),
('1', 'FDP_IFF.1.21', 'FDP_IFF.1.2', '.\n                ', 'FDP_IFF.1'),
('0', 'FDP_IFF.1.30', 'FDP_IFF.1.3', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.1'),
('1', 'FDP_IFF.1.31', 'FDP_IFF.1.3', '.\n                ', 'FDP_IFF.1'),
('0', 'FDP_IFF.1.40', 'FDP_IFF.1.4', '\n                    The TSF shall explicitly authorise an information flow based\n                    on the following rules:\n                    ', 'FDP_IFF.1'),
('1', 'FDP_IFF.1.41', 'FDP_IFF.1.4', '.\n                ', 'FDP_IFF.1'),
('0', 'FDP_IFF.1.50', 'FDP_IFF.1.5', '\n                    The TSF shall explicitly deny an information flow based on\n                    the following rules:\n                    ', 'FDP_IFF.1'),
('1', 'FDP_IFF.1.51', 'FDP_IFF.1.5', '.\n                ', 'FDP_IFF.1'),
('0', 'FDP_IFF.2.10', 'FDP_IFF.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.2'),
('1', 'FDP_IFF.2.11', 'FDP_IFF.2.1', '\n                    based on the following types of subject and\n                    information security attributes:\n                    ', 'FDP_IFF.2'),
('2', 'FDP_IFF.2.12', 'FDP_IFF.2.1', '.\n                ', 'FDP_IFF.2'),
('0', 'FDP_IFF.2.20', 'FDP_IFF.2.2', '\n                    The TSF shall permit an information flow between a\n                    controlled subject and controlled information via a\n                    controlled operation if the following rules, based on the\n                    ordering relationships between security attributes hold:\n                    ', 'FDP_IFF.2'),
('1', 'FDP_IFF.2.21', 'FDP_IFF.2.2', '.\n                ', 'FDP_IFF.2'),
('0', 'FDP_IFF.2.30', 'FDP_IFF.2.3', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.2'),
('1', 'FDP_IFF.2.31', 'FDP_IFF.2.3', '.\n                ', 'FDP_IFF.2'),
('0', 'FDP_IFF.2.40', 'FDP_IFF.2.4', '\n                    The TSF shall explicitly authorise an information flow based\n                    on the following rules:\n                    ', 'FDP_IFF.2'),
('1', 'FDP_IFF.2.41', 'FDP_IFF.2.4', '.\n                ', 'FDP_IFF.2'),
('0', 'FDP_IFF.2.50', 'FDP_IFF.2.5', '\n                    The TSF shall explicitly deny an information flow based on\n                    the following rules:\n                    ', 'FDP_IFF.2'),
('1', 'FDP_IFF.2.51', 'FDP_IFF.2.5', '.\n                ', 'FDP_IFF.2'),
('0', 'FDP_IFF.2.60', 'FDP_IFF.2.6', '\n                    The TSF shall enforce the following relationships for any\n                    two valid information flow control security attributes:\n                    ', 'FDP_IFF.2'),
('1', 'FDP_IFF.2.61', 'FDP_IFF.2.6', '\n                ', 'FDP_IFF.2'),
('0', 'FDP_IFF.3.10', 'FDP_IFF.3.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.3'),
('1', 'FDP_IFF.3.11', 'FDP_IFF.3.1', '\n                    to limit the capacity of\n                    ', 'FDP_IFF.3'),
('2', 'FDP_IFF.3.12', 'FDP_IFF.3.1', '\n                    to a\n                    ', 'FDP_IFF.3'),
('3', 'FDP_IFF.3.13', 'FDP_IFF.3.1', '.\n                ', 'FDP_IFF.3'),
('0', 'FDP_IFF.4.10', 'FDP_IFF.4.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.4'),
('1', 'FDP_IFF.4.11', 'FDP_IFF.4.1', '\n                    to limit the capacity of\n                    ', 'FDP_IFF.4'),
('2', 'FDP_IFF.4.12', 'FDP_IFF.4.1', '\n                    to a\n                    ', 'FDP_IFF.4'),
('3', 'FDP_IFF.4.13', 'FDP_IFF.4.1', '.\n                ', 'FDP_IFF.4'),
('0', 'FDP_IFF.4.20', 'FDP_IFF.4.2', '\n                    The TSF shall prevent\n                    ', 'FDP_IFF.4'),
('1', 'FDP_IFF.4.21', 'FDP_IFF.4.2', '.\n                ', 'FDP_IFF.4'),
('0', 'FDP_IFF.5.10', 'FDP_IFF.5.1', '\n                    The TSF shall ensure that no illicit information flows exist\n                    to circumvent\n                    ', 'FDP_IFF.5'),
('1', 'FDP_IFF.5.11', 'FDP_IFF.5.1', '.\n                ', 'FDP_IFF.5'),
('0', 'FDP_IFF.6.10', 'FDP_IFF.6.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_IFF.6'),
('1', 'FDP_IFF.6.11', 'FDP_IFF.6.1', '\n                    to monitor\n                    ', 'FDP_IFF.6'),
('2', 'FDP_IFF.6.12', 'FDP_IFF.6.1', '\n                    when it exceeds the\n                    ', 'FDP_IFF.6'),
('3', 'FDP_IFF.6.13', 'FDP_IFF.6.1', '.\n                ', 'FDP_IFF.6'),
('0', 'FDP_ITC.1.10', 'FDP_ITC.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ITC.1'),
('1', 'FDP_ITC.1.11', 'FDP_ITC.1.1', '\n                    when importing user data, controlled under the SFP, from\n                    outside of the TOE.\n                ', 'FDP_ITC.1'),
('0', 'FDP_ITC.1.20', 'FDP_ITC.1.2', '\n                    The TSF shall ignore any security attributes associated with\n                    the user data when imported from outside the TOE.\n                ', 'FDP_ITC.1'),
('0', 'FDP_ITC.1.30', 'FDP_ITC.1.3', '\n                    The TSF shall enforce the following rules when importing\n                    user data controlled under the SFP from outside the TOE:\n                    ', 'FDP_ITC.1'),
('1', 'FDP_ITC.1.31', 'FDP_ITC.1.3', '.\n                ', 'FDP_ITC.1'),
('0', 'FDP_ITC.2.10', 'FDP_ITC.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ITC.2'),
('1', 'FDP_ITC.2.11', 'FDP_ITC.2.1', '\n                    when importing user data, controlled under the SFP, from\n                    outside of the TOE.\n                ', 'FDP_ITC.2'),
('0', 'FDP_ITC.2.20', 'FDP_ITC.2.2', '\n                    The TSF shall use the security attributes associated with\n                    the imported user data.\n                ', 'FDP_ITC.2'),
('0', 'FDP_ITC.2.30', 'FDP_ITC.2.3', '\n                    The TSF shall ensure that the protocol used provides for the\n                    unambiguous association between the security attributes and\n                    the user data received.\n                ', 'FDP_ITC.2'),
('0', 'FDP_ITC.2.40', 'FDP_ITC.2.4', '\n                    The TSF shall ensure that interpretation of the security\n                    attributes of the imported user data is as intended by the\n                    source of the user data.\n                ', 'FDP_ITC.2'),
('0', 'FDP_ITC.2.50', 'FDP_ITC.2.5', '\n                    The TSF shall enforce the following rules when importing\n                    user data controlled under the SFP from outside the TOE:\n                    ', 'FDP_ITC.2'),
('1', 'FDP_ITC.2.51', 'FDP_ITC.2.5', '.\n                ', 'FDP_ITC.2'),
('0', 'FDP_ITT.1.10', 'FDP_ITT.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ITT.1'),
('1', 'FDP_ITT.1.11', 'FDP_ITT.1.1', '\n                    to prevent the\n                    ', 'FDP_ITT.1'),
('2', 'FDP_ITT.1.12', 'FDP_ITT.1.1', '\n                    of user data when it is transmitted between\n                    physically-separated parts of the TOE.\n                ', 'FDP_ITT.1'),
('0', 'FDP_ITT.2.10', 'FDP_ITT.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ITT.2'),
('1', 'FDP_ITT.2.11', 'FDP_ITT.2.1', '\n                    to prevent the\n                    ', 'FDP_ITT.2'),
('2', 'FDP_ITT.2.12', 'FDP_ITT.2.1', '\n                    of user data when it is transmitted between\n                    physically-separated parts of the TOE.\n                ', 'FDP_ITT.2'),
('0', 'FDP_ITT.2.20', 'FDP_ITT.2.2', '\n                    The TSF shall separate data controlled by the SFP(s) when\n                    transmitted between physically-separated parts of the TOE,\n                    based on the values of the following:\n                    ', 'FDP_ITT.2'),
('1', 'FDP_ITT.2.21', 'FDP_ITT.2.2', '.\n                ', 'FDP_ITT.2'),
('0', 'FDP_ITT.3.10', 'FDP_ITT.3.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ITT.3'),
('1', 'FDP_ITT.3.11', 'FDP_ITT.3.1', '\n                    to monitor user data transmitted between\n                    physically-separated parts of the TOE for the following\n                    errors:\n                    ', 'FDP_ITT.3'),
('2', 'FDP_ITT.3.12', 'FDP_ITT.3.1', '.\n                ', 'FDP_ITT.3'),
('0', 'FDP_ITT.3.20', 'FDP_ITT.3.2', '\n                    Upon detection of a data integrity error, the TSF shall\n                    ', 'FDP_ITT.3'),
('1', 'FDP_ITT.3.21', 'FDP_ITT.3.2', '.\n                ', 'FDP_ITT.3'),
('0', 'FDP_ITT.4.10', 'FDP_ITT.4.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_ITT.4'),
('1', 'FDP_ITT.4.11', 'FDP_ITT.4.1', '\n                    to monitor user data transmitted between\n                    physically-separated parts of the TOE for the following\n                    errors:\n                    ', 'FDP_ITT.4'),
('2', 'FDP_ITT.4.12', 'FDP_ITT.4.1', ', based on the following attributes:\n                    ', 'FDP_ITT.4'),
('3', 'FDP_ITT.4.13', 'FDP_ITT.4.1', '.\n                ', 'FDP_ITT.4'),
('0', 'FDP_ITT.4.20', 'FDP_ITT.4.2', '\n                    Upon detection of a data integrity error, the TSF shall\n                    ', 'FDP_ITT.4'),
('1', 'FDP_ITT.4.21', 'FDP_ITT.4.2', '.\n                ', 'FDP_ITT.4'),
('0', 'FDP_RIP.1.10', 'FDP_RIP.1.1', '\n                    The TSF shall ensure that any previous information content\n                    of a resource is made unavailable upon the\n                    ', 'FDP_RIP.1'),
('1', 'FDP_RIP.1.11', 'FDP_RIP.1.1', '\n                    the following objects:\n                    ', 'FDP_RIP.1'),
('2', 'FDP_RIP.1.12', 'FDP_RIP.1.1', '.\n                ', 'FDP_RIP.1'),
('0', 'FDP_RIP.2.10', 'FDP_RIP.2.1', '\n                    The TSF shall ensure that any previous information content\n                    of a resource is made unavailable upon the\n                    ', 'FDP_RIP.2'),
('1', 'FDP_RIP.2.11', 'FDP_RIP.2.1', '\n                    all objects.\n                ', 'FDP_RIP.2'),
('0', 'FDP_ROL.1.10', 'FDP_ROL.1.1', '\n                    The TSF shall enforce\n                    ', 'FDP_ROL.1'),
('1', 'FDP_ROL.1.11', 'FDP_ROL.1.1', '\n                    to permit the rollback of the\n                    ', 'FDP_ROL.1'),
('2', 'FDP_ROL.1.12', 'FDP_ROL.1.1', '\n                    on the\n                    ', 'FDP_ROL.1'),
('3', 'FDP_ROL.1.13', 'FDP_ROL.1.1', '.\n                ', 'FDP_ROL.1'),
('0', 'FDP_ROL.1.20', 'FDP_ROL.1.2', '\n                    The TSF shall permit operations to be rolled back within the\n                    ', 'FDP_ROL.1'),
('1', 'FDP_ROL.1.21', 'FDP_ROL.1.2', '.\n                ', 'FDP_ROL.1'),
('0', 'FDP_ROL.2.10', 'FDP_ROL.2.1', '\n                    The TSF shall enforce\n                    ', 'FDP_ROL.2'),
('1', 'FDP_ROL.2.11', 'FDP_ROL.2.1', '\n                    to permit the rollback of all the operations on the\n                    ', 'FDP_ROL.2'),
('2', 'FDP_ROL.2.12', 'FDP_ROL.2.1', '.\n                ', 'FDP_ROL.2'),
('0', 'FDP_ROL.2.20', 'FDP_ROL.2.2', '\n                    The TSF shall permit operations to be rolled back within the\n                    ', 'FDP_ROL.2'),
('1', 'FDP_ROL.2.21', 'FDP_ROL.2.2', '.\n                ', 'FDP_ROL.2'),
('0', 'FDP_SDI.1.10', 'FDP_SDI.1.1', '\n                    The TSF shall monitor user data stored in containers controlled by the TSF for\n                    ', 'FDP_SDI.1'),
('1', 'FDP_SDI.1.11', 'FDP_SDI.1.1', '\n                    on all objects, based on the following attributes:\n                    ', 'FDP_SDI.1'),
('2', 'FDP_SDI.1.12', 'FDP_SDI.1.1', '.\n                ', 'FDP_SDI.1'),
('0', 'FDP_SDI.2.10', 'FDP_SDI.2.1', '\n                    The TSF shall monitor user data stored in containers controlled by the TSF for\n                    ', 'FDP_SDI.2'),
('1', 'FDP_SDI.2.11', 'FDP_SDI.2.1', '\n                    on all objects, based on the following attributes:\n                    ', 'FDP_SDI.2'),
('2', 'FDP_SDI.2.12', 'FDP_SDI.2.1', '.\n                ', 'FDP_SDI.2'),
('0', 'FDP_SDI.2.20', 'FDP_SDI.2.2', '\n                    Upon detection of a data integrity error, the TSF shall\n                    ', 'FDP_SDI.2'),
('1', 'FDP_SDI.2.21', 'FDP_SDI.2.2', '.\n                ', 'FDP_SDI.2'),
('0', 'FDP_UCT.1.10', 'FDP_UCT.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_UCT.1'),
('1', 'FDP_UCT.1.11', 'FDP_UCT.1.1', '\n                    to\n                    ', 'FDP_UCT.1'),
('2', 'FDP_UCT.1.12', 'FDP_UCT.1.1', '\n                    user data in a manner protected from unauthorised disclosure.\n                ', 'FDP_UCT.1'),
('0', 'FDP_UIT.1.10', 'FDP_UIT.1.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_UIT.1'),
('1', 'FDP_UIT.1.11', 'FDP_UIT.1.1', '\n                    to\n                    ', 'FDP_UIT.1'),
('2', 'FDP_UIT.1.12', 'FDP_UIT.1.1', '\n                    user data in a manner protected from\n                    ', 'FDP_UIT.1'),
('3', 'FDP_UIT.1.13', 'FDP_UIT.1.1', '\n                    errors.\n                ', 'FDP_UIT.1'),
('0', 'FDP_UIT.1.20', 'FDP_UIT.1.2', '\n                    The TSF shall be able to determine on receipt of user data,\n                    whether\n                    ', 'FDP_UIT.1'),
('1', 'FDP_UIT.1.21', 'FDP_UIT.1.2', '\n                    has occurred.\n                ', 'FDP_UIT.1'),
('0', 'FDP_UIT.2.10', 'FDP_UIT.2.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_UIT.2'),
('1', 'FDP_UIT.2.11', 'FDP_UIT.2.1', '\n                    to be able to recover from\n                    ', 'FDP_UIT.2'),
('2', 'FDP_UIT.2.12', 'FDP_UIT.2.1', '\n                    with the help of the source trusted IT product.\n                ', 'FDP_UIT.2'),
('0', 'FDP_UIT.3.10', 'FDP_UIT.3.1', '\n                    The TSF shall enforce the\n                    ', 'FDP_UIT.3'),
('1', 'FDP_UIT.3.11', 'FDP_UIT.3.1', '\n                    to be able to recover from\n                    ', 'FDP_UIT.3'),
('2', 'FDP_UIT.3.12', 'FDP_UIT.3.1', '\n                    without any help from the source trusted IT product.\n                ', 'FDP_UIT.3'),
('0', 'FIA_AFL.1.10', 'FIA_AFL.1.1', '\n                    The TSF shall detect when\n                    ', 'FIA_AFL.1'),
('1', 'FIA_AFL.1.11', 'FIA_AFL.1.1', '\n                    unsuccessful authentication attempts occur related to\n                    ', 'FIA_AFL.1'),
('2', 'FIA_AFL.1.12', 'FIA_AFL.1.1', '.\n                ', 'FIA_AFL.1'),
('0', 'FIA_AFL.1.20', 'FIA_AFL.1.2', '\n                    When the defined number of unsuccessful authentication\n                    attempts has been\n                    ', 'FIA_AFL.1'),
('1', 'FIA_AFL.1.21', 'FIA_AFL.1.2', ', the TSF shall\n                    ', 'FIA_AFL.1'),
('2', 'FIA_AFL.1.22', 'FIA_AFL.1.2', '.\n                ', 'FIA_AFL.1'),
('0', 'FIA_ATD.1.10', 'FIA_ATD.1.1', '\n                    The TSF shall maintain the following list of security\n                    attributes belonging to individual users:\n                    ', 'FIA_ATD.1'),
('1', 'FIA_ATD.1.11', 'FIA_ATD.1.1', '.\n                ', 'FIA_ATD.1'),
('0', 'FIA_SOS.1.10', 'FIA_SOS.1.1', '\n                    The TSF shall provide a mechanism to verify that secrets\n                    meet\n                    ', 'FIA_SOS.1'),
('1', 'FIA_SOS.1.11', 'FIA_SOS.1.1', '.\n                ', 'FIA_SOS.1'),
('0', 'FIA_SOS.2.10', 'FIA_SOS.2.1', '\n                    The TSF shall provide a mechanism to generate secrets that\n                    meet\n                    ', 'FIA_SOS.2'),
('1', 'FIA_SOS.2.11', 'FIA_SOS.2.1', '.\n                ', 'FIA_SOS.2'),
('0', 'FIA_SOS.2.20', 'FIA_SOS.2.2', '\n                    The TSF shall be able to enforce the use of TSF generated\n                    secrets for\n                    ', 'FIA_SOS.2'),
('1', 'FIA_SOS.2.21', 'FIA_SOS.2.2', '.\n                ', 'FIA_SOS.2'),
('0', 'FIA_UAU.1.10', 'FIA_UAU.1.1', '\n                    The TSF shall allow\n                    ', 'FIA_UAU.1'),
('1', 'FIA_UAU.1.11', 'FIA_UAU.1.1', '\n                    on behalf of the user to be performed before the user is\n                    authenticated.\n                ', 'FIA_UAU.1'),
('0', 'FIA_UAU.1.20', 'FIA_UAU.1.2', '\n                    The TSF shall require each user to be successfully\n                    authenticated before allowing any other TSF-mediated actions\n                    on behalf of that user.\n                ', 'FIA_UAU.1'),
('0', 'FIA_UAU.2.10', 'FIA_UAU.2.1', '\n                    The TSF shall require each user to be successfully\n                    authenticated before allowing any other TSF-mediated actions\n                    on behalf of that user.\n                ', 'FIA_UAU.2'),
('0', 'FIA_UAU.3.10', 'FIA_UAU.3.1', '\n                    The TSF shall\n                    ', 'FIA_UAU.3'),
('1', 'FIA_UAU.3.11', 'FIA_UAU.3.1', '\n                    use of authentication data that has been forged by any user\n                    of the TSF.\n                ', 'FIA_UAU.3'),
('0', 'FIA_UAU.3.20', 'FIA_UAU.3.2', '\n                    The TSF shall\n                    ', 'FIA_UAU.3'),
('1', 'FIA_UAU.3.21', 'FIA_UAU.3.2', '\n                    use of authentication data that has been copied from any\n                    other user of the TSF.\n                ', 'FIA_UAU.3'),
('0', 'FIA_UAU.4.10', 'FIA_UAU.4.1', '\n                    The TSF shall prevent reuse of authentication data related\n                    to\n                    ', 'FIA_UAU.4'),
('1', 'FIA_UAU.4.11', 'FIA_UAU.4.1', '.\n                ', 'FIA_UAU.4'),
('0', 'FIA_UAU.5.10', 'FIA_UAU.5.1', '\n                    The TSF shall provide\n                    ', 'FIA_UAU.5'),
('1', 'FIA_UAU.5.11', 'FIA_UAU.5.1', '\n                    to support user authentication.\n                ', 'FIA_UAU.5'),
('0', 'FIA_UAU.5.20', 'FIA_UAU.5.2', '\n                    The TSF shall authenticate any user\'s claimed\n                    identity according to the\n                    ', 'FIA_UAU.5'),
('1', 'FIA_UAU.5.21', 'FIA_UAU.5.2', '.\n                ', 'FIA_UAU.5'),
('0', 'FIA_UAU.6.10', 'FIA_UAU.6.1', '\n                    The TSF shall re-authenticate the user under the conditions\n                    ', 'FIA_UAU.6'),
('1', 'FIA_UAU.6.11', 'FIA_UAU.6.1', '.\n                ', 'FIA_UAU.6'),
('0', 'FIA_UAU.7.10', 'FIA_UAU.7.1', '\n                    The TSF shall provide only\n                    ', 'FIA_UAU.7'),
('1', 'FIA_UAU.7.11', 'FIA_UAU.7.1', '\n                    to the user while the authentication is in progress.\n                ', 'FIA_UAU.7'),
('0', 'FIA_UID.1.10', 'FIA_UID.1.1', '\n                    The TSF shall allow\n                    ', 'FIA_UID.1'),
('1', 'FIA_UID.1.11', 'FIA_UID.1.1', '\n                    on behalf of the user to be performed before the user is\n                    identified.\n                ', 'FIA_UID.1'),
('0', 'FIA_UID.1.20', 'FIA_UID.1.2', '\n                    The TSF shall require each user to be successfully identified before\n                    allowing any other TSF-mediated actions on behalf of that user.\n                ', 'FIA_UID.1'),
('0', 'FIA_UID.2.10', 'FIA_UID.2.1', '\n                    The TSF shall require each user to be successfully identified before\n                    allowing any other TSF-mediated actions on behalf of that user.\n                ', 'FIA_UID.2'),
('0', 'FIA_USB.1.10', 'FIA_USB.1.1', '\n                The TSF shall associate the following user security attributes\n                with subjects acting on the behalf of that user:\n                ', 'FIA_USB.1'),
('1', 'FIA_USB.1.11', 'FIA_USB.1.1', '.\n            ', 'FIA_USB.1'),
('0', 'FIA_USB.1.20', 'FIA_USB.1.2', '\n                The TSF shall enforce the following rules on the initial\n                association of user security attributes with subjects acting on\n                the behalf of users:\n                ', 'FIA_USB.1'),
('1', 'FIA_USB.1.21', 'FIA_USB.1.2', '.\n            ', 'FIA_USB.1'),
('0', 'FIA_USB.1.30', 'FIA_USB.1.3', '\n                The TSF shall enforce the following rules governing changes to the\n                user security attributes associated with subjects acting on the\n                behalf of users:\n                ', 'FIA_USB.1'),
('1', 'FIA_USB.1.31', 'FIA_USB.1.3', '.\n            ', 'FIA_USB.1'),
('0', 'FMT_MOF.1.10', 'FMT_MOF.1.1', '\n                    The TSF shall restrict the ability to\n                    ', 'FMT_MOF.1'),
('1', 'FMT_MOF.1.11', 'FMT_MOF.1.1', '\n                    the functions\n                    ', 'FMT_MOF.1'),
('2', 'FMT_MOF.1.12', 'FMT_MOF.1.1', '\n                    to\n                    ', 'FMT_MOF.1'),
('3', 'FMT_MOF.1.13', 'FMT_MOF.1.1', '.\n                ', 'FMT_MOF.1'),
('0', 'FMT_MSA.1.10', 'FMT_MSA.1.1', '\n                    The TSF shall enforce the\n                    ', 'FMT_MSA.1'),
('1', 'FMT_MSA.1.11', 'FMT_MSA.1.1', '\n                    to restrict the ability to\n                    ', 'FMT_MSA.1'),
('2', 'FMT_MSA.1.12', 'FMT_MSA.1.1', '\n                    the security attributes\n                    ', 'FMT_MSA.1'),
('3', 'FMT_MSA.1.13', 'FMT_MSA.1.1', '\n                    to\n                    ', 'FMT_MSA.1'),
('4', 'FMT_MSA.1.14', 'FMT_MSA.1.1', '.\n                ', 'FMT_MSA.1'),
('0', 'FMT_MSA.2.10', 'FMT_MSA.2.1', '\n                    The TSF shall ensure that only secure values are accepted\n                    for ', 'FMT_MSA.2'),
('1', 'FMT_MSA.2.11', 'FMT_MSA.2.1', '.\n                ', 'FMT_MSA.2'),
('0', 'FMT_MSA.3.10', 'FMT_MSA.3.1', '\n                    The TSF shall enforce the\n                    ', 'FMT_MSA.3'),
('1', 'FMT_MSA.3.11', 'FMT_MSA.3.1', '\n                    to provide\n                    ', 'FMT_MSA.3'),
('2', 'FMT_MSA.3.12', 'FMT_MSA.3.1', '\n                    default values for security attributes that are used to\n                    enforce the SFP.\n                ', 'FMT_MSA.3'),
('0', 'FMT_MSA.3.20', 'FMT_MSA.3.2', '\n                    The TSF shall allow the\n                    ', 'FMT_MSA.3'),
('1', 'FMT_MSA.3.21', 'FMT_MSA.3.2', '\n                    to specify alternative initial values to override the\n                    default values when an object or information is created.\n                ', 'FMT_MSA.3'),
('0', 'FMT_MSA.4.10', 'FMT_MSA.4.1', '\n            The TSF shall use the following rules to set the value of security attributes:\n            ', 'FMT_MSA.4'),
('0', 'FMT_MTD.1.10', 'FMT_MTD.1.1', '\n                    The TSF shall restrict the ability to\n                    ', 'FMT_MTD.1'),
('1', 'FMT_MTD.1.11', 'FMT_MTD.1.1', '\n                    the\n                    ', 'FMT_MTD.1'),
('2', 'FMT_MTD.1.12', 'FMT_MTD.1.1', '\n                    to\n                    ', 'FMT_MTD.1'),
('3', 'FMT_MTD.1.13', 'FMT_MTD.1.1', '.\n                ', 'FMT_MTD.1'),
('0', 'FMT_MTD.2.10', 'FMT_MTD.2.1', '\n                    The TSF shall restrict the specification of the limits for\n                    ', 'FMT_MTD.2'),
('1', 'FMT_MTD.2.11', 'FMT_MTD.2.1', '\n                    to\n                    ', 'FMT_MTD.2'),
('2', 'FMT_MTD.2.12', 'FMT_MTD.2.1', '.\n                ', 'FMT_MTD.2'),
('0', 'FMT_MTD.2.20', 'FMT_MTD.2.2', '\n                    The TSF shall take the following actions, if the TSF data\n                    are at, or exceed, the indicated limits:\n                    ', 'FMT_MTD.2'),
('1', 'FMT_MTD.2.21', 'FMT_MTD.2.2', '.\n                ', 'FMT_MTD.2'),
('0', 'FMT_MTD.3.10', 'FMT_MTD.3.1', '\n                    The TSF shall ensure that only secure values are accepted\n                    for ', 'FMT_MTD.3'),
('1', 'FMT_MTD.3.11', 'FMT_MTD.3.1', '.\n                ', 'FMT_MTD.3'),
('0', 'FMT_REV.1.10', 'FMT_REV.1.1', '\n                    The TSF shall restrict the ability to revoke\n                    ', 'FMT_REV.1'),
('1', 'FMT_REV.1.11', 'FMT_REV.1.1', '\n                    associated with the\n                    ', 'FMT_REV.1'),
('2', 'FMT_REV.1.12', 'FMT_REV.1.1', '\n                    under the control of the TSF to\n                    ', 'FMT_REV.1'),
('3', 'FMT_REV.1.13', 'FMT_REV.1.1', '.\n                ', 'FMT_REV.1'),
('0', 'FMT_REV.1.20', 'FMT_REV.1.2', '\n                    The TSF shall enforce the rules\n                    ', 'FMT_REV.1'),
('1', 'FMT_REV.1.21', 'FMT_REV.1.2', '.\n                ', 'FMT_REV.1'),
('0', 'FMT_SAE.1.10', 'FMT_SAE.1.1', '\n                    The TSF shall restrict the capability to specify an\n                    expiration time for\n                    ', 'FMT_SAE.1'),
('1', 'FMT_SAE.1.11', 'FMT_SAE.1.1', '\n                    to\n                    ', 'FMT_SAE.1'),
('2', 'FMT_SAE.1.12', 'FMT_SAE.1.1', '.\n                ', 'FMT_SAE.1'),
('0', 'FMT_SAE.1.20', 'FMT_SAE.1.2', '\n                    For each of these security attributes, the TSF shall be able\n                    to\n                    ', 'FMT_SAE.1'),
('1', 'FMT_SAE.1.21', 'FMT_SAE.1.2', '\n                    after the expiration time for the indicated security\n                    attribute has passed.\n                ', 'FMT_SAE.1'),
('0', 'FMT_SMF.1.10', 'FMT_SMF.1.1', '\n        The TSF shall be capable of performing the following\n        management functions:\n        ', 'FMT_SMF.1'),
('1', 'FMT_SMF.1.11', 'FMT_SMF.1.1', '.\n    ', 'FMT_SMF.1'),
('0', 'FMT_SMR.1.10', 'FMT_SMR.1.1', '\n                    The TSF shall maintain the roles\n                    ', 'FMT_SMR.1'),
('1', 'FMT_SMR.1.11', 'FMT_SMR.1.1', '.\n                ', 'FMT_SMR.1'),
('0', 'FMT_SMR.1.20', 'FMT_SMR.1.2', '\n                    The TSF shall be able to associate users with roles.\n                ', 'FMT_SMR.1'),
('0', 'FMT_SMR.2.10', 'FMT_SMR.2.1', '\n                    The TSF shall maintain the roles:\n                    ', 'FMT_SMR.2'),
('1', 'FMT_SMR.2.11', 'FMT_SMR.2.1', '.\n                ', 'FMT_SMR.2'),
('0', 'FMT_SMR.2.20', 'FMT_SMR.2.2', '\n                    The TSF shall be able to associate users with roles.\n                ', 'FMT_SMR.2'),
('0', 'FMT_SMR.2.30', 'FMT_SMR.2.3', '\n                    The TSF shall ensure that the conditions\n                    ', 'FMT_SMR.2'),
('1', 'FMT_SMR.2.31', 'FMT_SMR.2.3', '\n                    are satisfied.\n                ', 'FMT_SMR.2'),
('0', 'FMT_SMR.3.10', 'FMT_SMR.3.1', '\n                    The TSF shall require an explicit request to assume the\n                    following roles:\n                    ', 'FMT_SMR.3'),
('1', 'FMT_SMR.3.11', 'FMT_SMR.3.1', '.\n                ', 'FMT_SMR.3'),
('0', 'FPR_ANO.1.10', 'FPR_ANO.1.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_ANO.1'),
('1', 'FPR_ANO.1.11', 'FPR_ANO.1.1', '\n                    are unable to determine the real user name bound to\n                    ', 'FPR_ANO.1'),
('2', 'FPR_ANO.1.12', 'FPR_ANO.1.1', '.\n                ', 'FPR_ANO.1'),
('0', 'FPR_ANO.2.10', 'FPR_ANO.2.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_ANO.2'),
('1', 'FPR_ANO.2.11', 'FPR_ANO.2.1', '\n                    are unable to determine the real user name bound to\n                    ', 'FPR_ANO.2'),
('2', 'FPR_ANO.2.12', 'FPR_ANO.2.1', '.\n                ', 'FPR_ANO.2'),
('0', 'FPR_ANO.2.20', 'FPR_ANO.2.2', '\n                    The TSF shall provide\n                    ', 'FPR_ANO.2'),
('1', 'FPR_ANO.2.21', 'FPR_ANO.2.2', '\n                    to\n                    ', 'FPR_ANO.2');
INSERT INTO `felement` (`num`, `idr`, `id`, `text`, `idf`) VALUES
('2', 'FPR_ANO.2.22', 'FPR_ANO.2.2', '\n                    without soliciting any reference to the real user name.\n                ', 'FPR_ANO.2'),
('0', 'FPR_PSE.1.10', 'FPR_PSE.1.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_PSE.1'),
('1', 'FPR_PSE.1.11', 'FPR_PSE.1.1', '\n                    are unable to determine the real user name bound to\n                    ', 'FPR_PSE.1'),
('2', 'FPR_PSE.1.12', 'FPR_PSE.1.1', '.\n                ', 'FPR_PSE.1'),
('0', 'FPR_PSE.1.20', 'FPR_PSE.1.2', '\n                    The TSF shall be able to provide\n                    ', 'FPR_PSE.1'),
('1', 'FPR_PSE.1.21', 'FPR_PSE.1.2', '\n                    aliases of the real user name to\n                    ', 'FPR_PSE.1'),
('2', 'FPR_PSE.1.22', 'FPR_PSE.1.2', '.\n                ', 'FPR_PSE.1'),
('0', 'FPR_PSE.1.30', 'FPR_PSE.1.3', '\n                    The TSF shall\n                    ', 'FPR_PSE.1'),
('1', 'FPR_PSE.1.31', 'FPR_PSE.1.3', '\n                    and verify that it conforms to the\n                    ', 'FPR_PSE.1'),
('2', 'FPR_PSE.1.32', 'FPR_PSE.1.3', '.\n                ', 'FPR_PSE.1'),
('0', 'FPR_PSE.2.10', 'FPR_PSE.2.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_PSE.2'),
('1', 'FPR_PSE.2.11', 'FPR_PSE.2.1', '\n                    are unable to determine the real user name bound to\n                    ', 'FPR_PSE.2'),
('2', 'FPR_PSE.2.12', 'FPR_PSE.2.1', '.\n                ', 'FPR_PSE.2'),
('0', 'FPR_PSE.2.20', 'FPR_PSE.2.2', '\n                    The TSF shall be able to provide\n                    ', 'FPR_PSE.2'),
('1', 'FPR_PSE.2.21', 'FPR_PSE.2.2', '\n                    aliases of the real user name to\n                    ', 'FPR_PSE.2'),
('2', 'FPR_PSE.2.22', 'FPR_PSE.2.2', '.\n                ', 'FPR_PSE.2'),
('0', 'FPR_PSE.2.30', 'FPR_PSE.2.3', '\n                    The TSF shall\n                    ', 'FPR_PSE.2'),
('1', 'FPR_PSE.2.31', 'FPR_PSE.2.3', '\n                    and verify that it conforms to the\n                    ', 'FPR_PSE.2'),
('2', 'FPR_PSE.2.32', 'FPR_PSE.2.3', '.\n                ', 'FPR_PSE.2'),
('0', 'FPR_PSE.2.40', 'FPR_PSE.2.4', '\n                    The TSF shall provide\n                    ', 'FPR_PSE.2'),
('1', 'FPR_PSE.2.41', 'FPR_PSE.2.4', '\n                    a capability to determine the user identity based on the\n                    provided alias only under the following\n                    ', 'FPR_PSE.2'),
('2', 'FPR_PSE.2.42', 'FPR_PSE.2.4', '.\n                ', 'FPR_PSE.2'),
('0', 'FPR_PSE.3.10', 'FPR_PSE.3.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_PSE.3'),
('1', 'FPR_PSE.3.11', 'FPR_PSE.3.1', '\n                    are unable to determine the real user name bound to\n                    ', 'FPR_PSE.3'),
('2', 'FPR_PSE.3.12', 'FPR_PSE.3.1', '.\n                ', 'FPR_PSE.3'),
('0', 'FPR_PSE.3.20', 'FPR_PSE.3.2', '\n                    The TSF shall be able to provide\n                    ', 'FPR_PSE.3'),
('1', 'FPR_PSE.3.21', 'FPR_PSE.3.2', '\n                    aliases of the real user name to\n                    ', 'FPR_PSE.3'),
('2', 'FPR_PSE.3.22', 'FPR_PSE.3.2', '.\n                ', 'FPR_PSE.3'),
('0', 'FPR_PSE.3.30', 'FPR_PSE.3.3', '\n                    The TSF shall\n                    ', 'FPR_PSE.3'),
('1', 'FPR_PSE.3.31', 'FPR_PSE.3.3', '\n                    and verify that it conforms to the\n                    ', 'FPR_PSE.3'),
('2', 'FPR_PSE.3.32', 'FPR_PSE.3.3', '.\n                ', 'FPR_PSE.3'),
('0', 'FPR_PSE.3.40', 'FPR_PSE.3.4', '\n                    The TSF shall provide an alias to the real user name which\n                    shall be identical to an alias provided previously under the\n                    following\n                    ', 'FPR_PSE.3'),
('1', 'FPR_PSE.3.41', 'FPR_PSE.3.4', '\n                    otherwise the alias provided shall be unrelated to\n                    previously provided aliases.\n                ', 'FPR_PSE.3'),
('0', 'FPR_UNL.1.10', 'FPR_UNL.1.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_UNL.1'),
('1', 'FPR_UNL.1.11', 'FPR_UNL.1.1', '\n                    are unable to determine whether\n                    ', 'FPR_UNL.1'),
('2', 'FPR_UNL.1.12', 'FPR_UNL.1.1', '\n                    ', 'FPR_UNL.1'),
('3', 'FPR_UNL.1.13', 'FPR_UNL.1.1', '.\n                ', 'FPR_UNL.1'),
('0', 'FPR_UNO.1.10', 'FPR_UNO.1.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_UNO.1'),
('1', 'FPR_UNO.1.11', 'FPR_UNO.1.1', '\n                    are unable to observe the operation\n                    ', 'FPR_UNO.1'),
('2', 'FPR_UNO.1.12', 'FPR_UNO.1.1', '\n                    on\n                    ', 'FPR_UNO.1'),
('3', 'FPR_UNO.1.13', 'FPR_UNO.1.1', '\n                    by\n                    ', 'FPR_UNO.1'),
('4', 'FPR_UNO.1.14', 'FPR_UNO.1.1', '.\n                ', 'FPR_UNO.1'),
('0', 'FPR_UNO.2.10', 'FPR_UNO.2.1', '\n                    The TSF shall ensure that\n                    ', 'FPR_UNO.2'),
('1', 'FPR_UNO.2.11', 'FPR_UNO.2.1', '\n                    are unable to observe the operation\n                    ', 'FPR_UNO.2'),
('2', 'FPR_UNO.2.12', 'FPR_UNO.2.1', '\n                    on\n                    ', 'FPR_UNO.2'),
('3', 'FPR_UNO.2.13', 'FPR_UNO.2.1', '\n                    by\n                    ', 'FPR_UNO.2'),
('4', 'FPR_UNO.2.14', 'FPR_UNO.2.1', '.\n                ', 'FPR_UNO.2'),
('0', 'FPR_UNO.2.20', 'FPR_UNO.2.2', '\n                    The TSF shall allocate the\n                    ', 'FPR_UNO.2'),
('1', 'FPR_UNO.2.21', 'FPR_UNO.2.2', '\n                    among different parts of the TOE such that the following\n                    conditions hold during the lifetime of the information:\n                    ', 'FPR_UNO.2'),
('2', 'FPR_UNO.2.22', 'FPR_UNO.2.2', '.\n                ', 'FPR_UNO.2'),
('0', 'FPR_UNO.3.10', 'FPR_UNO.3.1', '\n                    The TSF shall provide\n                    ', 'FPR_UNO.3'),
('1', 'FPR_UNO.3.11', 'FPR_UNO.3.1', '\n                    to\n                    ', 'FPR_UNO.3'),
('2', 'FPR_UNO.3.12', 'FPR_UNO.3.1', '\n                    without soliciting any reference to\n                    ', 'FPR_UNO.3'),
('3', 'FPR_UNO.3.13', 'FPR_UNO.3.1', '.\n                ', 'FPR_UNO.3'),
('0', 'FPR_UNO.4.10', 'FPR_UNO.4.1', '\n                    The TSF shall provide\n                    ', 'FPR_UNO.4'),
('1', 'FPR_UNO.4.11', 'FPR_UNO.4.1', '\n                    with the capability to observe the usage of\n                    ', 'FPR_UNO.4'),
('2', 'FPR_UNO.4.12', 'FPR_UNO.4.1', '.\n                ', 'FPR_UNO.4'),
('0', 'FPT_FLS.1.10', 'FPT_FLS.1.1', '\n                    The TSF shall preserve a secure state when the following\n                    types of failures occur:\n                    ', 'FPT_FLS.1'),
('1', 'FPT_FLS.1.11', 'FPT_FLS.1.1', '.\n                ', 'FPT_FLS.1'),
('0', 'FPT_ITA.1.10', 'FPT_ITA.1.1', '\n                    The TSF shall ensure the availability of\n                    ', 'FPT_ITA.1'),
('1', 'FPT_ITA.1.11', 'FPT_ITA.1.1', '\n                    provided to another trusted IT product within\n                    ', 'FPT_ITA.1'),
('2', 'FPT_ITA.1.12', 'FPT_ITA.1.1', '\n                    given the following conditions\n                    ', 'FPT_ITA.1'),
('3', 'FPT_ITA.1.13', 'FPT_ITA.1.1', '.\n                ', 'FPT_ITA.1'),
('0', 'FPT_ITC.1.10', 'FPT_ITC.1.1', '\n                    The TSF shall protect all TSF data transmitted from the TSF\n                    to another trusted IT product from unauthorised disclosure\n                    during transmission.\n                ', 'FPT_ITC.1'),
('0', 'FPT_ITI.1.10', 'FPT_ITI.1.1', '\n                    The TSF shall provide the capability to detect modification\n                    of all TSF data during transmission between the TSF and\n                    another trusted IT product within the following metric:\n                    ', 'FPT_ITI.1'),
('1', 'FPT_ITI.1.11', 'FPT_ITI.1.1', '.\n                ', 'FPT_ITI.1'),
('0', 'FPT_ITI.1.20', 'FPT_ITI.1.2', '\n                    The TSF shall provide the capability to verify the integrity\n                    of all TSF data transmitted between the TSF and another\n                    trusted IT product and perform\n                    ', 'FPT_ITI.1'),
('1', 'FPT_ITI.1.21', 'FPT_ITI.1.2', '\n                    if modifications are detected.\n                ', 'FPT_ITI.1'),
('0', 'FPT_ITI.2.10', 'FPT_ITI.2.1', '\n                    The TSF shall provide the capability to detect modification\n                    of all TSF data during transmission between the TSF and\n                    another trusted IT product within the following metric:\n                    ', 'FPT_ITI.2'),
('1', 'FPT_ITI.2.11', 'FPT_ITI.2.1', '.\n                ', 'FPT_ITI.2'),
('0', 'FPT_ITI.2.20', 'FPT_ITI.2.2', '\n                    The TSF shall provide the capability to verify the integrity\n                    of all TSF data transmitted between the TSF and another\n                    trusted IT product and perform\n                    ', 'FPT_ITI.2'),
('1', 'FPT_ITI.2.21', 'FPT_ITI.2.2', '\n                    if modifications are detected.\n                ', 'FPT_ITI.2'),
('0', 'FPT_ITI.2.30', 'FPT_ITI.2.3', '\n                    The TSF shall provide the capability to correct\n                    ', 'FPT_ITI.2'),
('1', 'FPT_ITI.2.31', 'FPT_ITI.2.3', '\n                    of all TSF data transmitted between the TSF and another\n                    trusted IT product.\n                ', 'FPT_ITI.2'),
('0', 'FPT_ITT.1.10', 'FPT_ITT.1.1', '\n                    The TSF shall protect TSF data from\n                    ', 'FPT_ITT.1'),
('1', 'FPT_ITT.1.11', 'FPT_ITT.1.1', '\n                    when it is transmitted between separate parts of the TOE.\n                ', 'FPT_ITT.1'),
('0', 'FPT_ITT.2.10', 'FPT_ITT.2.1', '\n                    The TSF shall protect TSF data from\n                    ', 'FPT_ITT.2'),
('1', 'FPT_ITT.2.11', 'FPT_ITT.2.1', '\n                    when it is transmitted between separate parts of the TOE.\n                ', 'FPT_ITT.2'),
('0', 'FPT_ITT.2.20', 'FPT_ITT.2.2', '\n                    The TSF shall separate user data from TSF data when such\n                    data is transmitted between separate parts of the TOE.\n                ', 'FPT_ITT.2'),
('0', 'FPT_ITT.3.10', 'FPT_ITT.3.1', '\n                    The TSF shall be able to detect\n                    ', 'FPT_ITT.3'),
('1', 'FPT_ITT.3.11', 'FPT_ITT.3.1', '\n                    for TSF data transmitted between separate parts of the TOE.\n                ', 'FPT_ITT.3'),
('0', 'FPT_ITT.3.20', 'FPT_ITT.3.2', '\n                    Upon detection of a data integrity error, the TSF shall take\n                    the following actions:\n                    ', 'FPT_ITT.3'),
('1', 'FPT_ITT.3.21', 'FPT_ITT.3.2', '.\n                ', 'FPT_ITT.3'),
('0', 'FPT_PHP.1.10', 'FPT_PHP.1.1', '\n                    The TSF shall provide unambiguous detection of physical\n                    tampering that might compromise the TSF.\n                ', 'FPT_PHP.1'),
('0', 'FPT_PHP.1.20', 'FPT_PHP.1.2', '\n                    The TSF shall provide the capability to determine whether\n                    physical tampering with the TSF\'s devices or\n                    TSF\'s elements has occurred.\n                ', 'FPT_PHP.1'),
('0', 'FPT_PHP.2.10', 'FPT_PHP.2.1', '\n                    The TSF shall provide unambiguous detection of physical\n                    tampering that might compromise the TSF.\n                ', 'FPT_PHP.2'),
('0', 'FPT_PHP.2.20', 'FPT_PHP.2.2', '\n                    The TSF shall provide the capability to determine whether physical\n                    tampering with the TSF\'s devices or\n                    TSF\'s elements has occurred.\n                ', 'FPT_PHP.2'),
('0', 'FPT_PHP.2.30', 'FPT_PHP.2.3', '\n                    For\n                    ', 'FPT_PHP.2'),
('1', 'FPT_PHP.2.31', 'FPT_PHP.2.3', ', the TSF shall monitor the devices and\n                    elements and notify\n                    ', 'FPT_PHP.2'),
('2', 'FPT_PHP.2.32', 'FPT_PHP.2.3', '\n                    when physical tampering with the\n                    TSF\'s devices or TSF\'s elements has\n                    occurred.\n                ', 'FPT_PHP.2'),
('0', 'FPT_PHP.3.10', 'FPT_PHP.3.1', '\n                    The TSF shall resist\n                    ', 'FPT_PHP.3'),
('1', 'FPT_PHP.3.11', 'FPT_PHP.3.1', '\n                    to the\n                    ', 'FPT_PHP.3'),
('2', 'FPT_PHP.3.12', 'FPT_PHP.3.1', '\n                    by responding automatically such that the SFRs are always enforced.\n                ', 'FPT_PHP.3'),
('0', 'FPT_RCV.1.10', 'FPT_RCV.1.1', '\n                    After\n                    ', 'FPT_RCV.1'),
('1', 'FPT_RCV.1.11', 'FPT_RCV.1.1', ' the TSF shall enter a maintenance mode where\n                    the ability to return to a secure state is provided.\n                ', 'FPT_RCV.1'),
('0', 'FPT_RCV.2.10', 'FPT_RCV.2.1', '\n                    When automated recovery from\n                    ', 'FPT_RCV.2'),
('1', 'FPT_RCV.2.11', 'FPT_RCV.2.1', ' is not possible, the TSF shall enter a\n                    maintenance mode where the ability to return to a secure state\n                    is provided.\n                ', 'FPT_RCV.2'),
('0', 'FPT_RCV.2.20', 'FPT_RCV.2.2', '\n                    For\n                    ', 'FPT_RCV.2'),
('1', 'FPT_RCV.2.21', 'FPT_RCV.2.2', ', the TSF shall ensure the return of the TOE\n                    to a secure state using automated procedures.\n                ', 'FPT_RCV.2'),
('0', 'FPT_RCV.3.10', 'FPT_RCV.3.1', '\n                    When automated recovery from\n                    ', 'FPT_RCV.3'),
('1', 'FPT_RCV.3.11', 'FPT_RCV.3.1', '\n                    is not possible, the TSF shall enter a maintenance mode where\n                    the ability to return to a secure state is provided.\n                ', 'FPT_RCV.3'),
('0', 'FPT_RCV.3.20', 'FPT_RCV.3.2', '\n                    For\n                    ', 'FPT_RCV.3'),
('1', 'FPT_RCV.3.21', 'FPT_RCV.3.2', ', the TSF shall ensure the return of the TOE\n                    to a secure state using automated procedures.\n                ', 'FPT_RCV.3'),
('0', 'FPT_RCV.3.30', 'FPT_RCV.3.3', '\n                    The functions provided by the TSF to recover from failure or\n                    service discontinuity shall ensure that the secure initial\n                    state is restored without exceeding\n                    ', 'FPT_RCV.3'),
('1', 'FPT_RCV.3.31', 'FPT_RCV.3.3', '\n                    for loss of TSF data or objects under the control of the TSF.\n                ', 'FPT_RCV.3'),
('0', 'FPT_RCV.3.40', 'FPT_RCV.3.4', '\n                    The TSF shall provide the capability to determine the\n                    objects that were or were not capable of being recovered.\n                ', 'FPT_RCV.3'),
('0', 'FPT_RCV.4.10', 'FPT_RCV.4.1', '\n                    The TSF shall ensure that\n                    ', 'FPT_RCV.4'),
('1', 'FPT_RCV.4.11', 'FPT_RCV.4.1', '\n                    have the property that the function either completes successfully,\n                    or for the indicated failure scenarios, recovers to a\n                    consistent and secure state.\n                ', 'FPT_RCV.4'),
('0', 'FPT_RPL.1.10', 'FPT_RPL.1.1', '\n                    The TSF shall detect replay for the following entities:\n                    ', 'FPT_RPL.1'),
('1', 'FPT_RPL.1.11', 'FPT_RPL.1.1', '.\n                ', 'FPT_RPL.1'),
('0', 'FPT_RPL.1.20', 'FPT_RPL.1.2', '\n                    The TSF shall perform\n                    ', 'FPT_RPL.1'),
('1', 'FPT_RPL.1.21', 'FPT_RPL.1.2', '\n                    when replay is detected.\n                ', 'FPT_RPL.1'),
('0', 'FPT_SSP.1.10', 'FPT_SSP.1.1', '\n                    The TSF shall acknowledge, when requested by another part of\n                    the TSF, the receipt of an unmodified TSF data transmission.\n                ', 'FPT_SSP.1'),
('0', 'FPT_SSP.2.10', 'FPT_SSP.2.1', '\n                    The TSF shall acknowledge, when requested by another part of\n                    the TSF, the receipt of an unmodified TSF data\n                    transmission.\n                ', 'FPT_SSP.2'),
('0', 'FPT_SSP.2.20', 'FPT_SSP.2.2', '\n                    The TSF shall ensure that the relevant parts of the TSF know\n                    the correct status of transmitted data among its different\n                    parts, using acknowledgements.\n                ', 'FPT_SSP.2'),
('0', 'FPT_STM.1.10', 'FPT_STM.1.1', '\n                    The TSF shall be able to provide reliable time stamps.\n                ', 'FPT_STM.1'),
('0', 'FPT_TDC.1.10', 'FPT_TDC.1.1', '\n                    The TSF shall provide the capability to consistently\n                    interpret\n                    ', 'FPT_TDC.1'),
('1', 'FPT_TDC.1.11', 'FPT_TDC.1.1', '\n                    when shared between the TSF and another trusted IT product.\n                ', 'FPT_TDC.1'),
('0', 'FPT_TDC.1.20', 'FPT_TDC.1.2', '\n                    The TSF shall use\n                    ', 'FPT_TDC.1'),
('1', 'FPT_TDC.1.21', 'FPT_TDC.1.2', '\n                    when interpreting the TSF data from another trusted IT\n                    product.\n                ', 'FPT_TDC.1'),
('0', 'FPT_TEE.1.10', 'FPT_TEE.1.1', '\n        The TSF shall run a suite of tests\n        ', 'FPT_TEE.1'),
('1', 'FPT_TEE.1.11', 'FPT_TEE.1.1', '\n        to check the fulfillment of\n        ', 'FPT_TEE.1'),
('2', 'FPT_TEE.1.12', 'FPT_TEE.1.1', '\n        .\n    ', 'FPT_TEE.1'),
('0', 'FPT_TEE.1.20', 'FPT_TEE.1.2', '\n        If the test fails, the TSF shall\n        ', 'FPT_TEE.1'),
('1', 'FPT_TEE.1.21', 'FPT_TEE.1.2', '\n        .\n    ', 'FPT_TEE.1'),
('0', 'FPT_TRC.1.10', 'FPT_TRC.1.1', '\n                    The TSF shall ensure that TSF data is consistent when\n                    replicated between parts of the TOE.\n                ', 'FPT_TRC.1'),
('0', 'FPT_TRC.1.20', 'FPT_TRC.1.2', '\n                    When parts of the TOE containing replicated TSF data are\n                    disconnected, the TSF shall ensure the consistency of the\n                    replicated TSF data upon reconnection before processing any\n                    requests for\n                    ', 'FPT_TRC.1'),
('1', 'FPT_TRC.1.21', 'FPT_TRC.1.2', '.\n                ', 'FPT_TRC.1'),
('0', 'FPT_TST.1.10', 'FPT_TST.1.1', '\n                    The TSF shall run a suite of self tests\n                    ', 'FPT_TST.1'),
('1', 'FPT_TST.1.11', 'FPT_TST.1.1', '\n                    to demonstrate the correct operation of\n                    ', 'FPT_TST.1'),
('2', 'FPT_TST.1.12', 'FPT_TST.1.1', '.\n                ', 'FPT_TST.1'),
('0', 'FPT_TST.1.20', 'FPT_TST.1.2', '\n                    The TSF shall provide authorised users with the capability to\n                    verify the integrity of\n                    ', 'FPT_TST.1'),
('1', 'FPT_TST.1.21', 'FPT_TST.1.2', '.\n                ', 'FPT_TST.1'),
('0', 'FPT_TST.1.30', 'FPT_TST.1.3', '\n                    The TSF shall provide authorised users with the capability to\n                    verify the integrity of\n                    ', 'FPT_TST.1'),
('1', 'FPT_TST.1.31', 'FPT_TST.1.3', '.\n                ', 'FPT_TST.1'),
('0', 'FRU_FLT.1.10', 'FRU_FLT.1.1', '\n                    The TSF shall ensure the operation of\n                    ', 'FRU_FLT.1'),
('1', 'FRU_FLT.1.11', 'FRU_FLT.1.1', '\n                    when the following failures occur:\n                    ', 'FRU_FLT.1'),
('2', 'FRU_FLT.1.12', 'FRU_FLT.1.1', '.\n                ', 'FRU_FLT.1'),
('0', 'FRU_FLT.2.10', 'FRU_FLT.2.1', '\n                    The TSF shall ensure the operation of all the\n                    TOE\'s capabilities when the following failures\n                    occur:\n                    ', 'FRU_FLT.2'),
('1', 'FRU_FLT.2.11', 'FRU_FLT.2.1', '.\n                ', 'FRU_FLT.2'),
('0', 'FRU_PRS.1.10', 'FRU_PRS.1.1', '\n                    The TSF shall assign a priority to each subject in the TSF.\n                ', 'FRU_PRS.1'),
('0', 'FRU_PRS.1.20', 'FRU_PRS.1.2', '\n                    The TSF shall ensure that each access to\n                    ', 'FRU_PRS.1'),
('1', 'FRU_PRS.1.21', 'FRU_PRS.1.2', '\n                    shall be mediated on the basis of the subjects assigned\n                    priority.\n                ', 'FRU_PRS.1'),
('0', 'FRU_PRS.2.10', 'FRU_PRS.2.1', '\n                    The TSF shall assign a priority to each subject in the TSF.\n                ', 'FRU_PRS.2'),
('0', 'FRU_PRS.2.20', 'FRU_PRS.2.2', '\n                    The TSF shall ensure that each access to all shareable\n                    resources shall be mediated on the basis of the subjects\n                    assigned priority.\n                ', 'FRU_PRS.2'),
('0', 'FRU_RSA.1.10', 'FRU_RSA.1.1', '\n                    The TSF shall enforce maximum quotas of the following\n                    resources:\n                    ', 'FRU_RSA.1'),
('1', 'FRU_RSA.1.11', 'FRU_RSA.1.1', '\n                    that\n                    ', 'FRU_RSA.1'),
('2', 'FRU_RSA.1.12', 'FRU_RSA.1.1', '\n                    can use\n                    ', 'FRU_RSA.1'),
('3', 'FRU_RSA.1.13', 'FRU_RSA.1.1', '.\n                ', 'FRU_RSA.1'),
('0', 'FRU_RSA.2.10', 'FRU_RSA.2.1', '\n                    The TSF shall enforce maximum quotas of the following\n                    resources\n                    ', 'FRU_RSA.2'),
('1', 'FRU_RSA.2.11', 'FRU_RSA.2.1', '\n                    that\n                    ', 'FRU_RSA.2'),
('2', 'FRU_RSA.2.12', 'FRU_RSA.2.1', '\n                    can use\n                    ', 'FRU_RSA.2'),
('3', 'FRU_RSA.2.13', 'FRU_RSA.2.1', '.\n                ', 'FRU_RSA.2'),
('0', 'FRU_RSA.2.20', 'FRU_RSA.2.2', '\n                    The TSF shall ensure the provision of minimum quantity of\n                    each\n                    ', 'FRU_RSA.2'),
('1', 'FRU_RSA.2.21', 'FRU_RSA.2.2', '\n                    that is available for\n                    ', 'FRU_RSA.2'),
('2', 'FRU_RSA.2.22', 'FRU_RSA.2.2', '\n                    to use\n                    ', 'FRU_RSA.2'),
('3', 'FRU_RSA.2.23', 'FRU_RSA.2.2', '.\n                ', 'FRU_RSA.2'),
('0', 'FTA_LSA.1.10', 'FTA_LSA.1.1', '\n                    The TSF shall restrict the scope of the session security\n                    attributes\n                    ', 'FTA_LSA.1'),
('1', 'FTA_LSA.1.11', 'FTA_LSA.1.1', ', based on\n                    ', 'FTA_LSA.1'),
('2', 'FTA_LSA.1.12', 'FTA_LSA.1.1', '.\n                ', 'FTA_LSA.1'),
('0', 'FTA_MCS.1.10', 'FTA_MCS.1.1', '\n                    The TSF shall restrict the maximum number of concurrent\n                    sessions that belong to the same user.\n                ', 'FTA_MCS.1'),
('0', 'FTA_MCS.1.20', 'FTA_MCS.1.2', '\n                    The TSF shall enforce, by default, a limit of\n                    ', 'FTA_MCS.1'),
('1', 'FTA_MCS.1.21', 'FTA_MCS.1.2', '\n                    sessions per user.\n                ', 'FTA_MCS.1'),
('0', 'FTA_MCS.2.10', 'FTA_MCS.2.1', '\n                    The TSF shall restrict the maximum number of concurrent\n                    sessions that belong to the same user according to the rules\n                    ', 'FTA_MCS.2'),
('1', 'FTA_MCS.2.11', 'FTA_MCS.2.1', '.\n                ', 'FTA_MCS.2'),
('0', 'FTA_MCS.2.20', 'FTA_MCS.2.2', '\n                    The TSF shall enforce, by default, a limit of\n                    ', 'FTA_MCS.2'),
('1', 'FTA_MCS.2.21', 'FTA_MCS.2.2', '\n                    sessions per user.\n                ', 'FTA_MCS.2'),
('0', 'FTA_SSL.1.10', 'FTA_SSL.1.1', '\n                    The TSF shall lock an interactive session after\n                    ', 'FTA_SSL.1'),
('1', 'FTA_SSL.1.11', 'FTA_SSL.1.1', '\n                    by:\n                    ', 'FTA_SSL.1'),
('2', 'FTA_SSL.1.12', 'FTA_SSL.1.1', '\n                ', 'FTA_SSL.1'),
('0', 'FTA_SSL.1.20', 'FTA_SSL.1.2', '\n                    The TSF shall require the following events to occur prior to\n                    unlocking the session:\n                    ', 'FTA_SSL.1'),
('1', 'FTA_SSL.1.21', 'FTA_SSL.1.2', '.\n                ', 'FTA_SSL.1'),
('0', 'FTA_SSL.2.10', 'FTA_SSL.2.1', '\n                    The TSF shall allow user-initiated locking of the\n                    user\'s own interactive session, by:\n                    ', 'FTA_SSL.2'),
('1', 'FTA_SSL.2.11', 'FTA_SSL.2.1', '\n                ', 'FTA_SSL.2'),
('0', 'FTA_SSL.2.20', 'FTA_SSL.2.2', '\n                    The TSF shall require the following events to occur prior to\n                    unlocking the session:\n                    ', 'FTA_SSL.2'),
('1', 'FTA_SSL.2.21', 'FTA_SSL.2.2', '.\n                ', 'FTA_SSL.2'),
('0', 'FTA_SSL.3.10', 'FTA_SSL.3.1', '\n                    The TSF shall terminate an interactive session after a\n                    ', 'FTA_SSL.3'),
('1', 'FTA_SSL.3.11', 'FTA_SSL.3.1', '.\n                ', 'FTA_SSL.3'),
('0', 'FTA_SSL.4.10', 'FTA_SSL.4.1', '\n            The TSF shall allow user-initiated termination of the user\'s own\n            interactive session.\n        ', 'FTA_SSL.4'),
('0', 'FTA_TAB.1.10', 'FTA_TAB.1.1', '\n                    Before establishing a user session, the TSF shall display an\n                    advisory warning message regarding unauthorised use of the\n                    TOE.\n                ', 'FTA_TAB.1'),
('0', 'FTA_TAH.1.10', 'FTA_TAH.1.1', '\n                    Upon successful session establishment, the TSF shall display\n                    the\n                    ', 'FTA_TAH.1'),
('1', 'FTA_TAH.1.11', 'FTA_TAH.1.1', '\n                    of the last successful session establishment to the user.\n                ', 'FTA_TAH.1'),
('0', 'FTA_TAH.1.20', 'FTA_TAH.1.2', '\n                    Upon successful session establishment, the TSF shall display\n                    the\n                    ', 'FTA_TAH.1'),
('1', 'FTA_TAH.1.21', 'FTA_TAH.1.2', '\n                    of the last unsuccessful attempt to session establishment\n                    and the number of unsuccessful attempts since the last\n                    successful session establishment.\n                ', 'FTA_TAH.1'),
('0', 'FTA_TAH.1.30', 'FTA_TAH.1.3', '\n                    The TSF shall not erase the access history information from\n                    the user interface without giving the user an opportunity to\n                    review the information.\n                ', 'FTA_TAH.1'),
('0', 'FTA_TSE.1.10', 'FTA_TSE.1.1', '\n                    The TSF shall be able to deny session establishment based on\n                    ', 'FTA_TSE.1'),
('1', 'FTA_TSE.1.11', 'FTA_TSE.1.1', '.\n                ', 'FTA_TSE.1'),
('0', 'FTP_ITC.1.10', 'FTP_ITC.1.1', '\n                    The TSF shall provide a communication channel between itself\n                    and another trusted IT product that is logically distinct\n                    from other communication channels and provides assured\n                    identification of its end points and protection of the\n                    channel data from modification or disclosure.\n                ', 'FTP_ITC.1'),
('0', 'FTP_ITC.1.20', 'FTP_ITC.1.2', '\n                    The TSF shall permit\n                    ', 'FTP_ITC.1'),
('1', 'FTP_ITC.1.21', 'FTP_ITC.1.2', '\n                    to initiate communication via the trusted channel.\n                ', 'FTP_ITC.1'),
('0', 'FTP_ITC.1.30', 'FTP_ITC.1.3', '\n                    The TSF shall initiate communication via the trusted channel\n                    for\n                    ', 'FTP_ITC.1'),
('1', 'FTP_ITC.1.31', 'FTP_ITC.1.3', '.\n                ', 'FTP_ITC.1'),
('0', 'FTP_TRP.1.10', 'FTP_TRP.1.1', '\n                    The TSF shall provide a communication path between itself and\n                    ', 'FTP_TRP.1'),
('1', 'FTP_TRP.1.11', 'FTP_TRP.1.1', '\n                    users that is logically distinct from other communication\n                    paths and provides assured identification of its end points\n                    and protection of the communicated data from\n                    ', 'FTP_TRP.1'),
('2', 'FTP_TRP.1.12', 'FTP_TRP.1.1', '.\n                ', 'FTP_TRP.1'),
('0', 'FTP_TRP.1.20', 'FTP_TRP.1.2', '\n                    The TSF shall permit\n                    ', 'FTP_TRP.1'),
('1', 'FTP_TRP.1.21', 'FTP_TRP.1.2', '\n                    to initiate communication via the trusted path.\n                ', 'FTP_TRP.1'),
('0', 'FTP_TRP.1.30', 'FTP_TRP.1.3', '\n                    The TSF shall require the use of the trusted path for\n                    ', 'FTP_TRP.1'),
('1', 'FTP_TRP.1.31', 'FTP_TRP.1.3', '.\n                ', 'FTP_TRP.1');

-- --------------------------------------------------------

--
-- Table structure for table `ffamily`
--

CREATE TABLE `ffamily` (
  `id` varchar(10) NOT NULL,
  `name` varchar(100) DEFAULT NULL,
  `idf` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ffamily`
--

INSERT INTO `ffamily` (`id`, `name`, `idf`) VALUES
('FAU_ARP', 'Security audit automatic response', 'FAU'),
('FAU_GEN', 'Security audit data generation', 'FAU'),
('FAU_SAA', 'Security audit analysis', 'FAU'),
('FAU_SAR', 'Security audit review', 'FAU'),
('FAU_SEL', 'Security audit event selection', 'FAU'),
('FAU_STG', 'Security audit event storage', 'FAU'),
('FCO_NRO', 'Non-repudiation of origin', 'FCO'),
('FCO_NRR', 'Non-repudiation of receipt', 'FCO'),
('FCS_CKM', 'Cryptographic key management', 'FCS'),
('FCS_COP', 'Cryptographic operation', 'FCS'),
('FDP_ACC', 'Access control policy', 'FDP'),
('FDP_ACF', 'Access control functions', 'FDP'),
('FDP_DAU', 'Data authentication', 'FDP'),
('FDP_ETC', 'Export from the TOE', 'FDP'),
('FDP_IFC', 'Information flow control policy', 'FDP'),
('FDP_IFF', 'Information flow control functions', 'FDP'),
('FDP_ITC', 'Import from outside of the TOE', 'FDP'),
('FDP_ITT', 'Internal TOE transfer', 'FDP'),
('FDP_RIP', 'Residual information protection', 'FDP'),
('FDP_ROL', 'Rollback', 'FDP'),
('FDP_SDI', 'Stored data integrity', 'FDP'),
('FDP_UCT', 'Inter-TSF user data confidentiality transfer       protection', 'FDP'),
('FDP_UIT', 'Inter-TSF user data integrity transfer protection', 'FDP'),
('FIA_AFL', 'Authentication failures', 'FIA'),
('FIA_ATD', 'User attribute definition', 'FIA'),
('FIA_SOS', 'Specification of secrets', 'FIA'),
('FIA_UAU', 'User authentication', 'FIA'),
('FIA_UID', 'User identification', 'FIA'),
('FIA_USB', 'User-subject binding', 'FIA'),
('FMT_MOF', 'Management of functions in TSF', 'FMT'),
('FMT_MSA', 'Management of security attributes', 'FMT'),
('FMT_MTD', 'Management of TSF data', 'FMT'),
('FMT_REV', 'Revocation', 'FMT'),
('FMT_SAE', 'Security attribute expiration', 'FMT'),
('FMT_SMF', 'Specification of Management Functions', 'FMT'),
('FMT_SMR', 'Security management roles', 'FMT'),
('FPR_ANO', 'Anonymity', 'FPR'),
('FPR_PSE', 'Pseudonymity', 'FPR'),
('FPR_UNL', 'Unlinkability', 'FPR'),
('FPR_UNO', 'Unobservability', 'FPR'),
('FPT_FLS', 'Fail secure', 'FPT'),
('FPT_ITA', 'Availability of exported TSF data', 'FPT'),
('FPT_ITC', 'Confidentiality of exported TSF data', 'FPT'),
('FPT_ITI', 'Integrity of exported TSF data', 'FPT'),
('FPT_ITT', 'Internal TOE TSF data transfer', 'FPT'),
('FPT_PHP', 'TSF physical protection', 'FPT'),
('FPT_RCV', 'Trusted recovery', 'FPT'),
('FPT_RPL', 'Replay detection', 'FPT'),
('FPT_SSP', 'State synchrony protocol', 'FPT'),
('FPT_STM', 'Time stamps', 'FPT'),
('FPT_TDC', 'Inter-TSF TSF data consistency', 'FPT'),
('FPT_TEE', 'Testing of external entities', 'FPT'),
('FPT_TRC', 'Internal TOE TSF data replication consistency', 'FPT'),
('FPT_TST', 'TSF self test', 'FPT'),
('FRU_FLT', 'Fault tolerance', 'FRU'),
('FRU_PRS', 'Priority of service', 'FRU'),
('FRU_RSA', 'Resource allocation', 'FRU'),
('FTA_LSA', 'Limitation on scope of selectable attributes', 'FTA'),
('FTA_MCS', 'Limitation on multiple concurrent sessions', 'FTA'),
('FTA_SSL', 'Session locking and termination', 'FTA'),
('FTA_TAB', 'TOE access banners', 'FTA'),
('FTA_TAH', 'TOE access history', 'FTA'),
('FTA_TSE', 'TOE session establishment', 'FTA'),
('FTP_ITC', 'Inter-TSF trusted channel', 'FTP'),
('FTP_TRP', 'Trusted path', 'FTP');

-- --------------------------------------------------------

--
-- Table structure for table `ffbehaviour`
--

CREATE TABLE `ffbehaviour` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(12) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ffbehaviour`
--

INSERT INTO `ffbehaviour` (`type`, `id`, `para`, `idf`) VALUES
('normal', '0', 'Non-repudiation of receipt ensures that the recipient of\n                    information cannot successfully deny receiving the\n                    information. This family requires that the TSF provide a\n                    method to ensure that a subject that transmits information\n                    during a data exchange is provided with evidence of receipt\n                    of the information. This evidence can then be verified by\n                    either this subject or other subjects.', 'FCO_NRR'),
('normal', '1', 'This component is not intended to be applied to human users.', 'FPT_TEE'),
('normal', '2', 'External entities may include applications running on the TOE, hardware or\n        software running ``underneath\'\' the TOE (platforms, operating systems etc.)\n        or applications/boxes connected to the TOE (intrusion detection systems,\n        firewalls, login servers, time servers etc.).', 'FPT_TEE'),
('normal', 'PGFID-10829', 'This family ensures that a user may use a resource or\n                    service without disclosing the user\'s identity. The\n                    requirements for Anonymity provide protection of the user\n                    identity. Anonymity is not intended to protect the subject\n                    identity.', 'FPR_ANO'),
('normal', 'PGFID-10891', 'This family ensures that a user may use a resource or\n                    service without disclosing its user identity, but can still\n                    be accountable for that use.', 'FPR_PSE'),
('normal', 'PGFID-10989', 'This family ensures that a user may make multiple uses of\n                    resources or services without others being able to link\n                    these uses together.', 'FPR_UNL'),
('normal', 'PGFID-11051', 'This family contains requirements for defining values for\n                    some number of unsuccessful authentication attempts and TSF\n                    actions in cases of authentication attempt\n                    failures. Parameters include, but are not limited to, the\n                    number of failed authentication attempts and time\n                    thresholds.', 'FIA_AFL'),
('normal', 'PGFID-11099', 'All authorised users may have a set of security attributes,\n                    other than the user\'s identity, that is used to\n                    enforce the SFRs. This family defines the requirements for\n                    associating user security attributes with users as needed to\n                    support the TSF in making security decisions.', 'FIA_ATD'),
('normal', 'PGFID-11110', 'This family allows authorised users (roles) control over the\n                    management of TSF data. Examples of TSF data include audit\n                    information, clock and other TSF\n                    configuration parameters.', 'FMT_MTD'),
('normal', 'PGFID-11153', 'This family defines requirements for mechanisms that enforce\n                    defined quality metrics on provided secrets and generate\n                    secrets to satisfy the defined metric.', 'FIA_SOS'),
('normal', 'PGFID-11240', 'This family defines the types of user authentication\n                    mechanisms supported by the TSF. This family also defines\n                    the required attributes on which the user authentication\n                    mechanisms must be based.', 'FIA_UAU'),
('normal', 'PGFID-11281', 'This family is intended to control the assignment of\n                    different roles to users. The capabilities of these roles\n                    with respect to security management are described in the\n                    other families in this class.', 'FMT_SMR'),
('normal', 'PGFID-11459', 'This family defines the conditions under which users shall\n                    be required to identify themselves before performing any\n                    other actions that are to be mediated by the TSF and which\n                    require user identification.', 'FIA_UID'),
('normal', 'PGFID-114769', 'This family defines the response to be taken in case of\n                    detected events indicative of a potential security\n                    violation.', 'FAU_ARP'),
('normal', 'PGFID-114823', 'This family defines requirements for recording the\n                    occurrence of security relevant events that take place under\n                    TSF control. This family identifies the level of auditing,\n                    enumerates the types of events that shall be auditable by\n                    the TSF, and identifies the minimum set of audit-related\n                    information that should be provided within various audit\n                    record types.', 'FAU_GEN'),
('normal', 'PGFID-114906', 'This family defines requirements for automated means that\n                    analyse system activity and audit data looking for possible or\n                    real security violations. This analysis may work in support of\n                    intrusion detection, or automatic response to a potential\n                    security violation.', 'FAU_SAA'),
('normal', 'PGFID-114907', 'The actions to be taken based on the detection can be\n                    specified using the, FAU_ARP, family as\n                    desired.', 'FAU_SAA'),
('normal', 'PGFID-11502', 'This family addresses revocation of security attributes for\n                    a variety of entities within a TOE.', 'FMT_REV'),
('normal', 'PGFID-115066', 'This family defines the requirements for audit tools that\n                    should be available to authorised users to assist in the\n                    review of audit data.', 'FAU_SAR'),
('normal', 'PGFID-115188', 'This family defines requirements to select the set of events to\n                    be audited during TOE operation from the set of all auditable\n                    events.', 'FAU_SEL'),
('normal', 'PGFID-115245', 'This family defines the requirements for the TSF to be able\n                    to create and maintain a secure audit trail. Stored audit\n                    records refers to those records within the audit trail, and\n                    not the audit records that have been retrieved (to temporary\n                    storage) through selection.', 'FAU_STG'),
('normal', 'PGFID-11538', 'An authenticated user, in order to use the TOE, typically\n                    activates a subject. The user\'s security\n                    attributes are associated (totally or partially) with this\n                    subject. This family defines requirements to create and\n                    maintain the association of the user\'s security\n                    attributes to a subject acting on the user\'s\n                    behalf.', 'FIA_USB'),
('normal', 'PGFID-11565', 'This family addresses the capability to enforce time limits\n                    for the validity of security attributes.', 'FMT_SAE'),
('normal', 'PGFID-12075', 'This family allows authorised users control over the\n                    management of functions in the TSF. Examples of functions in\n                    the TSF include the audit functions and the multiple\n                    authentication functions.', 'FMT_MOF'),
('normal', 'PGFID-12484', 'This family allows authorised users control over the\n                    management of security attributes. This management might\n                    include capabilities for viewing and modifying of security\n                    attributes.', 'FMT_MSA'),
('normal', 'PGFID-21207', 'This family defines requirements for the TSF to perform tests\n        on one or more external entities.', 'FPT_TEE'),
('normal', 'PGFID-21274', 'The requirements of this family ensure that the TOE will always enforce\n                    its SFRs in the event of identified categories of\n                    failures in the TSF.', 'FPT_FLS'),
('normal', 'PGFID-21313', 'This family defines the rules for the prevention of loss of\n                    availability of TSF data moving between the TSF and another\n                    trusted IT product. This data could, for example, be TSF\n                    critical data such as passwords, keys, audit data, or TSF\n                    executable code.', 'FPT_ITA'),
('normal', 'PGFID-21346', 'This family defines the rules for the protection from\n                    unauthorised disclosure of TSF data during transmission\n                    between the TSF and another trusted IT product. This data\n                    could, for example, be TSF critical data such as passwords,\n                    keys, audit data, or TSF executable code.', 'FPT_ITC'),
('normal', 'PGFID-21510', 'TSF physical protection components refer to restrictions on\n                    unauthorised physical access to the TSF, and to the\n                    deterrence of, and resistance to, unauthorised physical\n                    modification, or substitution of the TSF.', 'FPT_PHP'),
('normal', 'PGFID-21511', 'The requirements of components in this family ensure that\n                    the TSF is protected from physical tampering and\n                    interference. Satisfying the requirements of these\n                    components results in the TSF being packaged and used in\n                    such a manner that physical tampering is detectable, or\n                    resistance to physical tampering is enforced. Without these\n                    components, the protection functions of a TSF lose their\n                    effectiveness in environments where physical damage cannot\n                    be prevented. This family also provides requirements\n                    regarding how the TSF shall respond to physical tampering\n                    attempts.', 'FPT_PHP'),
('normal', 'PGFID-21630', 'The requirements of this family ensure that the TSF can\n                    determine that the TOE is started up without protection\n                    compromise and can recover without protection compromise\n                    after discontinuity of operations. This family is important\n                    because the start-up state of the TSF determines the\n                    protection of subsequent states.', 'FPT_RCV'),
('normal', 'PGFID-21840', 'This family addresses detection of replay for various types\n                    of entities (e.g. messages, service requests, service\n                    responses) and subsequent actions to correct. In the case\n                    where replay may be detected, this effectively prevents it.', 'FPT_RPL'),
('normal', 'PGFID-22051', 'Distributed TOEs may give rise to greater complexity than\n                    monolithic TOEs through the potential for differences in\n                    state between parts of the TOE, and through delays in\n                    communication. In most cases synchronisation of state\n                    between distributed functions involves an exchange protocol,\n                    not a simple action. When malice exists in the distributed\n                    environment of these protocols, more complex defensive\n                    protocols are required.', 'FPT_SSP'),
('normal', 'PGFID-22055', ', FPT_SSP, establishes the requirement for certain\n                    critical functions of the TSF to use this trusted\n                    protocol., FPT_SSP, ensures that two distributed\n                    parts of the TOE (e.g. hosts) have synchronised their states\n                    after a security-relevant action.', 'FPT_SSP'),
('normal', 'PGFID-22122', 'This family addresses requirements for a reliable time stamp\n                    function within a TOE.', 'FPT_STM'),
('normal', 'PGFID-22153', 'In a distributed environment, a TOE may\n                    need to exchange TSF data (e.g. the SFP-attributes\n                    associated with data, audit information, identification\n                    information) with another trusted IT product, This family\n                    defines the requirements for sharing and consistent\n                    interpretation of these attributes between the TSF of the\n                    TOE and a different trusted IT product.', 'FPT_TDC'),
('normal', 'PGFID-22193', 'The requirements of this family are needed to ensure the\n                    consistency of TSF data when such data is replicated\n                    internal to the TOE. Such data may become inconsistent if\n                    the internal channel between parts of the TOE becomes\n                    inoperative. If the TOE is internally structured as a\n                    network and parts of the TOE network connections are broken,\n                    this may occur when parts become disabled.', 'FPT_TRC'),
('normal', 'PGFID-26993', 'This family defines the rules for the protection, from\n                    unauthorised modification, of TSF data during transmission\n                    between the TSF and another trusted IT product. This data\n                    could, for example, be TSF critical data such as passwords,\n                    keys, audit data, or TSF executable code.', 'FPT_ITI'),
('normal', 'PGFID-26997', 'This family provides requirements that address protection of\n                    TSF data when it is transferred between separate parts of a\n                    TOE across an internal channel.', 'FPT_ITT'),
('normal', 'PGFID-27117', 'The family defines the requirements for the self-testing of\n                    the TSF with respect to some expected correct\n                    operation. Examples are interfaces to enforcement functions,\n                    and sample arithmetical operations on critical parts of the\n                    TOE. These tests can be carried out at start-up,\n                    periodically, at the request of the authorised user, or when\n                    other conditions are met. The actions to be taken by the TOE\n                    as the result of self testing are defined in other families.', 'FPT_TST'),
('normal', 'PGFID-297', 'This family defines requirements for the creation of a\n                    trusted channel between the TSF and other trusted IT\n                    products for the performance of security critical\n                    operations. This family should be included whenever there\n                    are requirements for the secure communication of user or TSF\n                    data between the TOE and other trusted IT products.', 'FTP_ITC'),
('normal', 'PGFID-32542', 'This family identifies the access control SFPs (by name) and\n                    defines the scope of control of the policies that form the\n                    identified access control portion of the SFRs related to the\n                    SFP. This scope of control is characterised by three sets: the\n                    subjects under control of the policy, the objects under control\n                    of the policy, and the operations among controlled subjects and\n                    controlled objects that are covered by the policy. The criteria\n                    allows multiple policies to exist, each having a unique name.\n                    This is accomplished by iterating components from this family\n                    once for each named access control policy.  The rules that\n                    define the functionality of an access control SFP will be\n                    defined by other families such as, FDP_ACF, and, FDP_ETC, . The names\n                    of the access control SFPs identified here in, FDP_ACC, are meant to be used throughout the remainder of\n                    the functional components that have an operation that calls for\n                    an assignment or selection of an ``access control SFP.\'\'', 'FDP_ACC'),
('normal', 'PGFID-33042', 'This family defines functions for TSF-mediated exporting of user data from\n                    the TOE such that its security attributes and protection\n                    either can be explicitly preserved or can be ignored once it\n                    has been exported. It is concerned with limitations on\n                    export and with the association of security attributes with\n                    the exported user data.', 'FDP_ETC'),
('normal', 'PGFID-33429', 'This family defines the mechanisms for TSF-mediated importing of user\n                    data into the TOE such that it has appropriate security\n                    attributes and is appropriately protected. It is concerned\n                    with limitations on importation, determination of desired\n                    security attributes, and interpretation of security\n                    attributes associated with the user data.', 'FDP_ITC'),
('normal', 'PGFID-33525', 'This family provides requirements that address protection of\n                    user data when it is transferred between separated parts of a TOE\n                    across an internal channel. This may be contrasted with the, FDP_UCT, and, FDP_UIT, families,\n                    which provide protection for user data when it is\n                    transferred between distinct TSFs across an external\n                    channel, and, FDP_ETC, and, FDP_ITC, ,\n                    which address TSF-mediated transfer of data to or from outside the\n                    TOE.', 'FDP_ITT'),
('normal', 'PGFID-33728', 'Cryptographic keys must be managed throughout their life\n                    cycle. This family is intended to support that lifecycle and\n                    consequently defines requirements for the following\n                    activities: cryptographic key generation, cryptographic key\n                    distribution, cryptographic key access and cryptographic key\n                    destruction. This family should be included whenever there\n                    are functional requirements for the management of\n                    cryptographic keys.', 'FCS_CKM'),
('normal', 'PGFID-33747', 'The rollback operation involves undoing the last operation\n                    or a series of operations, bounded by some limit, such as a\n                    period of time, and return to a previous known\n                    state. Rollback provides the ability to undo the effects of\n                    an operation or series of operations to preserve the\n                    integrity of the user data.', 'FDP_ROL'),
('normal', 'PGFID-34005', 'In order for a cryptographic operation to function\n                    correctly, the operation must be performed in accordance\n                    with a specified algorithm and with a cryptographic key of a\n                    specified size. This family should be included whenever\n                    there are requirements for cryptographic operations to be\n                    performed.', 'FCS_COP'),
('normal', 'PGFID-34006', 'Typical cryptographic operations include data encryption\n                    and/or decryption, digital signature generation and/or\n                    verification, cryptographic checksum generation for\n                    integrity and/or verification of checksum, secure hash\n                    (message digest), cryptographic key encryption and/or\n                    decryption, and cryptographic key agreement.', 'FCS_COP'),
('normal', 'PGFID-34033', 'This family provides requirements that address protection of\n                    user data while it is stored within containers controlled by the TSF. Integrity\n                    errors may affect user data stored in memory, or in a\n                    storage device. This family differs from, FDP_ITT, which protects the user data from integrity\n                    errors while being transferred within the TOE.', 'FDP_SDI'),
('normal', 'PGFID-34097', 'This family defines the requirements for ensuring the\n                    confidentiality of user data when it is transferred using an\n                    external channel between the TOE and another trusted IT product.', 'FDP_UCT'),
('normal', 'PGFID-343', 'This family defines the requirements to establish and\n                    maintain trusted communication to or from users and the\n                    TSF. A trusted path may be required for any\n                    security-relevant interaction. Trusted path exchanges may be\n                    initiated by a user during an interaction with the TSF, or\n                    the TSF may establish communication with the user via a\n                    trusted path.', 'FTP_TRP'),
('normal', 'PGFID-3479', 'Non-repudiation of origin ensures that the originator of\n                    information cannot successfully deny having sent the\n                    information. This family requires that the TSF provide a\n                    method to ensure that a subject that receives information\n                    during a data exchange is provided with evidence of the\n                    origin of the information. This evidence can then be\n                    verified by either this subject or other subjects.', 'FCO_NRO'),
('normal', 'PGFID-37978', 'This family addresses the need to ensure that any data contained\n                    in a resource is not available when the resource is de-allocated\n                    from one object and reallocated to a different object. This\n                    family requires protection for any data contained in a resource\n                    that has been logically deleted or released, but may still be\n                    present within the TSF-controlled resource which in turn may be\n                    re-allocated to another object.', 'FDP_RIP'),
('normal', 'PGFID-38007', 'Data authentication permits an entity to accept\n                    responsibility for the authenticity of information (e.g., by\n                    digitally signing it). This family provides a method of\n                    providing a guarantee of the validity of a specific unit of\n                    data that can be subsequently used to verify that the\n                    information content has not been forged or fraudulently\n                    modified.  In contrast to, FAU, , this family is\n                    intended to be applied to \"static\" data rather\n                    than data that is being transferred.', 'FDP_DAU'),
('normal', 'PGFID-38090', 'This family describes the rules for the specific functions\n                    that can implement the information flow control SFPs named\n                    in, FDP_IFC, , which also specifies the scope of\n                    control of the policy. It consists of two kinds of\n                    requirements: one addressing the common information flow\n                    function issues, and a second addressing illicit information\n                    flows (i.e. covert channels). This division arises because\n                    the issues concerning illicit information flows are, in some\n                    sense, orthogonal to the rest of an information flow control\n                    SFP. By their nature they circumvent the information flow\n                    control SFP resulting in a violation of the policy. As such,\n                    they require special functions to either limit or prevent\n                    their occurrence.', 'FDP_IFF'),
('normal', 'PGFID-38250', 'The TSF mechanism controls the flow of information in\n                    accordance with the information flow control SFP. Operations\n                    that would change the security attributes of information are\n                    not generally permitted as this would be in violation of an\n                    information flow control SFP.  However, such operations may\n                    be permitted as exceptions to the information flow control\n                    SFP if explicitly specified.', 'FDP_IFC'),
('normal', 'PGFID-38512', 'This family identifies the information flow control SFPs (by\n                    name) and defines the scope of control for each named\n                    information flow control SFP.  This scope of control is\n                    characterised by three sets: the subjects under control of the\n                    policy, the information under control of the policy, and\n                    operations which cause controlled information to flow to and\n                    from controlled subjects covered by the policy. The criteria\n                    allows multiple policies to exist, each having a unique name.\n                    This is accomplished by iterating components from this family\n                    once for each named information flow control policy.  The rules\n                    that define the functionality of an information flow control SFP\n                    will be defined by other families such as, FDP_IFF, and, FDP_ETC, . The names\n                    of the information flow control SFPs identified here in, FDP_IFC, are meant to be used throughout the\n                    remainder of the functional components that have an operation\n                    that calls for an assignment or selection of an ``information\n                    flow control SFP.\'\'', 'FDP_IFC'),
('normal', 'PGFID-38564', 'This family describes the rules for the specific functions\n                    that can implement an access control policy named in, FDP_ACC, ., FDP_ACC, specifies the scope of control of the\n                    policy.', 'FDP_ACF'),
('normal', 'PGFID-38645', 'This family defines the requirements for providing integrity\n                    for user data in transit between the TOE and another trusted\n                    IT product and recovering from detectable errors. At a\n                    minimum, this family monitors the integrity of user data for\n                    modifications.  Furthermore, this family supports different\n                    ways of correcting detected integrity errors.', 'FDP_UIT'),
('normal', 'PGFID-4155', 'The requirements of this family ensure that the TOE will\n                    maintain correct operation even in the event of failures.', 'FRU_FLT'),
('normal', 'PGFID-4240', 'The requirements of this family allow the TSF to control the\n                    use of resources under the control of the TSF by users and subjects such\n                    that high priority activities under the control of the TSF will always be\n                    accomplished without undue interference or delay caused by\n                    low priority activities.', 'FRU_PRS'),
('normal', 'PGFID-4347', 'The requirements of this family allow the TSF to control the\n                    use of resources by users and subjects such that denial of\n                    service will not occur because of unauthorised\n                    monopolisation of resources.', 'FRU_RSA'),
('normal', 'PGFID-5335', 'This family defines requirements to limit the scope of\n                    session security attributes that a user may select for a\n                    session.', 'FTA_LSA'),
('normal', 'PGFID-5382', 'This family defines requirements to place limits on the\n                    number of concurrent sessions that belong to the same user.', 'FTA_MCS'),
('normal', 'PGFID-5471', 'This family defines requirements for the TSF to provide the\n                    capability for TSF-initiated and user-initiated locking,\n                    unlocking, and termination of interactive sessions.', 'FTA_SSL'),
('normal', 'PGFID-5578', 'This family defines requirements to display a configurable\n                    advisory warning message to users regarding the appropriate\n                    use of the TOE.', 'FTA_TAB'),
('normal', 'PGFID-5634', 'This family defines requirements for the TSF to display to a\n                    user, upon successful session establishment, a history of\n                    successful and unsuccessful attempts to access the\n                    user\'s account.', 'FTA_TAH'),
('normal', 'PGFID-5716', 'This family defines requirements to deny a user permission\n                    to establish a session with the TOE.', 'FTA_TSE');

-- --------------------------------------------------------

--
-- Table structure for table `ffevaluatornotes`
--

CREATE TABLE `ffevaluatornotes` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) NOT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ffevaluatornotes`
--

INSERT INTO `ffevaluatornotes` (`type`, `id`, `para`, `idf`) VALUES
('', '', '', 'fau_stg'),
('normal', 'PGFID-270731', 'The tests of external entities should be sufficient to test all of the\n        characteristics of them upon which the TSF relies.', 'FPT_TEE'),
('normal', 'PGFID-270869', 'One practical mechanism available to a TSF to provide this\n                    protection is cryptographically-based.', 'FPT_ITT');

-- --------------------------------------------------------

--
-- Table structure for table `ffusernotes`
--

CREATE TABLE `ffusernotes` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) DEFAULT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(10) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `ffusernotes`
--

INSERT INTO `ffusernotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-852924', 'The Security audit automatic response family describes\n                    requirements for the handling of audit events. The\n                    requirement could include requirements for alarms or TSF\n                    action (automatic response). For example, the TSF could\n                    include the generation of real time alarms, termination of\n                    the offending process, disabling of a service, or\n                    disconnection or invalidation of a user account.', 'FAU_ARP'),
('normal', 'PGFID-852926', 'An audit event is defined to be an ``potential\n                    security violation\'\' if so indicated by the, FAU_SAA, components.', 'FAU_ARP'),
('normal', 'PGFID-852969', 'The Security audit data generation family includes\n                    requirements to specify the audit events that should be\n                    generated by the TSF for security-relevant events.', 'FAU_GEN'),
('normal', 'PGFID-852970', 'This family is presented in a manner that avoids a dependency\n                    on all components requiring audit support. Each component has\n                    an audit section developed in which the events to be audited\n                    for that functional area are listed. When the PP/ST author\n                    assembles the PP/ST, the items in the audit area are used to\n                    complete the variable in this component. Thus, the\n                    specification of what could be audited for a functional area\n                    is localised in that functional area.', 'FAU_GEN'),
('normal', 'PGFID-852971', 'The list of auditable events is entirely dependent on the\n                    other functional families within the PP/ST. Each family\n                    definition should therefore include a list of its\n                    family-specific auditable events. Each auditable event in the\n                    list of auditable events specified in the functional family\n                    should correspond to one of the levels of audit event\n                    generation specified in this family (i.e. minimal, basic,\n                    detailed). This provides the PP/ST author with information\n                    necessary to ensure that all appropriate auditable events are\n                    specified in the PP/ST. The following example shows how\n                    auditable events are to be specified in appropriate functional\n                    families:', 'FAU_GEN'),
('normal', 'PGFID-852974', '``The following actions should be auditable if, FAU_GEN, is included in the PP/ST:', 'FAU_GEN'),
('normal', 'PGFID-852980', 'For each functional component that is chosen, the auditable\n                    events that are indicated in that component, at and below the\n                    level indicated in, FAU_GEN, should be\n                    auditable. If, for example, in the previous example ``Basic\'\'\n                    would be selected in, FAU_GEN, , the\n                    auditable events mentioned in a), b) and c) should be\n                    auditable.', 'FAU_GEN'),
('normal', 'PGFID-852982', 'Observe that the categorisation of auditable events is\n                    hierarchical. For example, when Basic Audit Generation is\n                    desired, all auditable events identified as being either\n                    Minimal or Basic, should also be included in the PP/ST\n                    through the use of the appropriate assignment operation,\n                    except when the higher level event simply provides more\n                    detail than the lower level event. When Detailed Audit\n                    Generation is desired, all identified auditable events\n                    (Minimal, Basic, and Detailed) should be included in the\n                    PP/ST.', 'FAU_GEN'),
('normal', 'PGFID-852983', 'A PP/ST author may decide to include other auditable events\n                    beyond those required for a given audit level. For example,\n                    the PP/ST may claim only minimal audit capabilities while\n                    including most of the basic capabilities because the few\n                    excluded capabilities conflict with other PP/ST constraints\n                    (e.g. because they require the collection of unavailable\n                    data).', 'FAU_GEN'),
('normal', 'PGFID-852985', 'The functionality that creates the auditable event should be\n                    specified in the PP or ST as a functional requirement.', 'FAU_GEN'),
('normal', 'PGFID-852986', 'The following are examples of the types of the events that\n                    should be defined as auditable within each PP/ST functional\n                    component:', 'FAU_GEN'),
('normal', 'PGFID-854873', 'This family defines requirements for automated means that\n                    analyse system activity and audit data looking for possible\n                    or real security violations. This analysis may work in\n                    support of intrusion detection, or automatic response to a\n                    potential security violation.', 'FAU_SAA'),
('normal', 'PGFID-853051', 'The action to be performed by the TSF on detection of a\n                    potential violation is defined in, FAU_ARP, components.', 'FAU_SAA'),
('normal', 'PGFID-853056', 'For real-time analysis, audit data could be transformed into a\n                    useful format for automated treatment, but into a different\n                    useful format for delivery to authorised users for\n                    review.', 'FAU_SAA'),
('normal', 'PGFID-853189', 'The Security audit review family defines requirements\n                    related to review of the audit information.', 'FAU_SAR'),
('normal', 'PGFID-853190', 'These functions should allow pre-storage or post-storage\n                    audit selection that includes, for example, the ability to\n                    selectively review:', 'FAU_SAR'),
('normal', 'PGFID-853196', 'The distinction between audit reviews is based on\n                    functionality. Audit review (only) encompasses the ability to\n                    view audit data. Selectable review is more sophisticated, and\n                    requires the ability to select subsets of audit data based on a\n                    single criterion or multiple criteria with logical (i.e. and/or)\n                    relations, and order the audit data before it is\n                    reviewed.', 'FAU_SAR'),
('normal', 'PGFID-853246', 'The Security audit event selection family provides\n                    requirements related to the capabilities of identifying which\n                    of the possible auditable events are to be audited. The\n                    auditable events are defined in the, FAU_GEN, family, but those events should be defined as\n                    being selectable in this component to be audited.', 'FAU_SEL'),
('normal', 'PGFID-853251', 'This family ensures that it is possible to keep the audit\n                    trail from becoming so large that it becomes useless, by\n                    defining the appropriate granularity of the selected\n                    security audit events.', 'FAU_SEL'),
('normal', 'PGFID-853301', 'The Security audit event storage family describes\n                    requirements for storing audit data for later use, including\n                    requirements controlling the loss of audit information due\n                    to TOE failure, attack and/or exhaustion of storage\n                    space.', 'FAU_STG'),
('normal', 'PGFID-5710', 'Non-repudiation of origin defines requirements to provide\n                    evidence to users/subjects about the identity of the\n                    originator of some information. The originator cannot\n                    successfully deny having sent the information because\n                    evidence of origin (e.g. digital signature) provides\n                    evidence of the binding between the originator and the\n                    information sent. The recipient or a third party can verify\n                    the evidence of origin. This evidence should not be\n                    forgeable.', 'FCO_NRO'),
('normal', 'PGFID-5155', 'If the information or the associated attributes are altered\n                    in any way, validation of the evidence of origin might\n                    fail. Therefore a PP/ST author should consider including\n                    integrity requirements such as, FDP_UIT.1, in the\n                    PP/ST.', 'FCO_NRO'),
('normal', 'PGFID-4414', 'In non-repudiation there are several different roles\n                    involved, each of which could be combined in one or more\n                    subjects. The first role is a subject that requests evidence\n                    of origin (only in, FCO_NRO.1, ). The second role\n                    is the recipient and/or other subjects to which the evidence\n                    is provided (e.g. a notary). The third role is a subject\n                    that requests verification of the evidence of origin, for\n                    example, a recipient or a third party such as an arbiter.', 'FCO_NRO'),
('normal', 'PGFID-4760', 'The PP/ST author must specify the conditions that must be\n                    met to be able to verify the validity of the evidence. An\n                    example of a condition which could be specified is where the\n                    verification of evidence must occur within 24 hours. These\n                    conditions, therefore, allow the tailoring of the\n                    non-repudiation to legal requirements, such as being able to\n                    provide evidence for several years.', 'FCO_NRO'),
('normal', 'PGFID-4419', 'In most cases, the identity of the recipient will be the\n                    identity of the user who received the transmission. In some\n                    instances, the PP/ST author does not want the user identity\n                    to be exported. In that case the PP/ST author must consider\n                    whether it is appropriate to include this class, or whether\n                    the identity of the transport service provider or the\n                    identity of the host should be used.', 'FCO_NRO'),
('normal', 'PGFID-4420', 'In addition to (or instead of) the user identity, a PP/ST\n                    author might be more concerned about the time the\n                    information was transmitted. For example, requests for\n                    proposals must be transmitted before a certain date in order\n                    to be considered. In such instances, these requirements can\n                    be customised to provide a timestamp indication (time of\n                    origin).', 'FCO_NRO'),
('normal', 'PGFID-4917', 'Non-repudiation of receipt defines requirements to provide\n                    evidence to other users/subjects that the information was\n                    received by the recipient. The recipient cannot successfully\n                    deny having received the information because evidence of\n                    receipt (e.g. digital signature) provides evidence of the\n                    binding between the recipient attributes and the\n                    information. The originator or a third party can verify the\n                    evidence of receipt. This evidence should not be forgeable.', 'FCO_NRR'),
('normal', 'PGFID-4927', 'It should be noted that the provision of evidence that the\n                    information was received does not necessarily imply that the\n                    information was read or comprehended, but only delivered', 'FCO_NRR'),
('normal', 'PGFID-4925', 'If the information or the associated attributes are altered\n                    in any way, validation of the evidence of receipt with\n                    respect to the original information might fail. Therefore a\n                    PP/ST author should consider including integrity\n                    requirements such as, FDP_UIT.1, in the PP/ST.', 'FCO_NRR'),
('normal', 'PGFID-4510', 'In non-repudiation, there are several different roles\n                    involved, each of which could be combined in one or more\n                    subjects. The first role is a subject that requests evidence\n                    of receipt (only in, FCO_NRR.1, ). The second role\n                    is the recipient and/or other subjects to which the evidence\n                    is provided, (e.g. a notary). The third role is a subject\n                    that requests verification of the evidence of receipt, for\n                    example, an originator or a third party such as an arbiter.', 'FCO_NRR'),
('normal', 'PGFID-4514', 'The PP/ST author must specify the conditions that must be\n                    met to be able to verify the validity of the evidence. An\n                    example of a condition which could be specified is where the\n                    verification of evidence must occur within 24 hours. These\n                    conditions, therefore, allow the tailoring of the\n                    non-repudiation to legal requirements, such as being able to\n                    provide evidence for several years.', 'FCO_NRR'),
('normal', 'PGFID-4515', 'In most cases, the identity of the recipient will be the\n                    identity of the user who received the transmission. In some\n                    instances, the PP/ST author does not want the user identity\n                    to be exported. In that case, the PP/ST author must consider\n                    whether it is appropriate to include this class, or whether\n                    the identity of the transport service provider or the\n                    identity of the host should be used.', 'FCO_NRR'),
('normal', 'PGFID-4516', 'In addition to (or instead of) the user identity, a PP/ST\n                    author might be more concerned about the time the\n                    information was received. For example, when an offer expires\n                    at a certain date, orders must be received before a certain\n                    date in order to be considered. In such instances, these\n                    requirements can be customised to provide a timestamp\n                    indication (time of receipt).', 'FCO_NRR'),
('normal', 'PGFID-34298', 'Cryptographic keys must be managed throughout their\n                    lifetime. The typical events in the lifecycle of a\n                    cryptographic key include (but are not limited to):\n                    generation, distribution, entry, storage, access\n                    (e.g. backup, escrow, archive, recovery) and destruction.', 'FCS_CKM'),
('normal', 'PGFID-34299', 'The inclusion of other stages is dependent on the key management\n                    strategy being implemented, as the TOE need not be involved in\n                    all of the key life-cycle (e.g. the TOE may only generate and\n                    distribute cryptographic keys).', 'FCS_CKM'),
('normal', 'PGFID-34300', 'This family is intended to support the cryptographic key\n                    lifecycle and consequently defines requirements for the\n                    following activities: cryptographic key generation,\n                    cryptographic key distribution, cryptographic key access and\n                    cryptographic key destruction. This family should be\n                    included whenever there are functional requirements for the\n                    management of cryptographic keys.', 'FCS_CKM'),
('normal', 'PGFID-34301', 'If, FAU_GEN, Security Audit Data Generation is\n                    included in the PP/ST then, in the context of the events\n                    being audited:', 'FCS_CKM'),
('normal', 'PGFID-34788', 'Typically, random numbers are used to generate cryptographic\n                    keys. If this is the case, then, FCS_CKM.1, should be used instead of the component, FIA_SOS.2, .\n                    In cases where random number generation is required for purposes other\n                    than for the generation of cryptographic keys, the component, FIA_SOS.2, should be used.', 'FCS_CKM'),
('normal', 'PGFID-35142', 'A cryptographic operation may have cryptographic mode(s) of\n                    operation associated with it. If this is the case, then the\n                    cryptographic mode(s) must be specified. Examples of\n                    cryptographic modes of operation are cipher block chaining,\n                    output feedback mode, electronic code book mode, and cipher\n                    feedback mode.', 'FCS_COP'),
('normal', 'PGFID-35144', 'Cryptographic operations may be used to support one or more\n                    TOE security services. The, FCS_COP, component\n                    may need to be iterated more than once depending on:', 'FCS_COP'),
('normal', 'PGFID-35143', 'If, FAU_GEN, Security audit data generation is\n                    included in the PP/ST then, in the context of the\n                    cryptographic operation events being audited:', 'FCS_COP'),
('normal', 'PGFID-802447', 'This family is based upon the concept of arbitrary controls\n                    on the interaction of subjects and objects. The scope and\n                    purpose of the controls is based upon the attributes of the\n                    accessor (subject), the attributes of the container being\n                    accessed (object), the actions (operations) and any\n                    associated access control rules.', 'FDP_ACC'),
('normal', 'PGFID-803911', 'The components in this family are capable of identifying the\n                    access control SFPs (by name) to be enforced by the traditional\n                    Discretionary Access Control (DAC) mechanisms. It further\n                    defines the subjects, objects and operations that are covered by\n                    identified access control SFPs. The rules that define the\n                    functionality of an access control SFP will be defined by other\n                    families, such as, FDP_ACF, and, FDP_ETC, . The names of the access control SFPs\n                    defined in, FDP_ACC, are meant to be used\n                    throughout the remainder of the functional components that have\n                    an operation that calls for an assignment or selection of an\n                    ``access control SFP.\'\'', 'FDP_ACC'),
('normal', 'PGFID-803944', 'The access control SFP covers a set of triplets: subject,\n                    object, and operations. Therefore a subject can be covered\n                    by multiple access control SFPs but only with respect to a\n                    different operation or a different object. Of course the\n                    same applies to objects and operations.', 'FDP_ACC'),
('normal', 'PGFID-802018', 'A critical aspect of an access control function that\n                    enforces an access control SFP is the ability for users to\n                    modify the attributes involved in access control\n                    decisions. The, FDP_ACC, family does not address\n                    these aspects. Some of these requirements are left\n                    undefined, but can be added as refinements, while others are\n                    covered elsewhere in other families and classes such as, FMT, .', 'FDP_ACC'),
('normal', 'PGFID-798587', 'There are no audit requirements in, FDP_ACC, as\n                    this family specifies access control SFP requirements. Audit\n                    requirements will be found in families specifying functions\n                    to satisfy the access control SFPs identified in this\n                    family.', 'FDP_ACC'),
('normal', 'PGFID-803982', 'This family provides a PP/ST author the capability to\n                    specify several policies, for example, a fixed access\n                    control SFP to be applied to one scope of control, and a\n                    flexible access control SFP to be defined for a different\n                    scope of control. To specify more than one access control\n                    policy, the components from this family can be iterated\n                    multiple times in a PP/ST to different subsets of operations\n                    and objects. This will accommodate TOEs that contain\n                    multiple policies, each addressing a particular set of\n                    operations and objects. In other words, the PP/ST author\n                    should specify the required information in the ACC component\n                    for each of the access control SFPs that the TSF will\n                    enforce. For example, a TOE incorporating three access\n                    control SFPs, each covering only a subset of the objects,\n                    subjects, and operations within the TOE, will contain one, FDP_ACC.1, component for each of the three\n                    access control SFPs, necessitating a total of three, FDP_ACC.1, components.', 'FDP_ACC'),
('normal', 'PGFID-804177', 'This family describes the rules for the specific functions\n                    that can implement an access control policy named in, FDP_ACC, which also specifies the scope of\n                    control of the policy.', 'FDP_ACF'),
('normal', 'PGFID-798671', 'This family provides a PP/ST author the capability to\n                    describe the rules for access control. This results in a\n                    TOE where the access to objects will not change. An\n                    example of such an object is ``Message of the Day\'\', which\n                    is readable by all, and changeable only by the authorised\n                    administrator. This family also provides the PP/ST author\n                    with the ability to describe rules that provide for\n                    exceptions to the general access control rules. Such\n                    exceptions would either explicitly allow or deny\n                    authorisation to access an object.', 'FDP_ACF'),
('normal', 'PGFID-798673', 'There are no explicit components to specify other possible\n                    functions such as two-person control, sequence rules for\n                    operations, or exclusion controls. However, these\n                    mechanisms, as well as traditional DAC mechanisms, can be\n                    represented with the existing components, by careful\n                    drafting of the access control rules.', 'FDP_ACF'),
('normal', 'PGFID-798674', 'A variety of acceptable access control functionality may be\n                    specified in this family such as:', 'FDP_ACF'),
('normal', 'PGFID-798921', 'This family describes specific functions that can be used to\n                    authenticate ``static\'\' data.', 'FDP_DAU'),
('normal', 'PGFID-798923', 'Components in this family are to be used when there is a\n                    requirement for ``static\'\' data\n                    authentication, i.e. where data is to be signed but not\n                    transmitted. (Note that the, FCO_NRO, family\n                    provides for non-repudiation of origin of information\n                    received during a data exchange.)', 'FDP_DAU'),
('normal', 'PGFID-800434', 'This family defines functions for TSF-mediated exporting of user data from\n                    the TOE such that its security attributes either can be\n                    explicitly preserved or can be ignored once it has been\n                    exported. Consistency of these security attributes are\n                    addressed by, FPT_TDC, .', 'FDP_ETC'),
('normal', 'PGFID-798963', ', FDP_ETC, is concerned with limitations on export\n                    and association of security attributes with the exported\n                    user data.', 'FDP_ETC'),
('normal', 'PGFID-798965', 'This family, and the corresponding Import family, FDP_ITC, , address how the TOE deals with user data\n                    transferred into and outside its control. In principle this\n                    family is concerned with the TSF-mediated exporting of user data and its\n                    related security attributes.', 'FDP_ETC'),
('normal', 'PGFID-798966', 'A variety of activities might be involved here:', 'FDP_ETC'),
('normal', 'PGFID-804021', 'If there are multiple SFPs (access control and/or\n                    information flow control) then it may be appropriate to\n                    iterate these components once for each named SFP.', 'FDP_ETC'),
('normal', 'PGFID-803856', 'This family covers the identification of information flow\n                    control SFPs; and, for each, specifies the scope of control\n                    of the SFP.', 'FDP_IFC'),
('normal', 'PGFID-804081', 'The components in this family are capable of identifying the\n                    information flow control SFPs to be enforced by the traditional\n                    Mandatory Access Control mechanisms that would be found in a\n                    TOE. However, they go beyond just the traditional MAC mechanisms\n                    and can be used to identify and describe non-interference\n                    policies and state-transitions. It further defines the subjects\n                    under control of the policy, the information under control of\n                    the policy, and operations which cause controlled information to\n                    flow to and from controlled subjects for each information flow\n                    control SFP in the TOE. The information flow control SFP will be\n                    defined by other families such as, FDP_IFF, and, FDP_ETC, . The\n                    information flow control SFPs named here in, FDP_IFC, are meant to be used throughout the remainder of\n                    the functional components that have an operation that calls for\n                    an assignment or selection of an ``information flow control\n                    SFP.\'\'', 'FDP_IFC'),
('normal', 'PGFID-803963', 'These components are quite flexible. They allow the domain\n                    of flow control to be specified and there is no requirement\n                    that the mechanism be based upon labels. The different\n                    elements of the information flow control components also\n                    permit different degrees of exception to the policy.', 'FDP_IFC'),
('normal', 'PGFID-807212', 'Each SFP covers a set of triplets: subject, information, and\n                    operations that cause information to flow to and from\n                    subjects. Some information flow control policies may be at a\n                    very low level of detail and explicitly describe subjects in\n                    terms of processes within an operating system. Other\n                    information flow control policies may be at a high level and\n                    describe subjects in the generic sense of users or\n                    input/output channels. If the information flow control\n                    policy is at too high a level of detail, it may not clearly\n                    define the desired IT security functions. In such cases, it\n                    is more appropriate to include such descriptions of\n                    information flow control policies as objectives. Then the\n                    desired IT security functions can be specified as supportive\n                    of those objectives.', 'FDP_IFC'),
('normal', 'PGFID-804981', 'In the second component (, FDP_IFC.2, ), each\n                    information flow control SFP will cover all possible\n                    operations that cause information covered by that SFP to\n                    flow to and from subjects covered by that SFP. Furthermore,\n                    all information flows will need to be covered by a\n                    SFP. Therefore for each action that causes information to\n                    flow, there will be a set of rules that define whether the\n                    action is allowed. If there are multiple SFPs that are\n                    applicable for a given information flow, all involved SFPs\n                    must allow this flow before it is permitted to take place.', 'FDP_IFC'),
('normal', 'PGFID-804309', 'An information flow control SFP covers a well-defined set of\n                    operations. The SFPs coverage may be\n                    ``complete\'\' with respect to some\n                    information flows, or it may address only some of the\n                    operations that affect the information flow.', 'FDP_IFC'),
('normal', 'PGFID-804311', 'An access control SFP controls access to the objects that\n                    contain information. An information flow control SFP\n                    controls access to the information, independent of its\n                    container. The attributes of the information, which may be\n                    associated with the attributes of the container (or may not,\n                    as in the case of a multi-level database) stay with the\n                    information as it flows. The accessor does not have the\n                    ability, in the absence of an explicit authorisation, to\n                    change the attributes of the information.', 'FDP_IFC'),
('normal', 'PGFID-799015', 'Information flows and operations can be expressed at\n                    multiple levels. In the case of a ST, the information flows\n                    and operations might be specified at a system-specific\n                    level: TCP/IP packets flowing through a firewall based upon\n                    known IP addresses. For a PP, the information flows and\n                    operations might be expressed as types: email, data\n                    repositories, observe accesses, etc.', 'FDP_IFC'),
('normal', 'PGFID-799017', 'The components in this family can be applied multiple times\n                    in a PP/ST to different subsets of operations and\n                    objects. This will accommodate TOEs that contain multiple\n                    policies, each addressing a particular set of objects,\n                    subjects, and operations.', 'FDP_IFC'),
('normal', 'PGFID-799080', 'This family describes the rules for the specific functions\n                    that can implement the information flow control SFPs named\n                    in, FDP_IFC, , which also specifies the scope of\n                    control of the policies. It consists of two\n                    ``trees:\'\' one addressing the common\n                    information flow control function issues, and a second\n                    addressing illicit information flows (i.e. covert channels)\n                    with respect to one or more information flow control\n                    SFPs. This division arises because the issues concerning\n                    illicit information flows are, in some sense, orthogonal to\n                    the rest of an SFP. Illicit information flows are flows in\n                    violation of policy; thus they are not a policy issue.', 'FDP_IFF'),
('normal', 'PGFID-799082', 'In order to implement strong protection against disclosure\n                    or modification in the face of untrusted software, controls\n                    on information flow are required. Access controls alone are\n                    not sufficient because they only control access to\n                    containers, allowing the information they contain to flow,\n                    without controls, throughout a system.', 'FDP_IFF'),
('normal', 'PGFID-799083', 'In this family, the phrase ``types of illicit\n                    information flows\'\' is used. This phrase may be\n                    used to refer to the categorisation of flows as\n                    ``Storage Channels\'\' or\n                    ``Timing Channels\'\', or it can refer to\n                    improved categorisations reflective of the needs of a PP/ST\n                    author.', 'FDP_IFF'),
('normal', 'PGFID-799084', 'The flexibility of these components allows the definition of\n                    a privilege policy within, FDP_IFF.1, and, FDP_IFF.2, to allow the controlled bypass of all or\n                    part of a particular SFP. If there is a need for a\n                    predefined approach to SFP bypass, the PP/ST author should\n                    consider incorporating a privilege policy.', 'FDP_IFF'),
('normal', 'PGFID-799276', 'This family defines mechanisms for TSF-mediated importing of user data from\n                    outside the TOE into the TOE such that the user data\n                    security attributes can be preserved. Consistency of these\n                    security attributes are addressed by, FPT_TDC, .', 'FDP_ITC'),
('normal', 'PGFID-799277', ', FDP_ITC, is concerned with limitations on\n                    import, user specification of security attributes, and\n                    association of security attributes with the user data.', 'FDP_ITC'),
('normal', 'PGFID-799279', 'This family, and the corresponding export family, FDP_ETC, , address how the TOE deals with user data\n                    outside its control. This family is concerned with assigning\n                    and abstraction of the user data security attributes.', 'FDP_ITC'),
('normal', 'PGFID-799280', 'A variety of activities might be involved here:', 'FDP_ITC'),
('normal', 'PGFID-799285', 'This family is not concerned with the determination of\n                    whether the user data may be imported. It is concerned with\n                    the values of the security attributes to associate with the\n                    imported user data.', 'FDP_ITC'),
('normal', 'PGFID-799286', 'There are two possibilities for the import of user data:\n                    either the user data is unambiguously associated with\n                    reliable object security attributes (values and meaning of\n                    the security attributes is not modified), or no reliable\n                    security attributes (or no security attributes at all) are\n                    available from the import source. This family addresses both\n                    cases.', 'FDP_ITC'),
('normal', 'PGFID-799287', 'If there are reliable security attributes available, they\n                    may have been associated with the user data by physical\n                    means (the security attributes are on the same media), or by\n                    logical means (the security attributes are distributed\n                    differently, but include unique object identification,\n                    e.g. cryptographic checksum).', 'FDP_ITC'),
('normal', 'PGFID-806211', 'This family is concerned with TSF-mediated importing of user data and\n                    maintaining the association of security attributes as\n                    required by the SFP. Other families are concerned with other\n                    import aspects such as consistency, trusted channels, and\n                    integrity that are beyond the scope of this\n                    family. Furthermore,, FDP_ITC, is only concerned\n                    with the interface to the import medium., FDP_ETC, is responsible for the other end point of the\n                    medium (the source).', 'FDP_ITC'),
('normal', 'PGFID-806212', 'Some of the well known import requirements are:', 'FDP_ITC'),
('normal', 'PGFID-799292', 'These import requirements may be handled by the TSF with or\n                    without human intervention, depending on the IT limitations\n                    and the organisational security policy. For example, if user\n                    data is received on a ``confidential\'\'\n                    channel, the security attributes of the objects will be set\n                    to ``confidential\'\'.', 'FDP_ITC'),
('normal', 'PGFID-804025', 'If there are multiple SFPs (access control and/or\n                    information flow control) then it may be appropriate to\n                    iterate these components once for each named SFP.', 'FDP_ITC'),
('normal', 'PGFID-799332', 'This family provides requirements that address protection of\n                    user data when it is transferred between parts of a TOE\n                    across an internal channel. This may be contrasted with the, FDP_UCT, and, FDP_UIT, family, which\n                    provide protection for user data when it is transferred\n                    between distinct TSFs across an external channel, and, FDP_ETC, and, FDP_ITC, , which address\n                    TSF-mediated transfer of data to or from outside the TOE.', 'FDP_ITT'),
('normal', 'PGFID-799346', 'The requirements in this family allow a PP/ST author to\n                    specify the desired security for user data while in transit\n                    within the TOE. This security could be protection against\n                    disclosure, modification, or loss of availability.', 'FDP_ITT'),
('normal', 'PGFID-799347', 'The determination of the degree of physical separation above\n                    which this family should apply depends on the intended\n                    environment of use. In a hostile environment, there may be\n                    risks arising from transfers between parts of the TOE\n                    separated by only a system bus. In more benign environments,\n                    the transfers may be across more traditional network media.', 'FDP_ITT'),
('normal', 'PGFID-804035', 'If there are multiple SFPs (access control and/or\n                    information flow control) then it may be appropriate to\n                    iterate these components once for each named SFP.', 'FDP_ITT'),
('normal', 'PGFID-799439', 'Residual information protection ensures that TSF-controlled\n                    resources when de-allocated from an object and before they are\n                    reallocated to another object are treated by the TSF in a way\n                    that it is not possible to reconstruct all or part of the data\n                    contained in the resource before it was de-allocated.', 'FDP_RIP'),
('normal', 'PGFID-801777', 'A TOE usually has a number of functions that potentially\n                    de-allocate resources from an object and potentially re-allocate\n                    those resources to objects. Some, but not all of those resources\n                    may have been used to store critical data from the previous use\n                    of the resource and for those resources FDP_RIP requires that\n                    they are prepared for reuse. Object reuse applies to explicit\n                    requests of a subject or user to release resources as well as\n                    implicit actions of the TSF that result in the de-allocation and\n                    subsequent re-allocation of resources to different\n                    objects. Examples of explicit requests are the deletion or\n                    truncation of a file or the release of an area of main\n                    memory. Examples of implicit actions of the TSF are the\n                    de-allocation and re-allocation of cache regions.', 'FDP_RIP'),
('normal', '', 'The requirement for object reuse is related to the content of\n                the resource belonging to an object, not all information about\n                the resource or object that may be stored elsewhere in the\n                TSF. As an example to satisfy the FDP_RIP requirement for files\n                as objects requires that all sectors that make up the file need\n                to be prepared for re-use.', 'FDP_RIP'),
('normal', 'PGFID-804497', 'It also applies to resources that are serially reused by\n                    different subjects within the system. For example, most\n                    operating systems typically rely upon hardware registers\n                    (resources) to support processes within the system. As\n                    processes are swapped from a ``run\'\' state to a ``sleep\'\'\n                    state (and vice versa), these registers are serially reused\n                    by different subjects. While this ``swapping\'\' action may\n                    not be considered an allocation or deallocation of a\n                    resource,, FDP_RIP, could apply to\n                    such events and resources.', 'FDP_RIP'),
('normal', 'PGFID-804493', ', FDP_RIP, typically controls access\n                    to information that is not part of any currently defined or\n                    accessible object; however, in certain cases this may not be\n                    true. For example, object ``A\'\' is a file and object ``B\'\'\n                    is the disk upon which that file resides. If object ``A\'\' is\n                    deleted, the information from object ``A\'\' is under the\n                    control of, FDP_RIP, even though it\n                    is still part of object ``B\'\'.', 'FDP_RIP'),
('normal', 'PGFID-804513', 'It is important to note that, FDP_RIP, applies only to on-line objects and not\n                    off-line objects such as those backed-up on tapes. For\n                    example, if a file is deleted in the TOE,, FDP_RIP, can be instantiated to require that no\n                    residual information exists upon deallocation; however, the\n                    TSF cannot extend this enforcement to that same file that\n                    exists on the off-line back-up. Therefore that same file is\n                    still available. If this is a concern, then the PP/ST author\n                    should make sure that the proper environmental objectives\n                    are in place to support operational user guidance to address\n                    off-line objects.', 'FDP_RIP'),
('normal', 'PGFID-804520', ', FDP_RIP, and, FDP_ROL, can conflict when, FDP_RIP, is instantiated to require that residual\n                    information be cleared at the time the application releases\n                    the object to the TSF (i.e. upon deallocation). Therefore,\n                    the, FDP_RIP, selection of\n                    ``deallocation\'\' should not be used with, FDP_ROL, since there would be no information to roll\n                    back. The other selection, ``unavailability upon\n                    allocation\'\', may be used with, FDP_ROL, , but there is the risk that the resource\n                    which held the information has been allocated to a new\n                    object before the roll back took place. If that were to\n                    occur, then the roll back would not be possible.', 'FDP_RIP'),
('normal', 'PGFID-799447', 'There are no audit requirements in, FDP_RIP, because this is not a user-invokable\n                    function. Auditing of allocated or deallocated resources\n                    would be auditable as part of the access control SFP or the\n                    information flow control SFP operations.', 'FDP_RIP'),
('normal', 'PGFID-799448', 'This family should apply to the objects specified in the\n                    access control SFP(s) or the information flow control SFP(s)\n                    as specified by the PP/ST author.', 'FDP_RIP'),
('normal', 'PGFID-799482', 'This family addresses the need to return to a well defined\n                    valid state, such as the need of a user to undo\n                    modifications to a file or to undo transactions in case of\n                    an incomplete series of transaction as in the case of\n                    databases.', 'FDP_ROL'),
('normal', 'PGFID-806232', 'This family is intended to assist a user in returning to a\n                    well defined valid state after the user undoes the last set\n                    of actions, or, in distributed databases, the return of all\n                    of the distributed copies of the databases to the state\n                    before an operation failed.', 'FDP_ROL'),
('normal', 'PGFID-806239', ', FDP_RIP, and, FDP_ROL, conflict when, FDP_RIP, enforces that the contents will be made\n                    unavailable at the time that a resource is deallocated from\n                    an object. Therefore, this use of, FDP_RIP, cannot be combined with, FDP_ROL, as there would\n                    be no information to roll back., FDP_RIP, can be\n                    used only with, FDP_ROL, when it enforces that\n                    the contents will be unavailable at the time that a resource\n                    is allocated to an object. This is because the, FDP_ROL, mechanism will have an opportunity to access\n                    the previous information that may still be present in the\n                    TOE in order to successfully roll back the operation.', 'FDP_ROL'),
('normal', 'PGFID-799487', 'The rollback requirement is bounded by certain limits. For\n                    example a text editor typically only allows you roll back up\n                    to a certain number of commands. Another example would be\n                    backups. If backup tapes are rotated, after a tape is\n                    reused, the information can no longer be retrieved. This\n                    also poses a bound on the rollback requirement.', 'FDP_ROL'),
('normal', 'PGFID-799602', 'This family provides requirements that address protection of\n                    user data while it is stored within containers controlled by the TSF.', 'FDP_SDI'),
('normal', 'PGFID-799606', 'Hardware glitches or errors may affect data stored in\n                    memory. This family provides requirements to detect these\n                    unintentional errors. The integrity of user data while\n                    stored on storage devices controlled by the TSF are also addressed\n                    by this family.', 'FDP_SDI'),
('normal', 'PGFID-799607', 'To prevent a subject from modifying the data, the, FDP_IFF, or, FDP_ACF, families are required\n                    (rather than this family).', 'FDP_SDI'),
('normal', 'PGFID-799611', 'This family differs from, FDP_ITT, that protects\n                    the user data from integrity errors while being transferred\n                    within the TOE.', 'FDP_SDI'),
('normal', 'PGFID-799642', 'This family defines the requirements for ensuring the\n                    confidentiality of user data when it is transferred using an\n                    external channel between the TOE and another trusted IT\n                    product. Confidentiality is enforced by preventing\n                    unauthorised disclosure of user data in transit between the\n                    two end points. The end points may be a TSF or a user.', 'FDP_UCT'),
('normal', 'PGFID-799644', 'This family provides a requirement for the protection of user\n                    data during transit. In contrast,, FPT_ITC, handles TSF data.', 'FDP_UCT'),
('normal', 'PGFID-804556', 'This family defines the requirements for providing integrity\n                    for user data in transit between the TSF and another trusted\n                    IT product and recovering from detectable errors. At a\n                    minimum, this family monitors the integrity of user data for\n                    modifications. Furthermore, this family supports different\n                    ways of correcting detected integrity errors.', 'FDP_UIT'),
('normal', 'PGFID-799666', 'This family defines the requirements for providing integrity\n                    for user data in transit; while, FPT_ITI, handles\n                    TSF data.', 'FDP_UIT'),
('normal', 'PGFID-799667', ', FDP_UIT, and, FDP_UCT, are duals of\n                    each other, as, FDP_UCT, addresses user data\n                    confidentiality. Therefore, the same mechanism that\n                    implements, FDP_UIT, could possibly be used to\n                    implement other families such as, FDP_UCT, and, FDP_ITC, .', 'FDP_UIT'),
('normal', 'PGFID-560583', 'This family addresses requirements for defining values for\n                    authentication attempts and TSF actions in cases of\n                    authentication attempt failure. Parameters include, but are\n                    not limited to, the number of attempts and time thresholds.', 'FIA_AFL'),
('normal', 'PGFID-558188', 'The session establishment process is the interaction with\n                    the user to perform the session establishment independent of\n                    the actual implementation. If the number of unsuccessful\n                    authentication attempts exceeds the indicated threshold,\n                    either the user account or the terminal (or both) will be\n                    locked. If the user account is disabled, the user cannot\n                    log-on to the system. If the terminal is disabled, the\n                    terminal (or the address that the terminal has) cannot be\n                    used for any log-on. Both of these situations continue until\n                    the condition for re-establishment is satisfied.', 'FIA_AFL'),
('normal', 'PGFID-558261', 'All authorised users may have a set of security attributes,\n                    other than the user\'s identity, that are used to\n                    enforce the SFRs. This family defines the requirements for\n                    associating user security attributes with users as needed to\n                    support the TSF in making security decisions.', 'FIA_ATD');
INSERT INTO `ffusernotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-558263', 'There are dependencies on the individual security policy (SFP)\n                    definitions. These individual definitions should contain the\n                    listing of attributes that are necessary for policy\n                    enforcement.', 'FIA_ATD'),
('normal', 'PGFID-558299', 'This family defines requirements for mechanisms that enforce\n                    defined quality metrics on provided secrets, and generate\n                    secrets to satisfy the defined metric. Examples of such\n                    mechanisms may include automated checking of user supplied\n                    passwords, or automated password generation.', 'FIA_SOS'),
('normal', 'PGFID-558300', 'A secret can be generated outside the TOE (e.g. selected by\n                    the user and introduced in the TOE). In such cases, the, FIA_SOS.1, component can be used to\n                    ensure that the external generated secret adheres to certain\n                    standards, for example a minimum size, not present in a\n                    dictionary, and/or not previously used.', 'FIA_SOS'),
('normal', 'PGFID-558301', 'Secrets can also be generated by the TOE. In those cases,\n                    the, FIA_SOS.2, component can be used\n                    to require the TOE to ensure that the secrets that will\n                    adhere to some specified metrics.', 'FIA_SOS'),
('normal', 'PGFID-558303', 'Secrets contain the authentication data provided by the user\n                    for an authentication mechanism that is based on knowledge\n                    the user possesses. When cryptographic keys are employed,\n                    the class, FCS, should be used instead of this\n                    family.', 'FIA_SOS'),
('normal', 'PGFID-558340', 'This family defines the types of user authentication\n                    mechanisms supported by the TSF. This family defines the\n                    required attributes on which the user authentication\n                    mechanisms must be based.', 'FIA_UAU'),
('normal', 'PGFID-558575', 'This family defines the conditions under which users are\n                    required to identify themselves before performing any other\n                    actions that are to be mediated by the TSF and that require\n                    user identification.', 'FIA_UID'),
('normal', 'PGFID-558625', 'An authenticated user, in order to use the TOE, typically\n                    activates a subject. The user\'s security\n                    attributes are associated (totally or partially) with this\n                    subject. This family defines requirements to create and\n                    maintain the association of the user\'s security\n                    attributes to a subject acting on the user\'s\n                    behalf.', 'FIA_USB'),
('normal', 'PGFID-11527', 'The TSF management functions enable authorised users to set\n                    up and control the secure operation of the TOE. These\n                    administrative functions typically fall into a number of\n                    different categories:', 'FMT_MOF'),
('normal', 'PGFID-9575', 'Note that these functions need to be present in a TOE based\n                    on the families included in the PP or ST. It is the\n                    responsibility of the PP/ST author to ensure that adequate\n                    functions will be provided to manage the TOE in a secure\n                    fashion.', 'FMT_MOF'),
('normal', 'PGFID-9576', 'The TSF might contain functions that can be controlled by an\n                    administrator. For example, the auditing functions could be\n                    switched off, the time synchronisation could be switchable,\n                    and/or the authentication mechanism could be modifiable.', 'FMT_MOF'),
('normal', 'PGFID-9005', 'This family defines the requirements on the management of\n                    security attributes.', 'FMT_MSA'),
('normal', 'PGFID-9006', 'Security attributes affect the behaviour of the TSF. Examples of\n                    security attributes are the groups to which a user belongs, the\n                    roles he/she might assume, the priority of a process (subject),\n                    and the rights belonging to a role or a user. These security\n                    attributes might need to be managed by the user, a subject, a\n                    specific authorised user (a user with explicitly given rights\n                    for this management) or inherit values according to a given\n                    policy/set of rules.', 'FMT_MSA'),
('normal', 'PGFID-10265', 'It is noted that the right to assign rights to users is\n                    itself a security attribute and/or potentially subject to\n                    management by, FMT_MSA.1, .', 'FMT_MSA'),
('normal', 'PGFID-9007', 'can be used to ensure that any\n                    accepted combination of security attributes is within a\n                    secure state. The definition of what\n                    ``secure\'\' means is left to the TOE guidance.', 'FMT_MSA'),
('normal', 'PGFID-9011', 'In some instances subjects, objects or user accounts are\n                    created. If no explicit values for the related security\n                    attributes are given, default values need to be used., FMT_MSA.1, can be used to specify that these default\n                    values can be managed.', 'FMT_MSA'),
('normal', 'PGFID-9052', 'This component imposes requirements on the management of TSF\n                    data. Examples of TSF data are the current time and the\n                    audit trail. So, for example, this family allows the\n                    specification of whom can read, delete or create the audit\n                    trail.', 'FMT_MTD'),
('normal', 'PGFID-9202', 'This family addresses revocation of security attributes for\n                    a variety of entities within a TOE.', 'FMT_REV'),
('normal', 'PGFID-9254', 'This family addresses the capability to enforce time limits\n                    for the validity of security attributes. This family can be\n                    applied to specify expiration requirements for access\n                    control attributes, identification and authentication\n                    attributes, certificates (key certificates such as ANSI X509\n                    for example), audit attributes, etc.', 'FMT_SAE'),
('normal', 'PGFID-9145', 'This family reduces the likelihood of damage resulting from\n                    users abusing their authority by taking actions outside\n                    their assigned functional responsibilities. It also\n                    addresses the threat that inadequate mechanisms have been\n                    provided to securely administer the TSF.', 'FMT_SMR'),
('normal', 'PGFID-9146', 'This family requires that information be maintained to\n                    identify whether a user is authorised to use a particular\n                    security-relevant administrative function.', 'FMT_SMR'),
('normal', 'PGFID-9147', 'Some management actions can be performed by users, others\n                    only by designated people within the organisation. This\n                    family allows the definition of different roles, such as\n                    owner, auditor, administrator, daily-management.', 'FMT_SMR'),
('normal', 'PGFID-10164', 'The roles as used in this family are security related\n                    roles. Each role can encompass an extensive set of\n                    capabilities (e.g. root in UNIX), or can be a single right\n                    (e.g. right to read a single object such as the\n                    helpfile). This family defines the roles. The capabilities\n                    of the role are defined in, FMT_MOF, ,, FMT_MSA, and, FMT_MTD, .', 'FMT_SMR'),
('normal', 'PGFID-9148', 'Some type of roles might be mutually exclusive. For example\n                    the daily-management might be able to define and activate\n                    users, but might not be able to remove users (which is\n                    reserved for the administrator (role)). This class will\n                    allow policies such as two-person control to be specified.', 'FMT_SMR'),
('normal', 'PGFID-9028', 'Anonymity ensures that a subject may use a resource or\n                    service without disclosing its user identity.', 'FPR_ANO'),
('normal', 'PGFID-9030', 'The intention of this family is to specify that a user or\n                    subject might take action without releasing its user\n                    identity to others such as users, subjects, or objects. The\n                    family provides the PP/ST author with a means to identify\n                    the set of users that cannot see the identity of someone\n                    performing certain actions.', 'FPR_ANO'),
('normal', 'PGFID-10263', 'Therefore if a subject, using anonymity, performs an action,\n                    another subject will not be able to determine either the\n                    identity or even a reference to the identity of the user\n                    employing the subject. The focus of the anonymity is on the\n                    protection of the users identity, not on the protection of\n                    the subject identity; hence, the identity of the subject is\n                    not protected from disclosure.', 'FPR_ANO'),
('normal', 'PGFID-10272', 'The interpretation of ``determine\'\' should be\n                    taken in the broadest sense of the word.', 'FPR_ANO'),
('normal', 'PGFID-9631', 'The component levelling distinguishes between the users and\n                    an authorised user. An authorised user is often excluded\n                    from the component, and therefore allowed to retrieve a\n                    user\'s identity. However, there is no specific\n                    requirement that an authorised user must be able to have the\n                    capability to determine the user\'s identity. For\n                    ultimate privacy the components would be used to say that no\n                    user or authorised user can see the identity of anyone\n                    performing any action.', 'FPR_ANO'),
('normal', 'PGFID-9038', 'Although some systems will provide anonymity for all\n                    services that are provided, other systems provide anonymity\n                    for certain subjects/operations. To provide this\n                    flexibility, an operation is included where the scope of the\n                    requirement is defined. If the PP/ST author wants to address\n                    all subjects/operations, the words ``all subjects and\n                    all operations\'\' could be provided.', 'FPR_ANO'),
('normal', 'PGFID-9039', 'Possible applications include the ability to make enquiries\n                    of a confidential nature to public databases, respond to\n                    electronic polls, or make anonymous payments or donations.', 'FPR_ANO'),
('normal', 'PGFID-9040', 'Examples of potential hostile users or subjects are\n                    providers, system operators, communication partners and\n                    users, who smuggle malicious parts (e.g. Trojan Horses) into\n                    systems. All of these users can investigate usage patterns\n                    (e.g. which users used which services) and misuse this\n                    information.', 'FPR_ANO'),
('normal', 'PGFID-9102', 'Pseudonymity ensures that a user may use a resource or\n                    service without disclosing its identity, but can still be\n                    accountable for that use. The user can be accountable by\n                    directly being related to a reference (alias) held by the\n                    TSF, or by providing an alias that will be used for\n                    processing purposes, such as an account number.', 'FPR_PSE'),
('normal', 'PGFID-9104', 'In several respects, pseudonymity resembles anonymity. Both\n                    pseudonymity and anonymity protect the identity of the user,\n                    but in pseudonymity a reference to the user\'s\n                    identity is maintained for accountability or other purposes.', 'FPR_PSE'),
('normal', 'PGFID-9108', 'The component, FPR_PSE.1, does not\n                    specify the requirements on the reference to the user\'s\n                    identity. For the purpose of specifying requirements on this\n                    reference two sets of requirements are presented:, FPR_PSE.2, and, FPR_PSE.3, .', 'FPR_PSE'),
('normal', 'PGFID-9119', 'Another usage of the reference is as an alias for a\n                    user. For example, a user who does not wish to be\n                    identified, can provide an account to which the resource\n                    utilisation should be charged. In such cases, the reference\n                    to the user identity is an alias for the user, where other\n                    users or subjects can use the alias for performing their\n                    functions without ever obtaining the user\'s\n                    identity (for example, statistical operations on use of the\n                    system). In this case, the PP/ST author might wish to\n                    incorporate, FPR_PSE.3, to specify the rules to\n                    which the reference must conform.', 'FPR_PSE'),
('normal', 'PGFID-10383', 'Using these constructs above, digital money can be created\n                    using, FPR_PSE.2, specifying that the user\n                    identity will be protected and, if so specified in the\n                    condition, that there be a requirement to trace the user\n                    identity if the digital money is spent twice. When the user\n                    is honest, the user identity is protected; if the user tries\n                    to cheat, the user identity can be traced.', 'FPR_PSE'),
('normal', 'PGFID-10385', 'A different kind of system could be a digital credit card,\n                    where the user will provide a pseudonym that indicates an\n                    account from which the cash can be subtracted. In such\n                    cases, for example,, FPR_PSE.3, could be\n                    used. This component would specify that the user identity\n                    will be protected and, furthermore, that the same user will\n                    only get assigned values for which he/she has provided money\n                    (if so specified in the conditions).', 'FPR_PSE'),
('normal', 'PGFID-9137', 'It should be realised that the more stringent components\n                    potentially cannot be combined with other requirements, such\n                    as identification and authentication or audit. The\n                    interpretation of ``determine the identity\'\'\n                    should be taken in the broadest sense of the word. The\n                    information is not provided by the TSF during the operation,\n                    nor can the entity determine the subject or the owner of the\n                    subject that invoked the operation, nor will the TSF record\n                    information, available to the users or subjects, which might\n                    release the user identity in the future.', 'FPR_PSE'),
('normal', 'PGFID-10427', 'The intent is that the TSF not reveal any information that\n                    would compromise the identity of the user, e.g. the identity\n                    of subjects acting on the user\'s behalf. The\n                    information that is considered to be sensitive depends on\n                    the effort an attacker is capable of spending.', 'FPR_PSE'),
('normal', 'PGFID-10431', 'Possible applications include the ability to charge a caller\n                    for premium rate telephone services without disclosing his\n                    or her identity, or to be charged for the anonymous use of\n                    an electronic payment system.', 'FPR_PSE'),
('normal', 'PGFID-9144', 'Examples of potential hostile users are providers, system\n                    operators, communication partners and users, who smuggle\n                    malicious parts (e.g. Trojan Horses) into systems. All of\n                    these attackers can investigate which users used which\n                    services and misuse this information. Additionally to\n                    Anonymity services, Pseudonymity Services contains methods\n                    for authorisation without identification, especially for\n                    anonymous payment (``Digital Cash\'\'). This\n                    helps providers to obtain their payment in a secure way\n                    while maintaining customer anonymity.', 'FPR_PSE'),
('normal', 'PGFID-9309', 'Unlinkability ensures that a user may make multiple uses of\n                    resources or services without others being able to link\n                    these uses together. Unlinkability differs from pseudonymity\n                    that, although in pseudonymity the user is also not known,\n                    relations between different actions can be provided.', 'FPR_UNL'),
('normal', 'PGFID-10507', 'The requirements for unlinkability are intended to protect\n                    the user identity against the use of profiling of the\n                    operations. For example, when a telephone smart card is\n                    employed with a unique number, the telephone company can\n                    determine the behaviour of the user of this telephone\n                    card. When a telephone profile of the users is known, the\n                    card can be linked to a specific user. Hiding the\n                    relationship between different invocations of a service or\n                    access of a resource will prevent this kind of information\n                    gathering.', 'FPR_UNL'),
('normal', 'PGFID-10521', 'As a result, a requirement for unlinkability could imply\n                    that the subject and user identity of an operation must be\n                    protected. Otherwise this information might be used to link\n                    operations together.', 'FPR_UNL'),
('normal', 'PGFID-10522', 'Unlinkability requires that different operations cannot be\n                    related. This relationship can take several forms. For\n                    example, the user associated with the operation, or the\n                    terminal which initiated the action, or the time the action\n                    was executed. The PP/ST author can specify what kind of\n                    relationships are present that must be countered.', 'FPR_UNL'),
('normal', 'PGFID-9314', 'Possible applications include the ability to make multiple\n                    use of a pseudonym without creating a usage pattern that\n                    might disclose the user\'s identity.', 'FPR_UNL'),
('normal', 'PGFID-9315', 'Examples for potential hostile subjects and users are\n                    providers, system operators, communication partners and\n                    users, who smuggle malicious parts, (e.g. Trojan Horses)\n                    into systems, they do not operate but want to get\n                    information about. All of these attackers can investigate\n                    (e.g. which users used which services) and misuse this\n                    information. Unlinkability protects users from linkages,\n                    which could be drawn between several actions of a\n                    customer. An example is a series of phone calls made by an\n                    anonymous customer to different partners, where the\n                    combination of the partner\'s identities might disclose the\n                    identity of the customer.', 'FPR_UNL'),
('normal', 'PGFID-9354', 'Unobservability ensures that a user may use a resource or\n                    service without others, especially third parties, being able\n                    to observe that the resource or service is being used.', 'FPR_UNO'),
('normal', 'PGFID-10552', 'Unobservability approaches the user identity from a\n                    different direction than the previous families Anonymity,\n                    Pseudonymity and Unlinkability. In this case, the intent is\n                    to hide the use of a resource or service, rather than to\n                    hide the user\'s identity.', 'FPR_UNO'),
('normal', 'PGFID-11478', 'A number of techniques can be applied to implement\n                    unobservability. Examples of techniques to provide\n                    unobservability are:', 'FPR_UNO'),
('normal', 'PGFID-9357', 'Sometimes, users should not see the use of a resource, but an\n                    authorised user must be allowed to see the use of the resource\n                    in order to perform his duties. In such cases, the, FPR_UNO.4, could be used, which provides the\n                    capability for one or more authorised users to see the\n                    usage.', 'FPR_UNO'),
('normal', 'PGFID-11532', 'This family makes use of the concept ``parts of the\n                    TOE\'\'. This is considered any part of the TOE that is either\n                    physically or logically separated from other parts of the\n                    TOE.', 'FPR_UNO'),
('normal', 'PGFID-9361', 'Unobservability of communications may be an important factor\n                    in many areas, such as the enforcement of constitutional\n                    rights, organisational policies, or in defence related\n                    applications.', 'FPR_UNO'),
('normal', 'PGFID-270766', 'The requirements of this family ensure that the TOE will\n                    always enforce its SFRs in the event of certain\n                    types of failures in the TSF.', 'FPT_FLS'),
('normal', 'PGFID-272767', 'This family defines the rules for the prevention of loss of\n                    availability of TSF data moving between the TSF and another\n                    trusted IT product. This data could be TSF critical data\n                    such as passwords, keys, audit data, or TSF executable code.', 'FPT_ITA'),
('normal', 'PGFID-270792', 'This family is used in a distributed context where the TSF\n                    is providing TSF data to another trusted IT product. The\n                    TSF can only take the measures at its site and cannot be\n                    held responsible for the TSF at the other trusted IT\n                    product.', 'FPT_ITA'),
('normal', 'PGFID-275056', 'If there are different availability metrics for different\n                    types of TSF data, then this component should be iterated\n                    for each unique pairing of metrics and types of TSF data.', 'FPT_ITA'),
('normal', 'PGFID-272765', 'This family defines the rules for the protection from\n                    unauthorised disclosure of TSF data moving between the TSF\n                    and another trusted IT product. Examples of this data are\n                    TSF critical data such as passwords, keys, audit data, or\n                    TSF executable code.', 'FPT_ITC'),
('normal', 'PGFID-270811', 'This family is used in a distributed context where\n                    the TSF is providing TSF data to another trusted IT\n                    product. The TSF can only take the measures at its site and\n                    cannot be held responsible for the behaviour of the other\n                    trusted IT product.', 'FPT_ITC'),
('normal', 'PGFID-275673', 'This family defines the rules for the protection, from\n                    unauthorised modification, of TSF data during transmission\n                    between the TSF and another trusted IT product. Examples of\n                    this data are TSF critical data such as passwords, keys,\n                    audit data, or TSF executable code.', 'FPT_ITI'),
('normal', 'PGFID-270820', 'This family is used in a distributed context where\n                    the TSF is exchanging TSF data with another trusted IT\n                    product. Note that a requirement that addresses\n                    modification, detection, or recovery at another trusted\n                    IT product cannot be specified, as the mechanisms that\n                    another trusted IT product will use to protect its data\n                    cannot be determined in advance. For this reason, these\n                    requirements are expressed in terms of the ``TSF\n                    providing a capability\'\' which another trusted\n                    IT product can use.', 'FPT_ITI'),
('normal', 'PGFID-276194', 'This family provides requirements that address protection of\n                    TSF data when it is transferred between separate parts of a\n                    TOE across an internal channel.', 'FPT_ITT'),
('normal', 'PGFID-270866', 'The determination of the degree of separation (i.e.,\n                    physical or logical) that would make application of this\n                    family useful depends on the intended environment of use. In\n                    a hostile environment, there may be risks arising from\n                    transfers between parts of the TOE separated by only a\n                    system bus or an inter-process communications channel. In\n                    more benign environments, the transfers may be across more\n                    traditional network media.', 'FPT_ITT'),
('normal', 'PGFID-275235', 'TSF physical protection components refer to restrictions on\n                    unauthorised physical access to the TSF, and to the\n                    deterrence of, and resistance to, unauthorised physical\n                    modification, or substitution of the TSF.', 'FPT_PHP'),
('normal', 'PGFID-270927', 'The requirements in this family ensure that the TSF is\n                    protected from physical tampering and\n                    interference. Satisfying the requirements of these\n                    components results in the TSF being packaged and used in\n                    such a manner that physical tampering is detectable, or\n                    resistance to physical tampering is measurable based on\n                    defined work factors. Without these components, the\n                    protection functions of a TSF lose their effectiveness in\n                    environments where physical damage cannot be prevented. This\n                    component also provides requirements regarding how the TSF\n                    must respond to physical tampering attempts.', 'FPT_PHP'),
('normal', 'PGFID-270931', 'Examples of physical tampering scenarios include mechanical\n                    attack, radiation, changing the temperature.', 'FPT_PHP'),
('normal', 'PGFID-270934', 'It is acceptable for the functions that are available to an\n                    authorised user for detecting physical tampering to be\n                    available only in an off-line or maintenance mode. Controls\n                    should be in place to limit access during such modes to\n                    authorised users. As the TSF may not be\n                    ``operational\'\' during those modes, it\n                    may not be able to provide normal enforcement for authorised\n                    user access. The physical implementation of a TOE might\n                    consist of several structures: for example an outer\n                    shielding, cards, and chips. This set of\n                    ``elements\'\' as a whole must protect\n                    (protect, notify and resist) the TSF from physical\n                    tampering. This does not mean that all devices must provide\n                    these features, but the complete physical construct as a\n                    whole should.', 'FPT_PHP'),
('normal', 'PGFID-272069', 'Although there is only minimal auditing associating with\n                    these components, this is solely because there is the\n                    potential that the detection and alarm mechanisms may be\n                    implemented completely in hardware, below the level of\n                    interaction with an audit subsystem (for example, a\n                    hardware-based detection system based on breaking a circuit\n                    and lighting a light emitting diode (LED) if the circuit is\n                    broken when a button is pressed by the authorised\n                    user). Nevertheless, a PP/ST author may determine that for a\n                    particular anticipated threat environment, there is a need\n                    to audit physical tampering. If this is the case, the PP/ST\n                    author should include appropriate requirements in the list\n                    of audit events. Note that inclusion of these requirements\n                    may have implications on the hardware design and its\n                    interface to the software.', 'FPT_PHP'),
('normal', 'PGFID-275748', 'The requirements of this family ensure that the TSF can\n                    determine that the TOE is started-up without protection\n                    compromise and can recover without protection compromise\n                    after discontinuity of operations. This family is important\n                    because the start-up state of the TSF determines the\n                    protection of subsequent states.', 'FPT_RCV'),
('normal', 'PGFID-275750', 'Recovery components reconstruct the TSF secure states, or\n                    prevent transitions to insecure states, as a direct response\n                    to occurrences of expected failures, discontinuity of\n                    operation or start-up. Failures that must be generally\n                    anticipated include the following:', 'FPT_RCV'),
('normal', 'PGFID-271001', 'Note that recovery may be from either a complete or partial\n                    failure scenario. Although a complete failure might occur in\n                    a monolithic operating system, it is less likely to occur in\n                    a distributed environment. In such environments, subsystems\n                    may fail, but other portions remain operational. Further,\n                    critical components may be redundant (disk mirroring,\n                    alternative routes), and checkpoints may be available. Thus,\n                    recovery is expressed in terms of recovery to a secure\n                    state.', 'FPT_RCV'),
('normal', 'PGFID-272954', 'This family identifies a maintenance mode. In this\n                    maintenance mode normal operation might be impossible or\n                    severely restricted, as otherwise insecure situations might\n                    occur. Typically, only authorised users should be allowed\n                    access to this mode but the real details of who can access\n                    this mode is a function of, FMT, . If, FMT, does not put any controls on who can access this\n                    mode, then it may be acceptable to allow any user to restore\n                    the system if the TOE enters such a state. However, in\n                    practice, this is probably not desirable as the user\n                    restoring the system has an opportunity to configure the TOE\n                    in such a way as to violate the SFRs.', 'FPT_RCV'),
('normal', 'PGFID-271002', 'Mechanisms designed to detect exceptional conditions during\n                    operation fall under, FPT_TST, ,, FPT_FLS, , and other areas that address the\n                    concept of ``Software Safety.\'\'  It is likely that the use of\n                    one of these families will be required to support the adoption\n                    of, FPT_RCV, . This is to ensure that\n                    the TOE will be able to detect when recovery is\n                    required.', 'FPT_RCV'),
('normal', 'PGFID-274983', 'Throughout this family, the phrase ``secure state\'\' is\n                    used. This refers to some state in which the TOE has\n                    consistent TSF data and a TSF that can correctly enforce the\n                    policy. This state may be the initial ``boot\'\' of a clean\n                    system, or it might be some checkpointed state.', 'FPT_RCV'),
('normal', 'PGFID-271140', 'This family addresses detection of replay for various types\n                    of entities and subsequent actions to correct.', 'FPT_RPL'),
('normal', 'PGFID-272641', 'Distributed TOEs may give rise to greater complexity than\n                    monolithic TOEs through the potential for differences in\n                    state between parts of the TOE, and through delays in\n                    communication. In most cases, synchronisation of state\n                    between distributed functions involves an exchange protocol,\n                    not a simple action. When malice exists in the distributed\n                    environment of these protocols, more complex defensive\n                    protocols are required.', 'FPT_SSP'),
('normal', 'PGFID-271322', ', FPT_SSP, establishes the requirement for certain\n                    critical functions of the TSF to use a trusted\n                    protocol., FPT_SSP, ensures that two distributed\n                    parts of the TOE (e.g. hosts) have synchronised their states\n                    after a security-relevant action.', 'FPT_SSP'),
('normal', 'PGFID-271327', 'Some states may never be synchronised, or the transaction\n                    cost may be too high for practical use; encryption key\n                    revocation is an example, where knowing the state after the\n                    revocation action is initiated can never be known. Either\n                    the action was taken and acknowledgment cannot be sent, or\n                    the message was ignored by hostile communication partners\n                    and the revocation never occurred. Indeterminacy is unique\n                    to distributed TOEs. Indeterminacy and state synchrony\n                    are related, and the same solution may apply. It is futile\n                    to design for indeterminate states; the PP/ST author should\n                    express other requirements in such cases (e.g. raise an\n                    alarm, audit the event).', 'FPT_SSP'),
('normal', 'PGFID-275932', 'This family addresses requirements for a reliable time stamp\n                    function within a TOE.', 'FPT_STM'),
('normal', 'PGFID-271339', 'It is the responsibility of the PP/ST author to clarify the\n                    meaning of the phrase ``reliable time\n                    stamp\'\', and to indicate where the responsibility\n                    lies in determining the acceptance of trust.', 'FPT_STM'),
('normal', 'PGFID-271352', 'In a distributed or composite environment, a TOE may\n                    need to exchange TSF data (e.g. the SFP-attributes\n                    associated with data, audit information, identification\n                    information) with another trusted IT Product, This family\n                    defines the requirements for sharing and consistent\n                    interpretation of these attributes between the TSF of the\n                    TOE and that of a different trusted IT Product.', 'FPT_TDC'),
('normal', 'PGFID-276208', 'The components in this family are intended to provide\n                    requirements for automated support for TSF data consistency\n                    when such data is transmitted between the TSF of the TOE and\n                    another trusted IT Product. It is also possible that wholly\n                    procedural means could be used to produce security attribute\n                    consistency, but they are not provided for here.', 'FPT_TDC'),
('normal', 'PGFID-271355', 'This family is different from FDP_ETC and FDP_ITC, as those\n                    two families are concerned only with resolving the security\n                    attributes between the TSF and its import/export medium.', 'FPT_TDC'),
('normal', 'PGFID-271356', 'If the integrity of the TSF data is of concern, requirements\n                    should be chosen from the, FPT_ITI, family. These\n                    components specify requirements for the TSF to be able to\n                    detect or detect and correct modifications to TSF data in\n                    transit.', 'FPT_TDC'),
('normal', 'PGFID-275895', 'This family defines requirements for the testing of one or more external\n        entities by the TSF. These external entities are not human users, and they can\n        include combinations of software and/or hardware interacting with the TOE.', 'FPT_TEE'),
('normal', 'PGFID-275901', 'Examples of the types of tests that may be run are:', 'FPT_TEE'),
('normal', 'PGFID-270727', 'Note that the external entity may ``lie\'\' about the test results, either on\n        purpose or because it is not working correctly.', 'FPT_TEE'),
('normal', 'PGFID-274861', 'The requirements of this family are needed to ensure the\n                    consistency of TSF data when such data is replicated\n                    internal to the TOE. Such data may become inconsistent if an\n                    internal channel between parts of the TOE becomes\n                    inoperative. If the TOE is internally structured as a\n                    network of parts of the TOE, this can occur when parts\n                    become disabled, network connections are broken, and so on.', 'FPT_TRC'),
('normal', 'PGFID-271383', 'The method of ensuring consistency is not specified in this\n                    component. It could be attained through a form of\n                    transaction logging (where appropriate transactions are\n                    ``rolled back\'\' to a site upon\n                    reconnection); it could be updating the replicated data\n                    through a synchronisation protocol. If a particular protocol\n                    is necessary for a PP/ST, it can be specified through\n                    refinement.', 'FPT_TRC'),
('normal', 'PGFID-271384', 'It may be impossible to synchronise some states, or the cost\n                    of such synchronisation may be too high. Examples of this\n                    situation are communication channel and encryption key\n                    revocations. Indeterminate states may also occur; if a\n                    specific behaviour is desired, it should be specified via\n                    refinement.', 'FPT_TRC'),
('normal', 'PGFID-272915', 'The family defines the requirements for the self-testing of\n                    the TSF with respect to some expected correct\n                    operation. Examples are interfaces to enforcement functions,\n                    and sample arithmetical operations on critical parts of the\n                    TOE. These tests can be carried out at start-up,\n                    periodically, at the request of an authorised user, or when\n                    other conditions are met. The actions to be taken by the TOE\n                    as the result of self testing are defined in other families.', 'FPT_TST'),
('normal', 'PGFID-277145', 'In addition, use of this component may, with appropriate\n                    conditions, help to prevent inappropriate or damaging TSF\n                    changes being applied to an operational TOE as the result of\n                    maintenance activities.', 'FPT_TST'),
('normal', 'PGFID-3697', 'This family provides requirements for the availability of\n                    capabilities even in the case of failures. Examples of such\n                    failures are power failure, hardware failure, or software\n                    error. In case of these errors, if so specified, the TOE\n                    will maintain the specified capabilities. The PP/ST author\n                    could specify, for example, that a TOE used in a nuclear\n                    plant will continue the operation of the shut-down procedure\n                    in the case of power-failure or communication-failure.', 'FRU_FLT'),
('normal', 'PGFID-3699', 'Because the TOE can only continue its correct operation if\n                    the SFRs are enforced, there is a requirement that the system\n                    must remain in a secure state after a failure. This\n                    capability is provided by, FPT_FLS.1, .', 'FRU_FLT'),
('normal', 'PGFID-3703', 'The mechanisms to provide fault tolerance could be active or\n                    passive. In case of an active mechanism, specific functions\n                    are in place that are activated in case the error\n                    occurs. For example, a fire alarm is an active mechanism:\n                    the TSF will detect the fire and can take action such as\n                    switching operation to a backup. In a passive scheme, the\n                    architecture of the TOE is capable of handling the\n                    error. For example, the use of a majority voting scheme with\n                    multiple processors is a passive solution; failure of one\n                    processor will not disrupt the operation of the TOE\n                    (although it needs to be detected to allow correction).', 'FRU_FLT'),
('normal', 'PGFID-3704', 'For this family, it does not matter whether the failure has\n                    been initiated accidentally (such as flooding or unplugging\n                    the wrong device) or intentionally (such as monopolising).', 'FRU_FLT'),
('normal', 'PGFID-3741', 'The requirements of this family allow the TSF to control the\n                    use of resources under the control of the TSF by users and subjects such\n                    that high priority activities under the control of the TSF will always be\n                    accomplished without interference or delay due to low\n                    priority activities. In other words, time critical tasks\n                    will not be delayed by tasks that are less time critical.', 'FRU_PRS'),
('normal', 'PGFID-3742', 'This family could be applicable to several types of\n                    resources, for example, processing capacity, and\n                    communication channel capacity.', 'FRU_PRS'),
('normal', 'PGFID-3743', 'The Priority of Service mechanism might be passive or\n                    active. In a passive Priority of Service system, the system\n                    will select the task with the highest priority when given a\n                    choice between two waiting applications. While using passive\n                    Priority of Service mechanisms, when a low priority task is\n                    running, it cannot be interrupted by a high priority\n                    task. While using an active Priority of Service mechanisms,\n                    lower priority tasks might be interrupted by new high\n                    priority tasks.', 'FRU_PRS'),
('normal', 'PGFID-3749', 'The audit requirement states that all reasons for rejection\n                    should be audited. It is left to the developer to argue that\n                    an operation is not rejected but delayed.', 'FRU_PRS'),
('normal', 'PGFID-3789', 'The requirements of this family allow the TSF to control the\n                    use of resources under the control of the TSF by users and subjects such\n                    that unauthorised denial of service will not take place by\n                    means of monopolisation of resources by other users or\n                    subjects.', 'FRU_RSA'),
('normal', 'PGFID-3791', 'Resource allocation rules allow the creation of quotas or\n                    other means of defining limits on the amount of resource\n                    space or time that may be allocated on behalf of a specific\n                    user or subjects. These rules may, for example:', 'FRU_RSA'),
('normal', 'PGFID-3794', 'In general, these functions will be implemented through the\n                    use of attributes assigned to users and resources.', 'FRU_RSA'),
('normal', 'PGFID-3795', 'The objective of these components is to ensure a certain\n                    amount of fairness among the users (e.g. a single user\n                    should not allocate all the available space) and\n                    subjects. Since resource allocation often goes beyond the\n                    lifespan of a subject (i.e. files often exist longer than\n                    the applications that generated them), and multiple\n                    instantiations of subjects by the same user should not\n                    negatively affect other users too much, the components allow\n                    that the allocation limits are related to the users. In some\n                    situations the resources are allocated by a subject\n                    (e.g. main memory or CPU cycles). In those instances the\n                    components allow that the resource allocation be on the\n                    level of subjects.', 'FRU_RSA'),
('normal', 'PGFID-3796', 'This family imposes requirements on resource allocation, not\n                    on the use of the resource itself. The audit requirements\n                    therefore, as stated, also apply to the allocation of the\n                    resource, not to the use of the resource.', 'FRU_RSA'),
('normal', 'PGFID-294007', 'This family defines requirements that will limit the session\n                    security attributes a user may select, and the subjects to\n                    which a user may be bound, based on: the method of access;\n                    the location or port of access; and/or the time\n                    (e.g. time-of-day, day-of-week).', 'FTA_LSA'),
('normal', 'PGFID-292287', 'This family provides the capability for a PP/ST author to\n                    specify requirements for the TSF to place limits on the\n                    domain of an authorised user\'s security attributes\n                    based on an environmental condition. For example, a user may\n                    be allowed to establish a ``secret session\'\'\n                    during normal business hours but outside those hours the\n                    same user may be constrained to only establishing\n                    ``unclassified sessions\'\'. The identification of\n                    relevant constraints on the domain of selectable attributes\n                    can be achieved through the use of the selection\n                    operation. These constraints can be applied on an\n                    attribute-by-attribute basis. When there exists a need to\n                    specify constraints on multiple attributes this component\n                    will have to be replicated for each attribute. Examples of\n                    attributes that could be used to limit the session security\n                    attributes are:', 'FTA_LSA'),
('normal', 'PGFID-292326', 'This family defines how many sessions a user may have at the\n                    same time (concurrent sessions). This number of concurrent\n                    sessions can either be set for a group of users or for each\n                    individual user.', 'FTA_MCS'),
('normal', 'PGFID-294046', 'This family defines requirements for the TSF to provide the\n                capability for TSF-initiated and user-initiated locking,\n                unlocking, and termination of interactive sessions.', 'FTA_SSL'),
('normal', 'PGFID-292378', 'When a user is directly interacting with subjects in the TOE\n                (interactive session), the user\'s terminal is vulnerable if\n                left unattended. This family provides requirements for the TSF\n                to disable (lock) the terminal or terminate the session after\n                a specified period of inactivity, and for the user to initiate\n                the disabling (locking) of the terminal or terminate the\n                session. To reactivate the terminal, an event specified by the\n                PP/ST author, such as the user re-authentication must\n                occur.', 'FTA_SSL'),
('normal', 'PGFID-292379', 'A user is considered inactive, if he/she has not provided any\n                stimulus to the TOE for a specified period of time.', 'FTA_SSL'),
('normal', 'PGFID-292383', 'A PP/ST author should consider whether, FTP_TRP.1, should be included. In that case, the function ``session\n                locking\'\' should be included in the operation in, FTP_TRP.1, .', 'FTA_SSL'),
('normal', 'PGFID-292461', 'Prior to identification and authentication, TOE access\n                    requirements provide the ability for the TOE to display an\n                    advisory warning message to potential users pertaining to\n                    appropriate use of the TOE.', 'FTA_TAB'),
('normal', 'PGFID-293518', 'This family defines requirements for the TSF to display to\n                    users, upon successful session establishment to the TOE, a\n                    history of unsuccessful attempts to access the account. This\n                    history may include the date, time, means of access, and\n                    port of the last successful access to the TOE, as well as\n                    the number of unsuccessful attempts to access the TOE since\n                    the last successful access by the identified user.', 'FTA_TAH');
INSERT INTO `ffusernotes` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-292555', 'This family defines requirements to deny an user permission\n                    to establish a session with the TOE based on attributes such\n                    as the location or port of access, the user\'s security\n                    attribute (e.g. identity, clearance level, integrity level,\n                    membership in a role), ranges of time (e.g. time-of-day,\n                    day-of-week, calendar dates) or combinations of parameters.', 'FTA_TSE'),
('normal', 'PGFID-292557', 'This family provides the capability for the PP/ST author to\n                    specify requirements for the TOE to place constraints on the\n                    ability of an authorised user to establish a session with\n                    the TOE. The identification of relevant constraints can be\n                    achieved through the use of the selection\n                    operation. Examples of attributes that could be used to\n                    specify the session establishment constraints are:', 'FTA_TSE'),
('normal', 'PGFID-292564', 'This capability is particularly relevant in situations where\n                    authorisation or login may take place at a different\n                    location from where TOE access checks are performed.', 'FTA_TSE'),
('normal', 'PGFID-1851', 'This family defines the rules for the creation of a trusted\n                    channel connection that goes between the TSF and another\n                    trusted IT product for the performance of security critical\n                    operations between the products. An example of such a\n                    security critical operation is the updating of the TSF\n                    authentication database by the transfer of data from a\n                    trusted product whose function is the collection of audit\n                    data.', 'FTP_ITC'),
('normal', 'PGFID-2316', 'This family defines the requirements to establish and\n                    maintain trusted communication to or from users and the\n                    TSF. A trusted path may be required for any\n                    security-relevant interaction. Trusted path exchanges may be\n                    initiated by a user during an interaction with the TSF, or\n                    the TSF may establish communication with the user via a\n                    trusted path.', 'FTP_TRP');

-- --------------------------------------------------------

--
-- Table structure for table `item`
--

CREATE TABLE `item` (
  `id_item` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `list`
--

CREATE TABLE `list` (
  `id_list` varchar(100) NOT NULL,
  `id_item` varchar(100) DEFAULT NULL,
  `testo_item` varchar(10000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `listassurancerequirements`
--

CREATE TABLE `listassurancerequirements` (
  `id` varchar(255) NOT NULL,
  `name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `listassurancerequirements`
--

INSERT INTO `listassurancerequirements` (`id`, `name`) VALUES
('adv_fsp.5', 'Complete semi-formal functional specification                 with additional error information'),
('adv_imp.2', 'Complete mapping of the implementation representation of the TSF'),
('ate_cov.1', 'Evidence of coverage');

-- --------------------------------------------------------

--
-- Table structure for table `listfco`
--

CREATE TABLE `listfco` (
  `id` varchar(255) NOT NULL,
  `name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `listfco`
--

INSERT INTO `listfco` (`id`, `name`) VALUES
('FCO_NRR.1', 'Selective proof of receipt'),
('FCS_CKM.3', 'Cryptographic key access'),
('FCS_CKM.4', 'Cryptographic key destruction'),
('FDP_ETC.1', 'Export of user data without security           attributes');

-- --------------------------------------------------------

--
-- Table structure for table `listitems`
--

CREATE TABLE `listitems` (
  `task_id` varchar(2) DEFAULT NULL,
  `id` varchar(12) DEFAULT NULL,
  `text` varchar(10000) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `listitems`
--

INSERT INTO `listitems` (`task_id`, `id`, `text`, `idf`) VALUES
('', '', '', 'pgfId-852565'),
('0', 'PGFID-798509', 'Identify the policies to be enforced from the, FDP_ACC, , and, FDP_IFC, families. These\n                        families define scope of control for the policy,\n                        granularity of control and may identify some rules to go\n                        with the policy.', 'PGFID-805279'),
('1', 'PGFID-802643', 'Identify the components and perform any applicable operations\n                        in the policy components. The assignment operations may be\n                        performed generally (such as with a statement ``All\n                        files\'\') or specifically (``The files\n                        ``A\'\', ``B\'\', etc.) depending upon\n                        the level of detail known.', 'PGFID-805279'),
('2', 'PGFID-802348', 'Identify any applicable function components from the, FDP_ACF, and, FDP_IFF, families to address\n                        the named policy families from, FDP_ACC, and, FDP_IFC, . Perform the operations to make the\n                        components define the rules to be enforced by the named\n                        policies. This should make the components fit the\n                        requirements of the selected function envisioned or to be\n                        built.', 'PGFID-805279'),
('3', 'PGFID-802358', 'Identify who will have the ability to control and change\n                        security attributes under the function, such as only a\n                        security administrator, only the owner of the object,\n                        etc. Select the appropriate components from, FMT, and perform the operations. Refinements may be useful here\n                        to identify missing features, such as that some or all\n                        changes must be done via trusted path.', 'PGFID-805279'),
('4', 'PGFID-801371', 'Identify any appropriate components from the, FMT, for initial values for new objects and subjects.', 'PGFID-805279'),
('5', 'PGFID-801397', 'Identify any applicable rollback components from the, FDP_ROL, family.', 'PGFID-805279'),
('6', 'PGFID-798537', 'Identify any applicable residual information protection\n                        requirements from the, FDP_RIP, family.', 'PGFID-805279'),
('7', 'PGFID-798541', 'Identify any applicable import or export components, and how\n                        security attributes should be handled during import and\n                        export, from the, FDP_ITC, and, FDP_ETC, families.', 'PGFID-805279'),
('8', 'PGFID-798545', 'Identify any applicable internal TOE communication\n                        components from the, FDP_ITT, family.', 'PGFID-805279'),
('9', 'PGFID-802395', 'Identify any requirements for integrity protection of stored\n                        information from the, FDP_SDI, .', 'PGFID-805279'),
('10', 'PGFID-802435', 'Identify any applicable inter-TSF communication components\n                        from the, FDP_UCT, or, FDP_UIT, families.', 'PGFID-805279'),
('0', 'PGFID-205912', 'The TSF\'s implementation, which executes and implements the\n                    mechanisms that enforce the SFRs.', 'PGFID-270569'),
('1', 'PGFID-205922', 'The TSF\'s data, which are the administrative databases that guide the\n                    enforcement of the SFRs.', 'PGFID-270569'),
('2', 'PGFID-205932', 'The external entities that the TSF may interact with in order to\n                    enforce the SFRs.', 'PGFID-270569'),
('0', 'PGFID-272157', ', which provides an authorised user\n                    with the ability to detect external attacks on the parts\n                    of the TOE that comprise the TSF., FPT_PHP', 'PGFID-272144'),
('2', 'PGFID-273657', ',, FPT_RCV, , and, FPT_FLS, , which address the behaviour of the TSF\n                    when failure occurs and immediately after., FPT_TRC', 'PGFID-272144'),
('3', 'PGFID-272348', ',, FPT_ITA, ,, FPT_ITC, ,\n                    which address the protection and availability of TSF data between the TSF and another trusted IT product., FPT_ITI', 'PGFID-272144'),
('4', 'PGFID-272944', ', which addresses protection of TSF\n                    data when it is transmitted between physically-separated\n                    parts of the TOE., FPT_ITT', 'PGFID-272144'),
('5', 'PGFID-272250', ', which addresses the replay of\n                    various types of information and/or operations., FPT_RPL', 'PGFID-272144'),
('6', 'PGFID-272254', ', which addresses the synchronisation\n                    of states, based upon TSF data, between different parts of\n                    a distributed TSF., FPT_SSP', 'PGFID-272144'),
('7', 'PGFID-272261', ', which addresses reliable timing., FPT_STM', 'PGFID-272144'),
('8', 'PGFID-272274', ', which addresses the consistency of\n                    TSF data shared between the TSF and another trusted IT product., FPT_TDC', 'PGFID-272144');

-- --------------------------------------------------------

--
-- Table structure for table `listitemsfcousernotes`
--

CREATE TABLE `listitemsfcousernotes` (
  `task_id` varchar(2) DEFAULT NULL,
  `id` varchar(12) DEFAULT NULL,
  `text` varchar(10000) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `listitemsfcousernotes`
--

INSERT INTO `listitemsfcousernotes` (`task_id`, `id`, `text`, `idf`) VALUES
('0', 'pgfId-853094', '[, : one profile per\n                                user;]', 'PGFID-853092'),
('1', 'pgfId-853095', '[, : one profile\n                                for all users who possess the same group ID or operate\n                                using the same group account;]', 'PGFID-853092'),
('2', 'pgfId-853096', '[, : one profile for all users\n                                sharing a given operating role;]', 'PGFID-853092'),
('3', 'pgfId-853097', '[, : one profile for all users of a\n                                system.]', 'PGFID-853092'),
('0', 'pgfId-9209', '[Revocation will take place on the next login of the\n                                user;]', 'PGFID-9208'),
('1', 'pgfId-9210', '[Revocation will take place on the next attempt to open\n                                the file;]', 'PGFID-9208'),
('2', 'pgfId-9211', '[Revocation will take place within a fixed time. This\n                                might mean that all open connections are re-evaluated\n                                every x minutes.]', 'PGFID-9208');

-- --------------------------------------------------------

--
-- Table structure for table `listitemsffusernotes`
--

CREATE TABLE `listitemsffusernotes` (
  `task_id` varchar(2) DEFAULT NULL,
  `id` varchar(12) DEFAULT NULL,
  `text` varchar(10000) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `listitemsffusernotes`
--

INSERT INTO `listitemsffusernotes` (`task_id`, `id`, `text`, `idf`) VALUES
('0', 'PGFID-852976', 'Minimal: Successful use of the user security attribute\n                            administration functions;', 'pgfId-852974'),
('1', 'PGFID-852977', 'Basic: All attempted uses of the user security attribute\n                            administration functions;', 'pgfId-852974'),
('2', 'PGFID-852978', 'Basic: Identification of which user security attributes\n                            have been modified;', 'pgfId-852974'),
('3', 'PGFID-852979', 'Detailed: With the exception of specific sensitive\n                            attribute data items (e.g. passwords, cryptographic\n                            keys), the new values of the attributes should be\n                            captured.\'\'', 'pgfId-852974'),
('0', 'PGFID-852987', 'Introduction of objects within the control of the TSF into a\n                            subject\'s address space;', 'pgfId-852986'),
('1', 'PGFID-852988', 'Deletion of objects;', 'pgfId-852986'),
('2', 'PGFID-852989', 'Distribution or revocation of access rights or\n                            capabilities;', 'pgfId-852986'),
('3', 'PGFID-852990', 'Changes to subject or object security attributes;', 'pgfId-852986'),
('4', 'PGFID-852991', 'Policy checks performed by the TSF as a result of a\n                            request by a subject;', 'pgfId-852986'),
('5', 'PGFID-852992', 'The use of access rights to bypass a policy check;', 'pgfId-852986'),
('6', 'PGFID-852993', 'Use of Identification and Authentication functions;', 'pgfId-852986'),
('7', 'PGFID-852994', 'Actions taken by an operator, and/or authorised user\n                            (e.g. suppression of a TSF protection mechanism as\n                            human-readable labels);', 'pgfId-852986'),
('8', 'PGFID-852995', 'Import/export of data from/to removable media\n                            (e.g. printed output, tapes, diskettes).', 'pgfId-852986'),
('0', 'PGFID-853191', 'the actions of one or more users (e.g. identification,\n                            authentication, TOE entry, and access control actions);', 'pgfId-853190'),
('1', 'PGFID-853192', 'the actions performed on a specific object or TOE\n                            resource;', 'pgfId-853190'),
('2', 'PGFID-853193', 'all of a specified set of audited exceptions;\n                            or', 'pgfId-853190'),
('3', 'PGFID-853194', 'actions associated with a specific SFR attribute.', 'pgfId-853190'),
('0', 'PGFID-34302', 'The object attributes may include the assigned user\n                            for the cryptographic key, the user role, the\n                            cryptographic operation that the cryptographic key is\n                            to be used for, the cryptographic key identifier and\n                            the cryptographic key validity period.', 'pgfId-34301'),
('1', 'PGFID-34303', 'The object value may include the values of cryptographic\n                            key(s) and parameters excluding any sensitive\n                            information (such as secret or private cryptographic\n                            keys).', 'pgfId-34301'),
('0', 'PGFID-35151', 'the user application for which the security service is\n                            being used.', 'pgfId-35144'),
('1', 'PGFID-35152', 'the use of different cryptographic algorithms and/or\n                            cryptographic key sizes.', 'pgfId-35144'),
('2', 'PGFID-35153', 'the type or sensitivity of the data being operated on.', 'pgfId-35144'),
('0', 'PGFID-34359', 'The types of cryptographic operation may include digital\n                            signature generation and/or verification, cryptographic\n                            checksum generation for integrity and/or for\n                            verification of checksum, secure hash (message digest)\n                            computation, data encryption and/or decryption,\n                            cryptographic key encryption and/or decryption,\n                            cryptographic key agreement and random number\n                            generation.', 'pgfId-35143'),
('1', 'PGFID-34360', 'The subject attributes may include subject role(s) and\n                            user(s) associated with the subject.', 'pgfId-35143'),
('2', 'PGFID-34361', 'The object attributes may include the assigned user for\n                            the cryptographic key, user role, cryptographic\n                            operation the cryptographic key is to be used for,\n                            cryptographic key identifier, and the cryptographic key\n                            validity period.', 'pgfId-35143'),
('0', 'PGFID-798675', 'Access control lists (ACLs)', 'pgfId-798674'),
('1', 'PGFID-798676', 'Time-based access control specifications', 'pgfId-798674'),
('2', 'PGFID-798677', 'Origin-based access control specifications', 'pgfId-798674'),
('3', 'PGFID-798678', 'Owner-controlled access control attributes', 'pgfId-798674'),
('0', 'PGFID-798967', 'exporting of user data without any security attributes;', 'pgfId-798966'),
('1', 'PGFID-798968', 'exporting user data including security attributes where\n                            the two are associated with one another and the security\n                            attributes unambiguously represent the exported user\n                            data.', 'pgfId-798966'),
('0', 'PGFID-799282', 'importing user data from an unformatted medium\n                            (e.g. floppy disk, tape, scanner, video or audit\n                            signal), without including any security attributes, and\n                            physically marking the medium to indicate its contents;', 'pgfId-799280'),
('1', 'PGFID-799283', 'importing user data, including security attributes, from\n                            a medium and verifying that the object security\n                            attributes are appropriate;', 'pgfId-799280'),
('2', 'PGFID-800458', 'importing user data, including security attributes, from\n                            a medium using a cryptographic sealing technique to\n                            protect the association of user data and security\n                            attributes.', 'pgfId-799280'),
('0', 'PGFID-806213', 'importing of user data without any security attributes;', 'pgfId-806212'),
('1', 'PGFID-799291', 'importing of user data including security attributes\n                            where the two are associated with one another and the\n                            security attributes unambiguously represent the\n                            information being imported.', 'pgfId-806212'),
('0', 'PGFID-9959', 'Management functions that relate to access control,\n                            accountability and authentication controls enforced by\n                            the TOE. For example, definition and update of user\n                            security characteristics (e.g. unique identifiers\n                            associated with user names, user accounts, system entry\n                            parameters) or definition and update of auditing system\n                            controls (e.g. selection of audit events, management of\n                            audit trails, audit trail analysis, and audit report\n                            generation), definition and update of per-user policy\n                            attributes (such as user clearance), definition of known\n                            system access control labels, and control and management\n                            of user groups.', 'pgfId-11527'),
('1', 'PGFID-9572', 'Management functions that relate to controls over\n                            availability. For example, definition and update of\n                            availability parameters or resource quotas.', 'pgfId-11527'),
('2', 'PGFID-9573', 'Management functions that relate to general installation\n                            and configuration. For example, TOE configuration,\n                            manual recovery, installation of TOE security fixes (if\n                            any), repair and reinstallation of hardware.', 'pgfId-11527'),
('3', 'PGFID-9574', 'Management functions that relate to routine control and\n                            maintenance of TOE resources. For example, enabling and\n                            disabling peripheral devices, mounting of removable\n                            storage media, backup and recovery.', 'pgfId-11527'),
('0', 'PGFID-11479', 'Allocation of information impacting unobservability:\n                            Unobservability relevant information (e.g. information\n                            that describes that an operation occurred) can be\n                            allocated in several locations within the TOE. The\n                            information might be allocated to a single randomly\n                            chosen part of the TOE such that an attacker does not\n                            know which part of the TOE should be attacked. An\n                            alternative system might distribute the information such\n                            that no single part of the TOE has sufficient\n                            information that, if circumvented, the privacy of the\n                            user would be compromised. This technique is explicitly\n                            addressed in, FPR_UNO.2, .', 'pgfId-11478'),
('1', '', 'Broadcast: When information is broadcast (e.g. ethernet,\n                            radio), users cannot determine who actually received and\n                            used that information. This technique is especially\n                            useful when information should reach receivers which\n                            have to fear a stigma for being interested in that\n                            information (e.g. sensitive medical information).', 'pgfId-11478'),
('2', 'PGFID-11491', 'Cryptographic protection and message padding: People\n                            observing a message stream might obtain information from\n                            the fact that a message is transferred and from\n                            attributes on that message. By traffic padding, message\n                            padding and encrypting the message stream, the\n                            transmission of a message and its attributes can be\n                            protected.', 'pgfId-11478'),
('0', 'PGFID-270997', 'Unmaskable action failures that always result in a\n                            system crash (e.g. persistent inconsistency of critical\n                            system tables, uncontrolled transfers within the TSF\n                            code caused by transient failures of hardware or\n                            firmware, power failures, processor failures,\n                            communication failures).', 'pgfId-275750'),
('1', 'PGFID-270999', 'Media failures causing part or all of the media\n                            representing the TSF objects to become inaccessible or\n                            corrupt (e.g. parity errors, disk head crash, persistent\n                            read/write failure caused by misaligned disk heads,\n                            worn-out magnetic coating, dust on the disk surface).', 'pgfId-275750'),
('2', 'PGFID-271000', 'Discontinuity of operation caused by erroneous\n                            administrative action or lack of timely administrative\n                            action (e.g. unexpected shutdowns by turning off power,\n                            ignoring the exhaustion of critical resources,\n                            inadequate installed configuration).', 'pgfId-275750'),
('0', 'PGFID-270728', 'Tests for the presence of a firewall, and possibly whether it is\n            correctly configured;', 'pgfId-275901'),
('1', 'PGFID-274996', 'Tests of some of the properties of the operating system that an\n            application TOE runs on;', 'pgfId-275901'),
('0', 'PGFID-3792', 'Provide for object quotas that constrain the number\n                            and/or size of objects a specific user may allocate.', 'pgfId-3791'),
('1', 'PGFID-3793', 'Control the allocation/deallocation of preassigned\n                            resource units where these units are under the control\n                            of the TSF.', 'pgfId-3791'),
('0', 'PGFID-292288', 'The method of access can be used to specify in which\n                            type of environment the user will be operating\n                            (e.g. file transfer protocol, terminal, vtam).', 'pgfId-292287'),
('1', 'PGFID-292289', 'The location of access can be used to constrain the\n                            domain of a user\'s selectable attributes based\n                            on a user\'s location or port of access. This\n                            capability is of particular use in environments where\n                            dial-up facilities or network facilities are available.', 'pgfId-292287'),
('2', 'PGFID-292290', 'The time of access can be used to constrain the domain\n                            of a user\'s selectable attributes. For example,\n                            ranges may be based upon time-of-day, day-of-week, or\n                            calendar dates. This constraint provides some\n                            operational protection against user actions that could\n                            occur at a time where proper monitoring or where proper\n                            procedural measures may not be in place.', 'pgfId-292287'),
('0', 'PGFID-292558', 'The location of access can be used to constrain the\n                            ability of a user to establish an active session with\n                            the TOE, based on the user\'s location or port\n                            of access. This capability is of particular use in\n                            environments where dial-up facilities or network\n                            facilities are available.', 'pgfId-292557'),
('1', 'PGFID-292559', 'The user\'s security attributes can be used to\n                            place constraints on the ability of a user to establish\n                            an active session with the TOE. For example, these\n                            attributes would provide the capability to deny session\n                            establishment based on any of the following:,', 'pgfId-292557'),
('0', 'PGFID-293233', 'The time of access can be used to constrain the ability\n                            of a user to establish an active session with the TOE\n                            based on ranges of time. For example, ranges may be\n                            based upon time-of-day, day-of-week, or calendar\n                            dates. This constraint provides some operational\n                            protection against actions that could occur at a time\n                            where proper monitoring or where proper procedural\n                            measures may not be in place.', 'pgfId-292564');

-- --------------------------------------------------------

--
-- Table structure for table `listOfAcOverview`
--

CREATE TABLE `listOfAcOverview` (
  `id_listOfAcOverview` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `listOfAcOverview`
--

INSERT INTO `listOfAcOverview` (`id_listOfAcOverview`, `testo`) VALUES
('23.113083413205352', 'determine that the required assurance is provided by the\n                    base component;, determine that the base component and dependent component\n                    are compatible; and, search for any vulnerabilities introduced through\n                    composing the base and dependent components into a single\n                    composed TOE entity.');

-- --------------------------------------------------------

--
-- Table structure for table `listOfMaApplicationNotes`
--

CREATE TABLE `listOfMaApplicationNotes` (
  `id_listOfMaApplicationNotes` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `listOfMaIntroduction`
--

CREATE TABLE `listOfMaIntroduction` (
  `id_listOfMaIntroduction` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `maapplicationnotes`
--

CREATE TABLE `maapplicationnotes` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maapplicationnotes`
--

INSERT INTO `maapplicationnotes` (`id`, `testo`, `ida`) VALUES
('1119.9092323190512', 'This Clause describes the evaluation of a PP. The\n            requirements and methodology for PP evaluation are identical\n            for each PP evaluation, regardless of the EAL (or other set of\n            assurance requirements) that is claimed in the PP. The\n            evaluation methodology in this Clause is based on the\n            requirements on the PP as specified in CC Part 3 class, APE, .\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.', 'APE'),
('1218.4172229614112', '\n\n            The purpose of the vulnerability assessment activity is to\n            determine the exploitability of flaws or weaknesses in the TOE\n            in the operational environment. This determination is based\n            upon analysis of the evaluation evidence and a search of\n            publicly available material by the evaluator and is supported\n            by evaluator penetration testing.\n        ', 'AVA'),
('238.18456036560815', '\n\n            The purpose of the development activity is to assess the\n            design documentation in terms of its adequacy to understand\n            how the TSF meets the SFRs and how the implementation of these\n            SFRs cannot be tampered with or bypassed. This understanding\n            is achieved through examination of increasingly refined\n            descriptions of the TSF design documentation. Design\n            documentation consists of a functional specification (which\n            describes the interfaces of the TSF), a TOE design description\n            (which describes the architecture of the TSF in terms of how\n            it works in order to perform the functions related to the SFRs\n            being claimed), and an implementation description (a source\n            code level description). In addition, there is a security\n            architecture description (which describes the architectural\n            properties of the TSF to explain how its security enforcement\n            cannot be compromised or bypassed), an internals description\n            (which describes how the TSF was constructed in a manner that\n            encourages understandability), and a security policy model\n            (which formally describes the security policies enforced by\n            the TSF).\n        ', 'ADV'),
('394.3897205982645', '\n\n            The purpose of the guidance document activity is to judge the\n            adequacy of the documentation describing how the user can\n            handle the TOE in a secure manner. Such documentation should\n            take into account the various types of users (e.g. those who\n            accept, install, administrate or operate the TOE) whose\n            incorrect actions could adversely affect the security of the\n            TOE or of their own data.\n\n            The guidance documents class is subdivided into two families\n            which are concerned firstly with the preparative procedures\n            (all that has to be done to transform the delivered TOE into\n            its evaluated configuration in the environment as described in\n            the ST, i.e. accepting and installing the TOE) and secondly\n            with the operational user guidance (all that has to be done\n            during the operation of the TOE in its evaluated\n            configuration, i.e. operation and administration).\n        ', 'AGD'),
('395.4413723254862', 'All Base-PP(s) referenced in the PP-Module must be evaluated before the evaluation of a PP-Configuration.\n            One possibility for evaluating a PP-Configuration is to flatten all the components of the PP(s) and PP-Modules composing the PP-Configuration and evaluating the resulting PP as a standard PP.\n            Another possibility for evaluation of a PP-Configuration composed of several PP-Modules proceeds PP-Module by PP-Module. Considering a PP-Configuration composed of the Protection Profiles P, EVALUATION_OF_A_PPCONFIGURATION, and the PP-Modules M, , evaluation of the PP-Configuration proceeds with the following steps, illustrated in Figure, :, Steps 2 and 3 are themselves performed in two steps:, The ACE evaluation methodology is based on APE\'s. The common parts are not duplicated in this document but referred to.', 'ACE'),
('502.6174738060961', '\n\n            The goal of this activity is to determine whether the\n            components can be integrated in a secure manner, as defined in\n            the ST for the composed TOE. This is achieved through\n            examination and testing of the interfaces between the\n            components, supported by examination of the design of the\n            components and the conduct of vulnerability analysis.\n        ', 'ACO'),
('743.1171497282917', 'This Clause describes the evaluation of an ST. The ST\n            evaluation should be started prior to any TOE evaluation\n            sub-activities since the ST provides the basis and context to\n            perform these sub-activities. The evaluation methodology in\n            this subclause is based on the requirements on the ST as\n            specified in CC Part 3 class, ASE, .\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.', 'ASE'),
('909.6152901514154', 'The goal of this activity is to determine whether the TOE\n            behaves as described in the ST and as specified in the\n            evaluation evidence (described in the, ADV, class). This determination is achieved through\n            some combination of the developer\'s own functional testing of\n            the TSF (, ATE_FUN, ) and independent\n            testing the TSF by the evaluator (, ATE_IND, ). At the lowest level of assurance, there is no\n            requirement for developer involvement, so the only testing is\n            conducted by the evaluator, using the limited available\n            information about the TOE. Additional assurance is gained as\n            the developer becomes increasingly involved both in testing\n            and in providing additional information about the TOE, and as\n            the evaluator increases the independent testing\n            activities.', 'ATE'),
('976.8945318755477', '\n\n            The purpose of the life-cycle support activity is to determine\n            the adequacy of the security procedures that the developer\n            uses during the development and maintenance of the TOE. These\n            procedures include the life-cycle model used by the developer,\n            the configuration management, the security measures used\n            throughout TOE development, the tools used by the developer\n            throughout the life-cycle of the TOE, the handling of security\n            flaws, and the delivery activity.\n\n            Poorly controlled development and maintenance of the TOE can\n            result in vulnerabilities in the implementation. Conformance\n            to a defined life-cycle model can help to improve controls in\n            this area. A measurable life-cycle model used for the TOE can\n            remove ambiguity in assessing the development progress of the\n            TOE.\n\n            The purpose of the configuration management activity is to\n            assist the consumer in identifying the evaluated TOE, to\n            ensure that configuration items are uniquely identified, and\n            the adequacy of the procedures that are used by the developer\n            to control and track changes that are made to the TOE. This\n            includes details on what changes are tracked, how potential\n            changes are incorporated, and the degree to which automation\n            is used to reduce the scope for error.\n\n            Developer security procedures are intended to protect the TOE\n            and its associated design information from interference or\n            disclosure. Interference in the development process may allow\n            the deliberate introduction of vulnerabilities. Disclosure of\n            design information may allow vulnerabilities to be more easily\n            exploited. The adequacy of the procedures will depend on the\n            nature of the TOE and the development process.\n\n            The use of well-defined development tools and the application\n            of implementation standards by the developer and by third\n            parties involved in the development process help to ensure\n            that vulnerabilities are not inadvertently introduced during\n            refinement.\n\n            The flaw remediation activity is intended to track security\n            flaws, to identify corrective actions, and to distribute the\n            corrective action information to TOE users.\n\n            The purpose of the delivery activity is to judge the adequacy\n            of the documentation of the procedures used to ensure that the\n            TOE is delivered to the consumer without modification.\n        ', 'ALC');

-- --------------------------------------------------------

--
-- Table structure for table `maintroduction`
--

CREATE TABLE `maintroduction` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maintroduction`
--

INSERT INTO `maintroduction` (`id`, `testo`, `ida`) VALUES
('1086.8211152025037', 'This Clause describes the evaluation of a PP. The\n            requirements and methodology for PP evaluation are identical\n            for each PP evaluation, regardless of the EAL (or other set of\n            assurance requirements) that is claimed in the PP. The\n            evaluation methodology in this Clause is based on the\n            requirements on the PP as specified in CC Part 3 class, APE, .\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.', 'APE'),
('110.00649121404842', '\n\n            The purpose of the guidance document activity is to judge the\n            adequacy of the documentation describing how the user can\n            handle the TOE in a secure manner. Such documentation should\n            take into account the various types of users (e.g. those who\n            accept, install, administrate or operate the TOE) whose\n            incorrect actions could adversely affect the security of the\n            TOE or of their own data.\n\n            The guidance documents class is subdivided into two families\n            which are concerned firstly with the preparative procedures\n            (all that has to be done to transform the delivered TOE into\n            its evaluated configuration in the environment as described in\n            the ST, i.e. accepting and installing the TOE) and secondly\n            with the operational user guidance (all that has to be done\n            during the operation of the TOE in its evaluated\n            configuration, i.e. operation and administration).\n        ', 'AGD'),
('1166.4877100455512', 'The goal of this activity is to determine whether the TOE\n            behaves as described in the ST and as specified in the\n            evaluation evidence (described in the, ADV, class). This determination is achieved through\n            some combination of the developer\'s own functional testing of\n            the TSF (, ATE_FUN, ) and independent\n            testing the TSF by the evaluator (, ATE_IND, ). At the lowest level of assurance, there is no\n            requirement for developer involvement, so the only testing is\n            conducted by the evaluator, using the limited available\n            information about the TOE. Additional assurance is gained as\n            the developer becomes increasingly involved both in testing\n            and in providing additional information about the TOE, and as\n            the evaluator increases the independent testing\n            activities.', 'ATE'),
('220.14144431893254', '\n\n            The purpose of the vulnerability assessment activity is to\n            determine the exploitability of flaws or weaknesses in the TOE\n            in the operational environment. This determination is based\n            upon analysis of the evaluation evidence and a search of\n            publicly available material by the evaluator and is supported\n            by evaluator penetration testing.\n        ', 'AVA'),
('460.9960663392129', '\n\n            The purpose of the life-cycle support activity is to determine\n            the adequacy of the security procedures that the developer\n            uses during the development and maintenance of the TOE. These\n            procedures include the life-cycle model used by the developer,\n            the configuration management, the security measures used\n            throughout TOE development, the tools used by the developer\n            throughout the life-cycle of the TOE, the handling of security\n            flaws, and the delivery activity.\n\n            Poorly controlled development and maintenance of the TOE can\n            result in vulnerabilities in the implementation. Conformance\n            to a defined life-cycle model can help to improve controls in\n            this area. A measurable life-cycle model used for the TOE can\n            remove ambiguity in assessing the development progress of the\n            TOE.\n\n            The purpose of the configuration management activity is to\n            assist the consumer in identifying the evaluated TOE, to\n            ensure that configuration items are uniquely identified, and\n            the adequacy of the procedures that are used by the developer\n            to control and track changes that are made to the TOE. This\n            includes details on what changes are tracked, how potential\n            changes are incorporated, and the degree to which automation\n            is used to reduce the scope for error.\n\n            Developer security procedures are intended to protect the TOE\n            and its associated design information from interference or\n            disclosure. Interference in the development process may allow\n            the deliberate introduction of vulnerabilities. Disclosure of\n            design information may allow vulnerabilities to be more easily\n            exploited. The adequacy of the procedures will depend on the\n            nature of the TOE and the development process.\n\n            The use of well-defined development tools and the application\n            of implementation standards by the developer and by third\n            parties involved in the development process help to ensure\n            that vulnerabilities are not inadvertently introduced during\n            refinement.\n\n            The flaw remediation activity is intended to track security\n            flaws, to identify corrective actions, and to distribute the\n            corrective action information to TOE users.\n\n            The purpose of the delivery activity is to judge the adequacy\n            of the documentation of the procedures used to ensure that the\n            TOE is delivered to the consumer without modification.\n        ', 'ALC'),
('671.3189303158262', '\n\n            The goal of this activity is to determine whether the\n            components can be integrated in a secure manner, as defined in\n            the ST for the composed TOE. This is achieved through\n            examination and testing of the interfaces between the\n            components, supported by examination of the design of the\n            components and the conduct of vulnerability analysis.\n        ', 'ACO'),
('803.2287531904024', '\n\n            The purpose of the development activity is to assess the\n            design documentation in terms of its adequacy to understand\n            how the TSF meets the SFRs and how the implementation of these\n            SFRs cannot be tampered with or bypassed. This understanding\n            is achieved through examination of increasingly refined\n            descriptions of the TSF design documentation. Design\n            documentation consists of a functional specification (which\n            describes the interfaces of the TSF), a TOE design description\n            (which describes the architecture of the TSF in terms of how\n            it works in order to perform the functions related to the SFRs\n            being claimed), and an implementation description (a source\n            code level description). In addition, there is a security\n            architecture description (which describes the architectural\n            properties of the TSF to explain how its security enforcement\n            cannot be compromised or bypassed), an internals description\n            (which describes how the TSF was constructed in a manner that\n            encourages understandability), and a security policy model\n            (which formally describes the security policies enforced by\n            the TSF).\n        ', 'ADV'),
('843.7838095973548', 'All Base-PP(s) referenced in the PP-Module must be evaluated before the evaluation of a PP-Configuration.\n            One possibility for evaluating a PP-Configuration is to flatten all the components of the PP(s) and PP-Modules composing the PP-Configuration and evaluating the resulting PP as a standard PP.\n            Another possibility for evaluation of a PP-Configuration composed of several PP-Modules proceeds PP-Module by PP-Module. Considering a PP-Configuration composed of the Protection Profiles P, EVALUATION_OF_A_PPCONFIGURATION, and the PP-Modules M, , evaluation of the PP-Configuration proceeds with the following steps, illustrated in Figure, :, Steps 2 and 3 are themselves performed in two steps:, The ACE evaluation methodology is based on APE\'s. The common parts are not duplicated in this document but referred to.', 'ACE'),
('900.6275158816532', 'This Clause describes the evaluation of an ST. The ST\n            evaluation should be started prior to any TOE evaluation\n            sub-activities since the ST provides the basis and context to\n            perform these sub-activities. The evaluation methodology in\n            this subclause is based on the requirements on the ST as\n            specified in CC Part 3 class, ASE, .\n\n            This Clause should be used in conjunction with Annexes, SPECIFICATION-OF-SECURITY-TARGETS, ,, SPECIFICATION-OF-PROTECTION-PROFILES, and, SECURITY-REQUIREMENTS-ANNEX, in CC\n            Part 1, as these Annexes clarify the concepts here and provide\n            many examples.', 'ASE');

-- --------------------------------------------------------

--
-- Table structure for table `maobjectives`
--

CREATE TABLE `maobjectives` (
  `id` varchar(1000) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `maobjectives`
--

INSERT INTO `maobjectives` (`id`, `testo`, `ida`) VALUES
('1052.483074355257', '', 'ACO'),
('1085.4598448395593', '', 'AVA'),
('151.32033606946948', '', 'ALC'),
('232.80522265572972', '', 'AGD'),
('700.0598296746016', '', 'ATE'),
('771.1051766256064', '\n\n            The PP is the description of a TOE type. As such it is\n            expected to identify the security requirements that enforce\n            the defined OSPs and counter the defined threats under the\n            defined assumptions.\n\n            Evaluating a PP is required to demonstrate that the PP is\n            sound and internally consistent, and, if the PP is based on\n            one or more PPs or packages, that the PP is a correct\n            instantiation of these PPs or packages. These properties are\n            necessary for the PP to be suitable for use as the basis for\n            an ST or another PP.\n        ', 'APE'),
('83.93644163168702', '\n\n            The ST describes the security features of a TOE. As such it is\n            expected to identify the security requirements that enforce\n            the defined OSPs and counter the defined threats under the\n            defined assumptions.\n\n            Evaluating an ST is required to demonstrate that the ST is\n            sound and internally consistent, and, if the ST is based on\n            one or more PPs or packages, that the ST is a correct\n            instantiation of these PPs or packages. These properties are\n            necessary for the ST to be suitable for use as the basis for a\n            TOE evaluation.\n        ', 'ASE'),
('844.5382130310934', '', 'ADV'),
('932.6096463814582', '', 'ACE');

-- --------------------------------------------------------

--
-- Table structure for table `msaapplicationnotes`
--

CREATE TABLE `msaapplicationnotes` (
  `id_msaapplicationnotes` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `msaapplicationnotes`
--

INSERT INTO `msaapplicationnotes` (`id_msaapplicationnotes`, `testo`, `ida`, `idf`) VALUES
('10.275673417883791', 'The entire implementation representation is made available\n                    to ensure that analysis activities are not curtailed due\n                    to lack of information. This does not, however, imply that\n                    all of the representation is examined when the analysis\n                    activities are being performed. This is likely impractical\n                    in almost all cases, in addition to the fact that it most\n                    likely will not result in a higher-assurance TOE\n                    vs. targeted sampling of the implementation\n                    representation. For this sub-activity, this is even\n                    truer. It would not be productive for the evaluator to\n                    spend large amounts of time verifying the requirements for\n                    one portion of the implementation representation, and then\n                    use a different portion of the implementation\n                    representation in performing analysis for other work\n                    units.  Therefore, the evaluator is encouraged to select\n                    the sample of the implementation representation from the\n                    areas of the TOE that will be of most interest during the\n                    analysis performed during work units from other families\n                    (e.g., ATE_IND, ,, AVA_VAN, and, ADV_INT, ).', 'adv', 'adv_imp'),
('14.608434332911784', 'There are three types of activity that the evaluator must\n                    undertake with respect to the TOE design. First, the evaluator\n                    determines that the TSF boundary has been adequately\n                    described. Second, the evaluator determines that the developer\n                    has provided documentation that conforms to the content and\n                    presentation requirements this subsystem, and that is consistent\n                    with other documentation provided for the TOE. Finally, the\n                    evaluator must analyse the design information provided for the\n                    SFR-enforcing modules (at a detailed level) and the\n                    SFR-supporting and SFR-non-interfering modules (at a less detailed level) to\n                    understand how the system is implemented, and with that\n                    knowledge ensure that the TSFI in the functional specification\n                    are adequately described, and that the test information\n                    adequately tests the TSF (done in the, ATE, work units).', 'adv', 'adv_tds'),
('16.044503916466585', 'This work may be performed in parallel with the evaluation\n                    activities under, ADV_IMP, ,\n                    specifically with regard to determining the use of\n                    features in the tools that will affect the object code\n                    (e.g. compilation options).', 'alc', 'alc_tat'),
('17.232181253678174', 'The coverage analysis provided by the developer is\n                    required to show the correspondence between the tests\n                    provided as evaluation evidence and the functional\n                    specification. However, the coverage analysis need not\n                    demonstrate that all TSFI have been tested, or that all\n                    externally-visible interfaces to the TOE have been\n                    tested. Such shortcomings are considered by the evaluator\n                    during the independent testing (, ATE_IND.2, ) sub-activity.', 'ate', 'ate_cov'),
('18.499793879969975', 'This work may be performed in parallel with the evaluation\n                    activities under, ADV_IMP, ,\n                    specifically with regard to determining the use of\n                    features in the tools that will affect the object code\n                    (e.g. compilation options).', 'alc', 'alc_tat'),
('18.832420001401356', 'See the application notes for, AVA_VAN.3, .', 'aco', 'aco_vul'),
('2.294503371956175', '\n\n                    The preparative procedures refer to all acceptance and\n                    installation procedures, that are necessary to progress\n                    the TOE to the secure configuration as described in the\n                    ST.\n                ', 'agd', 'agd_pre'),
('20.9348698903788', 'The methodical analysis approach takes the form of a\n                    structured examination of the evidence. This method\n                    requires the evaluator to specify the structure and form\n                    the analysis will take (i.e. the manner in which the\n                    analysis is performed is predetermined, unlike the focused\n                    analysis).  The method is specified in terms of the\n                    information that will be considered and how/why it will be\n                    considered. Further guidance on methodical vulnerability\n                    analysis can be found in Annex, METHODICAL, .\n\n                    If the TOE SFRs include, FPR_UNO, and, FDP_ACC, requirements such that\n                    actions and data of one subject cannot be observed and\n                    linked with another subject, the evaluator should consider\n                    performing a covert channel analysis.  This will build\n                    upon the design evidence provided by the developer in\n                    satisfaction of, ADV_TDS, and, ADV_ARC, requirements. The design evidence\n                    will include details of how the TOE architecture prevents\n                    observation by subjects of actions performed by other\n                    subjects. the evaluator should seek guidance from the\n                    evaluation authority on the conduct of such a covert\n                    channel analysis.\n\n                    The analysis of the guidance documentation is to include\n                    consideration of whether it is possible to unknowingly\n                    configure the TOE insecurely. Therefore, the analysis will\n                    consider warning prompts provided by the TOE when\n                    configuration options are selected by the user that may\n                    render the TOE in an insecure state, not just in the\n                    guidance but also in the use of the TOE. An example may be\n                    when access control rules are amended from a remote\n                    administration console, which will not take effect until\n                    the TOE has been restarted.  The evaluator will determine\n                    whether the TOE issues a suitable warning when the changes\n                    are made to ensure the user is aware that a restart must\n                    be completed before the changes take effect.', 'ava', 'ava_van'),
('21.17784765362539', 'This activity applies to cases where the developer has\n                    formally modelled all security policies of the TOE that\n                    are capable of being modelled formally.\n\n                    A formal TOE security policy model is a representation of\n                    the rules (synonymously termed ``principles\'\') and\n                    characteristics of security policies in mathematical\n                    terms.  Their formal counterparts are called security\n                    properties and security features, respectively. The\n                    representation includes but is not limited to algebraic\n                    specifications, finite state machines and logic formalisms\n                    strong enough to formally infer the properties from the\n                    features. The formal security policy model is accompanied\n                    by an informal interpretation explaining how the rules and\n                    characteristics are mapped to the respective properties\n                    and features.\n\n                    It is recognised that not all policies (see work unit, ADV_SPM.1-3, ) can be formally\n                    modelled for all TOEs. This is because either the state of\n                    the art is insufficient to formally model a given policy,\n                    or because the nature of the TOE renders impossible the\n                    modelling of policies that would otherwise be possible to\n                    model. If none of the SFRs can be formally modelled, this\n                    component cannot be met.', 'adv', 'adv_spm'),
('23.725569568580404', 'During the conduct of evaluation activities the evaluator\n                    may also identify areas of concern. These are specific\n                    portions of the TOE evidence that the evaluator has some\n                    reservation about, although the evidence meets the\n                    requirements for the activity with which the evidence is\n                    associated. For example, a particular interface\n                    specification looks particularly complex, and therefore\n                    may be prone to error either in the development of the TOE\n                    or in the operation of the TOE. There is no potential\n                    vulnerability apparent at this stage, further\n                    investigation is required. This is beyond the bounds of\n                    encountered, as further investigation is required.\n\n                    The focused approach to the identification of potential\n                    vulnerabilities is an analysis of the evidence with the\n                    aim of identifying any potential vulnerabilities evident\n                    through the contained information. It is an unstructured\n                    analysis, as the approach is not predetermined. Further\n                    guidance on focused vulnerability analysis can be found in\n                    Annex, FOCUSED, .', 'ava', 'ava_van'),
('24.12094150514805', '\n            All actions of APE_REQ.2.1E hold without considering the SAR part which is empty in PP-Modules.\n\n        ', 'ace', 'ace_req'),
('24.201284802953833', '\n\n                    The extent to which the test documentation is required to\n                    cover the TSF is dependent upon the coverage assurance\n                    component.\n\n                    For the developer tests provided, the evaluator determines\n                    whether the tests are repeatable, and the extent to which\n                    the developer\'s tests can be used for the evaluator\'s\n                    independent testing effort. Any TSFI for which the\n                    developer\'s test results indicate that it might not\n                    perform as specified should be tested independently by the\n                    evaluator to determine whether or not it does.\n                ', 'ate', 'ate_fun'),
('24.43801958564988', 'A dependent component whose TSF interacts with the base\n                    component requires functionality provided by that base\n                    component (e.g., remote authentication, remote audit data\n                    storage). In these cases, those invoked services need to\n                    be described for those charged with configuring the\n                    composed TOE for end users. The rationale for requiring\n                    this documentation is to aid integrators of the composed\n                    TOE to determine what services in the base component might\n                    have adverse effects on the dependent component, and to\n                    provide information against which to determine the\n                    compatibility of the components when applying the, ACO_DEV, family.', 'aco', 'aco_rel'),
('24.61666263643617', 'See the application notes for, AVA_VAN.2, .', 'aco', 'aco_vul'),
('25.655605314855443', 'This component contains an implicit evaluator action to\n                    determine that the CM system is being used. As the\n                    requirements here are limited to identification of the TOE\n                    and provision of a configuration list, this action is\n                    already covered by, and limited to, the existing work\n                    units. At, ALC_CMC.3, the\n                    requirements are expanded beyond these two items, and more\n                    explicit evidence of operation is required.', 'alc', 'alc_cmc'),
('25.761244931550458', 'The methodical analysis approach takes the form of a\n                    structured examination of the evidence. This method\n                    requires the evaluator to specify the structure and form\n                    the analysis will take (i.e. the manner in which the\n                    analysis is performed is predetermined, unlike the focused\n                    analysis).  The method is specified in terms of the\n                    information that will be considered and how/why it will be\n                    considered. Further guidance on methodical vulnerability\n                    analysis can be found in Annex, METHODICAL, .\n\n                    If the TOE SFRs include, FPR_UNO, and, FDP_ACC, requirements such that\n                    actions and data of one subject cannot be observed and\n                    linked with another subject, the evaluator should consider\n                    performing a covert channel analysis.  This will build\n                    upon the design evidence provided by the developer in\n                    satisfaction of, ADV_TDS, and, ADV_ARC, requirements. The design evidence\n                    will include details of how the TOE architecture prevents\n                    observation by subjects of actions performed by other\n                    subjects. the evaluator should seek guidance from the\n                    evaluation authority on the conduct of such a covert\n                    channel analysis.\n\n                    The analysis of the guidance documentation is to include\n                    consideration of whether it is possible to unknowingly\n                    configure the TOE insecurely. Therefore, the analysis will\n                    consider warning prompts provided by the TOE when\n                    configuration options are selected by the user that may\n                    render the TOE in an insecure state, not just in the\n                    guidance but also in the use of the TOE. An example may be\n                    when access control rules are amended from a remote\n                    administration console, which will not take effect until\n                    the TOE has been restarted.  The evaluator will determine\n                    whether the TOE issues a suitable warning when the changes\n                    are made to ensure the user is aware that a restart must\n                    be completed before the changes take effect.', 'ava', 'ava_van'),
('26.09822797486195', 'The role of the internals description is to provide\n                    evidence of the structure of the design and implementation\n                    of the TSF.\n\n                    The structure of the design has two aspects: the\n                    constituent parts of the TSF and the procedures used to\n                    design the TSF. In cases where the TSF is designed in a\n                    manner consistent with the design represented by the TOE\n                    design (see, ADV_TDS, ), the\n                    assessment of the TSF design is obvious. In cases where\n                    the design procedures (see, ALC_TAT, )\n                    are being followed, the assessment of the TSF design\n                    procedures is similarly obvious.\n\n                    In cases where the TSF is implemented using\n                    procedure-based software, this structure is assessed on\n                    the basis of its\n                    modularity\n                    ; the\n                    modules identified in the internals description are the\n                    same as the modules identified in the TOE design (, ADV_TDS, ). A module consists of one or\n                    more source code files that cannot be decomposed into\n                    smaller compilable units.\n\n                    The primary goal of this component is to ensure the TSF\'s\n                    implementation representation is understandable to\n                    facilitate maintenance and analysis (of both the developer\n                    and evaluator).', 'adv', 'adv_int'),
('27.471844516073013', '\n            All actions of APE_ECD.1.1E hold.\n\n        ', 'ace', 'ace_ecd'),
('28.49385918267046', '\n\n                    The notions of self-protection, domain separation, and\n                    non-bypassability are distinct from security functionality\n                    expressed in Part 2 SFRs because self-protection and\n                    non-bypassability largely have no directly observable\n                    interface at the TSF. Rather, they are properties of the\n                    TSF that are achieved through the design of the TOE, and\n                    enforced by the correct implementation of that\n                    design. Also, the evaluation of these properties is less\n                    straight-forward than the evaluation of mechanisms; it is\n                    more difficult to check for the absence of functionality\n                    than for its presence. However, the determination that\n                    these properties are being satisfied is just as critical\n                    as the determination that the mechanisms are properly\n                    implemented.\n\n                    The overall approach used is that the developer provides a\n                    TSF that meets the above-mentioned properties, and\n                    provides evidence (in the form of documentation) that can\n                    be analysed to show that the properties are indeed\n                    met. The evaluator has the responsibility for looking at\n                    the evidence and, coupled with other evidence delivered\n                    for the TOE, determining that the properties are\n                    achieved. The work units can be characterised as those\n                    detailing with what information has to be provided, and\n                    those dealing with the actual analysis the evaluator\n                    performs.\n\n                    The security architecture description describes how\n                    domains are defined and how the TSF keeps them\n                    separate. It describes what prevents untrusted processes\n                    from getting to the TSF and modifying it. It describes\n                    what ensures that all resources under the TSF\'s control\n                    are adequately protected and that all actions related to\n                    the SFRs are mediated by the TSF. It explains any role the\n                    environment plays in any of these (e.g. presuming it gets\n                    correctly invoked by its underlying environment, how is\n                    its security functionality invoked?). In short, it\n                    explains how the TOE is considered to be providing any\n                    kind of\n                    security\n                    service.\n\n                    The analyses the evaluator performs must be done in the\n                    context of all of the development evidence provided for\n                    the TOE, at the level of detail the evidence is\n                    provided. At lower assurance levels there should not be\n                    the expectation that, for example, TSF self-protection is\n                    completely analysed, because only high-level design\n                    representations will be available. The evaluator also\n                    needs to be sure to use information gleaned from other\n                    portions of their analysis (e.g., analysis of the TOE\n                    design) in making their assessments for the properties\n                    being examined in the following work units.\n                ', 'adv', 'adv_arc'),
('29.81732406533517', 'A dependent component whose TSF interacts with the base\n                    component requires functionality provided by that base\n                    component (e.g., remote authentication, remote audit data\n                    storage). In these cases, those invoked services need to\n                    be described for those charged with configuring the\n                    composed TOE for end users. The rationale for requiring\n                    this documentation is to aid integrators of the composed\n                    TOE to determine what services in the base component might\n                    have adverse effects on the dependent component, and to\n                    provide information against which to determine the\n                    compatibility of the components when applying the, ACO_DEV, family.', 'aco', 'aco_rel'),
('3.391270753719283', 'The methodical analysis approach takes the form of a\n                    structured examination of the evidence. This method\n                    requires the evaluator to specify the structure and form\n                    the analysis will take (i.e. the manner in which the\n                    analysis is performed is predetermined, unlike the focused\n                    analysis).  The method is specified in terms of the\n                    information that will be considered and how/why it will be\n                    considered. Further guidance on methodical vulnerability\n                    analysis can be found in Annex, METHODICAL, .', 'ava', 'ava_van'),
('30.31784684326291', '\n\n                All actions of APE_OBJ.2.1E hold.\n\n            ', 'ace', 'ace_obj'),
('31.63665546994026', 'This work may be performed in parallel with the evaluation\n                    activities under, ADV_IMP, ,\n                    specifically with regard to determining the use of\n                    features in the tools that will affect the object code\n                    (e.g. compilation options).', 'alc', 'alc_tat'),
('31.979157223452322', 'See the application notes for, AVA_VAN.1, .', 'aco', 'aco_vul'),
('4.384006947819827', 'There are three types of activity that the evaluator must\n                    undertake with respect to the TOE design. First, the evaluator\n                    determines that the TSF boundary has been adequately\n                    described. Second, the evaluator determines that the developer\n                    has provided documentation that conforms to the content and\n                    presentation requirements for this subsystem, and that is\n                    consistent with other documentation provided for the\n                    TOE. Finally, the evaluator must analyse the design information\n                    provided for the SFR-enforcing modules (at a detailed level) and\n                    the SFR-supporting and SFR-non-interfering  modules (at a less detailed level) to\n                    understand how the system is implemented, and with that\n                    knowledge ensure that the TSFI in the functional specification\n                    are adequately described, and that the test information\n                    adequately tests the TSF (done in the, ATE, work units).\n\n                    It is important to note that while the developer is obligated to\n                    provide a complete description of the TSF (although\n                    SFR-enforcing modules will have more detail than the\n                    SFR-supporting or SFR-non-interfering modules), the evaluator is\n                    expected to use their judgement in performing their\n                    analysis. While the evaluator is expected to look at every\n                    module, the detail to which they examine each module may\n                    vary. The evaluator analyses each module in order to gain enough\n                    understanding to determine the effect of the functionality of\n                    the module on the security of the system, and the depth to which\n                    they need to analyse the module may vary depending on the\n                    module\'s role in the system. An important aspect of this\n                    analysis is that the evaluator should use the other\n                    documentation provided (TSS, functional specification, security\n                    architecture description, and the TSF internal document) in\n                    order to determine that the functionality that is described is\n                    correct, and that the implicit designation of SFR-supporting or\n                    SFR-non-interfering modules (see below) is supported by their\n                    role in the system architecture.\n\n                    The developer may designate modules as SFR-enforcing,\n                    SFR-supporting, and SFR non-interfering, but these\n                    ``tags\'\' are used only to describe the amount and type\n                    of information the developer must provide, and can be\n                    used to limit the amount of information the developer\n                    has to develop if their engineering process does not\n                    produce the documentation required. Whether the\n                    modules have been categorised by the developer or\n                    not, it is the\n                    evaluator\'s responsibility to determine that the\n                    modules have the appropriate information for their\n                    role (SFR-enforcing, etc.) in the TOE, and to obtain the\n                    appropriate information from the developer should the\n                    developer fail to provide the required information for a\n                    particular module.', 'adv', 'adv_tds'),
('6.362600587376882', '\n\n                    The evaluator should consider performing additional tests\n                    as a result of potential vulnerabilities encountered\n                    during other parts of the evaluation.\n                ', 'ava', 'ava_van'),
('6.588125050026161', '\n\n                    The evaluator should consider performing additional tests\n                    as a result of potential vulnerabilities encountered\n                    during the conduct of other parts of the\n                    evaluation.\n\n                    The use of the term guidance in this sub-activity refers\n                    to the operational guidance and the preparative\n                    guidance.\n\n                    Potential vulnerabilities may be in information that is\n                    publicly available, or not, and may require skill to\n                    exploit, or not. These two aspects are related, but are\n                    distinct. It should not be assumed that, simply because a\n                    potential vulnerability is identifiable from information\n                    that is publicly available, it can be easily\n                    exploited.\n                ', 'ava', 'ava_van'),
('6.632501678011483', 'The functional specification describes the interfaces to\n                    the TSF (the TSFI) in a structured manner. Because of the\n                    dependency on, ADV_TDS.1, , the\n                    evaluator is expected to have identified the TSF prior to\n                    beginning work on this sub-activity. Without firm\n                    knowledge of what comprises the TSF, it is not possible to\n                    assess the completeness of the TSFI.\n\n                    In performing the various work units included in this family,\n                    the evaluator is asked to make assessments of accuracy and\n                    completeness of several factors (the TSFI itself, as well as the\n                    individual components (parameters, actions, error messages,\n                    etc.) of the TSFI). In doing this analysis, the evaluator is\n                    expected to use the documentation provided for the\n                    evaluation. This includes the ST, the TOE design, and may\n                    include other documentation such as the operational user\n                    guidance, security architecture description, and implementation\n                    representation. The documentation should be examined in an\n                    iterative fashion. The evaluator may read, for example, in the\n                    TOE design how a certain function is implemented, but see no way\n                    to invoke that function from the interface. This might cause the\n                    evaluator to question the completeness of a particular TSFI\n                    description, or whether an interface has been left out of the\n                    functional specification altogether. Describing analysis\n                    activities of this sort in the ETR is a key method in providing\n                    rationale that the work units have been performed\n                    appropriately.\n\n                    It should be recognised that there exist functional\n                    requirements whose functionality is manifested wholly or\n                    in part architecturally, rather than through a specific\n                    mechanism. An example of this is the implementation of\n                    mechanisms implementing the, FDP_RIP, requirements. Such mechanisms typically are\n                    implemented to ensure a behaviour isn\'t present, which is\n                    difficult to test and typically is verified through\n                    analysis. In the cases where such functional requirements\n                    are included in the ST, it is expected that the evaluator\n                    recognise that there may be SFRs of this type that have no\n                    interfaces, and that this should not be considered a\n                    deficiency in the functional specification.', 'adv', 'adv_fsp'),
('8.11152894611411', '\n\n                    At this level, there is no differentiation of required\n                    information according to SFR-relevance.\n                ', 'adv', 'adv_tds'),
('8.366348047861969', 'The role of the internals description is to provide\n                    evidence of the structure of the design and implementation\n                    of the TSF.\n\n                    The structure of the design has two aspects: the\n                    constituent parts of the TSF and the procedures used to\n                    design the TSF. In cases where the TSF is designed in a\n                    manner consistent with the design represented by the TOE\n                    design (see, ADV_TDS, ), the\n                    assessment of the TSF design is obvious. In cases where\n                    the design procedures (see, ALC_TAT, )\n                    are being followed, the assessment of the TSF design\n                    procedures is similarly obvious.\n\n                    In cases where the TSF is implemented using\n                    procedure-based software, this structure is assessed on\n                    the basis of its\n                    modularity\n                    ; the\n                    modules identified in the internals description are the\n                    same as the modules identified in the TOE design (, ADV_TDS, ). A module consists of one or\n                    more source code files that cannot be decomposed into\n                    smaller compilable units.\n\n                    The use of the assignment in this component levies stricter\n                    constraints on the subset of the TSF that is explicitly\n                    identified in the assignment, ADV_INT.1.1D, than on the remainder of the TSF.\n                    While the entire TSF is to be designed using good\n                    engineering principles and result in a well-structured TSF, only\n                    the specified subset is specifically analysed for this\n                    characteristic. The evaluator determines that the developer\'s\n                    application of coding standards result in a TSF that is\n                    understandable.\n\n                    The primary goal of this component is to ensure the TSF\n                    subset\'s implementation representation is understandable\n                    to facilitate maintenance and analysis (of both the\n                    developer and evaluator).', 'adv', 'adv_int'),
('8.864624117350456', '\n\n                All actions of APE_SPD.1.1E hold.\n\n            ', 'ace', 'ace_spd'),
('8.998821890755462', '\n            All actions of APE_INT.1.1E hold.\n\n        ', 'ace', 'ace_int');

-- --------------------------------------------------------

--
-- Table structure for table `msainput`
--

CREATE TABLE `msainput` (
  `id_msainput` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `msainput`
--

INSERT INTO `msainput` (`id_msainput`, `testo`, `ida`, `idf`) VALUES
('0.2506021961849546', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_lcd'),
('0.42964086663322243', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_rel'),
('0.6655790868861593', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cmc'),
('0.6841074484969661', 'The evaluation evidence for this sub-activity that is\n                    required by the work-units is:, The evaluation evidence for this sub-activity that is used\n                    if included in the ST for the TOE is:, ', 'adv', 'adv_fsp'),
('0.8630871700805793', 'The evaluation evidence for this sub-activity is:, ALC_CMC.4, In addition, the evaluator may need to examine other\n                    deliverables to determine that the security controls are\n                    well-defined and followed. Specifically, the evaluator may\n                    need to examine the developer\'s configuration management\n                    documentation (the input for the, ALC_CMS.4, ``Production support and acceptance\n                    procedures\'\' and the, ``Problem tracking CM coverage\'\'). Evidence that the\n                    procedures are being applied is also required.', 'alc', 'alc_dvs'),
('1.0814301154644261', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_ctt'),
('1.1243947685184974', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_cor'),
('1.9720709094206785', ', ', 'ate', 'ate_dpt'),
('10.079087586665024', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_req'),
('10.349296158497623', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_ccl'),
('10.384606946923682', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_lcd'),
('10.607822119940248', 'The evaluation evidence for this sub-activity that is\n                    required by the work-units is:, The evaluation evidence for this sub-activity that is used\n                    if included in the ST for the TOE is:, ', 'adv', 'adv_fsp'),
('11.227417956886548', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_tss'),
('11.235521524471531', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_rel'),
('11.370773675457064', 'The evaluation evidence for this sub-activity is:, ', 'ate', 'ate_fun'),
('11.483571890007909', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_arc'),
('11.91588797379392', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_tat'),
('12.018537887495818', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_tds'),
('12.024479743820459', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_tat'),
('12.288671763884519', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_spm'),
('12.74773680984618', 'The evaluation evidence for this sub-activity is:, ALC_CMC.4, In addition, the evaluator may need to examine other\n                    deliverables to determine that the security controls are\n                    well-defined and followed. Specifically, the evaluator may\n                    need to examine the developer\'s configuration management\n                    documentation (the input for the, ALC_CMS.4, ``Production support and acceptance\n                    procedures\'\' and the, ``Problem tracking CM coverage\'\'). Evidence that the\n                    procedures are being applied is also required.', 'alc', 'alc_dvs'),
('12.765803186897351', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_ccl'),
('12.85261956291647', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_obj'),
('13.082895656047405', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cms'),
('13.278421189164018', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_req'),
('13.376368964223838', 'The evaluation evidence for this sub-activity is:, The remaining implicit evaluation evidence for this\n                    sub-activity depends on the components that have been\n                    included in the assurance package. The evidence provided\n                    for each component is to be used as input in this\n                    sub-activity.\n\n                    Other input for this sub-activity is:, ', 'ava', 'ava_van'),
('13.37811433709373', ', ', 'ate', 'ate_dpt'),
('13.948853700613908', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_ecd'),
('14.266294219790902', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_spd'),
('14.416097555440475', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cms'),
('14.483533577330753', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_imp'),
('14.526533553065281', 'The evaluation evidence for this sub-activity is:, Other input for this sub-activity is:, ', 'ava', 'ava_van'),
('14.655041955511308', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_fsp'),
('14.67270091029742', 'The evaluation evidence for this sub-activity is:, ', 'ate', 'ate_ind'),
('14.775573066602291', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cmc'),
('14.96187824280169', 'The evaluation evidence for this sub-activity is:, The remaining implicit evaluation evidence for this\n                    sub-activity depends on the components that have been\n                    included in the assurance package. The evidence provided\n                    for each component is to be used as input in this\n                    sub-activity.\n\n                    Other input for this sub-activity is:, ', 'ava', 'ava_van'),
('15.139748814625733', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cms'),
('15.309096292803373', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_tat'),
('15.635487096998698', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_flr'),
('15.784839255507729', '\n            The evaluation evidence for this sub-activity is:\n            ', 'ace', 'ace_mco'),
('16.05268269652705', 'The evaluation evidence for this sub-activity that is\n                    required by the work-units is:, The evaluation evidence for this sub-activity that is used\n                    if included in the ST for the TOE is:, ', 'adv', 'adv_fsp'),
('16.122921679834622', '\n            The evaluation evidence for this sub-activity is:\n            ', 'ace', 'ace_cco'),
('16.31772293336526', 'The evaluation evidence for this sub-activity is:, The remaining implicit evaluation evidence for this\n                    sub-activity depends on the components that have been\n                    included in the assurance package. The evidence provided\n                    for each component is to be used as input in this\n                    sub-activity.\n\n                    Other input for this sub-activity is:, ', 'ava', 'ava_van'),
('16.335045682029943', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_tds'),
('16.66594336635986', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_ctt'),
('17.39194186989768', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cms'),
('17.41162250061401', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_ecd'),
('17.600434520065317', 'The evaluation evidence for this sub-activity that is\n                    required by the work-units is:, The evaluation evidence for this sub-activity that is used\n                    if included in the ST for the TOE is:, ', 'adv', 'adv_fsp'),
('18.04124355758632', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cmc'),
('18.358355274459058', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_flr'),
('19.10024964958784', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_vul'),
('19.55856075235943', 'The evaluation evidence for this sub-activity is:, ', 'agd', 'agd_ope'),
('19.674754336986677', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_spd'),
('2.248646788333006', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_req'),
('2.317594878873547', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_tds'),
('2.5695424053468265', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_del'),
('20.22972996756263', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_tds'),
('20.249210095184296', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_tds'),
('4.431696669290105', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_int'),
('4.678974228576105', 'The evaluation evidence for this sub-activity is:, ', 'ate', 'ate_cov'),
('4.858306093187914', 'The evaluation evidence for this sub-activity that is\n                    required by the work-units is:, The evaluation evidence for this sub-activity that is used\n                    if included in the ST for the TOE is:, ', 'adv', 'adv_fsp'),
('5.101334499314712', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_dev'),
('5.110076580142048', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_tss'),
('5.167434426833774', 'The evaluation evidence for this sub-activity is:, ', 'agd', 'agd_pre'),
('5.574813279193015', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cms'),
('6.184713594685916', ', ', 'ate', 'ate_dpt'),
('6.269897815184223', '\n            The evaluation evidence for this sub-activity is:\n            ', 'ace', 'ace_int'),
('6.357519552029399', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_obj'),
('6.449301848139804', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_dev'),
('6.518686358025269', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_int'),
('6.619306328491565', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_vul'),
('6.647299561349926', 'The evaluation evidence for this sub-activity is:, ', 'ate', 'ate_ind'),
('6.739990469153987', '\n            The evaluation evidence for this sub-activity is:\n            ', 'ace', 'ace_ccl'),
('7.057453590327674', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_int'),
('7.17295843397194', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_vul'),
('7.261945628535911', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cmc'),
('7.568459483162304', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_cmc'),
('8.01937812989985', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_imp'),
('8.062947269304964', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_obj'),
('8.065297141845733', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_int'),
('8.662166735240119', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_int'),
('8.83980906124207', 'The evaluation evidence for this sub-activity is:, ', 'alc', 'alc_flr'),
('8.844651833834138', 'The evaluation evidence for this sub-activity is:, ', 'ape', 'ape_req'),
('8.932661953871898', 'The evaluation evidence for this sub-activity is:, The remaining implicit evaluation evidence for this\n                    sub-activity depends on the components that have been\n                    included in the assurance package. The evidence provided\n                    for each component is to be used as input in this\n                    sub-activity.\n\n                    Other input for this sub-activity is:, ', 'ava', 'ava_van'),
('9.014911479773371', 'The evaluation evidence for this sub-activity is:, The remaining implicit evaluation evidence for this\n                    sub-activity depends on the components that have been\n                    included in the assurance package. The evidence provided\n                    for each component is to be used as input in this\n                    sub-activity.\n\n                    Other input for this sub-activity is:, ', 'ava', 'ava_van'),
('9.244731511236305', ', ', 'ate', 'ate_cov'),
('9.92817810088233', 'The evaluation evidence for this sub-activity is:, ', 'aco', 'aco_dev'),
('9.952667365028494', 'The evaluation evidence for this sub-activity is:, ', 'adv', 'adv_tds'),
('9.985307898734924', 'The evaluation evidence for this sub-activity is:, ', 'ase', 'ase_obj');

-- --------------------------------------------------------

--
-- Table structure for table `msaobjectives`
--

CREATE TABLE `msaobjectives` (
  `id_msaobjectives` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(10) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `msaobjectives`
--

INSERT INTO `msaobjectives` (`id_msaobjectives`, `testo`, `ida`, `idf`) VALUES
('1.3017606475417476', '', 'ace', 'ace_spd'),
('10.101282476919431', '\n\n                    The objectives of this sub-activity are to determine\n                    whether the developer uses a CM system that uniquely\n                    identifies all configuration items.\n                ', 'alc', 'alc_cmc'),
('10.459186232712533', '\n\n                    The objective of this sub-activity is to determine whether\n                    the defined subset of the TSF is designed and structured\n                    such that the likelihood of flaws is reduced and that\n                    maintenance can be more readily performed without the\n                    introduction of flaws.\n                ', 'adv', 'adv_int'),
('12.376518241169071', '\n\n                    The objective of this sub-activity is to determine whether\n                    the developer has used well-defined development tools\n                    (e.g. programming languages or computer-aided design (CAD)\n                    systems) that yield consistent and predictable\n                    results.\n                ', 'alc', 'alc_tat'),
('13.292386455507115', '\n            The objective of this sub-activity is to determine whether the PP-Module is correctly identified, and whether the Base-PP(s) and TOE overview are consistent with each other.', 'ace', 'ace_int'),
('13.36072352922564', '\n\n                    The objective of this sub-activity is to determine whether\n                    the composed TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing basic\n                    attack potential.\n\n                    The developer provides an analysis of the disposition of\n                    any residual vulnerabilities reported for the components\n                    and of any vulnerabilities introduced through the\n                    combination of the base and dependent components. The\n                    evaluator performs a search of the public domain to\n                    identify any new potential vulnerabilities in the\n                    components (i.e. those issues that have been reported in\n                    the public domain since the completion of the evaluation\n                    of the components). The evaluator will also perform an\n                    independent vulnerability analysis of the composed TOE and\n                    penetration testing.\n                ', 'aco', 'aco_vul'),
('13.892416993862225', '\n\n                    The objective of this sub-activity is to determine whether\n                    the procedures and steps for the secure preparation of the\n                    TOE have been documented and result in a secure\n                    configuration.\n                ', 'agd', 'agd_pre'),
('13.924034326097164', '\n\n                    The objective of this sub-activity is to determine whether\n                    the developer and his subcontractors have used\n                    well-defined development tools (e.g. programming languages\n                    or computer-aided design (CAD) systems) that yield\n                    consistent and predictable results, and whether\n                    implementation standards have been applied.\n                ', 'alc', 'alc_tat'),
('14.055778496947372', '\n\n                    The objective of this sub-activity is to determine whether\n                    the developer has used well-defined development tools\n                    (e.g. programming languages or computer-aided design (CAD)\n                    systems) that yield consistent and predictable results,\n                    and whether implementation standards have been\n                    applied.\n                ', 'alc', 'alc_tat'),
('14.292311942630372', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing High\n                    attack potential.\n                ', 'ava', 'ava_van'),
('14.388950793361364', '\n\n                    The objectives of this sub-activity are to determine\n                    whether the formal TOE security policy model clearly and\n                    consistently describes the rules of operation, states,\n                    transition, invariants, and other security properties of\n                    the claimed SFRs and whether this description corresponds\n                    with the description of the security functionality in the\n                    functional specification.\n                ', 'adv', 'adv_spm'),
('16.280859790561248', '', 'ace', 'ace_req'),
('17.869990898011135', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing Basic\n                    attack potential.\n                ', 'ava', 'ava_van'),
('17.900976007684864', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE design provides a description of the TOE in terms\n                    of subsystems sufficient to determine the TSF boundary,\n                    and provides a description of the TSF internals in terms\n                    of modules (and optionally higher-level abstractions). It\n                    provides a detailed description of the SFR-enforcing\n                    modules and enough information about the SFR-supporting\n                    and SFR-non-interfering modules for the evaluator to\n                    determine that the SFRs are completely and accurately\n                    implemented; as such, the TOE design provides an\n                    explanation of the implementation representation.\n                ', 'adv', 'adv_tds'),
('18.789494426351173', '\n\n                    The objective of this sub-activity is to determine whether\n                    the developer has completely described all of the TSFI in\n                    a manner such that the evaluator is able to determine\n                    whether the TSFI are completely and accurately described,\n                    and appears to implement the security functional\n                    requirements of the ST.\n                ', 'adv', 'adv_fsp'),
('19.61775958783491', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TSF is structured such that it cannot be tampered with\n                    or bypassed, and whether TSFs that provide security\n                    domains isolate those domains from each other.\n                ', 'adv', 'adv_arc'),
('2.118630094813251', '\n\n                    The objective of this sub-activity is to determine whether\n                    the developer has tested the TSFIs, and that the\n                    developer\'s test coverage evidence shows correspondence\n                    between the tests identified in the test documentation and\n                    the TSFIs described in the functional\n                    specification.\n                ', 'ate', 'ate_cov'),
('20.16879972136643', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE design provides a description of the TOE in terms\n                    of subsystems sufficient to determine the TSF boundary,\n                    and provides a description of the TSF internals in terms\n                    of modules (and optionally higher-level abstractions). It\n                    provides a detailed description of all modules for the\n                    evaluator to determine that the SFRs are completely and\n                    accurately implemented; as such, the TOE design provides\n                    an explanation of the implementation\n                    representation.\n                ', 'adv', 'adv_tds'),
('22.370412717968478', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing\n                    Enhanced-Basic attack potential.\n                ', 'ava', 'ava_van'),
('22.484033364613403', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE design provides a description of the TOE in terms\n                    of subsystems sufficient to determine the TSF boundary,\n                    and provides a description of the TSF internals in terms\n                    of modules (and optionally higher-level abstractions). It\n                    provides a detailed description of the SFR-enforcing and\n                    SFR-supporting modules and enough information about the\n                    SFR-non-interfering modules for the evaluator to determine\n                    that the SFRs are completely and accurately implemented;\n                    as such, the TOE design provides an explanation of the\n                    implementation representation.\n                ', 'adv', 'adv_tds'),
('22.625900333134645', '\n\n                    The objectives of this sub-activity are to determine\n                    whether the developer\'s reliance evidence provides\n                    sufficient information to determine that the necessary\n                    functionality is available in the base component, and the\n                    means by which that functionality is invoked. These are\n                    provided in terms of a high-level description.\n\n\n                ', 'aco', 'aco_rel'),
('22.86123678697242', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TSF is designed and structured such that the\n                    likelihood of flaws is reduced and that maintenance can be\n                    more readily performed without the introduction of\n                    flaws.\n                ', 'adv', 'adv_int'),
('3.135902212846421', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing High\n                    attack potential.\n                ', 'ava', 'ava_van'),
('3.2609037974812822', '\n\n                    The objectives of this sub-activity are to determine\n                    whether the developer\'s reliance evidence provides\n                    sufficient information to determine that the necessary\n                    functionality is available in the base component, and the\n                    means by which that functionality is invoked. This is\n                    provided in terms of the interfaces between the\n                    dependent and base component and the return values from\n                    those interfaces called by the dependent component.\n\n\n                ', 'aco', 'aco_rel'),
('3.3489938548065195', '', 'ace', 'ace_ecd'),
('3.7160516253038853', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE, in its operational environment, has easily\n                    identifiable exploitable vulnerabilities.\n                ', 'ava', 'ava_van'),
('3.7550224812563346', '\n\n                    The objective of this sub-activity is to determine whether the\n                    composed TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing\n                    Enhanced-Basic attack potential.\n\n                    The developer provides an analysis of the disposition of\n                    any residual vulnerabilities reported for the components\n                    and of any vulnerabilities introduced through the\n                    combination of the base and dependent components. The\n                    evaluator performs a search of the public domain to\n                    identify any new potential vulnerabilities in the\n                    components (i.e. those issues that have been reported in\n                    the public domain since the completion of the component\n                    evaluations). The evaluator will also perform an\n                    independent vulnerability analysis of the composed TOE and\n                    penetration testing.\n                ', 'aco', 'aco_vul'),
('3.996523716206754', '\n\n                    The objective of this sub-activity is to determine that\n                    the implementation representation made available by the\n                    developer is suitable for use in other analysis\n                    activities;\n                    suitability\n                    is judged by its\n                    conformance to the requirements for this component.\n                ', 'adv', 'adv_imp'),
('7.28377665255793', '\n\n                    The objective of this sub-activity is to determine whether\n                    the composed TOE, in its operational environment, has\n                    easily exploitable vulnerabilities.\n\n                    The developer provides details of any residual\n                    vulnerabilities reported from evaluation of the\n                    components. The evaluator performs an analysis of the\n                    disposition the residual vulnerabilities reported and also\n                    performs a search of the public domain, to identify any\n                    new potential vulnerabilities in the components\n                    (i.e. those issues that have been reported in the public\n                    domain since evaluation of the base component).  The\n                    evaluator then performs penetration testing to demonstrate\n                    that the potential vulnerabilities cannot be exploited in\n                    the TOE, in its operational environment, by an attacker\n                    with basic attack potential.\n                ', 'aco', 'aco_vul'),
('7.411408210472876', '\n\n                    The objective of this sub-activity is to determine whether\n                    the TOE, in its operational environment, has\n                    vulnerabilities exploitable by attackers possessing\n                    Moderate attack potential.\n                ', 'ava', 'ava_van'),
('8.435985519803422', '', 'ace', 'ace_obj'),
('8.95626645645959', '\n\n                    The objective of this sub-activity is to determine whether\n                    the developer correctly performed and documented the tests\n                    in the test documentation.\n                ', 'ate', 'ate_fun');

-- --------------------------------------------------------

--
-- Table structure for table `mworkunit`
--

CREATE TABLE `mworkunit` (
  `id_mworkunit` varchar(100) NOT NULL,
  `testo` varchar(60000) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL,
  `id_acomponent` varchar(100) DEFAULT NULL,
  `id_aeevaluator` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mworkunit`
--

INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('', ', The evaluator shall examine the operational user\n                        guidance to determine that it describes, for each user\n                        role, the user-accessible functions and privileges that\n                        should be controlled in a secure processing environment,\n                        including appropriate warnings.\n\n                        The configuration of the TOE may allow different user\n                        roles to have dissimilar privileges in making use of the\n                        different functions of the TOE. This means that some\n                        users are authorised to perform certain functions, while\n                        other users may not be so authorised. These functions\n                        and privileges should be described, for each user role,\n                        by the user guidance.\n\n                        The user guidance identifies, for each user role, the\n                        functions and privileges that must be controlled, the\n                        types of commands required for them, and the reasons for\n                        such commands. The user guidance should contain warnings\n                        regarding the use of these functions and\n                        privileges. Warnings should address expected effects,\n                        possible side effects, and possible interactions with\n                        other functions and privileges.', 'agd', 'agd_ope', 'agd_ope.1', 'agd_ope.1.1e'),
('ace_ccl.1-1', '\n                The evaluator shall check that the conformance claim contains a CC conformance claim that identifies the version of the CC to which the PP-Module claims conformance.\n                The evaluator determines that the CC conformance claim identifies the version of the CC that was used to develop this PP-Module. This should include the version number of the CC and, unless the International English version of the CC was used, the language of the version of the CC that was used.', 'ace', 'ace_ccl', 'ace_ccl.1', 'ace_ccl.1.1e'),
('ace_ccl.1-2', '\n            The evaluator shall check that the CC conformance claim states a claim of either CC Part 2 conformant or CC Part 2 extended for the PP-Module.', 'ace', 'ace_ccl', 'ace_ccl.1', 'ace_ccl.1.1e'),
('ace_ccl.1-3', '\n            The evaluator shall check that the conformance claim contains a package claim that identifies all security functional requirement packages to which the PP-Module claims conformance.\n            If the PP-Module does not claim conformance to a security functional requirement package, this work unit is not applicable and therefore considered to be satisfied.\n            The evaluator determines that any referenced security functional requirement packages are unambiguously identified (e.g. by title and version number, or by the identification included in the introduction of that security functional requirement package).\n            The evaluator is reminded that claims of partial conformance to a security functional requirement package are not permitted.', 'ace', 'ace_ccl', 'ace_ccl.1', 'ace_ccl.1.1e'),
('ace_ccl.1-4', '\n            The evaluator shall examine the CC conformance claim for CC Part 2 to determine that it is consistent with the extended components definition.\n            If the CC conformance claim contains CC Part 2 conformant, the evaluator determines that the extended components definition does not define functional components.\n            If the CC conformance claim contains CC Part 2 extended, the evaluator determines that the extended components definition defines at least one extended functional component.', 'ace', 'ace_ccl', 'ace_ccl.1', 'ace_ccl.1.1e'),
('ace_cco.1-1', '\n                The evaluator shall examine the PP-Configuration reference to determine that it uniquely identifies the PP-Configuration.\n                The evaluator determines that the PP-Configuration reference identifies the PP-Configuration itself, so that it may be easily distinguished from other PPs, PP-Configurations and PP-Modules, and that it also uniquely identifies each version of the PP-Configuration, e.g. by including a version number and/or a date of publication.\n                The PP-Configuration should have some referencing system that is capable of supporting unique references (e.g. use of numbers, letters or dates).', 'ace', 'ace_cco', 'ace_cco.1', 'ace_cco.1.1e'),
('ace_cco.1-2', '\n            The evaluator shall examine the PP-Configuration components statement to determine that it uniquely identifies the Protection Profiles and PP-Modules contained in the PP-Configuration.\n            The Protection Profiles should have been certified and available for use in security targets.', 'ace', 'ace_cco', 'ace_cco.1', 'ace_cco.1.1e'),
('ace_cco.1-3', '\n            The evaluator shall examine the PP-Configuration conformance statement to determine that it specifies the kind of conformity required: strict or demonstrable.\n            The evaluator shall check that the conformance claim contains a CC conformance claim that identifies the version of the CC to which the PP-Configuration and its underlying Base-PP(s) and PP-Module claim conformance.\n            The evaluator shall examine the PP-Configuration conformance claim to determine the compatibility between all CC versions that are related to the PP-Configuration and its underlying Base-PP(s) and PP-Module.\n            If at least one of the Protection Profiles identified in the PP-Configuration components statement claims strict conformance, then the PP-Configuration conformance claim has to state strict conformance also. CC versions used in a PP-Configuration and its underlying Base-PP(s) and PP-Module have to be compatible. If compatibility is not obvious, guidance from the certification scheme should be asked.', 'ace', 'ace_cco', 'ace_cco.1', 'ace_cco.1.1e'),
('ace_cco.1-4', '\n            The evaluator shall examine the PP-Configuration SAR statement to determine that it specifies a well-formed package of SAR. The SAR package can be build in with components from CC Part 3 or can refer to a specific SAR package stated in one of the Protection Profiles composing the PP-Configuration.\n            If the set of SAR comes from CC Part 3 then the evaluator shall check that it is well-formed: it is closed by dependencies or the SAR statements provide a sound discarding rationale.\n            The evaluator shall check that the set of SAR of the PP-Configuration is consistent with respect to the SARs of each of the Protection Profiles contained in the PP-Configuration: for any SAR component in each of the Protection Profile, the PP-Configuration provides either the same component or a higher component in the family hierarchy. If the SAR component in the Protection Profile is a refinement of a standard component, then the correspondent SAR component in the PP-Configuration has to include these refinements. If two Protection Profiles refine the same SAR component, the evaluator shall check that the refinements are not contradictory and that the corresponding SAR component in the PP-Configuration meets both.', 'ace', 'ace_cco', 'ace_cco.1', 'ace_cco.1.1e'),
('ace_cco.1-5', '\n            The evaluator shall check that the Base-PP(s) of the PP-Module are included in the set of PP(s) selected for the PP-Configuration.', 'ace', 'ace_cco', 'ace_cco.1', 'ace_cco.1.1e'),
('ace_cco.1-6', 'The evaluator shall check that the PP-Configuration made up of all the Protection Profiles and PP-Modules identified in the components statement of the PP-Configuration is consistent. That is, the evaluator shall check that no contradiction arises from the whole set of Protection Profiles and PP-Modules included in the PP-Configuration.\n                The evaluator can organise this work in many ways; the actual organisation may depend on the will to derive evaluation results for more than one PP-Configuration at a time.\n                For instance, the evaluator can process in two steps as follows:, SPECIFICATION-OF-PROTECTION-PROFILES, An alternative is to proceed incrementally but mixing PPs and PP-Modules or to flatten the definition of the PP-Configuration\n                (cf. Annex, ACE_MCO.1, in CC Part 1) and to assess the consistency of the whole set of elements.\n                Any incremental consistency analysis step where C is a subset of the PP-Configuration and X is a PP or a PP-Module that has to be added to C consists in:, Note that if X is a PP-Module, C contains all its Base-PP(s) and, has succeed for X, then the consistency analysis step has to be performed with respect to the components of C different from these Base-PP(s) only.', 'ace', 'ace_cco', 'ace_cco.1', 'ace_cco.1.2e'),
('ace_int.1-1', '\n                The evaluator shall check that the PP-Module introduction identifies the Base-PP(s) on which the PP-Module relies.', 'ace', 'ace_int', 'ace_int.1', 'ace_int.1.1e'),
('ace_int.1-2', '\n            The evaluator shall check that the TOE overview identifies the differences introduced by the PP-Module with respect to the TOE overview of its Base-PP(s).', 'ace', 'ace_int', 'ace_int.1', 'ace_int.1.1e'),
('ace_mco.1-1', '\n                The evaluator shall examine the consistency rationale to determine that the TOE type of the PP-Module is consistent with all the TOE types of the Base-PP(s).\n                The relation between the types may be simple: a PP-Module may consider a TOE that provides additional security functionality regarding, or more complex: a TOE that provides a given security functionality in a specific way.', 'ace', 'ace_mco', 'ace_mco.1', 'ace_mco.1.1e'),
('ace_mco.1-2', '\n            The evaluator shall examine the PP-Module consistency rationale to determine that it demonstrates that the statement of security problem definition of the PP-Module is consistent with the statements of security problem definition stated in its Base-PPs.\n            In particular, the evaluator examines the consistency rationale to determine that:\n            ', 'ace', 'ace_mco', 'ace_mco.1', 'ace_mco.1.1e'),
('ace_mco.1-3', '\n            The evaluator shall examine the consistency rationale to determine that the statement of security objectives of the PP-Module is consistent with the statement of security objectives of its Base-PP(s).\n            In particular, the evaluator examines the consistency rationale to determine that:\n            ', 'ace', 'ace_mco', 'ace_mco.1', 'ace_mco.1.1e'),
('ace_mco.1-4', '\n            The evaluator shall examine the consistency rationale to determine that the statement of security requirements of the PP-Module is consistent with the statement of security requirements of its Base-PPs, that is, the SFRs of the PP-Module either complete or refine the SFRs of the Base-PP(s) and that no contradiction arises from the whole set of SFRs of the PP-Module and the Base-PP(s).', 'ace', 'ace_mco', 'ace_mco.1', 'ace_mco.1.1e'),
('aco_cor.1-1', ', ACO_DEV, The evaluator shall examine the correspondence analysis\n                        with the development information and the reliance\n                        information to identify the interfaces that are relied\n                        upon by the dependent component which are not detailed\n                        in the development information.\n\n                        The evaluator\'s goal in this work unit is two fold:, ACO_DEV.1-2, The evaluator may use the correspondence tracing in the\n                        development information developed during the, ACO_DEV.2-4, activities (e.g., ACO_DEV.3-6, ,, ACO_COR.1-3, ,, ) to\n                        help identify the interfaces identified in the reliance\n                        information that are not considered in the development\n                        information.\n\n                        The evaluator will record the SFR-enforcing interfaces\n                        described in the reliance information that are not\n                        included in the development information. These will\n                        provide input to, work unit, helping to identify the portions of the base\n                        component in which further assurance is required.\n\n                        If the both the base and dependent components were\n                        evaluated against the same assurance package, then the\n                        determination of whether the level of assurance in the\n                        portions within the base component evaluation is at\n                        least as high as that of the dependent component is\n                        trivial. If however, the assurance packages applied to\n                        the components during the component evaluations differ,\n                        the evaluator needs to determine that the assurance\n                        requirements applied to the base component are all\n                        hierarchically higher to the assurance requirements\n                        applied to the dependent component.', 'aco', 'aco_cor', 'aco_cor.1', 'aco_cor.1.1e'),
('aco_cor.1-2', ', ACO_COR.1-3, The evaluator shall examine the composition rationale to\n                        determine, for those included base component interfaces\n                        on which the dependent TSF relies, whether the interface\n                        was considered during the evaluation of the base\n                        component.\n\n                        The ST, component public evaluation report (e.g. certification\n                        report) and guidance documents for the base component all\n                        provide information on the scope and boundary of the base\n                        component. The ST provides details of the logical scope and\n                        boundary of the composed TOE, allowing the evaluator to\n                        determine whether an interface relates to a portion of the\n                        product that was within the scope of the evaluation. The\n                        guidance documentation provides details of use of all interfaces\n                        for the composed TOE. Although the guidance documentation may\n                        include details of interfaces in the product that are not within\n                        the scope of the evaluation, any such interfaces should be\n                        identifiable, either from the scoping information in the ST or\n                        through a portion of the guidance that deals with the evaluated\n                        configuration. The public evaluation report may provide any\n                        additional constraints on the use of the composed TOE that are\n                        necessary.\n\n                        Therefore, the combination of these inputs allows the\n                        evaluator to determine whether an interface described in\n                        the composition rationale has the necessary assurance\n                        associated with it, or whether further assurance is\n                        required. The evaluator will record those interfaces of\n                        the base component for which additional assurance is\n                        required, for consideration during, .', 'aco', 'aco_cor', 'aco_cor.1', 'aco_cor.1.1e'),
('aco_cor.1-3', ', ACO_DEV, The evaluator shall examine the composition rationale to\n                        determine that the necessary assurance measures have\n                        been applied to the base component.\n\n                        The evaluation verdicts, and resultant assurance, for\n                        the base component can be reused provided the same\n                        portions of the base component are used in the composed\n                        TOE and they are used in a consistent manner.\n\n                        In order to determine whether the necessary assurance\n                        measures have already been applied to the component, and\n                        the portions of the component for which assurance\n                        measures still need to be applied, the evaluator should\n                        use the output of the, ACO_COR.1-1, .*.2E action and the work units, ACO_COR.1-2, and, ACO_DEV, :, The interfaces of the base component reported to be\n                        required by the reliance information but not included in\n                        the development information indicate the portions of the\n                        base component where further assurance is required. The\n                        interfaces identify the entry points into the base\n                        component.\n\n                        For those interfaces included in both the development\n                        information and reliance information, the evaluator is\n                        to determine whether the interfaces are being used in\n                        the composed TOE in a manner that is consistent with the\n                        base component evaluation. The method of use of the\n                        interface will be considered during the, activities to determine that\n                        the use of the interface is consistent in both the base\n                        component and the composed TOE. The remaining\n                        consideration is the determination of whether the\n                        configurations of the base component and the composed\n                        TOE are consistent. To determine this, the evaluator\n                        will consider the guidance documentation of each to\n                        ensure they are consistent (see further guidance below\n                        regarding consistent guidance documentation). Any\n                        deviation in the documentation will be further analysed\n                        by the evaluation to determine the possible\n                        effects.\n\n                        For those interfaces that are consistently described in\n                        the reliance information and development information,\n                        and for which the guidance is consistent for the base\n                        component and the composed TOE, the required level of\n                        assurance has been provided.\n\n                        The following subsubclauses provide guidance on how to\n                        determine consistency between assurance gained in the\n                        base component, the evidence provided for the composed\n                        TOE, and the analysis performed by the evaluator in the\n                        instances where inconsistencies are identified., , , , ', 'aco', 'aco_cor', 'aco_cor.1', 'aco_cor.1.1e'),
('aco_ctt.1-1', ', ATE_FUN.1.1E, The evaluator shall examine the composed TOE test\n                        documentation to determine that it consists of test\n                        plans, expected test results and actual test\n                        results.\n\n                        This work unit may be satisfied by provision of the test\n                        evidence from the evaluation of the dependent component\n                        if the base component was used to satisfy the\n                        requirements for IT in the operational environment of\n                        the dependent component.\n\n                        All work units necessary for the satisfaction of, will be applied to\n                        determine:, ', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.1e'),
('aco_ctt.1-2', ', ACO_COR, The evaluator shall examine the base component interface\n                        test documentation to determine that it consists of test\n                        plans, expected test results and actual test\n                        results.\n\n                        This work unit may be satisfied by provision of the test\n                        evidence from the evaluation of the base component for\n                        those interfaces relied upon in the composed TOE by the\n                        dependent component are TSFIs of the successfully\n                        evaluated base component.  The determination of whether\n                        the interfaces of the base component relied upon by the\n                        dependent component were in fact TSFIs of the evaluated\n                        base component is made during the, ATE_FUN.1.1E, activity.\n\n                        All work units necessary for the satisfaction of, will be applied to\n                        determine:, ', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.1e'),
('aco_ctt.1-3', ', ATE_FUN.1.3C, The evaluator shall examine the test documentation to\n                        determine that the developer execution of the composed\n                        TOE tests shall demonstrate that the TSF behaves as\n                        specified.\n\n                        The evaluator should construct a mapping between the\n                        tests described in the test plan and the SFRs specified\n                        for the composed TOE to identify which SFRs have been\n                        tested by the developer.\n\n                        Guidance on this work unit can be found in:, The outputs from the successful execution of the tests\n                        (as assessed for, can\n                        be compared with the mapping to determine that the SFRs\n                        of the composed TOE, as tested by the developer, behave\n                        as expected.', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.1e'),
('aco_ctt.1-4', ', ACO_REL, The evaluator shall examine the test documentation to\n                        determine that the developer execution of the base\n                        component interface tests shall demonstrate that the\n                        base component interfaces relied upon by the dependent\n                        component behave as specified.\n\n                        The evaluator should construct a mapping between the\n                        tests described in the test plan and the interfaces of\n                        the base component relied upon by the dependent\n                        component (as specified in the reliance information,\n                        examined under, ATE_FUN.1.3C, ) to\n                        identify which base component interfaces have been\n                        tested by the developer.\n\n                        Guidance on this work unit can be found in:, The outputs from the successful execution of the tests\n                        (as assessed for, can\n                        be compared with the mapping to determine that the\n                        interfaces of the base component, as tested by the\n                        developer, behave as expected.', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.1e'),
('aco_ctt.1-5', ', ATE_IND.2-1, The evaluator shall examine the composed TOE to\n                        determine that it has been installed properly and is in\n                        a known state.\n\n                        To determine that the composed TOE has been installed\n                        properly and is in a known state the, ATE_IND.2-2, and, work units will be\n                        applied to the TOE provided by the developer for\n                        testing.', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.1e'),
('aco_ctt.1-6', ', ATE_IND.2-3, The evaluator shall examine the set of resources\n                        provided by the developer to determine that they are\n                        equivalent to the set of resources used by the base\n                        component developer to functionally test the base\n                        component.\n\n                        To determine that the set of resources provided are\n                        equivalent to those used to functionally test the base\n                        component as used in the composed TOE, the, work unit will be\n                        applied.', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.1e'),
('aco_ctt.1-7', 'The evaluator shall perform testing in accordance with, ATE_IND.2.2E, , for a subset of the SFRs\n                        specified in the composed security target, to verify the\n                        developer test results.\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of, ATE_IND.2.2E, , reporting in the ETR for the composed TOE\n                        all analysis, results and verdicts as dictated by the\n                        associated work units.', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.2e'),
('aco_ctt.1-8', 'The evaluator shall perform testing in accordance with, ATE_IND.2.3E, , for a subset of the SFRs\n                        specified in the composed security target, to confirm that the\n                        TSF operates as specified.\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of, ATE_IND.2.3E, , reporting in the ETR for the composed TOE\n                        all analysis, results and verdicts as dictated by the\n                        work units.\n\n                        When selecting interfaces of the TSF of the composed TOE\n                        to test, the evaluator should take into account any\n                        modifications to the components from the evaluated\n                        version or configuration. Modifications to the component\n                        from that evaluated may include patches introduced, a\n                        different configuration as a result of modified guidance\n                        documentation, reliance an additional portion of the\n                        component that was not within the TSF of the\n                        component. These modifications will have been identified\n                        during the, ACO_COR, activity.', 'aco', 'aco_ctt', 'aco_ctt.1', 'aco_ctt.1.3e'),
('aco_ctt.2-1', ', ATE_FUN.1.1E, The evaluator shall examine the composed TOE test\n                        documentation to determine that it consists of test\n                        plans, expected test results and actual test\n                        results.\n\n                        This work unit may be satisfied by provision of the test\n                        evidence from the evaluation of the dependent component\n                        if the base component was used to satisfy the\n                        requirements for IT in the operational environment of\n                        the dependent component.\n\n                        All work units necessary for the satisfaction of, will be applied to\n                        determine:, ', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-10', 'The evaluator shall perform testing in accordance with, ATE_IND.2.3E, , for a subset of the SFRs\n                        specified in the composed security target, to confirm that the\n                        TSF operates as specified.\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of, ATE_IND.2.3E, , reporting in the ETR for the composed TOE\n                        all analysis, results and verdicts as dictated by the\n                        work units.\n\n                        When selecting interfaces of the TSF of the composed TOE\n                        to test, the evaluator should take into account any\n                        modifications to the components from the evaluated\n                        version or configuration. Modifications to the component\n                        from that evaluated may include patches introduced, a\n                        different configuration as a result of modified guidance\n                        documentation, reliance an additional portion of the\n                        component that was not within the TSF of the\n                        component. These modifications will have been identified\n                        during the, ACO_COR, activity.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.3e'),
('aco_ctt.2-11', 'The evaluator shall perform testing, in accordance with, ATE_IND.2, , for a subset of the\n                        interfaces to the base component to confirm they operate\n                        as specified.\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of, ATE_IND.2.3E, , reporting in the ETR for the composed TOE\n                        all analysis, results and verdicts as dictated by the\n                        work units.\n\n                        When selecting interfaces of the base component to test,\n                        the evaluator should take into account any modifications\n                        to the base component from the evaluated version or\n                        configuration. In particular, the evaluator should\n                        consider the development of tests to demonstrate the\n                        correct behaviour of interfaces of the base component\n                        that were not considered during the evaluation of the\n                        base component. These additional interfaces and other\n                        modifications to the base component will have been\n                        identified during the, ACO_COR, activity.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.3e'),
('aco_ctt.2-2', ', ACO_COR, The evaluator shall examine the base component interface\n                        test documentation to determine that it consists of test\n                        plans, expected test results and actual test\n                        results.\n\n                        This work unit may be satisfied by provision of the test\n                        evidence from the evaluation of the base component for\n                        those interfaces relied upon in the composed TOE by the\n                        dependent component are TSFIs of the successfully\n                        evaluated base component.  The determination of whether\n                        the interfaces of the base component relied upon by the\n                        dependent component were in fact TSFIs of the evaluated\n                        base component is made during the, ATE_FUN.1.1E, activity.\n\n                        All work units necessary for the satisfaction of, will be applied to\n                        determine:, ', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-3', ', The evaluator shall examine the test documentation to\n                        determine that it provides accurate correspondence\n                        between the tests in the test documentation relating to\n                        the testing of the composed TOE and the composed TOE\n                        SFRs in the composed TOE security target.\n\n                        A simple cross-table may be sufficient to show test\n                        correspondence. The identification of correspondence\n                        between the tests and SFRs presented in the test\n                        documentation has to be unambiguous.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-4', ', ATE_FUN.1.3C, The evaluator shall examine the test documentation to\n                        determine that the developer execution of the composed\n                        TOE tests shall demonstrate that the TSF behaves as\n                        specified.\n\n                        Guidance on this work unit can be found in:, The outputs from the successful execution of the tests\n                        (as assessed for, can\n                        be compared with the mapping to determine that the SFRs\n                        of the composed TOE, as tested by the developer, behave\n                        as expected.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-5', ', The evaluator shall examine the test documentation to\n                        determine that it provides accurate correspondence\n                        between the tests in the test documentation relating to\n                        the testing of the base component interfaces relied upon\n                        by the dependent component and the interfaces specified\n                        in the reliance information.\n\n                        A simple cross-table may be sufficient to show test\n                        correspondence. The identification of correspondence\n                        between the tests and interfaces presented in the test\n                        documentation has to be unambiguous.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-6', ', ATE_FUN.1.3C, The evaluator shall examine the test documentation to\n                        determine that the developer execution of the base\n                        component interface tests shall demonstrate that the\n                        base component interfaces relied upon by the dependent\n                        component behave as specified.\n\n                        Guidance on this work unit can be found in:, The outputs from the successful execution of the tests\n                        (as assessed for, can\n                        be compared with the mapping to determine that the\n                        interfaces of the base component, as tested by the\n                        developer, behave as expected.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-7', ', ATE_IND.2-1, The evaluator shall examine the composed TOE to\n                        determine that it has been installed properly and is in\n                        a known state.\n\n                        To determine that the composed TOE has been installed\n                        properly and is in a known state the, ATE_IND.2-2, and, work units will be\n                        applied to the TOE provided by the developer for\n                        testing.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-8', ', ATE_IND.2-3, The evaluator shall examine the set of resources\n                        provided by the developer to determine that they are\n                        equivalent to the set of resources used by the base\n                        component developer to functionally test the base\n                        component.\n\n                        To determine that the set of resources provided are\n                        equivalent to those used to functionally test the base\n                        component as used in the composed TOE, the, work unit will be\n                        applied.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.1e'),
('aco_ctt.2-9', 'The tests are to be selected and executed in accordance\n                        with, ATE_IND.2.2E, , to\n                        demonstrate the correct behaviour of the SFRs specified\n                        in the composed TOE security target.\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of, ATE_IND.2.2E, , reporting in the ETR for the composed TOE\n                        all analysis, results and verdicts as dictated by the\n                        associated work units.', 'aco', 'aco_ctt', 'aco_ctt.2', 'aco_ctt.2.2e'),
('aco_dev.1-1', ', ADV_TDS.1, The evaluator shall examine the development information\n                        to determine that it describes the purpose of each\n                        interface.\n\n                        The base component provides interfaces to support\n                        interaction with the dependent component in the\n                        provision of the dependent TSF. The purpose of each\n                        interface is to be described at the same level as the\n                        description of the interfaces to the dependent component\n                        TSF functionality, as would be provided between\n                        subsystems in the TOE design (, ). This description is to provide the\n                        reader with an understanding of how the base component\n                        provides the services required by the dependent\n                        component TSF.\n\n                        This work unit may be satisfied by the provision of the\n                        functional specification for the base component for\n                        those interfaces that are TSFIs of the base\n                        component.', 'aco', 'aco_dev', 'aco_dev.1', 'aco_dev.1.1e'),
('aco_dev.1-2', ', ACO_REL, The evaluator shall examine the development information\n                        to determine the correspondence, between the interfaces\n                        of the base component and the interfaces on which the\n                        dependent component relies, is accurate.\n\n                        The correspondence between the interfaces of the base\n                        component and the interfaces on which the dependent\n                        component relies may take the form of a matrix or\n                        table. The interfaces that are relied upon by the\n                        dependent component are identified in the reliance\n                        information (as examined during, ACO_COR, activity).\n\n                        There is, during this activity, no requirement to\n                        determine completeness of the coverage of interfaces\n                        that are relied upon by the dependent component, only\n                        that the correspondence is correct and ensuring that\n                        interfaces of the base component are mapped to\n                        interfaces required by the dependent component wherever\n                        possible. The completeness of the coverage is considered\n                        in, activities.', 'aco', 'aco_dev', 'aco_dev.1', 'aco_dev.1.1e'),
('aco_dev.1-3', '\n\n                        The evaluator shall examine the development information\n                        and the reliance information to determine that the\n                        interfaces are described consistently.\n\n                        The evaluator\'s goal in this work unit is to determine\n                        that the interfaces described in the development\n                        information for the base component and the reliance\n                        information for the dependent component are represented\n                        consistently.\n                    ', 'aco', 'aco_dev', 'aco_dev.1', 'aco_dev.1.2e'),
('aco_dev.2-1', ', ADV_TDS.1, The evaluator shall examine the development information\n                        to determine that it describes the purpose of each\n                        interface.\n\n                        The base component provides interfaces to support\n                        interaction with the dependent component in the\n                        provision of the dependent TSF. The purpose of each\n                        interface is to be described at the same level as the\n                        description of the interfaces to the dependent component\n                        TSF functionality, as would be provided between\n                        subsystems in the TOE design (, ). This description is to provide the\n                        reader with an understanding of how the base component\n                        provides the services required by the dependent\n                        component TSF.\n\n                        This work unit may be satisfied by the provision of the\n                        functional specification for the base component for\n                        those interfaces that are TSFIs of the base\n                        component.', 'aco', 'aco_dev', 'aco_dev.2', 'aco_dev.2.1e'),
('aco_dev.2-2', ', The evaluator shall examine the development information\n                        to determine that it describes the method of use for\n                        each interface.\n\n                        The method of use for an interface summarises how the\n                        interface is manipulated in order to invoke the\n                        operations and obtain results associated with the\n                        interface. The evaluator should be able to determine\n                        from reading this material in the development\n                        information how to use each interface. This does not\n                        necessarily mean that there needs to be a separate\n                        method of use for each interface, as it may be possible\n                        to describe in general how APIs are invoked, for\n                        instance, and then identify each interface using that\n                        general style.\n\n                        This work unit may be satisfied by the provision of the\n                        functional specification for the base component for\n                        those interfaces that are TSFIs of the base\n                        component.', 'aco', 'aco_dev', 'aco_dev.2', 'aco_dev.2.1e'),
('aco_dev.2-3', ', ADV_TDS.1.4C, The evaluator shall examine the development information\n                        to determine that it describes the behaviour of the base\n                        component that supports the enforcement of the dependent\n                        component SFRs.\n\n                        The dependent component invokes interfaces of the base\n                        component for the provision of services by the base\n                        component. For the interfaces of the base component that\n                        are invoked, the development information shall provide a\n                        high-level description of the associated security\n                        behaviour of the base component. The description of the\n                        base component security behaviour will outline how the\n                        base component provides the necessary service when the\n                        call to the interface is made. This description is to be\n                        at a level similar to that provided for, . Therefore, the provision\n                        of the TOE design evidence from the base component\n                        evaluation would satisfy this work unit, where the\n                        interfaces invoked by the dependent component are TSFI\n                        of the base component. If the interfaces invoked by the\n                        dependent component are not TSFIs of the base component\n                        it is the associated security behaviour will not\n                        necessarily be described in the base component TOE\n                        design evidence.', 'aco', 'aco_dev', 'aco_dev.2', 'aco_dev.2.1e'),
('aco_dev.2-4', ', ACO_REL, The evaluator shall examine the development information\n                        to determine the correspondence, between the interfaces\n                        of the base component and the interfaces on which the\n                        dependent component relies, is accurate.\n\n                        The correspondence between the interfaces of the base\n                        component and the interfaces on which the dependent\n                        component relies may take the form of a matrix or\n                        table. The interfaces that are relied upon by the\n                        dependent component are identified in the reliance\n                        information (as examined during, ACO_COR, ).\n\n                        There is, during this activity, no requirement to\n                        determine completeness of the coverage of interfaces\n                        that are relied upon by the dependent component, only\n                        that the correspondence is correct and ensuring that\n                        interfaces of the base component are mapped to\n                        interfaces required by the dependent component wherever\n                        possible. The completeness of the coverage is considered\n                        in, activities.', 'aco', 'aco_dev', 'aco_dev.2', 'aco_dev.2.1e'),
('aco_dev.2-5', '\n\n                        The evaluator shall examine the development information\n                        and the reliance information to determine that the\n                        interfaces are described consistently.\n\n                        The evaluator\'s goal in this work unit is to determine\n                        that the interfaces described in the development\n                        information for the base component and the reliance\n                        information for the dependent component are represented\n                        consistently. ', 'aco', 'aco_dev', 'aco_dev.2', 'aco_dev.2.2e'),
('aco_dev.3-1', ', ADV_TDS.1, The evaluator shall examine the development information\n                        to determine that it describes the purpose of each\n                        interface.\n\n                        The base component provides interfaces to support\n                        interaction with the dependent component in the\n                        provision of the dependent TSF. The purpose of each\n                        interface is to be described at the same level as the\n                        description of the interfaces to the dependent component\n                        TSF functionality, as would be provided between\n                        subsystems in the TOE design (, ). This description is to provide the\n                        reader with an understanding of how the base component\n                        provides the services required by the dependent\n                        component TSF.\n\n                        This work unit may be satisfied by the provision of the\n                        functional specification for the base component for\n                        those interfaces that are TSFIs of the base\n                        component.', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.1e'),
('aco_dev.3-2', ', The evaluator shall examine the development information\n                        to determine that it describes the method of use for\n                        each interface.\n\n                        The method of use for an interface summarises how the\n                        interface is manipulated in order to invoke the\n                        operations and obtain results associated with the\n                        interface. The evaluator should be able to determine\n                        from reading this material in the development\n                        information how to use each interface. This does not\n                        necessarily mean that there needs to be a separate\n                        method of use for each interface, as it may be possible\n                        to describe in general how APIs are invoked, for\n                        instance, and then identify each interface using that\n                        general style.\n\n                        This work unit may be satisfied by the provision of the\n                        functional specification for the base component for\n                        those interfaces that are TSFIs of the base\n                        component.', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.1e'),
('aco_dev.3-3', ', ADV_TDS, The evaluator shall examine the development information\n                        to determine that all subsystems of the base component\n                        that provide interfaces to the dependent component are\n                        identified.\n\n                        For those interfaces that are considered to form part of\n                        the TSFI of the base component, the subsystems\n                        associated with the interface will be subsystems\n                        considered in the, activity during the base component evaluation. The\n                        interfaces on which the dependent component relies that\n                        did not form part of the TSFI of the base component will\n                        map to subsystems outside of the base component\n                        TSF.', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('aco_dev.3-4', ', ADV_TDS.1.4C, The evaluator shall examine the development information\n                        to determine that it describes the behaviour of the base\n                        component subsystems that support the enforcement of the\n                        dependent component SFRs.\n\n                        The dependent component invokes interfaces of the base\n                        component for the provision of services by the base\n                        component. For the interfaces of the base component that\n                        are invoked, the development information shall provide a\n                        high-level description of the associated security\n                        behaviour of the base component. The description of the\n                        base component security behaviour will outline how the\n                        base component provides the necessary service when the\n                        call to the interface is made. This description is to be\n                        at a level similar to that provided for, . Therefore, the provision\n                        of the TOE design evidence from the base component\n                        evaluation would satisfy this work unit, where the\n                        interfaces invoked by the dependent component are TSFI\n                        of the base component. If the interfaces invoked by the\n                        dependent component are not TSFIs of the base component\n                        it is the associated security behaviour will not\n                        necessarily be described in the base component TOE\n                        design evidence.', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.1e'),
('aco_dev.3-5', ', The evaluator shall examine the development information\n                        to determine that the correspondence between the\n                        interfaces and subsystems of the base component is\n                        accurate.\n\n                        If the TOE design and functional specification evidence\n                        from the base component evaluation is available, this\n                        can be used to verify the accuracy of the correspondence\n                        between the interfaces and subsystems of the base\n                        component as used in the composed TOE. Those interfaces\n                        of the base component, which formed part of the base\n                        component TSFI will be described in the base component\n                        functional specification, and the associated subsystems\n                        will be described in the base component TOE design\n                        evidence.  The tracing between the two will be provided\n                        in the base component TOE design evidence.\n\n                        If, however, the base component interface did not form\n                        part of the TSFI of the base component, the description\n                        of the subsystem behaviour provided in the development\n                        information will be used to verify the accuracy of the\n                        correspondence.', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.1e'),
('aco_dev.3-6', ', ACO_REL, The evaluator shall examine the development information\n                        to determine the correspondence, between the interfaces\n                        of the base component and the interfaces on which the\n                        dependent component relies, is accurate.\n\n                        The correspondence between the interfaces of the base\n                        component and the interfaces on which the dependent\n                        component relies may take the form of a matrix or\n                        table. The interfaces that are relied upon by the\n                        dependent component are identified in the reliance\n                        information (as examined during, ACO_COR, ).\n\n                        There is, during this activity, no requirement to\n                        determine completeness of the coverage of interfaces\n                        that are relied upon by the dependent component, only\n                        that the correspondence is correct and ensuring that\n                        interfaces of the base component are mapped to\n                        interfaces required by the dependent component wherever\n                        possible. The completeness of the coverage is considered\n                        in, activities.', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.1e'),
('aco_dev.3-7', '\n\n                        The evaluator shall examine the development information\n                        and the reliance information to determine that the\n                        interfaces are described consistently.\n\n                        The evaluator\'s goal in this work unit is to determine\n                        that the interfaces described in the development\n                        information for the base component and the reliance\n                        information for the dependent component are represented\n                        consistently. ', 'aco', 'aco_dev', 'aco_dev.3', 'aco_dev.3.2e'),
('aco_rel.1-1', ', ADV_TDS, The evaluator shall check the reliance information to\n                        determine that it describes the functionality of the\n                        base dependent hardware, firmware and/or software that\n                        is relied upon by the dependent component TSF.\n\n                        The evaluator assesses the description of the security\n                        functionality that the dependent component TSF requires\n                        to be provided by the base component\'s hardware,\n                        firmware and software. The emphasis of this work unit is\n                        on the level of detail of this description, rather than\n                        on an assessment of the information\'s accuracy. (The\n                        assessment of the accuracy of the information is the\n                        focus of the next work unit.)\n\n                        This description of the base component\'s functionality\n                        need not be any more detailed than the level of the\n                        description of a component of the TSF, as would be\n                        provided in the TOE Design (, )', 'aco', 'aco_rel', 'aco_rel.1', 'aco_rel.1.1e'),
('aco_rel.1-2', ', The evaluator shall examine the reliance information to\n                        determine that it accurately reflects the objectives\n                        specified for the operational environment of the\n                        dependent component.\n\n                        The reliance information contains the description of the\n                        base component\'s security functionality relied upon by\n                        the dependent component. To ensure that the reliance\n                        information is consistent with the expectations of the\n                        operational environment of the dependent component, the\n                        evaluator compares the reliance information with the\n                        statement of objectives for the environment in the ST\n                        for the dependent component.\n\n                        For example, if the reliance information claims that the\n                        dependent component TSF relies upon the base component\n                        to store and protect audit data, yet other evaluation\n                        evidence (e.g. the dependent component design) makes it\n                        clear that the dependent component TSF itself is storing\n                        and protecting the audit data, this would indicate an\n                        inaccuracy.\n\n                        It should be noted that the objectives for the\n                        operational environment may include objectives that can\n                        be met by non-IT measures. While the services that the\n                        base component environment is expected to provide may be\n                        described in the description of IT objectives for the\n                        operational environment in the dependent component ST,\n                        it is not required that all such expectations on the\n                        environment be described in the reliance\n                        information.', 'aco', 'aco_rel', 'aco_rel.1', 'aco_rel.1.1e'),
('aco_rel.1-3', ', ACO-INTERACTIONS-IT-ENTITIES, The evaluator shall examine the reliance information to\n                        determine that it describes all interactions between the\n                        dependent component and the base component, through\n                        which the dependent component TSF requests services from\n                        the base component.\n\n                        The dependent component TSF may request services of the\n                        base component that were not within the TSF of the base\n                        component (see, ADV_TDS.1, in CC Part\n                        3).\n\n                        The interfaces to the base component\'s functionality are\n                        described at the same level as the description of the\n                        interfaces to the dependent component TSF functionality,\n                        as would be provided between subsystems in the TOE\n                        design (, ACO_REL.1-1, ).\n\n                        The purpose of describing the interactions between the\n                        dependent component and the base component is to provide\n                        an understanding of how the dependent component TSF\n                        relies upon the base component for the provision of\n                        services to support the operation of security\n                        functionality of the dependent component. These\n                        interactions do not need to be characterised at the\n                        implementation level (e.g. parameters passed from one\n                        routine in a component to a routine in another\n                        component), but the data elements identified for a\n                        particular component that are going to be used by\n                        another component should be covered in this\n                        description. The statement should help the reader\n                        understand in general why the interaction is\n                        necessary.\n\n                        Accuracy and completeness of the interfaces is based on\n                        the security functionality that the TSF requires to be\n                        provided by the base component, as assessed in work\n                        units, ACO_REL.1-2, and, . It should be possible to\n                        map all of the functionality described in the earlier\n                        work units to the interfaces identified in this work\n                        unit, and vice versa. An interface that does not\n                        correspond to described functionality would also\n                        indicate an inadequacy.', 'aco', 'aco_rel', 'aco_rel.1', 'aco_rel.1.1e'),
('aco_rel.1-4', ', ADV_ARC.1-4, The evaluator shall examine the reliance information to\n                        determine that it describes how the dependent TSF protects\n                        itself from interference and tampering by the base\n                        component.\n\n                        The description of how the dependent component protects\n                        itself from interference and tampering by the base\n                        component is to be provided at the same level of detail\n                        as necessary for, .', 'aco', 'aco_rel', 'aco_rel.1', 'aco_rel.1.1e'),
('aco_rel.2-1', ', ADV_TDS, The evaluator shall check the reliance information to\n                        determine that it describes the functionality of the\n                        base dependent hardware, firmware and/or software that\n                        is relied upon by the dependent component TSF.\n\n                        The evaluator assesses the description of the security\n                        functionality that the dependent component TSF requires\n                        to be provided by the base component\'s hardware,\n                        firmware and software. The emphasis of this work unit is\n                        on the level of detail of this description, rather than\n                        on an assessment of the information\'s accuracy. (The\n                        assessment of the accuracy of the information is the\n                        focus of the next work unit.)\n\n                        This description of the base component\'s functionality\n                        need not be any more detailed than the level of the\n                        description of a component of the TSF, as would be\n                        provided in the TOE Design (, )', 'aco', 'aco_rel', 'aco_rel.2', 'aco_rel.2.1e'),
('aco_rel.2-2', ', The evaluator shall examine the reliance information to\n                        determine that it accurately reflects the objectives\n                        specified for the operational environment of the\n                        dependent component.\n\n                        The reliance information contains the description of the\n                        base component\'s security functionality relied upon by\n                        the dependent component. To ensure that the reliance\n                        information is consistent with the expectations of the\n                        operational environment of the dependent component, the\n                        evaluator compares the reliance information with the\n                        statement of objectives for the environment in the ST\n                        for the dependent component.\n\n                        For example, if the reliance information claims that the\n                        dependent component TSF relies upon the base component\n                        to store and protect audit data, yet other evaluation\n                        evidence (e.g. the dependent component design) makes it\n                        clear that the dependent component TSF itself is storing\n                        and protecting the audit data, this would indicate an\n                        inaccuracy.\n\n                        It should be noted that the objectives for the\n                        operational environment may include objectives that can\n                        be met by non-IT measures. While the services that the\n                        base component environment is expected to provide may be\n                        described in the description of IT objectives for the\n                        operational environment in the dependent component ST,\n                        it is not required that all such expectations on the\n                        environment be described in the reliance\n                        information.', 'aco', 'aco_rel', 'aco_rel.2', 'aco_rel.2.1e'),
('aco_rel.2-3', ', ACO-INTERACTIONS-IT-ENTITIES, The evaluator shall examine the reliance information to\n                        determine that it describes all interactions between the\n                        dependent component and the base component, through\n                        which the dependent component TSF requests services from\n                        the base component.\n\n                        The dependent component TSF may request services of the\n                        base component that were not within the TSF of the base\n                        component (see Annex, ADV_TDS.1, in CC Part\n                        3).\n\n                        The interfaces to the base component\'s functionality are\n                        described at the same level as the description of the\n                        interfaces to the dependent component TSF functionality,\n                        as would be provided between subsystems in the TOE\n                        design (, ACO_REL.2-1, ).\n\n                        The purpose of describing the interactions between the\n                        dependent component and the base component is to provide\n                        an understanding of how the dependent component TSF\n                        relies upon the base component for the provision of\n                        services to support the operation of security\n                        functionality of the dependent component. These\n                        interactions do not need to be characterised at the\n                        implementation level (e.g. parameters passed from one\n                        routine in a component to a routine in another\n                        component), but the data elements identified for a\n                        particular component that are going to be used by\n                        another component should be covered in this\n                        description. The statement should help the reader\n                        understand in general why the interaction is\n                        necessary.\n\n                        Accuracy and completeness of the interfaces is based on\n                        the security functionality that the TSF requires to be\n                        provided by the base component, as assessed in work\n                        units, ACO_REL.2-2, and, . It should be possible to\n                        map all of the functionality described in the earlier\n                        work units to the interfaces identified in this work\n                        unit, and vice versa. An interface that does not\n                        correspond to described functionality would also\n                        indicate an inadequacy.', 'aco', 'aco_rel', 'aco_rel.2', 'aco_rel.2.1e'),
('aco_rel.2-4', ', ACO_REL.2-3, The reliance information shall describe each interaction\n                        in terms of the interface used and the return values\n                        from those interfaces.\n\n                        The identification of the interfaces used by the\n                        dependent component TSF when making services requests of\n                        the base component allows an integrator to determine\n                        whether the base component provides all the necessary\n                        corresponding interfaces. This understanding is further\n                        gained through the specification of the return values\n                        expected by the dependent component. The evaluator\n                        ensures that interfaces are described for each\n                        interaction specified (as analysed in, ).', 'aco', 'aco_rel', 'aco_rel.2', 'aco_rel.2.1e'),
('aco_rel.2-5', ', ADV_ARC.1-4, The evaluator shall examine the reliance information to\n                        determine that it describes how the dependent TSF protects\n                        itself from interference and tampering by the base\n                        component.\n\n                        The description of how the dependent component protects\n                        itself from interference and tampering by the base\n                        component is to be provided at the same level of detail\n                        as necessary for, .', 'aco', 'aco_rel', 'aco_rel.2', 'aco_rel.2.1e'),
('aco_vul.1-1', ', ATE_IND.2-1, The evaluator shall examine the composed TOE to\n                        determine that it has been installed properly and is in\n                        a known state.\n\n                        To determine that the composed TOE has been installed\n                        properly and is in a known state the, ATE_IND.2-2, and, ACO_CTT, work units will be\n                        applied to the composed TOE.\n\n                        If the assurance package includes a component from the, ACO_CTT, family, then the\n                        evaluator may refer to the result of the work unit, *-1 to demonstrate this has been\n                        satisfied.', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.1e'),
('aco_vul.1-2', '\n\n                        The evaluator shall examine the composed TOE\n                        configuration to determine that any assumptions and\n                        objectives in the STs the components relating to IT\n                        entities for are fulfilled by the other\n                        components.\n\n                        The STs for the component may include assumptions about\n                        other components that may use the component to which the\n                        ST relates, e.g. the ST for an operating system used as\n                        a base component may include an assumption that any\n                        applications loaded on the operating system do not run\n                        in privileged mode. These assumptions and objectives are\n                        to be fulfilled by other components in the composed\n                        TOE.\n                    ', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.1e'),
('aco_vul.1-3', '\n\n                        The evaluator shall examine the residual vulnerabilities\n                        from the base component evaluation to determine that\n                        they are not exploitable in the composed TOE in its\n                        operational environment.\n\n                        The list of vulnerabilities identified in the product\n                        during the evaluation of the base component, which were\n                        demonstrated to be non-exploitable in the base\n                        component, is to be used as an input into this\n                        activity. The evaluator will determine that the\n                        premise(s) on which a vulnerability was deemed to be\n                        non-exploitable is upheld in the composed TOE, or\n                        whether the combination has re-introduced the potential\n                        vulnerability. For example, if during evaluation of the\n                        base component it was assumed that a particular\n                        operating system service was disabled, which is enabled\n                        in the composed TOE evaluation, any potential\n                        vulnerabilities relating to that service previously\n                        scoped out should now be considered.\n\n                        Also, this list of known, non-exploitable\n                        vulnerabilities resulting from the evaluation of the\n                        base component should be considered in the light of any\n                        known, non-exploitable vulnerabilities for the other\n                        components (e.g. dependent component) within the\n                        composed TOE. This is to consider the case where a\n                        potential vulnerability that is non-exploitable in\n                        isolation is exploitable when integrated with an IT\n                        entity containing another potential\n                        vulnerability.\n                    ', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.2e'),
('aco_vul.1-4', '\n\n                        The evaluator shall examine the residual vulnerabilities\n                        from the dependent component evaluation to determine\n                        that they are not exploitable in the composed TOE in its\n                        operational environment.\n\n                        The list of vulnerabilities identified in the product\n                        during the evaluation of the dependent component, which\n                        were demonstrated to be non-exploitable in the dependent\n                        component, is to be used as an input into this\n                        activity. The evaluator will determine that the\n                        premise(s) on which a vulnerability was deemed to be\n                        non-exploitable is upheld in the composed TOE, or\n                        whether the combination has re-introduced the potential\n                        vulnerability. For example, if during evaluation of the\n                        dependent component it was assumed that IT meeting the\n                        operational environment requirements would not return a\n                        certain value in response to a service request, which is\n                        provided by the base component in the composed TOE\n                        evaluation, any potential vulnerabilities relating to\n                        that return value previously scoped out should now be\n                        considered.\n\n                        Also, this list of known, non-exploitable\n                        vulnerabilities resulting from the evaluation of the\n                        dependent component should be considered in the light of\n                        any known, non-exploitable vulnerabilities for the other\n                        components (e.g. base component) within the composed\n                        TOE. This is to consider the case where a potential\n                        vulnerability that is non-exploitable in isolation is\n                        exploitable when integrated with an IT entity containing\n                        another potential vulnerability.\n                    ', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.2e'),
('aco_vul.1-5', 'The evaluator shall examine the sources of information\n                        publicly available to support the identification of\n                        possible security vulnerabilities in the base component\n                        that have become known since the completion of\n                        evaluation of the base component.\n\n                        The evaluator will use the information in the public\n                        domain as described in, AVA_VAN.1-2, to search for vulnerabilities in the base\n                        component.\n\n                        Those potential vulnerabilities that were publicly\n                        available prior to the evaluation of the base component\n                        do not have to be further investigated unless it is\n                        apparent to the evaluator that the attack potential\n                        required by an attacker to exploit the potential\n                        vulnerability has been significantly reduced. This may\n                        be through the introduction of some new technology since\n                        the base component evaluation that means the\n                        exploitation of the potential vulnerability has been\n                        simplified.', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.3e'),
('aco_vul.1-6', 'The evaluator shall examine the sources of information\n                        publicly available to support the identification of\n                        possible security vulnerabilities in the dependent\n                        component that have become known since the completion of\n                        the dependent component evaluation.\n\n                        The evaluator will use the information in the public\n                        domain as described in, AVA_VAN.1-2, to search for vulnerabilities in the\n                        dependent component.\n\n                        Those potential vulnerabilities that were publicly\n                        available prior to the evaluation of the dependent\n                        component do not have to be further investigated unless\n                        it is apparent to the evaluator that the attack\n                        potential required by an attacker to exploit the\n                        potential vulnerability has been significantly\n                        reduced. This may be through the introduction of some\n                        new technology since evaluation of the dependent\n                        component that means the exploitation of the potential\n                        vulnerability has been simplified.', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.3e'),
('aco_vul.1-7', 'The evaluator shall record in the ETR the identified\n                        potential security vulnerabilities that are candidates\n                        for testing and applicable to the composed TOE in its\n                        operational environment.\n\n                        The ST, guidance documentation and functional\n                        specification are used to determine whether the\n                        vulnerabilities are relevant to the composed TOE in its\n                        operational environment.\n\n                        The evaluator records any reasons for exclusion of\n                        vulnerabilities from further consideration if the\n                        evaluator determines that the vulnerability is not\n                        applicable in the operational environment. Otherwise the\n                        evaluator records the potential vulnerability for\n                        further consideration.\n\n                        A list of potential vulnerabilities applicable to the\n                        composed TOE in its operational environment, which can\n                        be used as an input into penetration testing activities\n                        (i.e., ACO_VUL.1.4E, ), shall be\n                        reported in the ETR by the evaluators.', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.3e'),
('aco_vul.1-8', 'The evaluator shall conduct penetration testing as\n                        detailed for, AVA_VAN.1.3E, .\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of evaluator action, AVA_VAN.1.3E, , reporting in the ETR\n                        for the composed TOE all analysis and verdicts as\n                        dictated by the work units.\n\n                        The evaluator will also apply the work units for the\n                        evaluator action, AVA_VAN.1.1E, to determine that the composed TOE provided by the\n                        developer is suitable for testing.', 'aco', 'aco_vul', 'aco_vul.1', 'aco_vul.1.4e'),
('aco_vul.2-1', ', ATE_IND.2-1, The evaluator shall examine the composed TOE to\n                        determine that it has been installed properly and is in\n                        a known state.\n\n                        To determine that the composed TOE has been installed\n                        properly and is in a known state the, ATE_IND.2-2, and, ACO_CTT, work units will be\n                        applied to the composed TOE.\n\n                        If the assurance package includes, ACO_CTT, family, then the evaluator may refer to the\n                        result of the work unit, *-1 to demonstrate this has been\n                        satisfied.', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.1e'),
('aco_vul.2-2', '\n\n                        The evaluator shall examine the composed TOE\n                        configuration to determine that any assumptions and\n                        objectives in the STs the components relating to IT\n                        entities for are fulfilled by the other\n                        components.\n\n                        The STs for the component may include assumptions about\n                        other components that may use the component to which the\n                        ST relates, e.g. the ST for an operating system used as\n                        a base component may include an assumption that any\n                        applications loaded on the operating system do not run\n                        in privileged mode. These assumptions and objectives are\n                        to be fulfilled by other components in the composed\n                        TOE.\n                    ', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.1e'),
('aco_vul.2-3', '\n\n                        The evaluator shall examine the residual vulnerabilities\n                        from the base component evaluation to determine that\n                        they are not exploitable in the composed TOE in its\n                        operational environment.\n\n                        The list of vulnerabilities identified in the product\n                        during the evaluation of the base component, which were\n                        demonstrated to be non-exploitable in the base\n                        component, is to be used as an input into this\n                        activity. The evaluator will determine that the\n                        premise(s) on which a vulnerability was deemed to be\n                        non-exploitable is upheld in the composed TOE, or\n                        whether the combination has re-introduced the potential\n                        vulnerability. For example, if during evaluation of the\n                        base component it was assumed that a particular\n                        operating system service was disabled, which is enabled\n                        in the composed TOE evaluation, any potential\n                        vulnerabilities relating to that service previously\n                        scoped out should now be considered.\n\n                        Also, this list of known, non-exploitable\n                        vulnerabilities resulting from the evaluation of the\n                        base component should be considered in the light of any\n                        known, non-exploitable vulnerabilities for the other\n                        components (e.g. dependent component) within the\n                        composed TOE. This is to consider the case where a\n                        potential vulnerability that is non-exploitable in\n                        isolation is exploitable when integrated with an IT\n                        entity containing another potential\n                        vulnerability.\n                    ', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.2e'),
('aco_vul.2-4', '\n\n                        The evaluator shall examine the residual vulnerabilities\n                        from the dependent component evaluation to determine\n                        that they are not exploitable in the composed TOE in its\n                        operational environment.\n\n                        The list of vulnerabilities identified in the product\n                        during the evaluation of the dependent component, which\n                        were demonstrated to be non-exploitable in the dependent\n                        component, is to be used as an input into this\n                        activity. The evaluator will determine that the\n                        premise(s) on which a vulnerability was deemed to be\n                        non-exploitable is upheld in the composed TOE, or\n                        whether the combination has re-introduced the potential\n                        vulnerability. For example, if during evaluation of the\n                        dependent component it was assumed that IT meeting the\n                        operational environment requirements would not return a\n                        certain value in response to a service request, which is\n                        provided by the base component in the composed TOE\n                        evaluation, any potential vulnerabilities relating to\n                        that return value previously scoped out should now be\n                        considered.\n\n                        Also, this list of known, non-exploitable\n                        vulnerabilities resulting from the evaluation of the\n                        dependent component should be considered in the light of\n                        any known, non-exploitable vulnerabilities for the other\n                        components (e.g. base component) within the composed\n                        TOE. This is to consider the case where a potential\n                        vulnerability that is non-exploitable in isolation is\n                        exploitable when integrated with an IT entity containing\n                        another potential vulnerability.\n                    ', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.2e'),
('aco_vul.2-5', 'The evaluator shall examine the sources of information publicly\n                        available to support the identification of possible security\n                        vulnerabilities in the base component that have become known\n                        since the completion of the base component evaluation.\n\n                        The evaluator will use the information in the public\n                        domain as described in, AVA_VAN.2-2, to search for vulnerabilities in the base\n                        component.\n\n                        Those potential vulnerabilities that were publicly\n                        available prior to the evaluation of the base component\n                        do not have to be further investigated unless it is\n                        apparent to the evaluator that the attack potential\n                        required by an attacker to exploit the potential\n                        vulnerability has been significantly reduced. This may\n                        be through the introduction of some new technology since\n                        the base component evaluation that means the\n                        exploitation of the potential vulnerability has been\n                        simplified.', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.3e'),
('aco_vul.2-6', 'The evaluator shall examine the sources of information\n                        publicly available to support the identification of\n                        possible security vulnerabilities in the dependent\n                        component that have become known since the completion of\n                        the dependent component evaluation.\n\n                        The evaluator will use the information in the public domain as\n                        described in, AVA_VAN.2-2, to search for\n                        vulnerabilities in the dependent component.\n\n                        Those potential vulnerabilities that were publicly\n                        available prior to the evaluation of the dependent\n                        component do not have to be further investigated unless\n                        it is apparent to the evaluator that the attack\n                        potential required by an attacker to exploit the\n                        potential vulnerability has been significantly\n                        reduced. This may be through the introduction of some\n                        new technology since evaluation of the dependent\n                        component that means the exploitation of the potential\n                        vulnerability has been simplified.', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.3e'),
('aco_vul.2-7', 'The evaluator shall record in the ETR the identified\n                        potential security vulnerabilities that are candidates\n                        for testing and applicable to the composed TOE in its\n                        operational environment.\n\n                        The ST, guidance documentation and functional\n                        specification are used to determine whether the\n                        vulnerabilities are relevant to the composed TOE in its\n                        operational environment.\n\n                        The evaluator records any reasons for exclusion of\n                        vulnerabilities from further consideration if the\n                        evaluator determines that the vulnerability is not\n                        applicable in the operational environment. Otherwise the\n                        evaluator records the potential vulnerability for\n                        further consideration.\n\n                        A list of potential vulnerabilities applicable to the\n                        composed TOE in its operational environment, which can\n                        be used as an input into penetration testing activities\n                        (, ACO_VUL.2.5E, ), shall be\n                        reported in the ETR by the evaluators.', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.3e'),
('aco_vul.2-8', 'The evaluator shall conduct a search of the composed TOE\n                        ST, guidance documentation, reliance information and\n                        composition rationale to identify possible security\n                        vulnerabilities in the composed TOE.\n\n                        The consideration of the components of the composed TOE\n                        in the independent evaluator vulnerability analysis will\n                        take a slightly different form to that documented in, AVA_VAN.2.3E, for a component\n                        evaluation, as it will not necessarily consider all\n                        layers of design abstraction relevant to the assurance\n                        package. These will have already been considered during\n                        the evaluation of the components, but the evidence may\n                        not be available for the composed TOE\n                        evaluation. However, the general approach described in\n                        the work units associated with, AVA_VAN.2.3E, is applicable and should form the basis of\n                        the evaluator\'s search for potential vulnerabilities in\n                        the composed TOE.\n\n                        A vulnerability analysis of the individual components\n                        used in the composed TOE will have already been\n                        performed during evaluation of the individual\n                        components. The focus of the vulnerability analysis\n                        during the composed TOE evaluation is to identify any\n                        vulnerabilities introduced as a result of the\n                        integration of the components or due to any changes in\n                        the use of the components between the evaluated\n                        component configuration to the composed TOE\n                        configuration.\n\n                        The evaluator will use the understanding of the\n                        component\'s construction as detailed in the reliance\n                        information for the dependent component, and the\n                        development information and composition rationale for\n                        the base component, together with the dependent\n                        component design information. This information will\n                        allow the evaluator to gain an understanding of how the\n                        base component and dependent component interact and\n                        identify potential vulnerabilities that may be\n                        introduced as a result of this interaction.\n\n                        The evaluator will consider any new guidance provided\n                        for the installation, start-up and operation of the\n                        composed TOE to identify any potential vulnerabilities\n                        introduced through this revised guidance.\n\n                        If any of the individual components have been through\n                        assurance continuity activities since the completion of\n                        the component evaluation, the evaluator will consider\n                        the patch(es) in the independent vulnerability\n                        analysis. Information related to the change provided in\n                        a public report of the assurance continuity activities\n                        (e.g. Maintenance Report) will be the main source of\n                        input material of the change. This will be supplemented\n                        by any updates to the guidance documentation resulting\n                        from the change and any information regarding the change\n                        available in the public domain, e.g. vendor\n                        website.\n\n                        Any risks identified due to the lack of evidence to\n                        establish the full impact of any patches or deviations\n                        in the configuration of a component from the evaluated\n                        configuration are to be documented in the evaluator\'s\n                        vulnerability analysis.', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.4e'),
('aco_vul.2-9', 'The evaluator shall conduct penetration testing as\n                        detailed for, AVA_VAN.2.4E, .\n\n                        The evaluator will apply all work units necessary for\n                        the satisfaction of evaluator action, AVA_VAN.2.4E, , reporting in the ETR\n                        for the composed TOE all analysis and verdicts as\n                        dictated by the work units.\n\n                        The evaluator will also apply the work units for the\n                        evaluator action, AVA_VAN.2.1E, to determine that the composed TOE provided by the\n                        developer is suitable for testing.', 'aco', 'aco_vul', 'aco_vul.2', 'aco_vul.2.5e'),
('aco_vul.3-1', ', ATE_IND.2-1, The evaluator shall examine the composed TOE to\n                        determine that it has been installed properly and is in\n                        a known state.\n\n                        To determine that the composed TOE has been installed\n                        properly and is in a known state the, ATE_IND.2-2, and, ACO_CTT, work units will be\n                        applied to the composed TOE.\n\n                        If the assurance package includes, ACO_CTT, family, then the evaluator may refer to the\n                        result of the work unit, *-1 to demonstrate this has been\n                        satisfied.', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.1e'),
('aco_vul.3-2', '\n\n                        The evaluator shall examine the composed TOE\n                        configuration to determine that any assumptions and\n                        objectives in the STs the components relating to IT\n                        entities for are fulfilled by the other\n                        components.\n\n                        The STs for the component may include assumptions about\n                        other components that may use the component to which the\n                        ST relates, e.g. the ST for an operating system used as\n                        a base component may include an assumption that any\n                        applications loaded on the operating system do not run\n                        in privileged mode. These assumptions and objectives are\n                        to be fulfilled by other components in the composed\n                        TOE.\n                    ', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('aco_vul.3-3', '\n\n                        The evaluator shall examine the residual vulnerabilities\n                        from the base component evaluation to determine that\n                        they are not exploitable in the composed TOE in its\n                        operational environment.\n\n                        The list of vulnerabilities identified in the product\n                        during the evaluation of the base component, which were\n                        demonstrated to be non-exploitable in the base\n                        component, is to be used as an input into this\n                        activity. The evaluator will determine that the\n                        premise(s) on which a vulnerability was deemed to be\n                        non-exploitable is upheld in the composed TOE, or\n                        whether the combination has re-introduced the potential\n                        vulnerability. For example, if during evaluation of the\n                        base component it was assumed that a particular\n                        operating system service was disabled, which is enabled\n                        in the composed TOE evaluation, any potential\n                        vulnerabilities relating to that service previously\n                        scoped out should now be considered.\n\n                        Also, this list of known, non-exploitable\n                        vulnerabilities resulting from the evaluation of the\n                        base component should be considered in the light of any\n                        known, non-exploitable vulnerabilities for the other\n                        components (e.g. dependent component) within the\n                        composed TOE. This is to consider the case where a\n                        potential vulnerability that is non-exploitable in\n                        isolation is exploitable when integrated with an IT\n                        entity containing another potential\n                        vulnerability.\n                    ', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.2e'),
('aco_vul.3-4', '\n\n                        The evaluator shall examine the residual vulnerabilities\n                        from the dependent component evaluation to determine\n                        that they are not exploitable in the composed TOE in its\n                        operational environment.\n\n                        The list of vulnerabilities identified in the product\n                        during the evaluation of the dependent component, which\n                        were demonstrated to be non-exploitable in the dependent\n                        component, is to be used as an input into this\n                        activity. The evaluator will determine that the\n                        premise(s) on which a vulnerability was deemed to be\n                        non-exploitable is upheld in the composed TOE, or\n                        whether the combination has re-introduced the potential\n                        vulnerability. For example, if during evaluation of the\n                        dependent component it was assumed that IT meeting the\n                        operational environment requirements would not return a\n                        certain value in response to a service request, which is\n                        provided by the base component in the composed TOE\n                        evaluation, any potential vulnerabilities relating to\n                        that return value previously scoped out should now be\n                        considered.\n\n                        Also, this list of known, non-exploitable\n                        vulnerabilities resulting from the evaluation of the\n                        dependent component should be considered in the light of\n                        any known, non-exploitable vulnerabilities for the other\n                        components (e.g. base component) within the composed\n                        TOE. This is to consider the case where a potential\n                        vulnerability that is non-exploitable in isolation is\n                        exploitable when integrated with an IT entity containing\n                        another potential vulnerability.\n                    ', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.2e'),
('aco_vul.3-5', 'The evaluator shall examine the sources of information publicly\n                        available to support the identification of possible security\n                        vulnerabilities in the base component that have become known\n                        since the completion of the base component evaluation.\n\n                        The evaluator will use the information in the public\n                        domain as described in, AVA_VAN.3-2, to search for vulnerabilities in the base\n                        component.\n\n                        Those potential vulnerabilities that were publicly\n                        available prior to the evaluation of the base component\n                        do not have to be further investigated unless it is\n                        apparent to the evaluator that the attack potential\n                        required by an attacker to exploit the potential\n                        vulnerability has been significantly reduced. This may\n                        be through the introduction of some new technology since\n                        the base component evaluation that means the\n                        exploitation of the potential vulnerability has been\n                        simplified.', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.3e'),
('aco_vul.3-6', 'The evaluator shall examine the sources of information\n                        publicly available to support the identification of\n                        possible security vulnerabilities in the dependent\n                        component that have become known since completion of the\n                        dependent component evaluation.\n\n                        The evaluator will use the information in the public domain as\n                        described in, AVA_VAN.3-2, to search for\n                        vulnerabilities in the dependent component.\n\n                        Those potential vulnerabilities that were publicly\n                        available prior to the evaluation of the dependent\n                        component do not have to be further investigated unless\n                        it is apparent to the evaluator that the attack\n                        potential required by an attacker to exploit the\n                        potential vulnerability has been significantly\n                        reduced. This may be through the introduction of some\n                        new technology since evaluation of the dependent\n                        component that means the exploitation of the potential\n                        vulnerability has been simplified.', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.3e'),
('aco_vul.3-7', 'The evaluator shall record in the ETR the identified\n                        potential security vulnerabilities that are candidates\n                        for testing and applicable to the composed TOE in its\n                        operational environment.\n\n                        The ST, guidance documentation and functional\n                        specification are used to determine whether the\n                        vulnerabilities are relevant to the composed TOE in its\n                        operational environment.\n\n                        The evaluator records any reasons for exclusion of\n                        vulnerabilities from further consideration if the\n                        evaluator determines that the vulnerability is not\n                        applicable in the operational environment. Otherwise the\n                        evaluator records the potential vulnerability for\n                        further consideration.\n\n                        A list of potential vulnerabilities applicable to the\n                        composed TOE in its operational environment, which can\n                        be used as an input into penetration testing activities\n                        (, ACO_VUL.3.5E, ), shall be\n                        reported in the ETR by the evaluators.', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.3e'),
('aco_vul.3-8', 'The evaluator shall conduct a search of the composed TOE\n                        ST, guidance documentation, reliance information and\n                        composition rationale to identify possible security\n                        vulnerabilities in the composed TOE.\n\n                        The consideration of the components in the independent\n                        evaluator vulnerability analysis will take a slightly\n                        different form to that documented in, AVA_VAN.3.3E, for a component\n                        evaluation, as it will not necessarily consider all\n                        layers of design abstraction relevant to the assurance\n                        package. These will have already been considered during\n                        the evaluation of the base component, but the evidence\n                        may not be available for the composed TOE\n                        evaluation. However, the general approach described in\n                        the work units associated with, AVA_VAN.3.3E, is applicable and should form the basis of\n                        the evaluator\'s search for potential vulnerabilities in\n                        the composed TOE.\n\n                        A vulnerability analysis of the individual components\n                        used in the composed TOE will have already been\n                        performed during evaluation of the components. The focus\n                        of the vulnerability analysis during the composed TOE\n                        evaluation is to identify any vulnerabilities introduced\n                        as a result of the integration of the components or due\n                        to any changes in the use of the components between the\n                        configuration of the component determined during the\n                        component evaluation and the composed TOE\n                        configuration.\n\n                        The evaluator will use the understanding of the\n                        component\'s construction as detailed in the reliance\n                        information for the dependent component, and the\n                        composition rationale and development information for\n                        the base component, together with the dependent\n                        component design information. This information will\n                        allow the evaluator to gain an understanding of how the\n                        base component and dependent component interact.\n\n                        The evaluator will consider any new guidance provided\n                        for the installation, start-up and operation of the\n                        composed TOE to identify any potential vulnerabilities\n                        introduced through this revised guidance.\n\n                        If any of the individual components have been through\n                        assurance continuity activities since the completion of\n                        the component evaluation, the evaluator will consider\n                        the patch in the independent vulnerability\n                        analysis. Information related to the change provided in\n                        a public report of the assurance continuity activities\n                        (e.g. Maintenance Report). This will be supplemented by\n                        any updates to the guidance documentation resulting from\n                        the change and any information regarding the change\n                        available in the public domain, e.g. vendor\n                        website.\n\n                        Any risks identified due to the lack of evidence to\n                        establish the full impact of any patches or deviations\n                        in the configuration of a component from the evaluated\n                        configuration are to be documented in the evaluator\'s\n                        vulnerability analysis.', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.4e'),
('aco_vul.3-9', 'The evaluator shall conduct penetration testing as detailed\n                        for, AVA_VAN.3.4E, .\n                        The evaluator will apply all work units necessary for the\n                        satisfaction of evaluator action, AVA_VAN.3.4E, , reporting in the ETR for the composed TOE all\n                        analysis and verdicts as dictated by the work units.\n                        The evaluator will also apply the work units for the\n                        evaluator action, AVA_VAN.3.1E, to\n                        determine that the composed TOE provided by the developer is\n                        suitable for testing.', 'aco', 'aco_vul', 'aco_vul.3', 'aco_vul.3.5e'),
('adv_arc.1-1', ', ADV_TDS.1, The evaluator shall examine the security architecture\n                        description to determine that the information provided\n                        in the evidence is presented at a level of detail\n                        commensurate with the descriptions of the SFR-enforcing\n                        abstractions contained in the functional specification\n                        and TOE design document.\n\n                        With respect to the functional specification, the\n                        evaluator should ensure that the self-protection\n                        functionality described cover those effects that are\n                        evident at the TSFI. Such a description might include\n                        protection placed upon the executable images of the TSF,\n                        and protection placed on objects (e.g., files used by\n                        the TSF). The evaluator ensures that the functionality\n                        that might be invoked through the TSFI is\n                        described.\n\n                        If, ADV_TDS.2, or, ADV_TDS.3, is included, the evaluator\n                        ensures the security architecture description contains\n                        information on how any subsystems that contribute to TSF\n                        domain separation work.\n\n                        If, or higher is\n                        available, the evaluator ensures that the security\n                        architecture description also contains\n                        implementation-dependent information.  For example, such\n                        a description might contain information pertaining to\n                        coding conventions for parameter checking that would\n                        prevent TSF compromises (e.g. buffer overflows), and\n                        information on stack management for call and return\n                        operations. The evaluator checks the descriptions of the\n                        mechanisms to ensure that the level of detail is such\n                        that there is little ambiguity between the description\n                        in the security architecture description and the\n                        implementation representation.\n\n                        The evaluator action related to this work unit is assigned a fail verdict\n                        if the security architecture description mentions any module, subsystem, or interface\n                        that is not described in the functional specification or TOE design document.', 'adv', 'adv_arc', 'adv_arc.1', 'adv_arc.1.1e'),
('adv_arc.1-2', ', The evaluator shall examine the security architecture\n                        description to determine that it describes the security\n                        domains maintained by the TSF.\n\n                        Security domains refer to environments supplied by the\n                        TSF for use by potentially-harmful entities; for\n                        example, a typical secure operating system supplies a\n                        set of resources (address space, per-process environment\n                        variables) for use by processes with limited access\n                        rights and security properties. The evaluator determines\n                        that the developer\'s description of the security domains\n                        takes into account all of the SFRs claimed by the\n                        TOE.\n\n                        For some TOEs such domains do not exist because all of\n                        the interactions available to users are severely\n                        constrained by the TSF. A packet-filter firewall is an\n                        example of such a TOE. Users on the LAN or WAN do not\n                        interact with the TOE, so there need be no security\n                        domains; there are only data structures maintained by\n                        the TSF to keep the users\' packets separated. The\n                        evaluator ensures that any claim that there are no\n                        domains is supported by the evidence and that no such\n                        domains are, in fact, available.', 'adv', 'adv_arc', 'adv_arc.1', 'adv_arc.1.1e'),
('adv_arc.1-3', ', ADV_INT, The evaluator shall examine the security architecture\n                        description to determine that the initialisation process\n                        preserves security.\n\n                        The information provided in the security architecture\n                        description relating to TSF initialisation is directed\n                        at the TOE components that are involved in bringing the\n                        TSF into an initial secure state (i.e. when all parts of\n                        the TSF are operational) when power-on or a reset is\n                        applied. This discussion in the security architecture\n                        description should list the system initialisation\n                        components and the processing that occurs in\n                        transitioning from the ``down\'\' state to the initial\n                        secure state.\n\n                        It is often the case that the components that perform\n                        this initialisation function are not accessible after\n                        the secure state is achieved; if this is the case then\n                        the security architecture description identifies the components and\n                        explains how they are not reachable by untrusted\n                        entities after the TSF has been established. In this\n                        respect, the property that needs to be preserved is that\n                        these components either 1) cannot be accessed by\n                        untrusted entities after the secure state is achieved,\n                        or 2) if they provide interfaces to untrusted entities,\n                        these TSFI cannot be used to tamper with the TSF.\n\n                        The TOE components related to TSF initialisation, then,\n                        are treated themselves as part of the TSF, and analysed\n                        from that perspective. It should be noted that even\n                        though these are treated as part of the TSF, it is\n                        likely that a justification (as allowed by, ADV_INT, ) can be made that they do not\n                        have to meet the internal structuring requirements of, .', 'adv', 'adv_arc', 'adv_arc.1', 'adv_arc.1.1e'),
('adv_arc.1-4', ', ADV_IMP, The evaluator shall examine the security architecture\n                        description to determine that it contains information\n                        sufficient to support a determination that the TSF is\n                        able to protect itself from tampering by untrusted\n                        active entities.\n\n                        \'\'Self-protection\'\' refers to the ability of the TSF to\n                        protect itself from manipulation from external entities\n                        that may result in changes to the TSF. For TOEs that\n                        have dependencies on other IT entities, it is often the\n                        case that the TOE uses services supplied by the other IT\n                        entities in order to perform its functions. In such\n                        cases, the TSF alone does not protect itself because it\n                        depends on the other IT entities to provide some of the\n                        protection. For the purposes of the security\n                        architecture description, the notion of\n\n                        self-protection\n                        applies only to the\n                        services provided by the TSF through its TSFI, and not\n                        to services provided by underlying IT entities that it\n                        uses.\n\n                        Self-protection is typically achieved by a variety of\n                        means, ranging from physical and logical restrictions on\n                        access to the TOE; to hardware-based means (e.g.\n                        ``execution rings\'\' and memory management\n                        functionality); to software-based means (e.g.  boundary\n                        checking of inputs on a trusted server). The evaluator\n                        determines that all such mechanisms are\n                        described.\n\n                        The evaluator determines that the design description\n                        covers how user input is handled by the TSF in such a\n                        way that the TSF does not subject itself to being\n                        corrupted by that user input. For example, the TSF might\n                        implement the notion of privilege and protect itself by\n                        using privileged-mode routines to handle user input. The\n                        TSF might make use of processor-based separation\n                        mechanisms such as privilege levels or rings. The TSF\n                        might implement software protection constructs or coding\n                        conventions that contribute to implementing separation of\n                        software domains, perhaps by delineating user address\n                        space from system address space. And the TSF might have\n                        reliance its environment to provide some support to the\n                        protection of the TSF.\n\n                        All of the mechanisms contributing to the domain\n                        separation functions are described. The evaluator should\n                        use knowledge gained from other evidence (functional\n                        specification, TOE design, TSF internals description,\n                        other parts of the security architecture description, or\n                        implementation representation, as included in the\n                        assurance package for the TOE) in determining if any\n                        functionality contributing to self-protection was\n                        described that is not present in the security\n                        architecture description.\n\n                        Accuracy of the description of the self-protection mechanisms is the property that the\n                        description faithfully describes what is implemented. The evaluator should use other\n                        evidence (functional specification, TOE design, TSF Internals documentation, other parts\n                        of the security architecture description, implementation representation, as included in\n                        the ST for the TOE) in determining whether there are discrepancies in any descriptions\n                        of the self-protection mechanisms. If, is included in the assurance package for the TOE, the evaluator will choose a sample of\n                        the implementation representation; the evaluator should also ensure that the descriptions\n                        are accurate for the sample chosen. If an evaluator cannot understand how a certain\n                        self-protection mechanism works or could work in the system architecture, it may be the\n                        case that the description is not accurate.', 'adv', 'adv_arc', 'adv_arc.1', 'adv_arc.1.1e'),
('adv_arc.1-5', ', FCO_NRO.2, The evaluator shall examine the security architecture\n                        description to determine that it presents an analysis\n                        that adequately describes how the SFR-enforcing\n                        mechanisms cannot be bypassed.\n\n                        Non-bypassability is a property that the security\n                        functionality of the TSF (as specified by the SFRs) is\n                        always invoked.  For example, if access control to files\n                        is specified as a capability of the TSF via an SFR,\n                        there must be no interfaces through which files can be\n                        accessed without invoking the TSF\'s access control\n                        mechanism (such as an interface through which a raw disk\n                        access takes place).\n\n                        Describing how the TSF mechanisms cannot be bypassed\n                        generally requires a systematic argument based on the\n                        TSF and the TSFIs. The description of how the TSF works\n                        (contained in the design decomposition evidence, such as\n                        the functional specification, TOE design documentation)\n                        - along with the information in the TSS - provides the\n                        background necessary for the evaluator to understand\n                        what resources are being protected and what security\n                        functions are being provided. The functional\n                        specification provides descriptions of the TSFIs through\n                        which the resources/functions are accessed.\n\n                        The evaluator assesses the description provided (and other\n                        information provided by the developer, such as the functional\n                        specification) to ensure that no available interface can be used\n                        to bypass the TSF. This means that every available interface\n                        must be either unrelated to the SFRs that are claimed in the ST\n                        (and does not interact with anything that is used to satisfy\n                        SFRs) or else uses the security functionality that is described\n                        in other development evidence in the manner described. For\n                        example, a game would likely be unrelated to the SFRs, so there\n                        must be an explanation of how it cannot affect security. Access\n                        to user data, however, is likely to be related to access control\n                        SFRs, so the explanation would describe how the security\n                        functionality works when invoked through the data-access\n                        interfaces.  Such a description is needed for every available\n                        interface.\n\n                        An example of a description follows. Suppose the TSF\n                        provides file protection. Further suppose that although\n                        the ``traditional\'\' system call TSFIs for open, read,\n                        and write invoke the file protection mechanism described\n                        in the TOE design, there exists a TSFI that allows\n                        access to a batch job facility (creating batch jobs,\n                        deleting jobs, modifying unprocessed jobs). The\n                        evaluator should be able to determine from the\n                        vendor-provided description that this TSFI invokes the\n                        same protection mechanisms as do the ``traditional\'\'\n                        interfaces. This could be done, for example, by\n                        referencing the appropriate subclauses of the TOE design\n                        that discuss\n                        how\n                        the batch job facility\n                        TSFI achieves its security objectives.\n\n                        Using this same example, suppose there is a TSFI whose\n                        sole purpose is to display the time of day. The\n                        evaluator should determine that the description\n                        adequately argues that this TSFI is not capable of\n                        manipulating any protected resources and should not\n                        invoke any security functionality.\n\n                        Another example of bypass is when the TSF is supposed to\n                        maintain confidentiality of a cryptographic key (one is\n                        allowed to use it for cryptographic operations, but is\n                        not allowed to read/write it). If an attacker has direct\n                        physical access to the device, he might be able to\n                        examine side-channels such as the power usage of the\n                        device, the exact timing of the device, or even any\n                        electromagnetic emanations of the device and, from this,\n                        infer the key.\n\n                        If such side-channels may be present, the demonstration\n                        should address the mechanisms that prevent these\n                        side-channels from occurring, such as random internal\n                        clocks, dual-line technology etc. Verification of these\n                        mechanisms would be verified by a combination of purely\n                        design-based arguments and testing.\n\n                        For a final example using security functionality rather\n                        than a protected resource, consider an ST that contains, , which requires that\n                        the TSF provides evidence of origination for information\n                        types specified in the ST. Suppose that the\n                        ``information types\'\' included all information that is\n                        sent by the TOE via e-mail. In this case the evaluator\n                        should examine the description to ensure that all TSFI\n                        that can be invoked to send e-mail perform the\n                        ``evidence of origination generation\'\' function are\n                        detailed. The description might point to user guidance\n                        to show all places where e-mail can originate (e.g.,\n                        e-mail program, notification from scripts/batch jobs)\n                        and then how each of these places invokes the evidence\n                        generation function.\n\n                        The evaluator should also ensure that the description is comprehensive, in that each\n                        interface is analysed with respect to the entire set of claimed SFRs. This may require the\n                        evaluator to examine supporting information (functional specification, TOE design, other\n                        parts of the security architecture description, operational user guidance, and perhaps even\n                        the implementation representation, as provided for the TOE) to determine that the description\n                        has correctly capture all aspects of an interface. The evaluator should consider what SFRs each\n                        TSFI might affect (from the description of the TSFI and its implementation in the supporting\n                        documentation), and then examine the description to determine whether it covers those aspects.', 'adv', 'adv_arc', 'adv_arc.1', 'adv_arc.1.1e'),
('adv_fsp.1-1', ', The evaluator shall examine the functional specification\n                        to determine that it states the purpose of each\n                        SFR-supporting and SFR-enforcing TSFI.\n\n                        The purpose of a TSFI is a general statement summarising\n                        the functionality provided by the interface. It is not\n                        intended to be a complete statement of the actions and\n                        results related to the interface, but rather a statement\n                        to help the reader understand in general what the\n                        interface is intended to be used for. The evaluator\n                        should not only determine that the purpose exists, but\n                        also that it accurately reflects the TSFI by taking into\n                        account other information about the interface, such as\n                        the description of the parameters; this can be done in\n                        association with other work units for this\n                        component.\n\n                        If an action available through an interface plays a role in\n                        enforcing any security policy on the TOE (that is, if one of the\n                        actions of the interface can be traced to one of the SFRs levied\n                        on the TSF), then that interface is\n\n                        SFR-enforcing\n                        . Such policies are not limited to\n                        the access control policies, but also refer to any functionality\n                        specified by one of the SFRs contained in the ST. Note that it\n                        is possible that an interface may have various actions and\n                        results, some of which may be SFR-enforcing and some of which\n                        may not.\n\n                        Interfaces to (or actions available through an interface\n                        relating to) actions that SFR-enforcing functionality\n                        depends on, but need only to function correctly in order\n                        for the security policies of the TOE to be preserved,\n                        are termed\n                        SFR supporting\n                        . Interfaces\n                        to actions on which SFR-enforcing functionality has no\n                        dependence are termed\n                        SFR\n                        non-interfering\n                        .\n\n                        It should be noted that in order for an interface to be\n                        SFR supporting or SFR non-interfering it must have\n\n                        no\n                        SFR-enforcing actions or results. In\n                        contrast, an SFR-enforcing interface may have\n                        SFR-supporting actions (for example, the ability to set\n                        the system clock may be an SFR-enforcing action of an\n                        interface, but if that same interface is used to display\n                        the system date that action may only be SFR\n                        supporting). An example of a purely SFR-supporting\n                        interface is a system call interface that is used both\n                        by untrusted users and by a portion of the TSF that is\n                        running in user mode.\n\n                        At this level, it is unlikely that a developer will have\n                        expended effort to label interfaces as SFR-enforcing and\n                        SFR-supporting.  In the case that this has been done,\n                        the evaluator should verify to the extent that\n                        supporting documentation (e.g., operational user\n                        guidance) allows that this identification is correct.\n                        Note that this identification activity is necessary for\n                        several work units for this component.\n\n                        In the more likely case that the developer has not\n                        labelled the interfaces, the evaluator must perform\n                        their own identification of the interfaces first, and\n                        then determine whether the required information (for\n                        this work unit, the purpose) is present.  Again, because\n                        of the lack of supporting evidence this identification\n                        will be difficult and have low assurance that all\n                        appropriate interfaces have been correctly identified,\n                        but nonetheless the evaluator examines other evidence\n                        available for the TOE to ensure as complete coverage as\n                        is possible.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.1e'),
('adv_fsp.1-2', ', ADV_FSP.1-1, The evaluator shall examine the functional specification\n                        to determine that the method of use for each\n                        SFR-supporting and SFR-enforcing TSFI is given.\n\n                        See work unit, for a\n                        discussion on the identification of SFR-supporting and\n                        SFR-enforcing TSFI.\n\n                        The method of use for a TSFI summarises how the\n                        interface is manipulated in order to invoke the actions\n                        and obtain the results associated with the TSFI. The\n                        evaluator should be able to determine, from reading this\n                        material in the functional specification, how to use\n                        each interface. This does not necessarily mean that\n                        there needs to be a separate method of use for each\n                        TSFI, as it may be possible to describe in general how\n                        kernel calls are invoked, for instance, and then\n                        identify each interface using that general\n                        style. Different types of interfaces will require\n                        different method of use specifications. APIs, network\n                        protocol interfaces, system configuration parameters,\n                        and hardware bus interfaces all have very different\n                        methods of use, and this should be taken into account by\n                        the developer when developing the functional\n                        specification, as well as by the evaluator evaluating\n                        the functional specification.\n\n                        For administrative interfaces whose functionality is documented\n                        as being inaccessible to untrusted users, the evaluator ensures\n                        that the method of making the functions inaccessible is\n                        described in the functional specification. It should be noted\n                        that this inaccessibility needs to be tested by the developer in\n                        their test suite.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.1e'),
('adv_fsp.1-3', ', ADV_FSP.1-1, The evaluator shall examine the presentation of the TSFI\n                        to determine that it identifies all parameters\n                        associated with each SFR-enforcing and SFR-supporting\n                        TSFI.\n\n                        See work unit, for a\n                        discussion on the identification of SFR-supporting and\n                        SFR-enforcing TSFI.\n\n                        The evaluator examines the functional specification to\n                        ensure that all of the parameters are described for\n                        identified TSFI. Parameters are explicit inputs or\n                        outputs to an interface that control the behaviour of\n                        that interface. For examples, parameters are the\n                        arguments supplied to an API; the various fields in\n                        packet for a given network protocol; the individual key\n                        values in the Windows Registry; the signals across a set\n                        of pins on a chip; etc.\n\n                        While difficult to obtain much assurance that all\n                        parameters for the applicable TSFI have been identified,\n                        the evaluator should also check other evidence provided\n                        for the evaluation (e.g., operational user guidance) to\n                        see if behaviour or additional parameters are described\n                        there but not in the functional specification.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.1e'),
('adv_fsp.1-4', ', The evaluator shall examine the rationale provided by\n                        the developer for the implicit categorisation of\n                        interfaces as SFR-non-interfering to determine that it\n                        is accurate.\n\n                        In the case where the developer has provided adequate\n                        documentation to perform the analysis called for by the\n                        rest of the work units for this component without\n                        explicitly identifying SFR-enforcing and SFR-supporting\n                        interfaces, this work unit should be considered\n                        satisfied.\n\n                        This work unit is intended to apply to cases where the developer\n                        has not described a portion of the TSFI, claiming that it is\n                        SFR-non-interfering and therefore not subject to other\n                        requirements of this component.  In such a case, the developer\n                        provides a rationale for this characterisation in sufficient\n                        detail such that the evaluator understands the rationale, the\n                        characteristics of the interfaces affected (e.g., their\n                        high-level function with respect to the TOE, such as ``colour\n                        palette manipulation\'\'), and that the claim that these are\n                        SFR-non-interfering is supported.  Given the level of assurance\n                        the evaluator should not expect more detail than is provided for\n                        the SFR-enforcing or SFR-supporting interfaces, and in fact the\n                        detail should be much less.  In most cases, individual\n                        interfaces should not need to be addressed in the\n                        developer-provided rationale subclause.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.1e'),
('adv_fsp.1-5', ', The evaluator shall check that the tracing links the\n                        SFRs to the corresponding TSFIs.\n\n                        The tracing is provided by the developer to serve as a\n                        guide to which SFRs are related to which TSFIs.  This\n                        tracing can be as simple as a table; it is used as input\n                        to the evaluator for use in the following work units, in\n                        which the evaluator verifies its completeness and\n                        accuracy.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.1e'),
('adv_fsp.1-6', 'The evaluator shall examine the functional specification\n                        to determine that it is a complete instantiation of the\n                        SFRs.\n\n                        To ensure that all SFRs are covered by the functional\n                        specification, as well as the test coverage analysis, the\n                        evaluator may build upon the developer\'s tracing (see, ADV_FSP.1-5, a map between the TOE security\n                        functional requirements and the TSFI). Note that this map may\n                        have to be at a level of detail below the component or even\n                        element level of the requirements, because of operations\n                        (assignments, refinements, selections) performed on the\n                        functional requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were covered by three different TSFI, it would be\n                        inadequate for the evaluator to map, FDP_ACC.1, to TSFI A, B, and C and claim they had\n                        completed the work unit. Instead, the evaluator would\n                        map, FDP_ACC.1, (rule 1) to TSFI A;, FDP_ACC.1, (rule 2) to TSFI B;\n                        etc. It might also be the case that the interface is a\n                        wrapper interface (e.g., IOCTL), in which case the\n                        mapping would need to be specific to certain set of\n                        parameters for a given interface.\n\n                        The evaluator must recognise that for requirements that have\n                        little or no manifestation at the TSF boundary (e.g.,, FDP_RIP, ) it is not expected that they\n                        completely map those requirements to the TSFI. The analysis for\n                        those requirements will be performed in the analysis for the TOE\n                        design (, ADV_TDS, ) when included in the\n                        ST. It is also important to note that since the parameters\n                        associated with TSFIs must be fully specified, the evaluator\n                        should be able to determine if all aspects of an SFR appear to\n                        be implemented at the interface level.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.2e'),
('adv_fsp.1-7', 'The evaluator shall examine the functional specification\n                        to determine that it is an accurate instantiation of the\n                        SFRs.\n\n                        For each functional requirement in the ST that results\n                        in effects visible at the TSF boundary, the information\n                        in the associated TSFI for that requirement specifies\n                        the required functionality described by the\n                        requirement. For example, if the ST contains a\n                        requirement for access control lists, and the only TSFI\n                        that map to that requirement specify functionality for\n                        Unix-style protection bits, then the functional\n                        specification is not accurate with respect to the\n                        requirements.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that the evaluator completely map those\n                        requirements to the TSFI. The analysis for those\n                        requirements will be performed in the analysis for the\n                        TOE design (, ADV_TDS, ) when\n                        included in the ST.', 'adv', 'adv_fsp', 'adv_fsp.1', 'adv_fsp.1.2e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('adv_fsp.2-1', ', ADV_TDS, The evaluator shall examine the functional specification\n                        to determine that the TSF is fully represented.\n\n                        The identification of the TSFI is a necessary\n                        prerequisite to all other activities in this\n                        sub-activity. The TSF must be identified (done as part\n                        of the, work units) in\n                        order to identify the TSFI. This activity can be done at\n                        a high level to ensure that no large groups of\n                        interfaces have been missed (network protocols, hardware\n                        interfaces, configuration files), or at a low level as\n                        the evaluation of the functional specification\n                        proceeds.\n\n                        In making an assessment for this work unit, the\n                        evaluator determines that all portions of the TSF are\n                        addressed in terms of the interfaces listed in the\n                        functional specification. All portions of the TSF should\n                        have a corresponding interface description, or if there\n                        are no corresponding interfaces for a portion of the\n                        TSF, the evaluator determines that that is\n                        acceptable.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-10', 'The evaluator shall examine the functional specification\n                        to determine that it is an accurate instantiation of the\n                        SFRs.\n\n                        For each functional requirement in the ST that results\n                        in effects visible at the TSF boundary, the information\n                        in the associated TSFI for that requirement specifies\n                        the required functionality described by the\n                        requirement. For example, if the ST contains a\n                        requirement for access control lists, and the only TSFI\n                        that map to that requirement specify functionality for\n                        Unix-style protection bits, then the functional\n                        specification is not accurate with respect to the\n                        requirements.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that the evaluator completely map those\n                        requirements to the TSFI. The analysis for those\n                        requirements will be performed in the analysis for the\n                        TOE design (, ADV_TDS, ) when\n                        included in the ST.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.2e'),
('adv_fsp.2-2', ', The evaluator shall examine the functional specification\n                        to determine that it states the purpose of each\n                        TSFI.\n\n                        The purpose of a TSFI is a general statement summarising\n                        the functionality provided by the interface. It is not\n                        intended to be a complete statement of the actions and\n                        results related to the interface, but rather a statement\n                        to help the reader understand in general what the\n                        interface is intended to be used for. The evaluator\n                        should not only determine that the purpose exists, but\n                        also that it accurately reflects the TSFI by taking into\n                        account other information about the interface, such as\n                        the description of actions and error messages.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-3', ', The evaluator shall examine the functional specification\n                        to determine that the method of use for each TSFI is\n                        given.\n\n                        The method of use for a TSFI summarises how the\n                        interface is manipulated in order to invoke the actions\n                        and obtain the results associated with the TSFI. The\n                        evaluator should be able to determine, from reading this\n                        material in the functional specification, how to use\n                        each interface. This does not necessarily mean that\n                        there needs to be a separate method of use for each\n                        TSFI, as it may be possible to describe in general how\n                        kernel calls are invoked, for instance, and then\n                        identify each interface using that general\n                        style. Different types of interfaces will require\n                        different method of use specifications. APIs, network\n                        protocol interfaces, system configuration parameters,\n                        and hardware bus interfaces all have very different\n                        methods of use, and this should be taken into account by\n                        the developer when developing the functional\n                        specification, as well as by the evaluator evaluating\n                        the functional specification.\n\n                        For administrative interfaces whose functionality is documented\n                        as being inaccessible to untrusted users, the evaluator ensures\n                        that the method of making the functions inaccessible is\n                        described in the functional specification. It should be noted\n                        that this inaccessibility needs to be tested by the developer in\n                        their test suite.\n\n                        The evaluator should not only determine that the set of\n                        method of use descriptions exist, but also that they\n                        accurately cover each TSFI.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-4', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely identifies all\n                        parameters associated with every TSFI.\n\n                        The evaluator examines the functional specification to\n                        ensure that all of the parameters are described for each\n                        TSFI. Parameters are explicit inputs or outputs to an\n                        interface that control the behaviour of that\n                        interface. For examples, parameters are the arguments\n                        supplied to an API; the various fields in packet for a\n                        given network protocol; the individual key values in the\n                        Windows Registry; the signals across a set of pins on a\n                        chip; etc.\n\n                        In order to determine that all of the parameters are\n                        present in the TSFI, the evaluator should examine the\n                        rest of the interface description (actions, error\n                        messages, etc.) to determine if the effects of the\n                        parameter are accounted for in the description. The\n                        evaluator should also check other evidence provided for\n                        the evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-5', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all parameters associated with every TSFI.\n\n                        Once all of the parameters have been identified, the\n                        evaluator needs to ensure that they are accurately\n                        described, and that the description of the parameters is\n                        complete. A parameter description tells what the\n                        parameter is in some meaningful way. For instance, the\n                        interface\n                        foo(i)\n                        could be described as\n                        having ``parameter i which is an integer\"; this is not\n                        an acceptable parameter description. A description such\n                        as ``parameter i is an integer that indicates the number\n                        of users currently logged in to the system\'\' is much\n                        more acceptable.\n\n                        In order to determine that the description of the\n                        parameters is complete, the evaluator should examine the\n                        rest of the interface description (purpose, method of\n                        use, actions, error messages, etc.) to determine if the\n                        descriptions of the parameter(s) are accounted for in\n                        the description. The evaluator should also check other\n                        evidence provided (e.g., TOE design, architectural\n                        design, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-6', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        the SFR-enforcing actions associated with the\n                        SFR-enforcing TSFIs.\n\n                        If an action available through an interface can be\n                        traced to one of the SFRs levied on the TSF, then that\n                        interface is\n                        SFR-enforcing\n                        . Such\n                        policies are not limited to the access control policies,\n                        but also refer to any functionality specified by one of\n                        the SFRs contained in the ST. Note that it is possible\n                        that an interface may have various actions and results,\n                        some of which may be SFR-enforcing and some of which may not.\n\n                        The developer is not required to ``label\'\' interfaces as\n                        SFR-enforcing, and likewise is not required to identify\n                        actions available through an interface as SFR-enforcing.\n                        It is the evaluator\'s responsibility to examine the\n                        evidence provided by the developer and determine that\n                        the required information is present.  In the case where\n                        the developer has identified the SFR-enforcing TSFI and\n                        SFR-enforcing actions available through those TSFI, the\n                        evaluator must judge completeness and accuracy based on\n                        other information supplied for the evaluation (e.g., TOE\n                        design, security architecture description, operational\n                        user guidance), and on the other information presented\n                        for the interfaces (parameters and parameter\n                        descriptions, error messages, etc.).\n\n                        In this case (where the developer has provided only the\n                        SFR-enforcing information for SFR-enforcing TSFI) the\n                        evaluator also ensures that no interfaces have been\n                        mis-categorised.  This is done by examining other\n                        information supplied for the evaluation (e.g., TOE\n                        design, security architecture description, operational\n                        user guidance), and the other information presented for\n                        the interfaces (parameters and parameter descriptions,\n                        for example) not labelled as SFR-enforcing.\n\n                        In the case where the developer has provided the same\n                        level of information on all interfaces, the evaluator\n                        performs the same type of analysis mentioned in the\n                        previous paragraphs.  The evaluator should determine\n                        which interfaces are SFR-enforcing and which are not,\n                        and subsequently ensure that the SFR-enforcing aspects\n                        of the SFR-enforcing actions are appropriately\n                        described.\n                        The SFR-enforcing actions are those that are\n                        visible at any external interface and that provide for\n                        the enforcement of the SFRs being claimed. For example,\n                        if audit requirements are included in the ST, then\n                        audit-related actions would be SFR-enforcing and\n                        therefore must be described, even if the result of that\n                        action is generally not visible through the invoked\n                        interface (as is often the case with audit, where a user\n                        action at one interface would produce an audit record\n                        visible at another interface).\n\n                        The level of description that is required is that\n                        sufficient for the reader to understand what role the\n                        TSFI actions play with respect to the SFR.  The\n                        evaluator should keep in mind that the description\n                        should be detailed enough to support the generation (and\n                        assessment) of test cases against that interface.  If\n                        the description is unclear or lacking detail such that\n                        meaningful testing cannot be conducted against the TSFI,\n                        it is likely that the description is inadequate.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-7', ', ADV_FSP.2-6, The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        error messages that may result from SFR-enforcing\n                        actions associated with each SFR-enforcing TSFI.\n\n                        This work unit should be performed in conjunction with,\n                        or after, work unit, ADV_ARC, in order to ensure the set of SFR-enforcing TSFI and\n                        SFR-enforcing actions is correctly identified.  The\n                        developer may provide more information than is required\n                        (for example, all error messages associated with each\n                        interface), in which the case the evaluator should\n                        restrict their assessment of completeness and accuracy\n                        to only those that they determine to be associated with\n                        SFR-enforcing actions of SFR-enforcing TSFI.\n\n                        Errors can take many forms, depending on the interface\n                        being described. For an API, the interface itself may\n                        return an error code, set a global error condition, or\n                        set a certain parameter with an error code. For a\n                        configuration file, an incorrectly configured parameter\n                        may cause an error message to be written to a log\n                        file. For a hardware PCI card, an error condition may\n                        raise a signal on the bus, or trigger an exception\n                        condition to the CPU.\n\n                        Errors (and the associated error messages) come about\n                        through the invocation of an interface. The processing\n                        that occurs in response to the interface invocation may\n                        encounter error conditions, which trigger (through an\n                        implementation-specific mechanism) an error message to\n                        be generated. In some instances this may be a return\n                        value from the interface itself; in other instances a\n                        global value may be set and checked after the invocation\n                        of an interface. It is likely that a TOE will have a\n                        number of low-level error messages that may result from\n                        fundamental resource conditions, such as ``disk full\'\'\n                        or ``resource locked\'\'. While these error messages may\n                        map to a large number of TSFI, they could be used to\n                        detect instances where detail from an interface\n                        description has been omitted. For instance, a TSFI that\n                        produces a ``disk full\'\' message, but has no obvious\n                        description of why that TSFI should cause an access to\n                        the disk in its description of actions, might cause the\n                        evaluator to examine other evidence (, ADV_TDS, ,, ADV_FSP.2-6, ) related\n                        that TSFI to determine if the description is\n                        accurate.\n                        In order to determine that the description of the\n                        error messages of a TSFI is accurate and complete, the\n                        evaluator measures the interface description against the\n                        other evidence provided for the evaluation (e.g., TOE\n                        design, security architecture description, operational\n                        user guidance), as well as other evidence available for\n                        that TSFI (parameters, analysis from work unit, ).', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-8', ', The evaluator shall check that the tracing links the\n                        SFRs to the corresponding TSFIs.\n\n                        The tracing is provided by the developer to serve as a\n                        guide to which SFRs are related to which TSFIs.  This\n                        tracing can be as simple as a table; it is used as input\n                        to the evaluator for use in the following work units, in\n                        which the evaluator verifies its completeness and\n                        accuracy.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.1e'),
('adv_fsp.2-9', 'The evaluator shall examine the functional specification\n                        to determine that it is a complete instantiation of the\n                        SFRs.\n\n                        To ensure that all SFRs are covered by the functional\n                        specification, as well as the test coverage analysis,\n                        the evaluator may build upon the developer\'s tracing\n                        (see, ADV_FSP.2-8, a map between\n                        the TOE security functional requirements and the TSFI.\n                        Note that this map may have to be at a level of detail\n                        below the component or even element level of the\n                        requirements, because of operations (assignments,\n                        refinements, selections) performed on the functional\n                        requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were covered by three different TSFI, it would be\n                        inadequate for the evaluator to map, FDP_ACC.1, to TSFI A, B, and C and claim they had\n                        completed the work unit. Instead, the evaluator would\n                        map, FDP_ACC.1, (rule 1) to TSFI A;, FDP_ACC.1, (rule 2) to TSFI B;\n                        etc. It might also be the case that the interface is a\n                        wrapper interface (e.g., IOCTL), in which case the\n                        mapping would need to be specific to certain set of\n                        parameters for a given interface.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that they completely map those requirements to\n                        the TSFI. The analysis for those requirements will be\n                        performed in the analysis for the TOE design (, ADV_TDS, ) when included in the ST. It is\n                        also important to note that since the parameters,\n                        actions, and error messages associated with TSFIs must\n                        be fully specified, the evaluator should be able to\n                        determine if all aspects of an SFR appear to be\n                        implemented at the interface level.', 'adv', 'adv_fsp', 'adv_fsp.2', 'adv_fsp.2.2e'),
('adv_fsp.3-1', ', ADV_TDS, The evaluator shall examine the functional specification\n                        to determine that the TSF is fully represented.\n\n                        The identification of the TSFI is a necessary\n                        prerequisite to all other activities in this\n                        sub-activity. The TSF must be identified (done as part\n                        of the, work units) in\n                        order to identify the TSFI. This activity can be done at\n                        a high level to ensure that no large groups of\n                        interfaces have been missed (network protocols, hardware\n                        interfaces, configuration files), or at a low level as\n                        the evaluation of the functional specification\n                        proceeds.\n\n                        In making an assessment for this work unit, the\n                        evaluator determines that all portions of the TSF are\n                        addressed in terms of the interfaces listed in the\n                        functional specification. All portions of the TSF should\n                        have a corresponding interface description, or if there\n                        are no corresponding interfaces for a portion of the\n                        TSF, the evaluator determines that that is\n                        acceptable.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-10', 'The evaluator shall examine the functional specification\n                        to determine that it is a complete instantiation of the\n                        SFRs.\n\n                        To ensure that all SFRs are covered by the functional\n                        specification, as well as the test coverage analysis,\n                        the evaluator may build upon the developer\'s tracing\n                        (see, ADV_FSP.3-9, a map between\n                        the TOE security functional requirements and the TSFI.\n                        Note that this map may have to be at a level of detail\n                        below the component or even element level of the\n                        requirements, because of operations (assignments,\n                        refinements, selections) performed on the functional\n                        requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were covered by three different TSFI, it would be\n                        inadequate for the evaluator to map, FDP_ACC.1, to TSFI A, B, and C and claim they had\n                        completed the work unit. Instead, the evaluator would\n                        map, FDP_ACC.1, (rule 1) to TSFI A;, FDP_ACC.1, (rule 2) to TSFI B;\n                        etc. It might also be the case that the interface is a\n                        wrapper interface (e.g., IOCTL), in which case the\n                        mapping would need to be specific to certain set of\n                        parameters for a given interface.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that they completely map those requirements to\n                        the TSFI. The analysis for those requirements will be\n                        performed in the analysis for the TOE design (, ADV_TDS, ) when included in the ST. It is\n                        also important to note that since the parameters,\n                        actions, and error messages associated with TSFIs must\n                        be fully specified, the evaluator should be able to\n                        determine if all aspects of an SFR appear to be\n                        implemented at the interface level.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.2e'),
('adv_fsp.3-11', 'The evaluator shall examine the functional specification\n                        to determine that it is an accurate instantiation of the\n                        SFRs.\n\n                        For each functional requirement in the ST that results\n                        in effects visible at the TSF boundary, the information\n                        in the associated TSFI for that requirement specifies\n                        the required functionality described by the\n                        requirement. For example, if the ST contains a\n                        requirement for access control lists, and the only TSFI\n                        that map to that requirement specify functionality for\n                        Unix-style protection bits, then the functional\n                        specification is not accurate with respect to the\n                        requirements.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that the evaluator completely map those\n                        requirements to the TSFI. The analysis for those\n                        requirements will be performed in the analysis for the\n                        TOE design (, ADV_TDS, ) when\n                        included in the ST.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.2e'),
('adv_fsp.3-2', ', The evaluator shall examine the functional specification\n                        to determine that it states the purpose of each\n                        TSFI.\n\n                        The purpose of a TSFI is a general statement summarising\n                        the functionality provided by the interface. It is not\n                        intended to be a complete statement of the actions and\n                        results related to the interface, but rather a statement\n                        to help the reader understand in general what the\n                        interface is intended to be used for. The evaluator\n                        should not only determine that the purpose exists, but\n                        also that it accurately reflects the TSFI by taking into\n                        account other information about the interface, such as\n                        the description of actions and error messages.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-3', ', The evaluator shall examine the functional specification\n                        to determine that the method of use for each TSFI is\n                        given.\n\n                        The method of use for a TSFI summarises how the\n                        interface is manipulated in order to invoke the actions\n                        and obtain the results associated with the TSFI. The\n                        evaluator should be able to determine, from reading this\n                        material in the functional specification, how to use\n                        each interface. This does not necessarily mean that\n                        there needs to be a separate method of use for each\n                        TSFI, as it may be possible to describe in general how\n                        kernel calls are invoked, for instance, and then\n                        identify each interface using that general\n                        style. Different types of interfaces will require\n                        different method of use specifications. APIs, network\n                        protocol interfaces, system configuration parameters,\n                        and hardware bus interfaces all have very different\n                        methods of use, and this should be taken into account by\n                        the developer when developing the functional\n                        specification, as well as by the evaluator evaluating\n                        the functional specification.\n\n                        For administrative interfaces whose functionality is documented\n                        as being inaccessible to untrusted users, the evaluator ensures\n                        that the method of making the functions inaccessible is\n                        described in the functional specification. It should be noted\n                        that this inaccessibility needs to be tested by the developer in\n                        their test suite.\n\n                        The evaluator should not only determine that the set of\n                        method of use descriptions exist, but also that they\n                        accurately cover each TSFI.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-4', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely identifies all\n                        parameters associated with every TSFI.\n\n                        The evaluator examines the functional specification to\n                        ensure that all of the parameters are described for each\n                        TSFI. Parameters are explicit inputs or outputs to an\n                        interface that control the behaviour of that\n                        interface. For examples, parameters are the arguments\n                        supplied to an API; the various fields in packet for a\n                        given network protocol; the individual key values in the\n                        Windows Registry; the signals across a set of pins on a\n                        chip; etc.\n\n                        In order to determine that all of the parameters are\n                        present in the TSFI, the evaluator should examine the\n                        rest of the interface description (actions, error\n                        messages, etc.) to determine if the effects of the\n                        parameter are accounted for in the description. The\n                        evaluator should also check other evidence provided for\n                        the evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-5', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all parameters associated with every TSFI.\n\n                        Once all of the parameters have been identified, the\n                        evaluator needs to ensure that they are accurately\n                        described, and that the description of the parameters is\n                        complete. A parameter description tells what the\n                        parameter is in some meaningful way. For instance, the\n                        interface\n                        foo(i)\n                        could be described as\n                        having ``parameter i which is an integer\'\'; this is not\n                        an acceptable parameter description. A description such\n                        as ``parameter i is an integer that indicates the number\n                        of users currently logged in to the system\'\' is much\n                        more acceptable.\n\n                        In order to determine that the description of the\n                        parameters is complete, the evaluator should examine the\n                        rest of the interface description (purpose, method of\n                        use, actions, error messages, etc.) to determine if the\n                        descriptions of the parameter(s) are accounted for in\n                        the description. The evaluator should also check other\n                        evidence provided (e.g., TOE design, architectural\n                        design, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-6', ', ADV_FSP.3-7, The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        the SFR-enforcing actions associated with the\n                        SFR-enforcing TSFIs.\n\n                        If an action available through an interface plays a role\n                        in enforcing any security policy on the TOE (that is, if\n                        one of the actions of the interface can be traced to one\n                        of the SFRs levied on the TSF), then that interface is\n\n                        SFR-enforcing\n                        . Such policies are not\n                        limited to the access control policies, but also refer\n                        to any functionality specified by one of the SFRs\n                        contained in the ST. Note that it is possible that an\n                        interface may have various actions and results, some of\n                        which may be SFR-enforcing and some of which may\n                        not.\n                        The developer is not required to ``label\'\'\n                        interfaces as SFR-enforcing, and likewise is not\n                        required to identify actions available through an\n                        interface as SFR-enforcing.  It is the evaluator\'s\n                        responsibility to examine the evidence provided by the\n                        developer and determine that the required information is\n                        present.  In the case where the developer has identified\n                        the SFR-enforcing TSFI and SFR-enforcing actions\n                        available through those TSFI, the evaluator must judge\n                        completeness and accuracy based on other information\n                        supplied for the evaluation (e.g., TOE design, security\n                        architecture description, operational user guidance),\n                        and on the other information presented for the\n                        interfaces (parameters and parameter descriptions, error\n                        messages, etc.).\n\n                        In this case (developer has provided only the\n                        SFR-enforcing information for SFR-enforcing TSFI) the\n                        evaluator also ensures that no interfaces have been\n                        mis-categorised.  This is done by examining other\n                        information supplied for the evaluation (e.g., TOE\n                        design, security architecture description, operational\n                        user guidance), and the other information presented for\n                        the interfaces (parameters and parameter descriptions,\n                        for example) not labelled as SFR-enforcing. The analysis\n                        done for work units, ADV_FSP.3-8, and, ADV_FSP.3-8, are also used in\n                        making this determination.\n                        In the case where the developer has provided the\n                        same level of information on all interfaces, the\n                        evaluator performs the same type of analysis mentioned\n                        in the previous paragraphs.  The evaluator should\n                        determine which interfaces are SFR-enforcing and which\n                        are not, and subsequently ensure that the SFR-enforcing\n                        aspects of the SFR-enforcing actions are appropriately\n                        described.  Note that in this case, the evaluator should\n                        be able to perform the bulk of the work associated with\n                        work unit, in the\n                        course of performing this SFR-enforcing analysis.\n                        The SFR-enforcing actions are those that are\n                        visible at any external interface and that provide for\n                        the enforcement of the SFRs being claimed. For example,\n                        if audit requirements are included in the ST, then\n                        audit-related actions would be SFR-enforcing and\n                        therefore must be described, even if the result of that\n                        action is generally not visible through the invoked\n                        interface (as is often the case with audit, where a user\n                        action at one interface would produce an audit record\n                        visible at another interface).\n\n                        The level of description that is required is that\n                        sufficient for the reader to understand what role the\n                        TSFI actions play with respect to the SFR.  The\n                        evaluator should keep in mind that the description\n                        should be detailed enough to support the generation (and\n                        assessment) of test cases against that interface.  If\n                        the description is unclear or lacking detail such that\n                        meaningful testing cannot be conducted against the TSFI,\n                        it is likely that the description is inadequate.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-7', ', ADV_FSP.3-6, The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        error messages that may result from an invocation of\n                        each SFR-enforcing TSFI.\n\n                        This work unit should be performed in conjunction with, or\n                        after, work unit, ADV_ARC, in order\n                        to ensure the set of SFR-enforcing TSFI is correctly identified.\n                        The evaluator should note that the requirement and associated\n                        work unit is that all direct error messages associated with an\n                        SFR-enforcing TSFI must be described, that are associated with\n                        SFR-enforcing actions.  This is because at this level of\n                        assurance, the ``extra\'\' information provided by the error\n                        message descriptions should be used in determining whether all\n                        of the SFR-enforcing aspects of an interface have been\n                        appropriately described.  For instance, if an error message\n                        associated with a TSFI (e.g., ``access denied\'\') indicated that\n                        an SFR-enforcing decision or action had taken place, but in the\n                        description of the SFR-enforcing actions there was no mention of\n                        that particular SFR-enforcing mechanism, then the description\n                        may not be complete.\n\n                        Errors can take many forms, depending on the interface\n                        being described. For an API, the interface itself may\n                        return an error code, set a global error condition, or\n                        set a certain parameter with an error code. For a\n                        configuration file, an incorrectly configured parameter\n                        may cause an error message to be written to a log\n                        file. For a hardware PCI card, an error condition may\n                        raise a signal on the bus, or trigger an exception\n                        condition to the CPU.\n\n                        Errors (and the associated error messages) come about\n                        through the invocation of an interface. The processing\n                        that occurs in response to the interface invocation may\n                        encounter error conditions, which trigger (through an\n                        implementation-specific mechanism) an error message to\n                        be generated. In some instances this may be a return\n                        value from the interface itself; in other instances a\n                        global value may be set and checked after the invocation\n                        of an interface. It is likely that a TOE will have a\n                        number of low-level error messages that may result from\n                        fundamental resource conditions, such as ``disk full\'\'\n                        or ``resource locked\'\'. While these error messages may\n                        map to a large number of TSFI, they could be used to\n                        detect instances where detail from an interface\n                        description has been omitted. For instance, a TSFI that\n                        produces a ``disk full\'\' message, but has no obvious\n                        description of why that TSFI should cause an access to\n                        the disk in its description of actions, might cause the\n                        evaluator to examine other evidence (, ADV_TDS, ,, ) related\n                        that TSFI to determine if the description is\n                        accurate.\n\n                        In order to determine that the description of the error messages\n                        of a TSFI is accurate and complete, the evaluator measures the\n                        interface description against the other evidence provided for\n                        the evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance), as well as for other\n                        evidence supplied for that TSFI (description of SFR-enforcing\n                        actions, summary of SFR-supporting and SFR-non-interfering\n                        actions and results).', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-8', ', ADV_FSP.3-6, The evaluator shall examine the presentation of the TSFI to\n                        determine that it summarises the SFR-supporting and\n                        SFR-non-interfering actions associated with each TSFI.\n\n                        The purpose of this work unit is to supplement the details about\n                        the SFR-enforcing actions (provided in work unit, ) with a summary of the remaining\n                        actions (i.e., those that are not SFR-enforcing). This covers\n\n                        all\n                        SFR-supporting and SFR-non-interfering\n                        actions, whether invokable through SFR-enforcing TSFI or through\n                        SFR-supporting or SFR-non-interfering TSFI. Such a summary\n                        about all SFR-supporting and SFR-non-interfering actions helps\n                        to provide a more complete picture of the functions provided by\n                        the TSF, and is to be used by the evaluator in determining\n                        whether an action or TSFI may have been mis-categorised.\n\n                        The information to be provided is more abstract than that\n                        required for SFR-enforcing actions.  While it should still be\n                        detailed enough so that the reader can understand what the\n                        action does, the description does not have to be detailed enough\n                        to support writing tests against it, for instance.  For the\n                        evaluator, the key is that the information must be sufficient to\n                        make a positive determination that the action is SFR-supporting\n                        or SFR-non-interfering.  If that level of information is\n                        missing, the summary is insufficient and more information must\n                        be obtained.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.3-9', ', The evaluator shall check that the tracing links the\n                        SFRs to the corresponding TSFIs.\n\n                        The tracing is provided by the developer to serve as a\n                        guide to which SFRs are related to which TSFIs.  This\n                        tracing can be as simple as a table; it is used as input\n                        to the evaluator for use in the following work units, in\n                        which the evaluator verifies its completeness and\n                        accuracy.', 'adv', 'adv_fsp', 'adv_fsp.3', 'adv_fsp.3.1e'),
('adv_fsp.4-1', ', ADV_TDS, The evaluator shall examine the functional specification\n                        to determine that the TSF is fully represented.\n\n                        The identification of the TSFI is a necessary\n                        prerequisite to all other activities in this\n                        sub-activity. The TSF must be identified (done as part\n                        of the, work units) in\n                        order to identify the TSFI. This activity can be done at\n                        a high level to ensure that no large groups of\n                        interfaces have been missed (network protocols, hardware\n                        interfaces, configuration files), or at a low level as\n                        the evaluation of the functional specification\n                        proceeds.\n\n                        In making an assessment for this work unit, the\n                        evaluator determines that all portions of the TSF are\n                        addressed in terms of the interfaces listed in the\n                        functional specification. All portions of the TSF should\n                        have a corresponding interface description, or if there\n                        are no corresponding interfaces for a portion of the\n                        TSF, the evaluator determines that that is\n                        acceptable.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-10', ', The evaluator shall check that the tracing links the\n                        SFRs to the corresponding TSFIs.\n\n                        The tracing is provided by the developer to serve as a\n                        guide to which SFRs are related to which TSFIs.  This\n                        tracing can be as simple as a table; it is used as input\n                        to the evaluator for use in the following work units, in\n                        which the evaluator verifies its completeness and\n                        accuracy.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('adv_fsp.4-11', 'The evaluator shall examine the functional specification\n                        to determine that it is a complete instantiation of the\n                        SFRs.\n\n                        To ensure that all SFRs are covered by the functional\n                        specification, as well as the test coverage analysis,\n                        the evaluator may build upon the developer\'s tracing\n                        (see, ADV_FSP.4-10, a map between\n                        the TOE security functional requirements and the TSFI.\n                        Note that this map may have to be at a level of detail\n                        below the component or even element level of the\n                        requirements, because of operations (assignments,\n                        refinements, selections) performed on the functional\n                        requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were covered by three different TSFI, it would be\n                        inadequate for the evaluator to map, FDP_ACC.1, to TSFI A, B, and C and claim they had\n                        completed the work unit. Instead, the evaluator would\n                        map, FDP_ACC.1, (rule 1) to TSFI A;, FDP_ACC.1, (rule 2) to TSFI B;\n                        etc. It might also be the case that the interface is a\n                        wrapper interface (e.g., IOCTL), in which case the\n                        mapping would need to be specific to certain set of\n                        parameters for a given interface.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that they completely map those requirements to\n                        the TSFI. The analysis for those requirements will be\n                        performed in the analysis for the TOE design (, ADV_TDS, ) when included in the ST. It is\n                        also important to note that since the parameters,\n                        actions, and error messages associated with TSFIs must\n                        be fully specified, the evaluator should be able to\n                        determine if all aspects of an SFR appear to be\n                        implemented at the interface level.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.2e'),
('adv_fsp.4-12', 'The evaluator shall examine the functional specification\n                        to determine that it is an accurate instantiation of the\n                        SFRs.\n\n                        For each functional requirement in the ST that results\n                        in effects visible at the TSF boundary, the information\n                        in the associated TSFI for that requirement specifies\n                        the required functionality described by the\n                        requirement. For example, if the ST contains a\n                        requirement for access control lists, and the only TSFI\n                        that map to that requirement specify functionality for\n                        Unix-style protection bits, then the functional\n                        specification is not accurate with respect to the\n                        requirements.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that the evaluator completely map those\n                        requirements to the TSFI. The analysis for those\n                        requirements will be performed in the analysis for the\n                        TOE design (, ADV_TDS, ) when\n                        included in the ST.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.2e'),
('adv_fsp.4-2', ', The evaluator shall examine the functional specification\n                        to determine that it states the purpose of each\n                        TSFI.\n\n                        The purpose of a TSFI is a general statement summarising\n                        the functionality provided by the interface. It is not\n                        intended to be a complete statement of the actions and\n                        results related to the interface, but rather a statement\n                        to help the reader understand in general what the\n                        interface is intended to be used for. The evaluator\n                        should not only determine that the purpose exists, but\n                        also that it accurately reflects the TSFI by taking into\n                        account other information about the interface, such as\n                        the description of actions and error messages.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-3', ', The evaluator shall examine the functional specification\n                        to determine that the method of use for each TSFI is\n                        given.\n\n                        The method of use for a TSFI summarises how the\n                        interface is manipulated in order to invoke the actions\n                        and obtain the results associated with the TSFI. The\n                        evaluator should be able to determine, from reading this\n                        material in the functional specification, how to use\n                        each interface. This does not necessarily mean that\n                        there needs to be a separate method of use for each\n                        TSFI, as it may be possible to describe in general how\n                        kernel calls are invoked, for instance, and then\n                        identify each interface using that general\n                        style. Different types of interfaces will require\n                        different method of use specifications. APIs, network\n                        protocol interfaces, system configuration parameters,\n                        and hardware bus interfaces all have very different\n                        methods of use, and this should be taken into account by\n                        the developer when developing the functional\n                        specification, as well as by the evaluator evaluating\n                        the functional specification.\n\n                        For administrative interfaces whose functionality is documented\n                        as being inaccessible to untrusted users, the evaluator ensures\n                        that the method of making the functions inaccessible is\n                        described in the functional specification. It should be noted\n                        that this inaccessibility needs to be tested by the developer in\n                        their test suite.\n\n                        The evaluator should not only determine that the set of\n                        method of use descriptions exist, but also that they\n                        accurately cover each TSFI.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-4', '\n                    The evaluator shall examine the functional specification to\n                    determine the completeness of the TSFI\n                    The evaluator shall use the design documentation to identify the possible types of\n                    interfaces. The evaluator shall search the design documentation and the guidance\n                    documentation for potential TSFI not contained in the developer\'s documentation,\n                    thus indicating that the set of TSFI defined by the developer is incomplete. The\n                    evaluator shall examine the arguments presented by the developer that the TSFI is\n                    complete and check down to the lowest level of design or with the\n                    implementation representation that no additional TSFI exist.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-5', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely identifies all\n                        parameters associated with every TSFI.\n\n                        The evaluator examines the functional specification to\n                        ensure that all of the parameters are described for each\n                        TSFI. Parameters are explicit inputs or outputs to an\n                        interface that control the behaviour of that\n                        interface. For examples, parameters are the arguments\n                        supplied to an API; the various fields in packet for a\n                        given network protocol; the individual key values in the\n                        Windows Registry; the signals across a set of pins on a\n                        chip; etc.\n\n                        In order to determine that all of the parameters are\n                        present in the TSFI, the evaluator should examine the\n                        rest of the interface description (actions, error\n                        messages, etc.) to determine if the effects of the\n                        parameter are accounted for in the description. The\n                        evaluator should also check other evidence provided for\n                        the evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-6', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all parameters associated with every TSFI.\n\n                        Once all of the parameters have been identified, the\n                        evaluator needs to ensure that they are accurately\n                        described, and that the description of the parameters is\n                        complete. A parameter description tells what the\n                        parameter is in some meaningful way. For instance, the\n                        interface\n                        foo(i)\n                        could be described as\n                        having ``parameter i which is an integer\'\'; this is not\n                        an acceptable parameter description. A description such\n                        as ``parameter i is an integer that indicates the number\n                        of users currently logged in to the system\'\' is much\n                        more acceptable.\n\n                        In order to determine that the description of the\n                        parameters is complete, the evaluator should examine the\n                        rest of the interface description (purpose, method of\n                        use, actions, error messages, etc.) to determine if the\n                        descriptions of the parameter(s) are accounted for in\n                        the description. The evaluator should also check other\n                        evidence provided (e.g., TOE design, architectural\n                        design, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-7', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all actions associated with every TSFI.\n\n                        The evaluator checks to ensure that all of the actions\n                        are described. actions available through an interface\n                        describe what the interface does (as opposed to the TOE\n                        design, which describes how the actions are provided by\n                        the TSF).\n\n                        Actions of an interface describe functionality that can\n                        be invoked through the interface, and can be categorised\n                        as\n                        regular\n                        actions, and\n\n                        SFR-related\n                        actions. Regular actions\n                        are descriptions of what the interface does. The amount\n                        of information provided for this description is\n                        dependant on the complexity of the interface. The\n                        SFR-related actions are those that are visible at any\n                        external interface (for instance, audit activity caused\n                        by the invocation of an interface (assuming audit\n                        requirements are included in the ST) should be\n                        described, even though the result of that action is\n                        generally not visible through the invoked\n                        interface). Depending on the parameters of an interface,\n                        there may be many different actions able to be invoked\n                        through the interface (for instance, an API might have\n                        the first parameter be a ``subcommand\'\', and the\n                        following parameters be specific to that subcommand. The\n                        IOCTL API in some Unix systems is an example of such an\n                        interface).\n\n                        In order to determine that the description of the\n                        actions of a TSFI is complete, the evaluator should\n                        review the rest of the interface description (parameter\n                        descriptions, error messages, etc.) to determine if the\n                        actions described are accounted for. The evaluator\n                        should also analyse other evidence provided for the\n                        evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to see if there is evidence of actions\n                        that are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-8', ', ADV_ARC, The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all errors messages resulting from an invocation of each\n                        TSFI.\n\n                        Errors can take many forms, depending on the interface\n                        being described. For an API, the interface itself may\n                        return an error code; set a global error condition, or\n                        set a certain parameter with an error code. For a\n                        configuration file, an incorrectly configured parameter\n                        may cause an error message to be written to a log\n                        file. For a hardware PCI card, an error condition may\n                        raise a signal on the bus, or trigger an exception\n                        condition to the CPU.\n\n                        Errors (and the associated error messages) come about\n                        through the invocation of an interface. The processing\n                        that occurs in response to the interface invocation may\n                        encounter error conditions, which trigger (through an\n                        implementation-specific mechanism) an error message to\n                        be generated. In some instances this may be a return\n                        value from the interface itself; in other instances a\n                        global value may be set and checked after the invocation\n                        of an interface. It is likely that a TOE will have a\n                        number of low-level error messages that may result from\n                        fundamental resource conditions, such as ``disk full\'\'\n                        or ``resource locked\'\'. While these error messages may\n                        map to a large number of TSFI, they could be used to\n                        detect instances where detail from an interface\n                        description has been omitted. For instance, a TSFI that\n                        produces a ``disk full\'\' message, but has no obvious\n                        description of why that TSFI should cause an access to\n                        the disk in its description of actions, might cause the\n                        evaluator to examine other evidence (, ADV_TDS, ,, ) related\n                        that TSFI to determine if the description is complete\n                        and accurate.\n\n                        The evaluator determines that, for each TSFI, the exact\n                        set of error messages that can be returned on invoking\n                        that interface can be determined. The evaluator reviews\n                        the evidence provided for the interface to determine if\n                        the set of errors seems complete. They cross-check this\n                        information with other evidence provided for the\n                        evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to ensure that there are no errors\n                        steaming from processing mentioned that are not included\n                        in the functional specification.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.4-9', ', The evaluator shall examine the presentation of the TSFI to determine\n                        that it completely and accurately describes the meaning of all\n                        error messages resulting from an invocation of each TSFI.\n\n                        In order to determine accuracy, the evaluator must be\n                        able to understand meaning of the error. For example, if\n                        an interface returns a numeric code of 0, 1, or 2, the\n                        evaluator would not be able to understand the error if\n                        the functional specification only listed: ``possible\n                        errors resulting from invocation of the\n\n                        foo()\n                        interface are 0, 1, or\n                        2\'\'. Instead the evaluator checks to ensure that the\n                        errors are described such as: ``possible errors\n                        resulting from invocation of the\n                        foo()\n\n                        interface are 0 (processing successful), 1 (file not\n                        found), or 2 (incorrect filename\n                        specification)\'\'.\n\n                        In order to determine that the description of the errors\n                        due to invoking a TSFI is complete, the evaluator\n                        examines the rest of the interface description\n                        (parameter descriptions, actions, etc.) to determine if\n                        potential error conditions that might be caused by using\n                        such an interface are accounted for. The evaluator also\n                        checks other evidence provided for the evaluation\n                        (e.g. TOE design, security architecture description,\n                        operational user guidance, implementation\n                        representation) to see if error processing related to\n                        the TSFI is described there but is not described in the\n                        functional specification.', 'adv', 'adv_fsp', 'adv_fsp.4', 'adv_fsp.4.1e'),
('adv_fsp.5-1', ', ADV_TDS, The evaluator shall examine the functional specification\n                    to determine that the TSF is fully represented.\n\n                    The identification of the TSFI is a necessary\n                    prerequisite to all other activities in this\n                    sub-activity. The TSF must be identified (done as part\n                    of the, work units) in\n                    order to identify the TSFI. This activity can be done at\n                    a high level to ensure that no large groups of\n                    interfaces have been missed (network protocols, hardware\n                    interfaces, configuration files), or at a low level as\n                    the evaluation of the functional specification\n                    proceeds.\n\n                    In making an assessment for this work unit, the\n                    evaluator determines that all portions of the TSF are\n                    addressed in terms of the interfaces listed in the\n                    functional specification. All portions of the TSF should\n                    have a corresponding interface description, or if there\n                    are no corresponding interfaces for a portion of the\n                    TSF, the evaluator determines that that is\n                    acceptable.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-10', ', The evaluator shall examine the presentation of the TSFI to determine\n                        that it completely and accurately describes the meaning of all\n                        error messages resulting from an invocation of each TSFI.\n\n                        In order to determine accuracy, the evaluator must be\n                        able to understand meaning of the error. For example, if\n                        an interface returns a numeric code of 0, 1, or 2, the\n                        evaluator would not be able to understand the error if\n                        the functional specification only listed: ``possible\n                        errors resulting from invocation of the\n\n                        foo()\n                        interface are 0, 1, or\n                        2\'\'. Instead the evaluator checks to ensure that the\n                        errors are described such as: ``possible errors\n                        resulting from invocation of the\n                        foo()\n\n                        interface are 0 (processing successful), 1 (file not\n                        found), or 2 (incorrect filename\n                        specification)\'\'.\n\n                        In order to determine that the description of the errors\n                        due to invoking a TSFI is complete, the evaluator\n                        examines the rest of the interface description\n                        (parameter descriptions, actions, etc.) to determine if\n                        potential error conditions that might be caused by using\n                        such an interface are accounted for. The evaluator also\n                        checks other evidence provided for the evaluation (e.g.,\n                        TOE design, security architecture description,\n                        operational user guidance, implementation\n                        representation) to see if error processing related to\n                        the TSFI is described there but is not described in the\n                        functional specification.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-11', ', ADV_FSP.5-9, The evaluator shall examine the functional specification\n                        to determine that it completely and accurately describes\n                        all errors messages that do not result from an\n                        invocation of any TSFI.\n\n                        This work unit complements work unit, ADV_FSP.5-9, , which describes those\n                        error messages that result from an invocation of the\n                        TSFI. Taken together, these work units cover all error\n                        messages that might be generated by the TSF.\n\n                        The evaluator assesses the completeness and accuracy of\n                        the functional specification by comparing its contents\n                        to instances of error message generation within the\n                        implementation representation. Most of these error\n                        messages will have already been covered by work unit, .\n\n                        The error messages related to this work unit are\n                        typically those that are not expected to be generated,\n                        but are constructed as a matter of good programming\n                        practises. For example, a case statement that defines\n                        actions resulting from each of a list of cases may end\n                        with a final\n                        else\n                        statement to apply\n                        to anything that might not be expected; this practise\n                        ensures the TSF does not get into an undefined state.\n                        However, it is not expected that the path of execution\n                        would ever get to this\n                        else\n\n                        statement; therefore, any error message generation\n                        within this\n                        else\n                        statement would\n                        never be generated.  Although it would not get\n                        generated, it must still be included in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-12', ', ADV_FSP.5-11, The evaluator shall examine the functional specification\n                        to determine that it provides a rationale for each error\n                        message contained in the TSF implementation yet does not\n                        result from an invocation of a TSFI.\n\n                        The evaluator ensures that every error message found\n                        under work unit, contains a rationale describing why it cannot be invoked\n                        from the TSFI.\n\n                        As was described in the previous work unit, this\n                        rationale might be as straightforward as the fact that\n                        the error message in question is provided for\n                        completeness of execution logic and that it is never\n                        expected to be generated. The evaluator ensures that the\n                        rationale for each such error message is logical.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-13', ', The evaluator shall check that the tracing links the\n                        SFRs to the corresponding TSFIs.\n\n                        The tracing is provided by the developer to serve as a\n                        guide to which SFRs are related to which TSFIs.  This\n                        tracing can be as simple as a table; it is used as input\n                        to the evaluator for use in the following work units, in\n                        which the evaluator verifies its completeness and\n                        accuracy.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-14', 'The evaluator shall examine the functional specification\n                        to determine that it is a complete instantiation of the\n                        SFRs.\n\n                        To ensure that all SFRs are covered by the functional\n                        specification, as well as the test coverage analysis,\n                        the evaluator may build upon the developer\'s tracing\n                        (see, ADV_FSP.5-13, a map between\n                        the TOE security functional requirements and the TSFI.\n                        Note that this map may have to be at a level of detail\n                        below the component or even element level of the\n                        requirements, because of operations (assignments,\n                        refinements, selections) performed on the functional\n                        requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were covered by three different TSFI, it would be\n                        inadequate for the evaluator to map, FDP_ACC.1, to TSFI A, B, and C and claim they had\n                        completed the work unit. Instead, the evaluator would\n                        map, FDP_ACC.1, (rule 1) to TSFI A;, FDP_ACC.1, (rule 2) to TSFI B;\n                        etc. It might also be the case that the interface is a\n                        wrapper interface (e.g., IOCTL), in which case the\n                        mapping would need to be specific to certain set of\n                        parameters for a given interface.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that they completely map those requirements to\n                        the TSFI. The analysis for those requirements will be\n                        performed in the analysis for the TOE design (, ADV_TDS, ) when included in the ST. It is\n                        also important to note that since the parameters,\n                        actions, and error messages associated with TSFIs must\n                        be fully specified, the evaluator should be able to\n                        determine if all aspects of an SFR appear to be\n                        implemented at the interface level.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.2e'),
('adv_fsp.5-15', 'The evaluator shall examine the functional specification\n                        to determine that it is an accurate instantiation of the\n                        SFRs.\n\n                        For each functional requirement in the ST that results\n                        in effects visible at the TSF boundary, the information\n                        in the associated TSFI for that requirement specifies\n                        the required functionality described by the\n                        requirement. For example, if the ST contains a\n                        requirement for access control lists, and the only TSFI\n                        that map to that requirement specify functionality for\n                        Unix-style protection bits, then the functional\n                        specification is not accurate with respect to the\n                        requirements.\n\n                        The evaluator must recognise that for requirements that\n                        have little or no manifestation at the TSF boundary\n                        (e.g.,, FDP_RIP, ) it is not\n                        expected that the evaluator completely map those\n                        requirements to the TSFI. The analysis for those\n                        requirements will be performed in the analysis for the\n                        TOE design (, ADV_TDS, ) when\n                        included in the ST.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.2e'),
('adv_fsp.5-2', ', The evaluator shall examine the functional specification\n                        to determine that it is presented using a semiformal\n                        style.\n\n                        A semi-formal presentation is characterised by a\n                        standardised format with a well-defined syntax that\n                        reduces ambiguity that may occur in informal\n                        presentations. Since the intent of the semi-formal\n                        format is to enhance the reader\'s ability to understand\n                        the presentation, use of certain structured presentation\n                        methods (pseudo-code, flow charts, block diagrams) are\n                        appropriate, though not required.\n\n                        For the purposes of this activity, the evaluator should\n                        ensure that the interface descriptions are formatted in\n                        a structured, consistent manner and use common\n                        terminology. A semiformal presentation of the interfaces\n                        also implies that the level of detail of the\n                        presentation for the interfaces is largely consistent\n                        across all TSFI. For the functional specification, it is\n                        acceptable to refer to external specifications for\n                        portions of the interface as long as those external\n                        specifications are themselves semiformal.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-3', ', The evaluator shall examine the functional specification\n                        to determine that it states the purpose of each\n                        TSFI.\n\n                        The purpose of a TSFI is a general statement summarising\n                        the functionality provided by the interface. It is not\n                        intended to be a complete statement of the actions and\n                        results related to the interface, but rather a statement\n                        to help the reader understand in general what the\n                        interface is intended to be used for. The evaluator\n                        should not only determine that the purpose exists, but\n                        also that it accurately reflects the TSFI by taking into\n                        account other information about the interface, such as\n                        the description of actions and error messages.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-4', ', The evaluator shall examine the functional specification\n                        to determine that the method of use for each TSFI is\n                        given.\n\n                        The method of use for a TSFI summarises how the\n                        interface is manipulated in order to invoke the actions\n                        and obtain the results associated with the TSFI. The\n                        evaluator should be able to determine, from reading this\n                        material in the functional specification, how to use\n                        each interface. This does not necessarily mean that\n                        there needs to be a separate method of use for each\n                        TSFI, as it may be possible to describe in general how\n                        kernel calls are invoked, for instance, and then\n                        identify each interface using that general\n                        style. Different types of interfaces will require\n                        different method of use specifications. APIs, network\n                        protocol interfaces, system configuration parameters,\n                        and hardware bus interfaces all have very different\n                        methods of use, and this should be taken into account by\n                        the developer when developing the functional\n                        specification, as well as by the evaluator evaluating\n                        the functional specification.\n\n                        For administrative interfaces whose functionality is documented\n                        as being inaccessible to untrusted users, the evaluator ensures\n                        that the method of making the functions inaccessible is\n                        described in the functional specification. It should be noted\n                        that this inaccessibility needs to be tested by the developer in\n                        their test suite.\n\n                        The evaluator should not only determine that the set of\n                        method of use descriptions exist, but also that they\n                        accurately cover each TSFI.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-5', '\n                    The evaluator shall examine the functional specification to\n                    determine the completeness of the TSFI\n                    The evaluator shall use the design documentation to identify the possible types of\n                    interfaces. The evaluator shall search the design documentation and the guidance\n                    documentation for potential TSFI not contained in the developer\'s documentation,\n                    thus indicating that the set of TSFI defined by the developer is incomplete. The\n                    evaluator shall examine the arguments presented by the developer that the TSFI is\n                    complete and check down to the lowest level of design or with the\n                    implementation representation that no additional TSFI exist.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-6', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely identifies all\n                        parameters associated with every TSFI.\n\n                        The evaluator examines the functional specification to\n                        ensure that all of the parameters are described for each\n                        TSFI. Parameters are explicit inputs or outputs to an\n                        interface that control the behaviour of that\n                        interface. For examples, parameters are the arguments\n                        supplied to an API; the various fields in packet for a\n                        given network protocol; the individual key values in the\n                        Windows Registry; the signals across a set of pins on a\n                        chip; etc.\n\n                        In order to determine that all of the parameters are\n                        present in the TSFI, the evaluator should examine the\n                        rest of the interface description (actions, error\n                        messages, etc.) to determine if the effects of the\n                        parameter are accounted for in the description. The\n                        evaluator should also check other evidence provided for\n                        the evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-7', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all parameters associated with every TSFI.\n\n                        Once all of the parameters have been identified, the\n                        evaluator needs to ensure that they are accurately\n                        described, and that the description of the parameters is\n                        complete. A parameter description tells what the\n                        parameter is in some meaningful way. For instance, the\n                        interface\n                        foo(i)\n                        could be described as\n                        having ``parameter i which is an integer\'\'; this is not\n                        an acceptable parameter description. A description such\n                        as ``parameter i is an integer that indicates the number\n                        of users currently logged in to the system\'\'. is much\n                        more acceptable.\n\n                        In order to determine that the description of the\n                        parameters is complete, the evaluator should examine the\n                        rest of the interface description (purpose, method of\n                        use, actions, error messages, etc.) to determine if the\n                        descriptions of the parameter(s) are accounted for in\n                        the description. The evaluator should also check other\n                        evidence provided (e.g., TOE design, architectural\n                        design, operational user guidance, implementation\n                        representation) to see if behaviour or additional\n                        parameters are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-8', ', The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all actions associated with every TSFI.\n\n                        The evaluator checks to ensure that all of the actions\n                        are described. actions available through an interface\n                        describe what the interface does (as opposed to the TOE\n                        design, which describes how the actions are provided by\n                        the TSF).\n\n                        actions of an interface describe functionality that can\n                        be invoked through the interface, and can be categorised\n                        as\n                        regular\n                        actions, and\n\n                        SFR-related\n                        actions. Regular actions\n                        are descriptions of what the interface does. The amount\n                        of information provided for this description is\n                        dependant on the complexity of the interface. The\n                        SFR-related actions are those that are visible at any\n                        external interface (for instance, audit activity caused\n                        by the invocation of an interface (assuming audit\n                        requirements are included in the ST) should be\n                        described, even though the result of that action is\n                        generally not visible through the invoked\n                        interface). Depending on the parameters of an interface,\n                        there may be many different actions able to be invoked\n                        through the interface (for instance, an API might have\n                        the first parameter be a ``subcommand\'\', and the\n                        following parameters be specific to that subcommand. The\n                        IOCTL API in some Unix systems is an example of such an\n                        interface).\n                        In order to determine that the description of the\n                        actions of a TSFI is complete, the evaluator should\n                        review the rest of the interface description (parameter\n                        descriptions, error messages, etc.)  to determine if the\n                        actions described are accounted for. The evaluator\n                        should also analyse other evidence provided for the\n                        evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to see if there is evidence of actions\n                        that are described there but not in the functional\n                        specification.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e'),
('adv_fsp.5-9', ', ADV_ARC, The evaluator shall examine the presentation of the TSFI\n                        to determine that it completely and accurately describes\n                        all errors messages resulting from an invocation of each\n                        TSFI.\n\n                        Errors can take many forms, depending on the interface\n                        being described. For an API, the interface itself may\n                        return an error code; set a global error condition, or\n                        set a certain parameter with an error code. For a\n                        configuration file, an incorrectly configured parameter\n                        may cause an error message to be written to a log\n                        file. For a hardware PCI card, an error condition may\n                        raise a signal on the bus, or trigger an exception\n                        condition to the CPU.\n\n                        Errors (and the associated error messages) come about\n                        through the invocation of an interface. The processing\n                        that occurs in response to the interface invocation may\n                        encounter error conditions, which trigger (through an\n                        implementation-specific mechanism) an error message to\n                        be generated. In some instances this may be a return\n                        value from the interface itself; in other instances a\n                        global value may be set and checked after the invocation\n                        of an interface. It is likely that a TOE will have a\n                        number of low-level error messages that may result from\n                        fundamental resource conditions, such as ``disk full\'\'\n                        or ``resource locked\'\'. While these error messages may\n                        map to a large number of TSFI, they could be used to\n                        detect instances where detail from an interface\n                        description has been omitted. For instance, a TSFI that\n                        produces a ``disk full\'\' message, but has no obvious\n                        description of why that TSFI should cause an access to\n                        the disk in its description of actions, might cause the\n                        evaluator to examine other evidence (, ADV_TDS, ,, ) related\n                        that TSFI to determine if the description is complete\n                        and accurate.\n\n                        The evaluator determines that, for each TSFI, the exact\n                        set of error messages that can be returned on invoking\n                        that interface can be determined. The evaluator reviews\n                        the evidence provided for the interface to determine if\n                        the set of errors seems complete. They cross-check this\n                        information with other evidence provided for the\n                        evaluation (e.g., TOE design, security architecture\n                        description, operational user guidance, implementation\n                        representation) to ensure that there are no errors\n                        steaming from processing mentioned that are not included\n                        in the functional specification.', 'adv', 'adv_fsp', 'adv_fsp.5', 'adv_fsp.5.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('adv_imp.1-1', ', The evaluator shall check that the implementation\n                        representation defines the TSF to a level of detail such\n                        that the TSF can be generated without further design\n                        decisions.\n\n                        Source code or hardware diagrams and/or IC hardware\n                        design language code or layout data that are used to\n                        build the actual hardware are examples of parts of an\n                        implementation representation. The evaluator samples the\n                        implementation representation to gain confidence that it\n                        is at the appropriate level and not, for instance, a\n                        pseudo-code level which requires additional design\n                        decisions to be made. The evaluator is encouraged to\n                        perform a quick check when first looking at the\n                        implementation representation to assure themselves that\n                        the developer is on the right track. However, the\n                        evaluator is also encourage to perform the bulk of this\n                        check while working on other work units that call for\n                        examining the implementation; this will ensure the\n                        sample examined for this work unit is relevant.', 'adv', 'adv_imp', 'adv_imp.1', 'adv_imp.1.1e'),
('adv_imp.1-2', ', ALC_TAT, The evaluator shall check that the implementation\n                        representation is in the form used by development\n                        personnel.\n\n                        The implementation representation is manipulated by the\n                        developer in form that it suitable for transformation to\n                        the actual implementation. For instance, the developer\n                        may work with files containing source code, which is\n                        eventually compiled to become part of the TSF. The\n                        developer makes available the implementation\n                        representation in the form they use, so that the\n                        evaluator may use automated techniques in the\n                        analysis. This also increases the confidence that the\n                        implementation representation examined is actually the\n                        one used in the production of the TSF (as opposed to the\n                        case where it is supplied in an alternate presentation\n                        format, such as a word processor document). It should be\n                        noted that other forms of the implementation\n                        representation may also be used by the developer; these\n                        forms are supplied as well. The overall goal is to\n                        supply the evaluator with the information that will\n                        maximise the evaluator\'s analysis efforts.\n\n                        The evaluator samples the implementation representation\n                        to gain confidence that it is the version that is usable\n                        by the developer. The sample is such that the evaluator\n                        has assurance that all areas of the implementation\n                        representation are in conformance with the requirement;\n                        however, a complete examination of the entire\n                        implementation representation is unnecessary.\n\n                        Conventions in some forms of the implementation\n                        representation may make it difficult or impossible to\n                        determine from just the implementation representation\n                        itself what the actual result of the compilation or\n                        run-time interpretation will be. For example, compiler\n                        directives for C language compilers will cause the\n                        compiler to exclude or include entire portions of the\n                        code.\n\n                        Some forms of the implementation representation may\n                        require additional information because they introduce\n                        significant barriers to understanding and\n                        analysis. Examples include shrouded source code or\n                        source code that has been obfuscated in other ways such\n                        that it prevents understanding and/or analysis. These\n                        forms of implementation representation typically result\n                        from by taking a version of the implementation\n                        representation that is used by the TOE developer and\n                        running a shrouding or obfuscation program on it. While\n                        the shrouded representation is what is compiled and may\n                        be closer to the implementation (in terms of structure)\n                        than the original, un-shrouded representation, supplying\n                        such obfuscated code may cause significantly more time\n                        to be spent in analysis tasks involving the\n                        representation. When such forms of representation are\n                        created, the components require details on the shrouding\n                        tools/algorithms used so that the un-shrouded\n                        representation can be supplied, and the additional\n                        information can be used to gain confidence that the\n                        shrouding process does not compromise any security\n                        mechanisms.\n\n                        The evaluator samples the implementation representation\n                        to gain confidence that all of the information needed to\n                        interpret the implementation representation has been\n                        supplied. Note that the tools are among those referenced\n                        by, components. The\n                        evaluator is encouraged to perform a quick check when\n                        first looking at the implementation representation to\n                        assure themselves that the developer is on the right\n                        track. However, the evaluator is also encouraged to\n                        perform the bulk of this check while working on other\n                        work units that call for examining the implementation;\n                        this will ensure the sample examined for this work unit\n                        is relevant.', 'adv', 'adv_imp', 'adv_imp.1', 'adv_imp.1.1e'),
('adv_imp.1-3', ', ADV_IMP.1-1, The evaluator shall examine the mapping between the TOE\n                        design description and the sample of the implementation\n                        representation to determine that it is accurate.\n\n                        The evaluator augments the determination of existence\n                        (specified in work unit, ) by verifying the accuracy of a portion of\n                        the implementation representation and the TOE design\n                        description. For parts of the TOE design description\n                        that are interesting, the evaluator would verify the\n                        implementation representation accurately reflects the\n                        description provided in the TOE design\n                        description.\n\n                        For example, the TOE design description might identify a\n                        login module that is used to identify and authenticate\n                        users. If user authentication is sufficiently\n                        significant, the evaluator would verify that the\n                        corresponding code in fact implements that service as\n                        described in the TOE design description. It might also\n                        be worthwhile to verify that the code accepts the\n                        parameters as described in the functional\n                        specification.\n\n                        It is worth pointing out the developer must choose\n                        whether to perform the mapping for the entire\n                        implementation representation, thereby guaranteeing that\n                        the chosen sample will be covered, or waiting for the\n                        sample to be chosen before performing the mapping. The\n                        first option is likely more work, but may be completed\n                        before the evaluation begins. The second option is less\n                        work, but will produce a suspension of evaluation\n                        activity while the necessary evidence is being\n                        produced.', 'adv', 'adv_imp', 'adv_imp.1', 'adv_imp.1.1e'),
('adv_int.1-1', ', The evaluator shall examine the justification to\n                        determine that it identifies the basis for determining\n                        whether the TSF is well-structured.\n\n                        The evaluator verifies that the criteria for determining\n                        the characteristic of being well-structured are clearly\n                        defined in the justification. Acceptable criteria\n                        typically originate from industry standards for the\n                        technology discipline.  For example, procedural software\n                        that executes linearly is traditionally viewed as\n                        well-structured if it adheres to software engineering\n                        programming practises, such as those defined in the IEEE\n                        Standard (\n                        IEEE Std 610.12-1990\n                        ). For\n                        example, it would identify the criteria for the\n                        procedural software portions of the TSF subset:, For other types of technologies used in the TOE - such as\n                        non-procedural software (e.g. object-oriented programming),\n                        widespread commodity hardware (e.g. PC microprocessors), and\n                        special-purpose hardware (e.g. smart-card processors) - the\n                        evaluator should seek guidance from the evaluation authority for\n                        determining the adequacy of criteria for being\n                        ``well-structured\'\'.', 'adv', 'adv_int', 'adv_int.1', 'adv_int.1.1e'),
('adv_int.1-2', ', FPR_ANO.2, The evaluator shall check the TSF internals\n                        description to determine that it identifies the Assigned\n                        subset of the TSF.\n\n                        This subset may be identified in terms of the internals\n                        of the TSF at any layer of abstraction. For example, it\n                        may be in terms of the structural elements of the TSF as\n                        identified in the TOE design (e.g. the audit subsystem),\n                        or in terms of the implementation\n                        (e.g.\n                        encrypt.c\n                        and\n\n                        decrypt.c\n                        files, or the 6227 IC\n                        chip).\n\n                        It is insufficient to identify this subset in terms of\n                        the claimed SFRs (e.g. the portion of the TSF that\n                        provide anonymity as defined in, ) because this does not indicate where to\n                        focus the analysis.', 'adv', 'adv_int', 'adv_int.1', 'adv_int.1.1e'),
('adv_int.1-3', ', ADV_INT.1-1, The evaluator shall examine the TSF internals\n                        description to determine that it demonstrates that the\n                        assigned TSF subset is well-structured.\n\n                        The evaluator examines the internals description to\n                        ensure that it provides a sound explanation of how the\n                        TSF subset meets the criteria from, For example, it would explain how the procedural\n                        software portions of the TSF subset meets the following:, ', 'adv', 'adv_int', 'adv_int.1', 'adv_int.1.1e'),
('adv_int.1-4', 'The evaluator shall determine that the TOE design for\n                        the assigned TSF subset is well-structured.\n\n                        The evaluator examines a sample of the TOE design to\n                        verify the accuracy of the justification. For example, a\n                        sample of the TOE design is analysed to determine its\n                        adherence to the design standards, etc. As with all\n                        areas where the evaluator performs activities on a\n                        subset the evaluator provides a justification of the\n                        sample size and scope\n\n                        The description of the TOE\'s decomposition into\n                        subsystems and modules will make the argument that the\n                        TSF subset is well-structured self-evident. Verification\n                        that the procedures for structuring the TSF (as examined\n                        in, ALC_TAT, ) are being followed\n                        will make it self-evident that the TSF subset is\n                        well-structured.', 'adv', 'adv_int', 'adv_int.1', 'adv_int.1.2e'),
('adv_int.1-5', 'The evaluator shall determine that the assigned TSF\n                        subset is well-structured.\n\n                        If, ADV_IMP, is not part of the\n                        claimed assurance, then this work unit is not applicable\n                        and is therefore considered to be satisfied.\n\n                        The evaluator examines a sample of the TSF subset to\n                        verify the accuracy of the internals description. For\n                        example, a sample of the procedural software portions of\n                        the TSF subset is analysed to determine its cohesion and\n                        coupling, its adherence to the coding standards, etc. As\n                        with all areas where the evaluator performs activities\n                        on a subset the evaluator provides a justification of\n                        the sample size and scope.', 'adv', 'adv_int', 'adv_int.1', 'adv_int.1.2e'),
('adv_int.2-1', ', The evaluator shall examine the justification to\n                        determine that it identifies the basis for determining\n                        whether the TSF is well-structured.\n\n                        The evaluator verifies that the criteria for determining\n                        the characteristic of being well-structured are clearly\n                        defined in the justification. Acceptable criteria\n                        typically originate from industry standards for the\n                        technology discipline.  For example, procedural software\n                        that executes linearly is traditionally viewed as\n                        well-structured if it adheres to software engineering\n                        programming practises, such as those defined in the IEEE\n                        Standard (\n                        IEEE Std 610.12-1990\n                        ). For\n                        example, it would identify the criteria for the\n                        procedural software portions of the TSF:, For other types of technologies used in the TOE - such\n                        as non-procedural software (e.g. object-oriented\n                        programming), widespread commodity hardware (e.g. PC\n                        microprocessors), and special-purpose hardware\n                        (e.g. smart-card processors) - the evaluation authority\n                        should be consulted for determining the adequacy of\n                        criteria for being ``well-structured\'\'.', 'adv', 'adv_int', 'adv_int.2', 'adv_int.2.1e'),
('adv_int.2-2', ', ADV_INT.2-1, The evaluator shall examine the TSF internals\n                        description to determine that it demonstrates that the\n                        TSF is well-structured.\n\n                        The evaluator examines the internals description to\n                        ensure that it provides a sound explanation of how the\n                        TSF meets the criteria from, For example, it would explain how the procedural\n                        software portions of the TSF meet the following:, ', 'adv', 'adv_int', 'adv_int.2', 'adv_int.2.1e'),
('adv_int.2-3', 'The evaluator shall determine that the TOE design is\n                        well-structured.\n\n                        The evaluator examines the TOE design of a sample of the\n                        TSF to verify the accuracy of the justification. For\n                        example, a sample of the TOE design is analysed to\n                        determine its adherence to the design standards, etc. As\n                        with all areas where the evaluator performs activities\n                        on a subset the evaluator provides a justification of\n                        the sample size and scope\n\n                        The description of the TOE\'s decomposition into\n                        subsystems and modules will make the argument that the\n                        TSF subset is well-structured self-evident. Verification\n                        that the procedures for structuring the TSF (as examined\n                        in, ALC_TAT, ) are being followed\n                        will make it self-evident that the TSF subset is\n                        well-structured.', 'adv', 'adv_int', 'adv_int.2', 'adv_int.2.2e'),
('adv_int.2-4', 'The evaluator shall determine that the TSF is\n                        well-structured.\n\n                        If, ADV_IMP, is not part of the\n                        claimed assurance, then this work unit is not applicable\n                        and is therefore considered to be satisfied.\n\n                        The evaluator examines a sample of the TSF to verify the\n                        accuracy of the internals description. For example, a\n                        sample of the procedural software portions of the TSF is\n                        analysed to determine its cohesion and coupling, its\n                        adherence to the coding standards, etc. As with all\n                        areas where the evaluator performs activities on a\n                        subset the evaluator provides a justification of the\n                        sample size and scope.', 'adv', 'adv_int', 'adv_int.2', 'adv_int.2.2e'),
('adv_spm.1-1', ', FORMAL_METHODS_ANNEX, The evaluator shall examine the TOE security policy\n                        model to determine that it is written in a formal\n                        style.\n\n                        The evaluator identifies the formal framework upon which\n                        the TOE security policy model is based and ensures that\n                        it is founded on well established mathematical concepts,\n                        and identifies the security properties and features\n                        addressed in the application notes and ensures the\n                        formalisation of at least one security policy. If no\n                        policy is formally modelled, this component cannot be\n                        successfully claimed.\n\n                        For additional guidance on formal methods refer to, .', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-10', ', The evaluator shall examine the TOE security policy\n                        model rationale to determine that the behaviour modelled\n                        is complete with respect to the policies described by\n                        the security policies (i.e. as articulated by the\n                        functional requirements in the ST).\n\n                        In determining completeness of this rationale, the\n                        evaluator considers the properties and features of the\n                        security policy model and maps those properties and\n                        features to explicit policy statements (i.e. functional\n                        requirements).  The rationale should show that all\n                        policies that are required to be modelled have an\n                        associated property or feature description in the TOE\n                        security policy model.\n\n                        Abstention from formally modelling policy statements\n                        always calls for justification on the developer\'s side\n                        (also confer the application notes above).', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-11', 'The evaluator shall examine the demonstration of\n                        correspondence to determine that all Assigned policies\n                        are mapped to functions within the functional\n                        specification.\n\n                        If all policies are included within the security policy\n                        model (i.e. they are all formally modelled) and the\n                        assignment in, ADV_SPM.1.1D, is\n                        therefore empty, this work unit is not applicable and is\n                        therefore considered to be satisfied.\n\n                        The evaluator verifies that the correspondence\n                        demonstrates that the descriptions of the SFR-related\n                        functions in the functional specification correspond to\n                        the SFRs. This may be done as part of the, ADV_FSP, work units addressing\n                        correspondence to the SFRs. However, if the developer\n                        provides a well-structured semiformal or informal\n                        security policy model to better articulate the notions\n                        of security enforced by the TOE, the evaluator will\n                        verify that such a model is consistent with the\n                        SFRs.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-2', ', The evaluator shall examine the TOE security policy\n                        model to determine that it contains all necessary\n                        informal explanatory text.\n\n                        Supporting narrative descriptions are necessary for all\n                        parts of the model (for example, to make clear the\n                        meaning of any formal notation and how they are used)\n                        including the security properties and features.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-3', ', ADV_SPM.1.1D, The evaluator shall examine the TOE security policy\n                        model to determine that it contains all policies that\n                        can be formally modelled.\n\n                        It is recognised that not all policies can be formally\n                        modelled for all TOEs. This is because either the state\n                        of the art is insufficient to formally model a given\n                        policy, or because the nature of the TOE renders\n                        impossible the modelling of policies that would\n                        otherwise be possible to model.\n\n                        While access control, information flow control, and data\n                        integrity policies have all been formally modelled\n                        successfully, the possibility of modelling other\n                        policies is based on a case by case decision. Abstention\n                        from formally modelling security relevant policies\n                        requires argumentation and rests the burden of proof\n                        entirely on the developer\'s side.\n\n                        For any security policy where formal models are not\n                        possible, the policy must be identified in the\n                        assignment of, .', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-4', ', The evaluator shall examine the model to determine that\n                        the security behaviour of the TOE is clearly\n                        articulated.\n\n                        The security policy model\'s properties describe the\n                        TOE\'s behaviour in enforcing the principles of the\n                        policy. For example, a policy that is modelled on the\n                        basis of state transitions would include principles of\n                        its states, identify its initial state, and define what\n                        it means to be a secure state.\n\n                        The security policy model\'s features describe the\n                        attributes and conditions of the TOE that come into\n                        consideration when enforcing its policy\'s\n                        characteristics. For example, a policy that is modelled\n                        on the basis of state transitions would describe the\n                        necessary conditions to transform the TOE from one state\n                        to the next.\n\n                        An informal interpretation of all formal concepts\n                        (including attributes, predicates and variables, if\n                        available) must also be provided in order to make clear\n                        their intended meaning.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-5', ', ADV_SPM.1-6, The evaluator shall examine the correspondence between\n                        the security policy model and the formal functional\n                        specification to determine that it is presented in a\n                        formal style.\n\n                        If no part of the functional specification is formal,\n                        this work unit is not applicable and is therefore\n                        considered to be satisfied. The corresponding work will\n                        be performed under work unit, ADV_SPM.1-7, .\n\n                        For any part of the functional specification that is\n                        formally presented, the correspondence between that part\n                        of the functional specification and the security policy\n                        model must be formal. Analysis of the content is\n                        performed as part of work units, ADV_SPM.1-10, through, FORMAL_METHODS_ANNEX, .\n\n                        For guidance on formal methods refer to, .', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-6', ', ADV_SPM.1-5, The evaluator shall examine the correspondence between\n                        the security policy model and the semiformal functional\n                        specification to determine that it is presented in a\n                        semiformal style.\n\n                        If the entire functional specification is formal, this\n                        work unit is not applicable and is therefore considered\n                        to be satisfied. The corresponding work will be\n                        performed under work unit, ADV_SPM.1-7, .\n\n                        For formally-modelled policies whose corresponding\n                        description in the functional specification is not\n                        formally presented, the correspondence between the model\n                        and the functional specification must be a semiformal\n                        demonstration. Analysis of the content is performed as\n                        part of work units, ADV_SPM.1-10, through, .\n\n                        If a security policy model exists, either this work unit\n                        or the previous work unit (or both) will be\n                        applicable.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-7', ', The evaluator shall examine the TOE security policy\n                        model rationale to determine that it formally proves the\n                        correspondence between the security properties and the\n                        security features.\n\n                        The proof shall show that the security features enforce\n                        the security properties. To determine the enforcement,\n                        the evaluator considers the security properties and the\n                        security features and verifies that the arguments used\n                        in the proof are valid. The proof of correspondence\n                        between the security properties and the security\n                        features shall be formal.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-8', ', The evaluator shall examine the TOE security policy\n                        model rationale to determine that it proves the internal\n                        consistency of the TOE security policy model.\n\n                        The proof shall show the absence of contradictions\n                        within the TOE security policy model. In determining the\n                        absence of contradictions, the evaluator verifies that\n                        the arguments used in the proof are valid.\n\n                        Since the TOE security policy model is formal, the proof\n                        of its internal consistency shall be formal. It is\n                        recognised that a complete formal proof of the internal\n                        consistency of the TOE security policy model usually is\n                        not possible due to the fundamental nature of formal\n                        frameworks. Generally, it is sufficient to generate\n                        evidence using formal proofs based on the specific TOE\n                        security policy model that prove the internal\n                        consistency by means of a combination with generic\n                        arguments of the formal framework.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_spm.1-9', ', The evaluator shall examine the TOE security policy\n                        model rationale to determine that the behaviour modelled\n                        is consistent with respect to policies described by the\n                        security policies (as articulated by the functional\n                        requirements in the ST).\n\n                        The examination considers the informal relationships of\n                        the model.  Hence the meaning of consistency reflects\n                        the conventional understanding in contrast to the\n                        internal consistency concept of the previous work\n                        unit.\n\n                        In determining consistency, the evaluator verifies that\n                        the rationale shows that each description of properties\n                        and features in the security policy model accurately\n                        reflects the intent of the security policies. For\n                        example, if a policy stated that access control was\n                        necessary to the granularity of a single individual,\n                        then a security policy model describing the security\n                        behaviour of a TOE in the context of controlling groups\n                        of users would not be consistent. Likewise, if the\n                        policy stated that access control for groups of users\n                        was necessary, then a security policy model describing\n                        the security behaviour of a TOE in the context of\n                        controlling individual users would also not be\n                        consistent.\n\n                        The evaluator also examines whether the security\n                        policies are reflected within their formal counterparts\n                        of the security policy model.', 'adv', 'adv_spm', 'adv_spm.1', 'adv_spm.1.1e'),
('adv_tds.1-1', ', ADV_TDS.1-2, The evaluator shall examine the TOE design to determine\n                        that the structure of the entire TOE is described in\n                        terms of subsystems.\n\n                        The evaluator ensures that all of the subsystems of the\n                        TOE are identified. This description of the TOE will be\n                        used as input to work unit, TDS_ANNEX, , where the parts of the TOE that make up\n                        the TSF are identified. That is, this requirement is on\n                        the entire TOE rather than on only the TSF.\n\n                        The TOE (and TSF) may be described in multiple layers of\n                        abstraction (i.e. subsystems and modules) Depending upon\n                        the complexity of the TOE, its design may be described\n                        in terms of subsystems and modules, as described in CC\n                        Part 3, .  At this\n                        level of assurance, the decomposition only need be at\n                        the ``subsystem\'\' level.\n\n                        In performing this activity, the evaluator examines\n                        other evidence presented for the TOE (e.g., ST, operator\n                        user guidance) to determine that the description of the\n                        TOE in such evidence is consistent with the description\n                        contained in the TOE design.', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.1e'),
('adv_tds.1-2', ', ADV_TDS.1-1, The evaluator shall examine the TOE design to determine\n                        that all subsystems of the TSF are identified.\n\n                        In work unit, AGD_PRE, all of\n                        the subsystems of the TOE were identified, and a\n                        determination made that the non-TSF subsystems were\n                        correctly characterised. Building on that work, the\n                        subsystems that were not characterised as non-TSF\n                        subsystems should be precisely identified. The evaluator\n                        determines that, of the hardware and software installed\n                        and configured according to the, guidance, each subsystem has been\n                        accounted for as either one that is part of the TSF, or\n                        one that is not.', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.1e'),
('adv_tds.1-3', ', The evaluator shall examine the TOE design to determine that\n                        each SFR-supporting or SFR-non-interfering subsystem of the TSF\n                        is described such that the evaluator can determine that the\n                        subsystem is SFR-supporting or SFR-non-interfering.\n\n                        SFR-supporting and SFR-non-interfering subsystems do not need to\n                        be described in detail as to how they function in the system.\n                        However, the evaluator makes a determination, based on the\n                        evidence provided by the developer, that the subsystems that do\n                        not have high-level descriptions are SFR-supporting or\n                        SFR-non-interfering.  Note that if the developer provides a\n                        uniform level of detailed documentation then this work unit will\n                        be largely satisfied, since the point of categorising the\n                        subsystems is to allow the developer to provide less information\n                        for SFR-supporting and SFR-non-interfering subsystems than for\n                        SFR-enforcing subsystems.\n\n                        An SFR-supporting subsystem is one that is depended on\n                        by an SFR-enforcing subsystem in order to implement an\n                        SFR, but does not play as direct a role as an\n                        SFR-enforcing subsystem. An SFR-non-interfering\n                        subsystem is one that is not depended upon, in either a\n                        supporting or enforcing role, to implement an\n                        SFR.', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.1e'),
('adv_tds.1-4', ', The evaluator shall examine the TOE design to determine\n                        that it provides a complete, accurate, and high-level\n                        description of the SFR-enforcing behaviour of the\n                        SFR-enforcing subsystems.\n\n                        The developer may designate subsystems as SFR-enforcing,\n                        SFR-supporting, and SFR non-interfering, but these\n                        ``tags\'\' are used only to describe the amount and type\n                        of information the developer must provide, and can be\n                        used to limit the amount of information the developer\n                        has to develop if their engineering process does not\n                        produce the documentation required. Whether the\n                        subsystems have been categorised by the developer or\n                        not, it is the\n                        evaluator\'s responsibility to determine that the\n                        subsystems have the appropriate information for their\n                        role (SFR-enforcing, etc.) in the TOE, and to obtain the\n                        appropriate information from the developer should the\n                        developer fail to provide the required information for a\n                        particular subsystem.\n\n                        SFR-enforcing behaviour refers to\n                        how\n                        a\n                        subsystem provides the functionality that implements an\n                        SFR.  A high-level description need not refer to\n                        specific data structures (although it may), but instead\n                        talks about more general data flow, message flow, and\n                        control relationships within a subsystem.  The goal of\n                        these descriptions is to give the evaluator enough\n                        information to understand\n                        how\n                        the\n                        SFR-enforcing behaviour is achieved.  Note that the\n                        evaluator should find unacceptable asserts of\n                        SFR-enforcement in the TOE design documentation for this\n                        work unit.  It should be noted that it is the\n                        evaluator\'s determination with respect to what\n                        ``high-level\'\' means for a particular TOE, and the\n                        evaluator obtains enough information from the developer\n                        to make a sound verdict for this work unit.\n\n                        To determine completeness and accuracy, the evaluator\n                        examines other information available (e.g., functional\n                        specification, security architecture description,\n                        implementation representation).  Descriptions of\n                        functionality in these documents should be consistent\n                        with what is provided for evidence for this work\n                        unit', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.1e'),
('adv_tds.1-5', ', The evaluator shall examine the TOE design to determine\n                        that interactions between the subsystems of the TSF are\n                        described.\n\n                        The goal of describing the interactions between the\n                        SFR-enforcing subsystems and other subsystems is to help provide\n                        the reader a better understanding of how the TSF performs it\n                        functions. These interactions do not need to be characterised at\n                        the implementation level (e.g., parameters passed from one\n                        routine in a subsystem to a routine in a different subsystem;\n                        global variables; hardware signals (e.g., interrupts) from a\n                        hardware subsystem to an interrupt-handling subsystem), but the\n                        data elements identified for a particular subsystem that are\n                        going to be used by another subsystem need to be covered in this\n                        discussion.  Any control relationships between subsystems (e.g.,\n                        a subsystem responsible for configuring a rule base for a\n                        firewall system and the subsystem that actually implements these\n                        rules) should also be described.\n\n                        The evaluators need to use their own judgement in assessing the\n                        completeness of the description. If the reason for an\n                        interaction is unclear, or if there are SFR-related interactions\n                        (discovered, for instance, in examining the descriptions of\n                        subsystem behaviour) that do not appear to be described, the\n                        evaluator ensures that this information is provided by the\n                        developer. However, if the evaluator can determine that\n                        interactions among a particular set of subsystems, while\n                        incompletely described by the developer, will not aid in\n                        understanding the overall functionality nor security\n                        functionality provided by the TSF, then the evaluator may choose\n                        to consider the description sufficient, and not pursue\n                        completeness for its own sake.', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.1e'),
('adv_tds.1-6', ', The evaluator shall examine the TOE design to determine\n                        that it contains a complete and accurate mapping from\n                        the TSFI described in the functional specification to\n                        the subsystems of the TSF described in the TOE\n                        design.\n\n                        The subsystems described in the TOE design provide a\n                        description of how the TSF works at a detailed level for\n                        SFR-enforcing portions of the TSF, and at a higher level\n                        for other portions of the TSF. The TSFI provide a\n                        description of how the implementation is exercised. The\n                        evidence from the developer identifies the subsystem\n                        that is initially involved when an operation is\n                        requested at the TSFI, and identify the various\n                        subsystems that are primarily responsible for\n                        implementing the functionality. Note that a complete\n                        ``call tree\'\' for each TSFI is not required for this\n                        work unit.\n\n                        The evaluator assesses the completeness of the mapping\n                        by ensuring that all of the TSFI map to at least one\n                        subsystem. The verification of accuracy is more\n                        complex.\n\n                        The first aspect of accuracy is that each TSFI is mapped\n                        to a subsystem at the TSF boundary. This determination\n                        can be made by reviewing the subsystem description and\n                        interactions, and from this information determining its\n                        place in the architecture. The next aspect of accuracy\n                        is that the mapping makes sense. For instance, mapping a\n                        TSFI dealing with access control to a subsystem that\n                        checks passwords is not accurate. The evaluator should\n                        again use judgement in making this determination. The\n                        goal is that this information aids the evaluator in\n                        understanding the system and implementation of the SFRs,\n                        and ways in which entities at the TSF boundary can\n                        interact with the TSF. The bulk of the assessment of\n                        whether the SFRs are described accurately by the\n                        subsystems is performed in other work units.', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.1e'),
('adv_tds.1-7', 'The evaluator shall examine the TOE security functional\n                        requirements and the TOE design, to determine that all\n                        ST security functional requirements are covered by the\n                        TOE design.\n\n                        The evaluator may construct a map between the TOE security\n                        functional requirements and the TOE design.  This map will\n                        likely be from a functional requirement to a set of\n                        subsystems. Note that this map may have to be at a level of\n                        detail below the component or even element level of the\n                        requirements, because of operations (assignments, refinements,\n                        selections) performed on the functional requirement by the ST\n                        author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were implemented in specific places within fifteen\n                        modules, it would be inadequate for the evaluator to map, FDP_ACC.1, to one subsystem and\n                        claim the work unit had been completed. Instead, the\n                        evaluator would map, FDP_ACC.1, (rule 1) to subsystem A, behaviours x, y, and z;, FDP_ACC.1, (rule 2) to subsystem A,\n                        behaviours x, p, and q; etc.', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.2e'),
('adv_tds.1-8', '\n\n                        The evaluator shall examine the TOE design to determine\n                        that it is an accurate instantiation of all security\n                        functional requirements.\n\n                        The evaluator ensures that each security requirement\n                        listed in the TOE security functional requirements\n                        subclause of the ST has a corresponding design description\n                        in the TOE design that accurately details how the TSF\n                        meets that requirement. This requires that the evaluator\n                        identify a collection of subsystems that are responsible\n                        for implementing a given functional requirement, and\n                        then examine those subsystems to understand how the\n                        requirement is implemented. Finally, the evaluator would\n                        assess whether the requirement was accurately\n                        implemented.\n\n                        As an example, if the ST requirements specified a\n                        role-based access control mechanism, the evaluator would\n                        first identify the subsystems that contribute to this\n                        mechanism\'s implementation. This could be done by\n                        in-depth knowledge or understanding of the TOE design or\n                        by work done in the previous work unit. Note that this\n                        trace is only to identify the subsystems, and is not the\n                        complete analysis.\n\n                        The next step would be to understand what mechanism the\n                        subsystems implemented. For instance, if the design\n                        described an implementation of access control based on\n                        UNIX-style protection bits, the design would not be an\n                        accurate instantiation of those access control\n                        requirements present in the ST example used above. If\n                        the evaluator could not determine that the mechanism was\n                        accurately implemented because of a lack of detail, the\n                        evaluator would have to assess whether all of the\n                        SFR-enforcing subsystems have been identified, or if\n                        adequate detail had been provided for those\n                        subsystems.\n                    ', 'adv', 'adv_tds', 'adv_tds.1', 'adv_tds.1.2e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('adv_tds.2-1', ', ADV_TDS.2-2, The evaluator shall examine the TOE design to determine\n                        that the structure of the entire TOE is described in\n                        terms of subsystems.\n\n                        The evaluator ensures that all of the subsystems of the\n                        TOE are identified. This description of the TOE will be\n                        used as input to work unit, TDS_ANNEX, , where the parts of the TOE that make up\n                        the TSF are identified. That is, this requirement is on\n                        the entire TOE rather than on only the TSF.\n\n                        The TOE (and TSF) may be described in multiple layers of\n                        abstraction (i.e. subsystems and modules) Depending upon\n                        the complexity of the TOE, its design may be described\n                        in terms of subsystems and modules, as described in CC\n                        Part 3, .  At this\n                        level of assurance, the decomposition only need be at\n                        the ``subsystem\'\' level.\n\n                        In performing this activity, the evaluator examines\n                        other evidence presented for the TOE (e.g., ST, operator\n                        user guidance) to determine that the description of the\n                        TOE in such evidence is consistent with the description\n                        contained in the TOE design.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-10', '\n\n                        The evaluator shall examine the TOE design to determine\n                        that it is an accurate instantiation of all security\n                        functional requirements.\n\n                        The evaluator ensures that each security requirement\n                        listed in the TOE security functional requirements\n                        subclause of the ST has a corresponding design description\n                        in the TOE design that accurately details how the TSF\n                        meets that requirement. This requires that the evaluator\n                        identify a collection of subsystems that are responsible\n                        for implementing a given functional requirement, and\n                        then examine those subsystems to understand how the\n                        requirement is implemented. Finally, the evaluator would\n                        assess whether the requirement was accurately\n                        implemented.\n\n                        As an example, if the ST requirements specified a\n                        role-based access control mechanism, the evaluator would\n                        first identify the subsystems that contribute to this\n                        mechanism\'s implementation. This could be done by\n                        in-depth knowledge or understanding of the TOE design or\n                        by work done in the previous work unit. Note that this\n                        trace is only to identify the subsystems, and is not the\n                        complete analysis.\n\n                        The next step would be to understand what mechanism the\n                        subsystems implemented. For instance, if the design\n                        described an implementation of access control based on\n                        UNIX-style protection bits, the design would not be an\n                        accurate instantiation of those access control\n                        requirements present in the ST example used above. If\n                        the evaluator could not determine that the mechanism was\n                        accurately implemented because of a lack of detail, the\n                        evaluator would have to assess whether all of the\n                        SFR-enforcing subsystems have been identified, or if\n                        adequate detail had been provided for those\n                        subsystems.\n                    ', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.2e'),
('adv_tds.2-2', ', ADV_TDS.2-1, The evaluator shall examine the TOE design to determine\n                        that all subsystems of the TSF are identified.\n\n                        In work unit, AGD_PRE, all of\n                        the subsystems of the TOE were identified, and a\n                        determination made that the non-TSF subsystems were\n                        correctly characterised. Building on that work, the\n                        subsystems that were not characterised as non-TSF\n                        subsystems should be precisely identified. The evaluator\n                        determines that, of the hardware and software installed\n                        and configured according to the, guidance, each subsystem has been\n                        accounted for as either one that is part of the TSF, or\n                        one that is not.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-3', ', The evaluator shall examine the TOE design to determine\n                        that each SFR-non-interfering subsystem of the TSF is\n                        described such that the evaluator can determine that the\n                        subsystem is SFR-non-interfering.\n\n                        SFR-non-interfering subsystems do not need to be\n                        described in detail as to how they function in the\n                        system.  However, the evaluator makes a determination,\n                        based on the evidence provided by the developer, that\n                        the subsystems that do not have detailed descriptions\n                        are SFR-non-interfering.  Note that if the developer\n                        provides a uniform level of detailed documentation then\n                        this work unit will be largely satisfied, since the\n                        point of categorising the subsystems is to allow the\n                        developer to provide less information for\n                        SFR-non-interfering subsystems than for SFR-enforcing\n                        and SFR-supporting subsystems.\n\n                        An SFR-non-interfering subsystem is one on which the\n                        SFR-enforcing and SFR-supporting subsystems have no\n                        dependence; that is, they play no role in implementing\n                        SFR functionality.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-4', ', The evaluator shall examine the TOE design to determine\n                        that it provides a complete, accurate, and detailed\n                        description of the SFR-enforcing behaviour of the\n                        SFR-enforcing subsystems.\n\n                        The developer may designate subsystems as SFR-enforcing,\n                        SFR-supporting, and SFR non-interfering, but these\n                        ``tags\'\' are used only to describe the amount and type\n                        of information the developer must provide, and can be\n                        used to limit the amount of information the developer\n                        has to develop if their engineering process does not\n                        produce the documentation required. Whether the\n                        subsystems have been categorised by the developer or\n                        not, it is the\n                        evaluator\'s responsibility to determine that the\n                        subsystems have the appropriate information for their\n                        role (SFR-enforcing, etc.) in the TOE, and to obtain the\n                        appropriate information from the developer should the\n                        developer fail to provide the required information for a\n                        particular subsystem.\n\n                        SFR-enforcing behaviour refers to\n                        how\n                        a\n                        subsystem provides the functionality that implements an\n                        SFR.  While not at the level of an algorithmic\n                        description, a detailed description of behaviour\n                        typically discusses how the functionality is provided in\n                        terms of what key data and data structures are, what\n                        control relationships exist within a subsystem, and how\n                        these elements work together to provide the\n                        SFR-enforcing behaviour.  Such a description also\n                        references SFR-supporting behaviour, which the evaluator\n                        should consider in performing subsequent work\n                        units.\n\n                        To determine completeness and accuracy, the evaluator\n                        examines other information available (e.g., functional\n                        specification, security architecture description). Descriptions of\n                        functionality in these documents should be consistent\n                        with what is provided for evidence for this work unit.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-5', ', The evaluator shall examine the TOE design to determine that it\n                        provides a complete and accurate high-level description of the\n                        SFR-supporting and SFR-non-interfering behaviour of the\n                        SFR-enforcing subsystems.\n\n                        The developer may designate subsystems as SFR-enforcing,\n                        SFR-supporting, and SFR non-interfering, but these\n                        ``tags\'\' are used only to describe the amount and type\n                        of information the developer must provide, and can be\n                        used to limit the amount of information the developer\n                        has to develop if their engineering process does not\n                        produce the documentation required. Whether the\n                        subsystems have been categorised by the developer or\n                        not, it is the\n                        evaluator\'s responsibility to determine that the\n                        subsystems have the appropriate information for their\n                        role (SFR-enforcing, etc.) in the TOE, and to obtain the\n                        appropriate information from the developer should the\n                        developer fail to provide the required information for a\n                        particular subsystem.\n\n                        In contrast to the previous work unit, this work unit calls for\n                        the evaluator to assess the information provided for\n                        SFR-enforcing subsystems that is SFR-supporting or\n                        SFR-non-interfering.  The goal of this assessment is two-fold.\n                        First, it should provide the evaluator greater understanding of\n                        the way each subsystem works.  Second, the evaluator determines\n                        that all SFR-enforcing behaviour exhibited by a subsystem has\n                        been described.  Unlike the previous work unit, the information\n                        provided for the SFR-supporting or SFR-non-interfering behaviour\n                        does not have to be as detailed as that provided by the\n                        SFR-enforcing behaviour.  For example, data structures or data\n                        items that do not pertain to SFR-enforcing functionality will\n                        likely not need to be described in detail, if at all.  It is the\n                        evaluator\'s determination, however, with respect to what\n                        ``high-level\'\' means for a particular TOE, and the evaluator\n                        obtains enough information from the developer (even if it turns\n                        out to be equivalent to information provided for the parts of\n                        the subsystem that are SFR-enforcing) to make a sound verdict\n                        for this work unit.\n\n                        The evaluator is cautioned, however, that ``perfect\'\'\n                        assurance is not a goal nor required by this work unit,\n                        so judgement will have to be exercised in determine the\n                        amount and composition of the evidence required to make\n                        a verdict on this work unit.\n\n                        To determine completeness and accuracy, the evaluator examines\n                        other information available (e.g., functional specification,\n                        security architecture description).  Descriptions of functionality in these\n                        documents should be consistent with what is provided for\n                        evidence for this work unit.  In particular, the functional\n                        specification should be used to determine that the behaviour\n                        required to implement the TSF Interfaces described by the\n                        functional specification are completely described by the\n                        subsystem, since the behaviour will either be SFR-enforcing,\n                        SFR-supporting or SFR-non-interfering.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-6', ', ADV_TDS.2-7, The evaluator shall examine the TOE design to determine\n                        that it provides a complete and accurate high-level\n                        description of the behaviour of the SFR-supporting\n                        subsystems.\n\n                        The developer may designate subsystems as SFR-enforcing,\n                        SFR-supporting, and SFR non-interfering, but these\n                        ``tags\'\' are used only to describe the amount and type\n                        of information the developer must provide, and can be\n                        used to limit the amount of information the developer\n                        has to develop if their engineering process does not\n                        produce the documentation required. Whether the\n                        subsystems have been categorised by the developer or\n                        not, it is the\n                        evaluator\'s responsibility to determine that the\n                        subsystems have the appropriate information for their\n                        role (SFR-enforcing, etc.) in the TOE, and to obtain the\n                        appropriate information from the developer should the\n                        developer fail to provide the required information for a\n                        particular subsystem.\n\n                        In contrast to the previous two work units, this work\n                        unit calls for the developer to provide (and the\n                        evaluator to assess) information about SFR supporting\n                        subsystems. Such subsystems should be referenced by the\n                        descriptions of the SFR-enforcing subsystems, as well as\n                        by the descriptions of interactions in work unit, .  The goal of evaluator\'s\n                        assessment, like that for the previous work unit, is\n                        two-fold.  First, it should provide the evaluator with\n                        an understanding of the way each SFR-supporting\n                        subsystem works.  Second, the evaluator determines that\n                        the behaviour is described in enough detail so that the\n                        way in which the subsystem supports the SFR-enforcing\n                        behaviour is clear, and that the behaviour is not itself\n                        SFR-enforcing.  The information provided for\n                        SFR-supporting subsystem\'s behaviour does not have to be\n                        as detailed as that provided by the SFR-enforcing\n                        behaviour.  For example, data structures or data items\n                        that do not pertain to SFR-enforcing functionality will\n                        likely not need to be described in detail, if at all.\n                        It is the evaluator\'s determination, however, with\n                        respect to what ``high-level\'\' means for a particular\n                        TOE, and the evaluator obtains enough information from\n                        the developer (even if it turns out to be equivalent to\n                        information provided for the parts of the subsystem that\n                        are SFR-enforcing) to make a sound verdict for this work\n                        unit.\n\n                        The evaluator is cautions, however, that ``perfect\'\'\n                        assurance is not a goal nor required by this work unit,\n                        so judgement will have to be exercised in determine the\n                        amount and composition of the evidence required to make\n                        a verdict on this work unit.\n\n                        To determine completeness and accuracy, the evaluator\n                        examines other information available (e.g., functional\n                        specification, security architecture description,\n                        implementation representation).  Descriptions of\n                        functionality in these documents should be consistent\n                        with what is provided for evidence for this work unit.\n                        In particular, the functional specification should be\n                        used to determine that the behaviour required to\n                        implement the TSF Interfaces described by the functional\n                        specification are completely described by the\n                        subsystem.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-7', ', The evaluator shall examine the TOE design to determine\n                        that interactions between the subsystems of the TSF are\n                        described.\n\n                        The goal of describing the interactions between the subsystems\n                        is to help provide the reader a better understanding of how the\n                        TSF performs it functions. These interactions do not need to be\n                        characterised at the implementation level (e.g., parameters\n                        passed from one routine in a subsystem to a routine in a\n                        different subsystem; global variables; hardware signals (e.g.,\n                        interrupts) from a hardware subsystem to an interrupt-handling\n                        subsystem), but the data elements identified for a particular\n                        subsystem that are going to be used by another subsystem need to\n                        be covered in this discussion.  Any control relationships\n                        between subsystems (e.g., a subsystem responsible for\n                        configuring a rule base for a firewall system and the subsystem\n                        that actually implements these rules) should also be\n                        described.\n\n                        It should be noted while the developer should characterise all\n                        interactions between subsystems, the evaluators need to use\n                        their own judgement in assessing the completeness of the\n                        description. If the reason for an interaction is unclear, or if\n                        there are SFR-related interactions (discovered, for instance, in\n                        examining the descriptions of subsystem behaviour) that do not\n                        appear to be described, the evaluator ensures that this\n                        information is provided by the developer. However, if the\n                        evaluator can determine that interactions among a particular set\n                        of subsystems, while incompletely described by the developer,\n                        will not aid in understanding the overall functionality nor\n                        security functionality provided by the TSF, then the evaluator\n                        may choose to consider the description sufficient, and not\n                        pursue completeness for its own sake.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-8', ', The evaluator shall examine the TOE design to determine\n                        that it contains a complete and accurate mapping from\n                        the TSFI described in the functional specification to\n                        the subsystems of the TSF described in the TOE\n                        design.\n\n                        The subsystems described in the TOE design provide a\n                        description of how the TSF works at a detailed level for\n                        SFR-enforcing portions of the TSF, and at a higher level\n                        for other portions of the TSF. The TSFI provide a\n                        description of how the implementation is exercised. The\n                        evidence from the developer identifies the subsystem\n                        that is initially involved when an operation is\n                        requested at the TSFI, and identify the various\n                        subsystems that are primarily responsible for\n                        implementing the functionality. Note that a complete\n                        ``call tree\'\' for each TSFI is not required for this\n                        work unit.\n\n                        The evaluator assesses the completeness of the mapping\n                        by ensuring that all of the TSFI map to at least one\n                        subsystem. The verification of accuracy is more\n                        complex.\n\n                        The first aspect of accuracy is that each TSFI is mapped\n                        to a subsystem at the TSF boundary. This determination\n                        can be made by reviewing the subsystem description and\n                        interactions, and from this information determining its\n                        place in the architecture. The next aspect of accuracy\n                        is that the mapping makes sense. For instance, mapping a\n                        TSFI dealing with access control to a subsystem that\n                        checks passwords is not accurate. The evaluator should\n                        again use judgement in making this determination. The\n                        goal is that this information aids the evaluator in\n                        understanding the system and implementation of the SFRs,\n                        and ways in which entities at the TSF boundary can\n                        interact with the TSF. The bulk of the assessment of\n                        whether the SFRs are described accurately by the\n                        subsystems is performed in other work units.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.1e'),
('adv_tds.2-9', 'The evaluator shall examine the TOE security functional\n                        requirements and the TOE design, to determine that all\n                        ST security functional requirements are covered by the\n                        TOE design.\n\n                        The evaluator may construct a map between the TOE security\n                        functional requirements and the TOE design.  This map will\n                        likely be from a functional requirement to a set of\n                        subsystems. Note that this map may have to be at a level of\n                        detail below the component or even element level of the\n                        requirements, because of operations (assignments, refinements,\n                        selections) performed on the functional requirement by the ST\n                        author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were implemented in specific places within fifteen\n                        modules, it would be inadequate for the evaluator to map, FDP_ACC.1, to one subsystem and\n                        claim the work unit had been completed. Instead, the\n                        evaluator would map, FDP_ACC.1, (rule 1) to subsystem A, behaviours x, y, and z;, FDP_ACC.1, (rule 2) to subsystem A,\n                        behaviours x, p, and q; etc.', 'adv', 'adv_tds', 'adv_tds.2', 'adv_tds.2.2e'),
('adv_tds.3-1', ', ADV_TDS.3-2, The evaluator shall examine the TOE design to determine\n                        that the structure of the entire TOE is described in\n                        terms of subsystems.\n\n                        The evaluator ensures that all of the subsystems of the\n                        TOE are identified. This description of the TOE will be\n                        used as input to work unit, TDS_ANNEX, , where the parts of the TOE that make up\n                        the TSF are identified. That is, this requirement is on\n                        the entire TOE rather than on only the TSF.\n\n                        The TOE (and TSF) may be described in multiple layers of\n                        abstraction (i.e. subsystems and modules). Depending upon the\n                        complexity of the TOE, its design may be described in terms of\n                        subsystems and modules, as described in CC Part 3, ADV_TDS.3-2, .  For a very simple TOE that can be\n                        described solely at the ``module\'\' level (see, ), this work unit is not\n                        applicable and therefore considered to be satisfied.\n\n                        In performing this activity, the evaluator examines\n                        other evidence presented for the TOE (e.g., ST, operator\n                        user guidance) to determine that the description of the\n                        TOE in such evidence is consistent with the description\n                        contained in the TOE design.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-10', ', ADV_TDS.3-10, The evaluator shall examine the TOE design to determine\n                        that the description of the interfaces presented by each\n                        SFR-enforcing module contain an accurate and complete\n                        description of the SFR-related parameters, the\n                        invocation conventions for each interface, and any\n                        values returned directly by the interface.\n\n                        The SFR-related interfaces of a module are those\n                        interfaces used by other modules as a means to invoke\n                        the SFR-related operations provided, and to provide\n                        inputs to or receive outputs from the module. The\n                        purpose in the specification of these interfaces is to\n                        permit the exercise of them during testing.\n                        Inter-module interfaces that are not SFR-related need\n                        not be specified or described, since they are not a\n                        factor in testing. Likewise, other internal interfaces\n                        that are not a factor in traversing SFR-related paths of\n                        execution (such as those internal paths that are fixed)\n                        need not be specified or described, since they are not a factor in testing.\n\n                        SFR-related interfaces are described in terms of how\n                        they are invoked, and any values that are returned. This\n                        description would include a list of SFR-related\n                        parameters, and descriptions of these parameters. Note\n                        that global data would also be considered parameters if\n                        used by the module (either as inputs or outputs) when\n                        invoked. If a parameter were expected to take on a set\n                        of values (e.g., a ``flag\'\' parameter), the complete set\n                        of values the parameter could take on that would have an\n                        effect on module processing would be\n                        specified. Likewise, parameters representing data\n                        structures are described such that each field of the\n                        data structure is identified and described. Note that\n                        different programming languages may have additional\n                        ``interfaces\'\' that would be non-obvious; an example\n                        would be operator/function overloading in C++. This\n                        ``implicit interface\'\' in the class description would\n                        also be described as part of the low-level TOE\n                        design. Note that although a module could present only\n                        one interface, it is more common that a module presents\n                        a small set of related interfaces.\n\n                        In terms of the assessment of parameters (inputs and\n                        outputs) to a module, any use of global data must also\n                        be considered. A module ``uses\'\' global data if it\n                        either reads or writes the data. In order to assure the\n                        description of such parameters (if used) is complete,\n                        the evaluator uses other information provided about the\n                        module in the TOE design (interfaces, algorithmic\n                        description, etc.), as well as the description of the\n                        particular set of global data assessed in work unit, . For instance, the\n                        evaluator could first determine the processing the\n                        module performs by examining its function and interfaces\n                        presented (particularly the parameters of the\n                        interfaces). They could then check to see if the\n                        processing appears to ``touch\'\' any of the global data\n                        areas identified in the TOE design. The evaluator then\n                        determines that, for each global data area that appears\n                        to be ``touched\'\', that global data area is listed as a\n                        means of input or output by the module the evaluator is\n                        examining.\n\n                        Invocation conventions are a programming-reference-type\n                        description that one could use to correctly invoke a\n                        module\'s interface if one were writing a program to make\n                        use of the module\'s functionality through that\n                        interface. This includes necessary inputs and outputs,\n                        including any set-up that may need to be performed with\n                        respect to global variables.\n\n                        Values returned through the interface refer to values\n                        that are either passed through parameters or messages;\n                        values that the function call itself returns in the\n                        style of a ``C\'\' program function call; or values passed\n                        through global means (such as certain error routines in\n                        *ix-style operating systems).\n\n                        In order to assure the description is complete, the\n                        evaluator uses other information provided about the\n                        module in the TOE design (e.g., algorithmic description,\n                        global data used) to ensure that it appears all data\n                        necessary for performing the functions of the module is\n                        presented to the module, and that any values that other\n                        modules expect the module under examination to provide\n                        are identified as being returned by the module. The\n                        evaluator determines accuracy by ensuring that the\n                        description of the processing matches the information\n                        listed as being passed to or from an interface.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-11', ', ADV_TDS.3.10C, The evaluator shall examine the TOE design to determine that\n                        SFR-supporting and SFR-non-interfering modules are correctly\n                        categorised.\n\n                        In the cases where the developer has provided different amounts\n                        of information for different modules, an implicit categorisation\n                        has been done. That is, modules (for instance) with detail\n                        presented on their SFR-related interfaces (see, ADV_TDS.3.2D, ) are candidate SFR-enforcing\n                        modules, although examination by the evaluator may lead to a\n                        determination that some set of them are SFR-supporting or\n                        SFR-non-interfering. Those with only a description of their\n                        purpose and interaction with other modules (for instance) are\n                        ``implicitly categorised\'\' as SFR-supporting or\n                        SFR-non-interfering.\n\n                        In these cases, a key focus of the evaluator for this work unit\n                        is attempting to determine from the evidence provided for each\n                        module implicitly categorised as SFR-supporting or\n                        SFR-non-interfering and the evaluation information about other\n                        modules (in the TOE design, the functional specification, the\n                        security architecture description, and the operational user\n                        guidance), whether the module is indeed SFR-supporting or\n                        SFR-non-interfering. At this level of assurance some error\n                        should be tolerated; the evaluator does not have to be\n                        absolutely sure that a given module is SFR-supporting or\n                        SFR-non-interfering, even though it is labelled as\n                        such. However, if the evidence provided indicates that a\n                        SFR-supporting or SFR-non-interfering module is SFR-enforcing,\n                        the evaluator requests additional information from the developer\n                        in order to resolve the apparent inconsistency. For instance,\n                        suppose the documentation for Module A (an SFR-enforcing module)\n                        indicates that it calls Module B to perform an access check on a\n                        certain type of construct. When the evaluator examines the\n                        information associated with Module B, they find that all the\n                        developer has provided is a purpose and a set of interactions\n                        (thus implicitly categorising Module B as SFR-supporting or\n                        SFR-non-interfering). On examining the purpose and interactions\n                        from Module A, the evaluator finds no mention of Module B\n                        performing any access checks, and Module A is not listed as a\n                        module with which Module B interacts. At this point the\n                        evaluator should approach the developer to resolve the\n                        discrepancies between the information provided in Module A and\n                        that in Module B.\n\n                        Another example would be where the evaluator examines the\n                        mapping of the TSFI to the modules as provided by, . This examination shows that\n                        Module C is associated with an SFR requiring identification of\n                        the user. Again, when the evaluator examines the information\n                        associated with Module C, they find that all the developer has\n                        provided is a purpose and a set of interactions (thus implicitly\n                        categorising Module C as SFR-supporting or\n                        SFR-non-interfering). Examining the purpose and interactions\n                        presented for Module C, the evaluator is unable to determine why\n                        Module C, listed as mapping to a TSFI concerned with user\n                        identification, would not be classified as SFR-enforcing. Again,\n                        the evaluator should approach the developer to resolve this\n                        discrepancy.\n\n\n                        A final example is from the opposite point of view. As\n                        before, the developer has provided information associated\n                        with Module D consisting of a purpose and a set of\n                        interactions (thus implicitly categorising Module D as\n                        SFR-supporting or SFR-non-interfering). The evaluator\n                        examines all of the evidence provided, including the purpose\n                        and interactions for Module D. The purpose appears to give a\n                        meaningful description of Module D\'s function in the TOE,\n                        the interactions are consistent with that description, and\n                        there is nothing to indicate that Module D is\n                        SFR-enforcing. In this case, the evaluator should not demand\n                        more information about Module D ``just be to sure\'\' it is\n                        correctly categorised. The developer has met their\n                        obligations and the resulting assurance the evaluator has in\n                        the implicit categorisation of Module D is (by definition)\n                        appropriate for this assurance level.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-12', ', The evaluator shall examine the TOE design to determine that the\n                        description of the purpose of each SFR-supporting or\n                        SFR-non-interfering module is complete and accurate.\n\n                        The description of the purpose of a module indicates\n                        what function the module is fulfilling.  From the\n                        description, the evaluator should be able to obtain a\n                        general idea of the module\'s role. In order to assure\n                        the description is complete, the evaluator uses the\n                        information provided about the module\'s interactions\n                        with other modules to assess whether the reasons for the\n                        module being called are consistent with the module\'s\n                        purpose. If the interaction description contains\n                        functionality that is not apparent from, or in conflict\n                        with, the module\'s purpose, the evaluator needs to\n                        determine whether the problem is one of accuracy or of\n                        completeness. The evaluator should be wary of purposes\n                        that are too short, since meaningful analysis based on a\n                        one-sentence purpose is likely to be impossible.\n\n                        Because the modules are at such a low level, it may be difficult determine\n                        completeness and accuracy impacts from other documentation,\n                        such as administrative guidance, the functional specification,\n                        the security architecture description, or the TSF internals document.\n                        However, the evaluator uses the information present in those documents\n                        to the extent possible to help ensure that the function is accurately\n                        and completely described. This analysis can be aided by the analysis\n                        performed for the work units for the ADV_TDS.3.10C element,\n                        which maps the TSFI in the functional specification to the modules of the TSF.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-13', ', ADV_TDS.3.10C, The evaluator shall examine the TOE design to determine that the\n                        description of a SFR-supporting or SFR-non-interfering module\'s\n                        interaction with other modules is complete and accurate.\n\n                        It is important to note that, in terms of the Part 3\n                        requirement and this work unit, the term\n\n                        interaction\n                        is intended to convey less\n                        rigour than\n                        interface\n                        . An interaction\n                        does not need to be characterised at the implementation\n                        level (e.g., parameters passed from one routine in a\n                        module to a routine in a different module; global\n                        variables; hardware signals (e.g., interrupts) from a\n                        hardware subsystem to an interrupt-handling subsystem),\n                        but the data elements identified for a particular module\n                        that are going to be used by another module should be\n                        covered in this discussion.  Any control relationships\n                        between modules (e.g., a module responsible for\n                        configuring a rule base for a firewall system and the\n                        module that actually implements these rules) should also\n                        be described.\n\n                        Because the modules are at such a low level, it may be difficult\n                        determine completeness and accuracy impacts from other\n                        documentation, such as operational user guidance, the functional\n                        specification, the security architecture description, or the TSF\n                        internals document. However, the evaluator uses the information\n                        present in those documents to the extent possible to help ensure\n                        that the function is accurately and completely described. This\n                        analysis can be aided by the analysis performed for the work\n                        units for the, element,\n                        which maps the TSFI in the functional specification to the\n                        modules of the TSF.\n\n                        A module\'s interaction with other modules goes beyond\n                        just a call-tree-type document. The interaction is\n                        described from a functional perspective of why a module\n                        interacts with other modules. The module\'s purpose\n                        describes what functions the module provides to other\n                        modules; the interactions should describe what the\n                        module depends on from other modules in order to\n                        accomplish this function.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-14', ', The evaluator shall examine the TOE design to determine\n                        that it contains a complete and accurate mapping from\n                        the TSFI described in the functional specification to\n                        the modules of the TSF described in the TOE\n                        design.\n\n                        The modules described in the TOE design provide a description of\n                        the implementation of the TSF. The TSFI provide a description of\n                        how the implementation is exercised. The evidence from the\n                        developer identifies the module that is initially invoked when\n                        an operation is requested at the TSFI, and identifies the chain\n                        of modules invoked up to the module that is primarily\n                        responsible for implementing the functionality. However, a\n                        complete call tree for each TSFI is not required for this work\n                        unit. The cases in which more than one module would have to be\n                        identified are where there are ``entry point\'\' modules or\n                        wrapper modules that have no functionality other than\n                        conditioning inputs or de-multiplexing an input. Mapping to one\n                        of these modules would not provide any useful information to the\n                        evaluator.\n\n                        The evaluator assesses the completeness of the mapping\n                        by ensuring that all of the TSFI map to at least one\n                        module. The verification of accuracy is more\n                        complex.\n\n                        The first aspect of accuracy is that each TSFI is mapped to a module at the TSF boundary.\n                        This determination can be made by reviewing the module description and its\n                        interfaces/interactions. The next aspect of accuracy is that each TSFI identifies\n                        a chain of modules between the initial module identified and a module\n                        that is primarily responsible for implementing the function presented at the TSF.\n                        Note that this may be the initial module, or there may be several modules,\n                        depending on how much pre-conditioning of the inputs is done. It should be noted that\n                        one indicator of a pre-conditioning module is that it is invoked for a large number\n                        of the TSFI, where the TSFI are all of similar type (e.g., system call).\n                        The final aspect of accuracy is that the mapping makes sense. For instance,\n                        mapping a TSFI dealing with access control to a module that checks passwords\n                        is not accurate. The evaluator should again use judgement in making this determination.\n                        The goal is that this information aids the evaluator in understanding the system and\n                        implementation of the SFRs, and ways in which entities at the TSF boundary can interact\n                        with the TSF. The bulk of the assessment of whether the SFRs are described accurately\n                        by the modules is performed in other work units.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-15', 'The evaluator shall examine the TOE security functional\n                        requirements and the TOE design, to determine that all\n                        ST security functional requirements are covered by the\n                        TOE design.\n\n                        The evaluator may construct a map between the TOE\n                        security functional requirements and the TOE design.\n                        This map will likely be from a functional requirement to\n                        a set of subsystems, and later to modules. Note that this map may have to be\n                        at a level of detail below the component or even element\n                        level of the requirements, because of operations\n                        (assignments, refinements, selections) performed on the\n                        functional requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were implemented in specific places within fifteen\n                        modules, it would be inadequate for the evaluator to map, FDP_ACC.1, to one subsystem and\n                        claim the work unit had been completed. Instead, the\n                        evaluator would map, FDP_ACC.1, (rule 1) to modules x, y, and z of subsystem A;, FDP_ACC.1, (rule 2) to modules x, p, and q of subsystem A; etc.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.2e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('adv_tds.3-16', '\n\n                        The evaluator shall examine the TOE design to determine\n                        that it is an accurate instantiation of all security\n                        functional requirements.\n\n                        The evaluator may construct a map between the TOE security\n                        functional requirements and the TOE design.  This map will\n                        likely be from a functional requirement to a set of\n                        subsystems. Note that this map may have to be at a level of\n                        detail below the component or even element level of the\n                        requirements, because of operations (assignments, refinements,\n                        selections) performed on the functional requirement by the ST\n                        author.\n\n                        As an example, if the ST requirements specified a\n                        role-based access control mechanism, the evaluator would\n                        first identify the subsystems, and modules that contribute to this\n                        mechanism\'s implementation. This could be done by\n                        in-depth knowledge or understanding of the TOE design or\n                        by work done in the previous work unit. Note that this\n                        trace is only to identify the subsystems, and modules, and is not the\n                        complete analysis.\n\n                        The next step would be to understand what mechanism the\n                        subsystems, and modules implemented. For instance, if the design\n                        described an implementation of access control based on\n                        UNIX-style protection bits, the design would not be an\n                        accurate instantiation of those access control\n                        requirements present in the ST example used above. If\n                        the evaluator could not determine that the mechanism was\n                        accurately implemented because of a lack of detail, the\n                        evaluator would have to assess whether all of the\n                        SFR-enforcing subsystems and modules have been identified, or if\n                        adequate detail had been provided for those subsystems and modules.\n                    ', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.2e'),
('adv_tds.3-2', ', The evaluator shall examine the TOE design to determine\n                        that the entire TSF is described in terms of\n                        modules.\n\n                        The evaluator will examine the modules for specific\n                        properties in other work units; in this work unit the\n                        evaluator determines that the modular description covers\n                        the entire TSF, and not just a portion of the TSF. The\n                        evaluator uses other evidence provided for the\n                        evaluation (e.g., functional specification,\n                        security architecture description) in making this\n                        determination. For example, if the\n                        functional specification contains interfaces to\n                        functionality that does not appear to be described in\n                        the TOE design description, it may be the case that a\n                        portion of the TSF has not been included\n                        appropriately. Making this determination will likely be\n                        an iterative process, where as more analysis is done on\n                        the other evidence, more confidence can be gained with\n                        respect to the completeness of the documentation.\n\n                        Unlike subsystems, modules describe the implementation in a level of detail that can serve\n                        as a guide to reviewing the implementation representation. A description of a module should\n                        be such that one could create an implementation of the module from the description, and the\n                        resulting implementation would be 1) identical to the actual TSF implementation in terms of\n                        the interfaces presented, 2) identical in the use of interfaces that are mentioned in the\n                        design, and 3) functionally equivalent to the description of the purpose of the TSF module.\n                        For instance, RFC 793 provides a high-level description of the TCP protocol. It is\n                        necessarily implementation independent. While it provides a wealth of detail, it is, a suitable design description because it is not specific to an implementation. An actual\n                        implementation can add to the protocol specified in the RFC, and implementation choices (for\n                        instance, the use of global data vs. local data in various parts of the implementation) may\n                        have an impact on the analysis that is performed. The design description of the TCP module would\n                        list the interfaces presented by the implementation (rather than just those defined in RFC 793),\n                        as well as an algorithm description of the processing associated with the modules implementing\n                        TCP (assuming it was part of the TSF).', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-3', ', ADV_TDS.3-1, The evaluator shall examine the TOE design to determine\n                        that all subsystems of the TSF are identified.\n\n                        If the design is presented solely in terms of modules,\n                        then subsystems in these requirements are equivalent to\n                        modules and the activity should be performed at the\n                        module level.\n\n                        In work unit, AGD_PRE, all of\n                        the subsystems of the TOE were identified, and a\n                        determination made that the non-TSF subsystems were\n                        correctly characterised. Building on that work, the\n                        subsystems that were not characterised as non-TSF\n                        subsystems should be precisely identified. The evaluator\n                        determines that, of the hardware and software installed\n                        and configured according to the, guidance, each subsystem has been\n                        accounted for as either one that is part of the TSF, or\n                        one that is not.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-4', ', The evaluator shall examine the TOE design to determine\n                        that each subsystem of the TSF describes its role in\n                        the enforcement of SFRs described in the ST.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit will be considered satisfied by the\n                        assessment done in subsequent work units; no explicit\n                        action on the part of the evaluator is necessary in this\n                        case.\n\n                        On systems that are complex enough to warrant a\n                        subsystem-level description of the TSF in addition to\n                        the modular description, the goal of the subsystem-level\n                        description is to give the evaluator context for the\n                        modular description that follows. Therefore, the\n                        evaluator ensures that the subsystem-level description\n                        contains a description of how the security functional\n                        requirements are achieved in the design, but at a level\n                        of abstraction above the modular description. This\n                        description should discuss the mechanisms used at a\n                        level that is aligned with the module description; this\n                        will provide the evaluators the road map needed to\n                        intelligently assess the information contained in the\n                        module description. A well-written set of subsystem\n                        descriptions will help guide the evaluator in\n                        determining the modules that are most important to\n                        examine, thus focusing the evaluation activity on the\n                        portions of the TSF that have the most relevance with\n                        respect to the enforcement of the SFRs.\n\n                        The evaluator ensures that all subsystems of the TSF\n                        have a description. While the description should focus\n                        on the role that the subsystem plays in enforcing or\n                        supporting the implementation of the SFRs, enough\n                        information must be present so that a context for\n                        understanding the SFR-related functionality is\n                        provided.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-5', '\n                    The evaluator shall examine the TOE design to determine that\n                    each SFR-non-interfering subsystem of the TSF is described such that\n                    the evaluator can determine that the subsystem is SFR-non-interfering.\n                    If the design is presented solely in terms of modules, then this work unit\n                    will be considered satisfied by the assessment done in subsequent work units;\n                    no explicit action on the part of the evaluator is necessary in this case.\n                    An SFR-non-interfering subsystem is one on which the SFR-enforcing and\n                    SFR-supporting subsystems have no dependence; that is, they play no role\n                    in implementing SFR functionality.\n                    The evaluator ensures that all subsystems of the TSF have a description.\n                    While the description should focus on the role that the subsystem do not plays\n                    in enforcing or supporting the implementation of the SFRs, enough information\n                    must be present so that a context for understanding the SFR-non-interfering\n                    functionality is provided.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-6', ', The evaluator shall examine the TOE design to determine\n                        that interactions between the subsystems of the TSF are\n                        described.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit will be considered satisfied by the\n                        assessment done in subsequent work units; no explicit\n                        action on the part of the evaluator is necessary in this\n                        case.\n\n                        On systems that are complex enough to warrant a subsystem-level\n                        description of the TSF in addition to the modular description,\n                        the goal of describing the interactions between the subsystems\n                        is to help provide the reader a better understanding of how the\n                        TSF performs its functions. These interactions do not need to be\n                        characterised at the implementation level (e.g., parameters\n                        passed from one routine in a subsystem to a routine in a\n                        different subsystem; global variables; hardware signals (e.g.,\n                        interrupts) from a hardware subsystem to an interrupt-handling\n                        subsystem), but the data elements identified for a particular\n                        subsystem that are going to be used by another subsystem should\n                        be covered in this discussion.  Any control relationships\n                        between subsystems (e.g., a subsystem responsible for\n                        configuring a rule base for a firewall system and the subsystem\n                        that actually implements these rules) should also be described.\n\n                        It should be noted while the developer should characterise all\n                        interactions between subsystems, the evaluators need to use\n                        their own judgement in assessing the completeness of the\n                        description. If the reason for an interaction is unclear, or if\n                        there are SFR-related interactions (discovered, for instance, in\n                        examining the module-level documentation) that do not appear to\n                        be described, the evaluator ensures that this information is\n                        provided by the developer. However, if the evaluator can\n                        determine that interactions among a particular set of\n                        subsystems, while incompletely described by the developer, and a\n                        complete description will not aid in understanding the overall\n                        functionality nor security functionality provided by the TSF,\n                        then the evaluator may choose to consider the description\n                        sufficient, and not pursue completeness for its own sake.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-7', ', The evaluator shall examine the TOE design to determine\n                        that the mapping between the subsystems of the TSF and\n                        the modules of the TSF is complete.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit is considered satisfied.\n\n                        For TOEs that are complex enough to warrant a\n                        subsystem-level description of the TSF in addition to\n                        the modular description, the developer provides a simple\n                        mapping showing how the modules of the TSF are allocated\n                        to the subsystems. This will provide the evaluator a\n                        guide in performing their module-level assessment. To\n                        determine completeness, the evaluator examines each\n                        mapping and determines that all subsystems map to at\n                        least one module, and that all modules map to exactly\n                        one subsystem.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-8', ', The evaluator shall examine the TOE design to determine\n                        that the mapping between the subsystems of the TSF and\n                        the modules of the TSF is accurate.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit is considered satisfied.\n\n                        For TOEs that are complex enough to warrant a\n                        subsystem-level description of the TSF in addition to\n                        the modular description, the developer provides a simple\n                        mapping showing how the modules of the TSF are allocated\n                        to the subsystems. This will provide the evaluator a\n                        guide in performing their module-level assessment.  The\n                        evaluator may choose to check the accuracy of the\n                        mapping in conjunction with performing other work\n                        units. An ``inaccurate\'\' mapping is one where the module\n                        is mistakenly associated with a subsystem where its\n                        functions are not used within the subsystem. Because the\n                        mapping is intended to be a guide supporting more\n                        detailed analysis, the evaluator is cautioned to apply\n                        appropriate effort to this work unit. Expending\n                        extensive evaluator resources verifying the accuracy of\n                        the mapping is not necessary. Inaccuracies that lead to\n                        mis-understandings related to the design that are\n                        uncovered as part of this or other work units are the\n                        ones that should be associated with this work unit and\n                        corrected.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.3-9', ', ADV_ARC, The evaluator shall examine the TOE design to determine\n                        that the description of the purpose of each\n                        SFR-enforcing module and relationship with other modules is complete and accurate.\n\n                        The developer may designate modules as SFR-enforcing,\n                        SFR-supporting, and SFR non-interfering, but these\n                        ``tags\'\' are used only to describe the amount and type\n                        of information the developer must provide, and can be\n                        used to limit the amount of information the developer\n                        has to develop if their engineering process does not\n                        produce the documentation required. Whether the\n                        modules have been categorised by the developer or\n                        not, it is the\n                        evaluator\'s responsibility to determine that the\n                        modules have the appropriate information for their\n                        role (SFR-enforcing, etc.) in the TOE, and to obtain the\n                        appropriate information from the developer should the\n                        developer fail to provide the required information for a\n                        particular module.\n\n                        The purpose of a module provides a description\n                        indicating what function the module is fulfilling.  A\n                        word of caution to evaluator is in order. The focus of\n                        this work unit should be to provide the evaluator an\n                        understanding of how the module works so that\n                        determinations can be made about the soundness of the\n                        implementation of the SFRs, as well as to support\n                        architectural analysis performed for, ADV_TDS.3.10C, component. As long as the evaluator has a\n                        sound understanding of the module\'s operation, and its\n                        relationship to other modules and the TOE as a whole,\n                        the evaluator should consider the objective of the work\n                        achieved and not engage in a documentation exercise for\n                        the developer (by requiring, for example, a complete\n                        algorithmic description for a self-evident\n                        implementation representation).\n                        Because the modules are at such a low level, it may be difficult\n                        determine completeness and accuracy impacts from other\n                        documentation, such as operational user guidance, the functional\n                        specification, the TSF internals, or the security architecture\n                        description. However, the evaluator uses the information present\n                        in those documents to the extent possible to help ensure that\n                        the purpose is accurately and completely described. This\n                        analysis can be aided by the analysis performed for the work\n                        units for the, element,\n                        which maps the TSFI in the functional specification to the\n                        modules of the TSF.', 'adv', 'adv_tds', 'adv_tds.3', 'adv_tds.3.1e'),
('adv_tds.4-1', ', ADV_TDS.4-4, The evaluator shall examine the TOE design to determine\n                        that the structure of the entire TOE is described in\n                        terms of subsystems.\n\n                        The evaluator ensures that all of the subsystems of the\n                        TOE are identified. This description of the TOE will be\n                        used as input to work unit, TDS_ANNEX, , where the parts of the TOE that make up\n                        the TSF are identified. That is, this requirement is on\n                        the entire TOE rather than on only the TSF.\n\n                        The TOE (and TSF) may be described in multiple layers of\n                        abstraction (i.e. subsystems and modules) Depending upon\n                        the complexity of the TOE, its design may be described\n                        in terms of subsystems and modules, as described in CC\n                        Part 3, ADV_TDS.4-2, .  For a very\n                        simple TOE that can be described solely at the\n                        ``module\'\' level (see, ), this work unit is not applicable and\n                        therefore considered to be satisfied.\n\n                        In performing this activity, the evaluator examines\n                        other evidence presented for the TOE (e.g., ST, operator\n                        user guidance) to determine that the description of the\n                        TOE in such evidence is consistent with the description\n                        contained in the TOE design.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-10', ', The evaluator shall examine the TOE design to determine\n                        that the mapping between the subsystems of the TSF to\n                        the modules of the TSF is accurate.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit is considered satisfied.\n\n                        For TOEs that are complex enough to warrant a\n                        subsystem-level description of the TSF in addition to\n                        the modular description, the developer provides a simple\n                        mapping showing how the modules of the TSF are allocated\n                        to the subsystems. This will provide the evaluator a\n                        guide in performing their module-level assessment.  The\n                        evaluator may choose to check the accuracy of the\n                        mapping in conjunction with performing other work\n                        units. An ``inaccurate\'\' mapping is one where the module\n                        is mistakenly associated with a subsystem where its\n                        functions are not used within the subsystem. Because the\n                        mapping is intended to be a guide supporting more\n                        detailed analysis, the evaluator is cautioned to apply\n                        appropriate effort to this work unit. Expending\n                        extensive evaluator resources verifying the accuracy of\n                        the mapping is not necessary. Inaccuracies that lead to\n                        mis-understandings related to the design that are\n                        uncovered as part of this or other work units are the\n                        ones that should be associated with this work unit and\n                        corrected.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-11', ', ADV_ARC, The evaluator shall examine the TOE design to determine\n                        that the description of the purpose of each\n                        SFR-enforcing and SFR-supporting module, and relationship with other modules\n                        is complete and accurate.\n\n                        The developer may designate modules as SFR-enforcing,\n                        SFR-supporting, and SFR non-interfering, but these\n                        ``tags\'\' are used only to describe the amount and type\n                        of information the developer must provide, and can be\n                        used to limit the amount of information the developer\n                        has to develop if their engineering process does not\n                        produce the documentation required. Whether the modules\n                        have been categorised by the developer or not, it is the\n                        evaluator\'s responsibility to determine that the modules\n                        have the appropriate information for their role\n                        (SFR-enforcing, etc.) in the TOE, and to obtain the\n                        appropriate information from the developer should the\n                        developer fail to provide the required information for a\n                        particular module.\n\n                        The purpose of a module provides a description\n                        indicating what function the module is fulfilling. A\n                        word of caution to evaluator is in order. The focus of\n                        this work unit should be to provide the evaluator an\n                        understanding of how the module works so that\n                        determinations can be made about the soundness of the\n                        implementation of the SFRs, as well as to support\n                        architectural analysis performed for, ADV_TDS.4.10C, subsystems.  As long as the evaluator has a\n                        sound understanding of the module\'s operation, and its\n                        relationship to other modules and the TOE as a whole,\n                        the evaluator should consider the objective of the work\n                        achieved and not engage in a documentation exercise for\n                        the developer (by requiring, for example, a complete\n                        algorithmic description for a self-evident\n                        implementation representation).\n                        Because the modules are at such a low level, it may be difficult\n                        determine completeness and accuracy impacts from other\n                        documentation, such as operational user guidance, the functional\n                        specification, the TSF internals, or the security architecture\n                        description. However, the evaluator uses the information present\n                        in those documents to the extent possible to help ensure that\n                        the purpose is accurately and completely described. This\n                        analysis can be aided by the analysis performed for the work\n                        units for the, element,\n                        which maps the TSFI in the functional specification to the\n                        modules of the TSF.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-12', ', ADV_TDS.4-12, The evaluator shall examine the TOE design to determine\n                        that the description of the interfaces presented by each\n                        SFR-enforcing and SFR-supporting module contain an\n                        accurate and complete description of the SFR-related\n                        parameters, the invocation conventions for each\n                        interface, and any values returned directly by the\n                        interface.\n\n                        The SFR-related interfaces of a module are those\n                        interfaces used by other modules as a means to invoke\n                        the SFR-related operations provided, and to provide\n                        inputs to or receive outputs from the module. The\n                        purpose in the specification of these interfaces is to\n                        permit the exercise of them during testing.\n                        Inter-module interfaces that are not SFR-related need\n                        not be specified or described, since they are not a\n                        factor in testing.  Likewise, other internal interfaces\n                        that are not a factor in traversing SFR-related paths of\n                        execution (such as those internal paths that are\n                        fixed).\n                        SFR-related interfaces of SFR-supporting modules are all\n                        interfaces of SFR-supporting modules that are called directly\n                        or indirectly from SFR-enforcing modules. Those interfaces\n                        need to be described with all the parameter used in such a\n                        call. This allows the evaluator to understand the purpose of\n                        the call to the SFR-supporting module in the context of\n                        operation of the SFR-enforcing modules.\n\n                        SFR-related interfaces are described in terms of how\n                        they are invoked, and any values that are returned. This\n                        description would include a list of parameters, and\n                        descriptions of these parameters. Note that global data\n                        would also be considered parameters if used by the\n                        module (either as inputs or outputs) when invoked. If a\n                        parameter were expected to take on a set of values\n                        (e.g., a ``flag\'\' parameter), the complete set of values\n                        the parameter could take on that would have an effect on\n                        module processing would be specified. Likewise,\n                        parameters representing data structures are described\n                        such that each field of the data structure is identified\n                        and described. Note that different programming languages\n                        may have additional ``interfaces\'\' that would be\n                        non-obvious; an example would be operator/function\n                        overloading in C++. This ``implicit interface\'\' in the\n                        class description would also be described as part of the\n                        low-level TOE design. Note that although a module could\n                        present only one interface, it is more common that a\n                        module presents a small set of related\n                        interfaces.\n\n                        In terms of the assessment of parameters (inputs and\n                        outputs) to a module, any use of global data must also\n                        be considered. A module ``uses\'\' global data if it\n                        either reads or writes the data. In order to assure the\n                        description of such parameters (if used) is complete,\n                        the evaluator uses other information provided about the\n                        module in the TOE design (interfaces, algorithmic\n                        description, etc.), as well as the description of the\n                        particular set of global data assessed in work unit, . For instance, the\n                        evaluator could first determine the processing the\n                        module performs by examining its function and interfaces\n                        presented (particularly the parameters of the\n                        interfaces). They could then check to see if the\n                        processing appears to ``touch\'\' any of the global data\n                        areas identified in the TDS design. The evaluator then\n                        determines that, for each global data area that appears\n                        to be ``touched\'\', that global data area is listed as a\n                        means of input or output by the module the evaluator is\n                        examining.\n\n                        Invocation conventions are a programming-reference-type\n                        description that one could use to correctly invoke a\n                        module\'s interface if one were writing a program to make\n                        use of the module\'s functionality through that\n                        interface. This includes necessary inputs and outputs,\n                        including any set-up that may need to be performed with\n                        respect to global variables.\n\n                        Values returned through the interface refer to values\n                        that are either passed through parameters or messages;\n                        values that the function call itself returns in the\n                        style of a ``C\'\' program function call; or values passed\n                        through global means (such as certain error routines in\n                        *ix-style operating systems).\n\n                        In order to assure the description is complete, the\n                        evaluator uses other information provided about the\n                        module in the TOE design (e.g., algorithmic description,\n                        global data used) to ensure that it appears all data\n                        necessary for performing the functions of the module is\n                        presented to the module, and that any values that other\n                        modules expect the module under examination to provide\n                        are identified as being returned by the module. The\n                        evaluator determines accuracy by ensuring that the\n                        description of the processing matches the information\n                        listed as being passed to or from an interface.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-13', ', ADV_TDS.4-2, The evaluator shall examine the TOE design to determine\n                        that SFR-non-interfering modules are correctly\n                        categorised.\n\n                        As mentioned in work unit, ADV_TDS.4.2D, ,\n                        less information is required about modules that are\n                        SFR-non-interfering.  A key focus of the evaluator for this work\n                        unit is attempting to determine from the evidence provided for\n                        each module implicitly categorised as SFR-non-interfering and\n                        the evaluation (information about other modules in the TOE\n                        design, the functional specification, the security architecture\n                        description, the operational user guidance, the TSF internals\n                        document, and perhaps even the implementation representation)\n                        whether the module is indeed SFR-non-interfering. At this level\n                        of assurance some error should be tolerated; the evaluator does\n                        not have to be absolutely sure that a given module is\n                        SFR-non-interfering, even though it is labelled as\n                        such. However, if the evidence provided indicates that a\n                        SFR-non-interfering module is SFR-enforcing or SFR-supporting,\n                        the evaluator requests additional information from the developer\n                        in order to resolve the apparent inconsistency. For example,\n                        suppose the documentation for Module A (an SFR-enforcing module)\n                        indicates that it calls Module B to perform an access check on a\n                        certain type of construct. When the evaluator examines the\n                        information associated with Module B, it is discovered that the\n                        only information the developer has provided is a purpose and a\n                        set of interactions (thus implicitly categorising Module B as\n                        SFR-supporting or SFR-non-interfering). On examining the purpose and interactions\n                        from Module A, the evaluator finds no mention of Module B\n                        performing any access checks, and Module A is not listed as a\n                        module with which Module B interacts. At this point the\n                        evaluator should approach the developer to resolve the\n                        discrepancies between the information provided in Module A and\n                        that in Module B.\n\n                        Another example would be where the evaluator examines\n                        the mapping of the TSFI to the modules as provided by, . This examination\n                        shows that Module C is associated with an SFR requiring\n                        identification of the user. Again, when the evaluator\n                        examines the information associated with Module C, they\n                        find that all the developer has provided is a purpose\n                        and a set of interactions (thus implicitly categorising\n                        Module C as SFR-non-interfering). Examining the purpose\n                        and interactions presented for Module C, the evaluator\n                        is unable to determine why Module C, listed as mapping\n                        to a TSFI concerned with user identification, would not\n                        be classified as SFR-enforcing or SFR-supporting. Again,\n                        the evaluator should approach the developer to resolve\n                        this discrepancy.\n\n                        A final example illustrates the opposite situation. As\n                        before, the developer has provided information\n                        associated with Module D consisting of a purpose and a\n                        set of interactions (thus implicitly categorising Module\n                        D as SFR-non-interfering). The evaluator examines all of\n                        the evidence provided, including the purpose and\n                        interactions for Module D. The purpose appears to give a\n                        meaningful description of Module D\'s function in the\n                        TOE, the interactions are consistent with that\n                        description, and there is nothing to indicate that\n                        Module D is SFR-enforcing or SFR-supporting. In this\n                        case, the evaluator should not demand more information\n                        about Module D ``just be to sure\'\' it is correctly\n                        categorised. The developer has met the obligations and\n                        the resulting assurance the evaluator has in the\n                        implicit categorisation of Module D is (by definition)\n                        appropriate for this assurance level.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-14', ', ADV_TDS.4.10C, The evaluator shall examine the TOE design to determine\n                        that the description of the purpose of each\n                        SFR-non-interfering module is complete and\n                        accurate.\n\n                        The description of the purpose of a module indicates\n                        what function the module is fulfilling. From the\n                        description, the evaluator should be able to obtain a\n                        general idea of the module\'s role. In order to assure\n                        the description is complete, the evaluator uses the\n                        information provided about the module\'s interactions\n                        with other modules to assess whether the reasons for the\n                        module being called are consistent with the module\'s\n                        purpose. If the interaction description contains\n                        functionality that is not apparent from, or in conflict\n                        with, the module\'s purpose, the evaluator needs to\n                        determine whether the problem is one of accuracy or of\n                        completeness. The evaluator should be wary of purposes\n                        that are too short, since meaningful analysis based on a\n                        one-sentence purpose is likely to be impossible.\n\n                        Because the modules are at such a low level, it may be difficult\n                        determine completeness and accuracy impacts from other\n                        documentation, such as operational user guidance, the functional\n                        specification, the security architecture description, or the TSF\n                        internals document. However, the evaluator uses the information\n                        present in those documents to the extent possible to help ensure\n                        that the function is accurately and completely described. This\n                        analysis can be aided by the analysis performed for the work\n                        units for the, element,\n                        which maps the TSFI in the functional specification to the\n                        modules of the TSF.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-15', ', ADV_TDS.4-8, The evaluator shall examine the TOE design to determine\n                        that the description of a SFR-non-interfering module\'s\n                        interaction with other modules is complete and\n                        accurate.\n\n                        It is important to note that, in terms of the Part 3\n                        requirement and this work unit, the term\n\n                        interaction\n                        is intended to convey less\n                        rigour than\n                        interface\n                        . An interaction\n                        does not need to be characterised at the implementation\n                        level (e.g., parameters passed from one routine in a\n                        module to a routine in a different module; global\n                        variables; hardware signals (e.g., interrupts) from a\n                        hardware subsystem to an interrupt-handling subsystem),\n                        but the data elements identified for a particular module\n                        that are going to be used by another module should be\n                        covered in this discussion.  Any control relationships\n                        between modules (e.g., a module responsible for\n                        configuring a rule base for a firewall system and the\n                        module that actually implements these rules) should also\n                        be described.\n\n                        A module\'s interaction with other modules can be captured in\n                        many ways. The intent for the TOE design is to allow the\n                        evaluator to understand (in part through analysis of module\n                        interactions) the role of the SFR-supporting and\n                        SFR-non-interfering modules in the overall TOE\n                        design. Understanding of this role will aid the evaluator in\n                        performing work unit, .\n\n                        A module\'s interaction with other modules goes beyond\n                        just a call-tree-type document. The interaction is\n                        described from a functional perspective of why a module\n                        interacts with other modules. The module\'s purpose\n                        describes what functions the module provides to other\n                        modules; the interactions should describe what the\n                        module depends on from other modules in order to\n                        accomplish this function.\n\n                        Because the modules are at such a low level, it may be difficult\n                        determine completeness and accuracy impacts from other\n                        documentation, such as operational user guidance, the functional\n                        specification, the security architecture description, or the TSF\n                        internals document. However, the evaluator uses the information\n                        present in those documents to the extent possible to help ensure\n                        that the interactions are accurately and completely\n                        described.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-16', ', The evaluator shall examine the TOE design to determine\n                        that it contains a complete and accurate mapping from\n                        the TSFI described in the functional specification to\n                        the modules of the TSF described in the TOE\n                        design.\n\n                        The modules described in the TOE design provide a\n                        description of the implementation of the TSF. The TSFI\n                        provide a description of how the implementation is\n                        exercised. The evidence from the developer identifies\n                        the module that is initially invoked when an operation\n                        is requested at the TSFI, and identify the chain of\n                        modules invoked up to the module that is primarily\n                        responsible for implementing the functionality. However,\n                        a complete call tree for each TSFI is not required for\n                        this work unit. The cases in which more than one module\n                        would have to be identified are where there are ``entry\n                        point\'\' modules or wrapper modules that have no\n                        functionality other than conditioning inputs or\n                        de-multiplexing an input. Mapping to one of these\n                        modules would not provide any useful information to the\n                        evaluator.\n\n                        The evaluator assesses the completeness of the mapping\n                        by ensuring that all of the TSFI map to at least one\n                        module. The verification of accuracy is more\n                        complex.\n\n                        The first aspect of accuracy is that each TSFI is mapped\n                        to a module at the TSF boundary. This determination can\n                        be made by reviewing the module description and its\n                        interfaces/interactions. The next aspect of accuracy is\n                        that each TSFI identifies a chain of modules between the\n                        initial module identified and a module that is primarily\n                        responsible for implementing the function presented at\n                        the TSF. Note that this may be the initial module, or\n                        there may be several modules, depending on how much\n                        pre-conditioning of the inputs is done. It should be\n                        noted that one indicator of a pre-conditioning module is\n                        that it is invoked for a large number of the TSFI, where\n                        the TSFI are all of similar type (e.g., system\n                        call). The final aspect of accuracy is that the mapping\n                        makes sense. For instance, mapping a TSFI dealing with\n                        access control to a module that checks passwords is not\n                        accurate. The evaluator should again use judgement in\n                        making this determination. The goal is that this\n                        information aids the evaluator in understanding the\n                        system and implementation of the SFRs, and ways in which\n                        entities at the TSF boundary can interact with the\n                        TSF. The bulk of the assessment of whether the SFRs are\n                        described accurately by the modules is performed in\n                        other work units.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('adv_tds.4-17', 'The evaluator shall examine the TOE security functional\n                        requirements and the TOE design, to determine that all\n                        ST security functional requirements are covered by the\n                        TOE design.\n\n                        The evaluator may construct a map between the TOE\n                        security functional requirements and the TOE design.\n                        This map will likely be from a functional requirement to\n                        a set of subsystems, and later to modules. Note that this map may have to be\n                        at a level of detail below the component or even element\n                        level of the requirements, because of operations\n                        (assignments, refinements, selections) performed on the\n                        functional requirement by the ST author.\n\n                        For example, the, FDP_ACC.1, component contains an element with assignments.  If the\n                        ST contained, for instance, ten rules in the, FDP_ACC.1, assignment, and these ten\n                        rules were implemented in specific places within fifteen\n                        modules, it would be inadequate for the evaluator to map, FDP_ACC.1, to one subsystem and\n                        claim the work unit had been completed. Instead, the\n                        evaluator would map, FDP_ACC.1, (rule 1) to modules x, y and z of subsystem A;, FDP_ACC.1, (rule 2) to x, p, and q of subsystem A; etc.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.2e'),
('adv_tds.4-18', '\n\n                        The evaluator shall examine the TOE design to determine\n                        that it is an accurate instantiation of all security\n                        functional requirements.\n\n                        The evaluator may construct a map between the TOE security\n                        functional requirements and the TOE design.  This map will\n                        likely be from a functional requirement to a set of\n                        subsystems. Note that this map may have to be at a level of\n                        detail below the component or even element level of the\n                        requirements, because of operations (assignments, refinements,\n                        selections) performed on the functional requirement by the ST\n                        author.\n\n                        As an example, if the ST requirements specified a\n                        role-based access control mechanism, the evaluator would\n                        first identify the subsystems, and modules that contribute to this\n                        mechanism\'s implementation. This could be done by\n                        in-depth knowledge or understanding of the TOE design or\n                        by work done in the previous work unit. Note that this\n                        trace is only to identify the subsystems, and modules, and is not the\n                        complete analysis.\n\n                        The next step would be to understand what mechanism the\n                        subsystems, and modules implemented. For instance, if the design\n                        described an implementation of access control based on\n                        UNIX-style protection bits, the design would not be an\n                        accurate instantiation of those access control\n                        requirements present in the ST example used above. If\n                        the evaluator could not determine that the mechanism was\n                        accurately implemented because of a lack of detail, the\n                        evaluator would have to assess whether all of the\n                        SFR-enforcing subsystems and modules have been identified, or if\n                        adequate detail had been provided for those subsystems and modules.\n                    ', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.2e'),
('adv_tds.4-2', ', The evaluator shall examine the TOE design to determine\n                        that the entire TSF is described in terms of\n                        modules.\n\n                        The evaluator will examine the modules for specific\n                        properties in other work units; in this work unit the\n                        evaluator determines that the modular description covers\n                        the entire TSF, and not just a portion of the TSF. The\n                        evaluator uses other evidence provided for the\n                        evaluation (e.g., functional specification,\n                        architectural description) in making this\n                        determination. For example, if the functional\n                        specification contains interfaces to functionality that\n                        does not appear to be described in the TOE design\n                        description, it may be the case that a portion of the\n                        TSF has not been included appropriately. Making this\n                        determination will likely be an iterative process, where\n                        as more analysis is done on the other evidence, more\n                        confidence can be gained with respect to the\n                        completeness of the documentation.\n\n                        Unlike subsystems, modules describe the implementation in a level of detail that can serve\n                        as a guide to reviewing the implementation representation. A description of a module should\n                        be such that one could create an implementation of the module from the description, and the\n                        resulting implementation would be 1) identical to the actual TSF implementation in terms of\n                        the interfaces presented, 2) identical in the use of interfaces that are mentioned in the\n                        design, and 3) functionally equivalent to the description of the purpose of the TSF module.\n                        For instance, RFC 793 provides a high-level description of the TCP protocol. It is\n                        necessarily implementation independent. While it provides a wealth of detail, it is, a suitable design description because it is not specific to an implementation. An actual\n                        implementation can add to the protocol specified in the RFC, and implementation choices (for\n                        instance, the use of global data vs. local data in various parts of the implementation) may\n                        have an impact on the analysis that is performed. The design description of the TCP module would\n                        list the interfaces presented by the implementation (rather than just those defined in RFC 793),\n                        as well as an algorithm description of the processing associated with the modules implementing\n                        TCP (assuming it was part of the TSF).', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-3', ', FIA_UID, The evaluator shall check the TOE design to determine\n                        that the TSF modules are identified as either\n                        SFR-enforcing, SFR-supporting, or\n                        SFR-non-interfering.\n\n                        The purpose of designating each module (according to the role a\n                        particular module plays in the enforcement of the SFRs) is to\n                        allow developers to provide less information about the parts of\n                        the TSF that have little role in security. It is always\n                        permissible for the developer to provide more information or\n                        detail than the requirements demand, as might occur when the\n                        information has been gathered outside the evaluation context. In\n                        such cases the developer must still designate the modules as\n                        either SFR-enforcing, SFR-supporting, or\n                        SFR-non-interfering.\n\n                        The accuracy of these designations is continuously\n                        reviewed as the evaluation progresses. The concern is\n                        the mis-designation of modules as being less important\n                        (and hence, having less information) than is really the\n                        case.  While blatant mis-designations may be immediately\n                        apparent (e.g., designating an authentication module as\n                        anything but SFR-enforcing when, ADV_TDS.4-17, is one of the SFRs being claimed), other\n                        mis-designations might not be discovered until the TSF\n                        is better understood. The evaluator must therefore keep\n                        in mind that these designations are the developer\'s\n                        initial best effort, but are subject to change. Further\n                        guidance is provided under work unit, , which examines the\n                        accuracy of these designations.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-4', ', ADV_TDS.4-1, The evaluator shall examine the TOE design to determine\n                        that all subsystems of the TSF are identified.\n\n                        If the design is presented solely in terms of modules,\n                        then subsystems in these requirements are equivalent to\n                        modules and the activity should be performed at the\n                        module level.\n\n                        In work unit, AGD_PRE, all of\n                        the subsystems of the TOE were identified, and a\n                        determination made that the non-TSF subsystems were\n                        correctly characterised. Building on that work, the\n                        subsystems that were not characterised as non-TSF\n                        subsystems should be precisely identified. The evaluator\n                        determines that, of the hardware and software installed\n                        and configured according to the, guidance, each subsystem has been\n                        accounted for as either one that is part of the TSF, or\n                        one that is not.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-5', 'The evaluator shall examine the TDS documentation to determine\n                    that the semiformal notation used for describing the subsystems, modules and\n                    their interfaces is defined or referenced.A semiformal notation can be either defined by the sponsor or\n                    a corresponding standard be referenced. The evaluator should provide a mapping\n                    of security functions and their interfaces outlining in what part of the\n                    documentation a function or interface is semiformal described and what notation\n                    is used. The evaluator examines all semiformal notations used to make sure that\n                    they are of a semiformal style and to justify the appropriateness of the manner\n                    how the semiformal notations are used for the TOE.The evaluator is reminded that a semi-formal presentation is\n                    characterised by a standardised format with a well-defined syntax that reduces\n                    ambiguity that may occur in informal presentations. The syntax of all semiformal\n                    notations used in the functional specification shall be defined or a corresponding\n                    standard be referenced. The evaluator verifies that the semiformal notations used\n                    for expressing the functional specification are capable of expressing features\n                    relevant to security. In order to determine this, the evaluator can refer to the\n                    SFR and compare the TSF security features stated in the ST and those described\n                    in the FSP using the semiformal notations.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-6', ', The evaluator shall examine the TOE design to determine\n                        that each subsystem of the TSF describes its role in\n                        the enforcement of SFRs described in the ST.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit will be considered satisfied by the\n                        assessment done in subsequent work units; no explicit\n                        action on the part of the evaluator is necessary in this\n                        case.\n\n                        On systems that are complex enough to warrant a\n                        subsystem-level description of the TSF in addition to\n                        the modular description, the goal of the subsystem-level\n                        description is to give the evaluator context for the\n                        modular description that follows. Therefore, the\n                        evaluator ensures that the subsystem-level description\n                        contains a description of how the security functional\n                        requirements are achieved in the design, but at a level\n                        of abstraction above the modular description. This\n                        description should discuss the mechanisms used at a\n                        level that is aligned with the module description; this\n                        will provide the evaluators the road map needed to\n                        intelligently assess the information contained in the\n                        module description. A well-written set of subsystem\n                        descriptions will help guide the evaluator in\n                        determining the modules that are most important to\n                        examine, thus focusing the evaluation activity on the\n                        portions of the TSF that have the most relevance with\n                        respect to the enforcement of the SFRs.\n\n                        The evaluator ensures that all subsystems of the TSF\n                        have a description. While the description should focus\n                        on the role that the subsystem plays in enforcing or\n                        supporting the implementation of the SFRs, enough\n                        information must be present so that a context for\n                        understanding the SFR-related functionality is\n                        provided.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-7', '\n                    The evaluator shall examine the TOE design to determine that\n                    each SFR-non-interfering subsystem of the TSF is described such that\n                    the evaluator can determine that the subsystem is SFR-non-interfering.\n                    If the design is presented solely in terms of modules, then this work unit\n                    will be considered satisfied by the assessment done in subsequent work units;\n                    no explicit action on the part of the evaluator is necessary in this case.\n                    An SFR-non-interfering subsystem is one on which the SFR-enforcing and\n                    SFR-supporting subsystems have no dependence; that is, they play no role\n                    in implementing SFR functionality.\n                    The evaluator ensures that all subsystems of the TSF have a description.\n                    While the description should focus on the role that the subsystem do not plays\n                    in enforcing or supporting the implementation of the SFRs, enough information\n                    must be present so that a context for understanding the SFR-non-interfering\n                    functionality is provided.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-8', ', The evaluator shall examine the TOE design to determine\n                        that interactions between the subsystems of the TSF are\n                        described.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit will be considered satisfied by the\n                        assessment done in subsequent work units; no explicit\n                        action on the part of the evaluator is necessary in this\n                        case.\n\n                        On systems that are complex enough to warrant a subsystem-level\n                        description of the TSF in addition to the modular description,\n                        the goal of describing the interactions between the subsystems\n                        is to help provide the reader a better understanding of how the\n                        TSF performs it functions. These interactions do not need to be\n                        characterised at the implementation level (e.g., parameters\n                        passed from one routine in a subsystem to a routine in a\n                        different subsystem; global variables; hardware signals (e.g.,\n                        interrupts) from a hardware subsystem to an interrupt-handling\n                        subsystem), but the data elements identified for a particular\n                        subsystem that are going to be used by another subsystem need to\n                        be covered in this discussion.  Any control relationships\n                        between subsystems (e.g., a subsystem responsible for\n                        configuring a rule base for a firewall system and the subsystem\n                        that actually implements these rules) should also be\n                        described.\n\n                        It should be noted while the developer should characterise all\n                        interactions between subsystems, the evaluators need to use\n                        their own judgement in assessing the completeness of the\n                        description. If the reason for an interaction is unclear, or if\n                        there are SFR-related interactions (discovered, for instance, in\n                        examining the module-level documentation) that do not appear to\n                        be described, the evaluator ensures that this information is\n                        provided by the developer. However, if the evaluator can\n                        determine that interactions among a particular set of\n                        subsystems, while incompletely described by the developer, and a\n                        complete description will not aid in understanding the overall\n                        functionality nor security functionality provided by the TSF,\n                        then the evaluator may choose to consider the description\n                        sufficient, and not pursue completeness for its own sake.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('adv_tds.4-9', ', The evaluator shall examine the TOE design to determine\n                        that the mapping between the subsystems of the TSF and\n                        the modules of the TSF is complete.\n\n                        If the design is presented solely in terms of modules,\n                        then this work unit is considered satisfied.\n\n                        For TOEs that are complex enough to warrant a\n                        subsystem-level description of the TSF in addition to\n                        the modular description, the developer provides a simple\n                        mapping showing how the modules of the TSF are allocated\n                        to the subsystems. This will provide the evaluator a\n                        guide in performing their module-level assessment. To\n                        determine completeness, the evaluator examines each\n                        mapping and determines that all subsystems map to at\n                        least one module, and that all modules map to exactly\n                        one subsystem.', 'adv', 'adv_tds', 'adv_tds.4', 'adv_tds.4.1e'),
('agd_pre.1-1', ', The evaluator shall examine the provided acceptance\n                        procedures to determine that they describe the steps\n                        necessary for secure acceptance of the TOE in accordance\n                        with the developer\'s delivery procedures.\n                        If it is not anticipated by the developer\'s delivery\n                        procedures that acceptance procedures will or can be\n                        applied, this work unit is not applicable, and is\n                        therefore considered to be satisfied.\n\n                        The acceptance procedures should include as a minimum,\n                        that the user has to check that all parts of the TOE as\n                        indicated in the ST have been delivered in the correct\n                        version.\n\n                        The acceptance procedures should reflect the steps the\n                        user has to perform in order to accept the delivered TOE\n                        that are implied by the developer\'s delivery\n                        procedures.\n\n                        The acceptance procedures should provide detailed\n                        information about the following, if applicable:, ', 'agd', 'agd_pre', 'agd_pre.1', 'agd_pre.1.1e'),
('agd_pre.1-2', ', The evaluator shall examine the provided installation\n                        procedures to determine that they describe the steps\n                        necessary for secure installation of the TOE and the\n                        secure preparation of the operational environment in\n                        accordance with the security objectives in the\n                        ST.\n\n                        If it is not anticipated that installation procedures\n                        will or can be applied (e.g. because the TOE may already\n                        be delivered in an operational state), this work unit is\n                        not applicable, and is therefore considered to be\n                        satisfied.\n\n                        The installation procedures should provide detailed\n                        information about the following, if applicable:, ', 'agd', 'agd_pre', 'agd_pre.1', 'agd_pre.1.1e'),
('agd_pre.1-3', 'The evaluator shall perform all user procedures\n                        necessary to prepare the TOE to determine that the TOE\n                        and its operational environment can be prepared securely\n                        using only the supplied preparative procedures.\n                        Preparation requires the evaluator to advance the\n                        TOE from a deliverable state to the state in which it is\n                        operational, including acceptance and installation of\n                        the TOE, and enforcing the SFRs consistent with the\n                        security objectives for the TOE specified in the\n                        ST.\n\n                        The evaluator should follow only the developer\'s\n                        procedures and may perform the activities that customers\n                        are usually expected to perform to accept and install\n                        the TOE, using the supplied preparative procedures only.\n                        Any difficulties encountered during such an exercise may\n                        be indicative of incomplete, unclear or unreasonable guidance.\n\n                        This work unit may be performed in conjunction with the\n                        evaluation activities under, ATE_IND, .\n\n                        If it is known that the TOE will be used as a dependent\n                        component for a composed TOE evaluation, then the\n                        evaluator should ensure that the operational environment\n                        is satisfied by the base component used in the composed\n                        TOE.', 'agd', 'agd_pre', 'agd_pre.1', 'agd_pre.1.2e'),
('alc_cmc.3-10', ', EVAL-GUIDANCE-SAMPLING, The evaluator shall examine the evidence to determine\n                        that the CM system is being operated in accordance with\n                        the CM plan.\n\n                        The evaluator should select and examine a sample of\n                        evidence covering each type of CM-relevant operation\n                        that has been performed on a configuration item\n                        (e.g. creation, modification, deletion, reversion to an\n                        earlier version) to confirm that all operations of the\n                        CM system have been carried out in line with documented\n                        procedures. The evaluator confirms that the evidence\n                        includes all the information identified for that\n                        operation in the CM plan. Examination of the evidence\n                        may require access to a CM tool that is used. The\n                        evaluator may choose to sample the evidence.\n\n                        For guidance on sampling see, EVAL-GUIDANCE-SITE-VISITS, .\n\n                        Further confidence in the correct operation of the CM system and\n                        the effective maintenance of configuration items may be\n                        established by means of interviews with selected development\n                        staff. In conducting such interviews, the evaluator aims\n                        to gain a deeper understanding of how the CM system is used in\n                        practise as well as to confirm that the CM procedures are being\n                        applied as described in the CM documentation. Note that such\n                        interviews should complement rather than replace the examination\n                        of documentary evidence, and may not be necessary if the\n                        documentary evidence alone satisfies the requirement. However,\n                        given the wide scope of the CM plan it is possible that some\n                        aspects (e.g. roles and responsibilities) may not be clear from\n                        the CM plan and records alone.  This is one case where\n                        clarification may be necessary through interviews.\n\n                        It is expected that the evaluator will visit the\n                        development site in support of this activity.\n\n                        For guidance on site visits see, .', 'alc', 'alc_cmc', 'alc_cmc.3', 'alc_cmc.3.1e'),
('alc_cmc.3-8', ', EVAL-GUIDANCE-SAMPLING, The evaluator shall check that the configuration items\n                        identified in the configuration list are being\n                        maintained by the CM system.\n\n                        The CM system employed by the developer should maintain the\n                        integrity of the TOE. The evaluator should check that for each\n                        type of configuration item (e.g. design documents or source code\n                        modules) contained in the configuration list there are examples\n                        of the evidence generated by the procedures described in the CM\n                        plan. In this case, the approach to sampling will depend upon\n                        the level of granularity used in the CM system to control CM\n                        items. Where, for example, 10,000 source code modules are\n                        identified in the configuration list, a different sampling\n                        strategy needs to be applied compared to the case in which there\n                        are only 5, or even 1. The emphasis of this activity should be\n                        on ensuring that the CM system is being operated correctly,\n                        rather than on the detection of any minor error.\n\n                        For guidance on sampling see, .', 'alc', 'alc_cmc', 'alc_cmc.3', 'alc_cmc.3.1e'),
('alc_cmc.4-11', ', EVAL-GUIDANCE-SAMPLING, The evaluator shall check that the configuration items\n                        identified in the configuration list are being\n                        maintained by the CM system.\n\n                        The CM system employed by the developer should maintain the\n                        integrity of the TOE. The evaluator should check that for each\n                        type of configuration item (e.g. design documents or source code\n                        modules) contained in the configuration list there are examples\n                        of the evidence generated by the procedures described in the CM\n                        plan. In this case, the approach to sampling will depend upon\n                        the level of granularity used in the CM system to control CM\n                        items. Where, for example, 10,000 source code modules are\n                        identified in the configuration list, a different sampling\n                        strategy needs to be applied compared to the case in which there\n                        are only 5, or even 1. The emphasis of this activity should be\n                        on ensuring that the CM system is being operated correctly,\n                        rather than on the detection of any minor error.\n\n                        For guidance on sampling see, .', 'alc', 'alc_cmc', 'alc_cmc.4', 'alc_cmc.4.1e'),
('alc_cmc.4-12', ', ALC_CMC.4.9C, The evaluator shall check the CM documentation to\n                        ascertain that it includes the CM system records\n                        identified by the CM plan.\n\n                        The output produced by the CM system should provide the\n                        evidence that the evaluator needs to be confident that\n                        the CM plan is being applied, and also that all\n                        configuration items are being maintained by the CM\n                        system as required by, . Example output could include change\n                        control forms, or configuration item access approval\n                        forms.', 'alc', 'alc_cmc', 'alc_cmc.4', 'alc_cmc.4.1e'),
('alc_cmc.4-13', ', EVAL-GUIDANCE-SAMPLING, The evaluator shall examine the evidence to determine\n                        that the CM system is being operated in accordance with\n                        the CM plan.\n\n                        The evaluator should select and examine a sample of\n                        evidence covering each type of CM-relevant operation\n                        that has been performed on a configuration item\n                        (e.g. creation, modification, deletion, reversion to an\n                        earlier version) to confirm that all operations of the\n                        CM system have been carried out in line with documented\n                        procedures. The evaluator confirms that the evidence\n                        includes all the information identified for that\n                        operation in the CM plan. Examination of the evidence\n                        may require access to a CM tool that is used. The\n                        evaluator may choose to sample the evidence.\n\n                        For guidance on sampling see, EVAL-GUIDANCE-SITE-VISITS, .\n\n                        Further confidence in the correct operation of the CM system and\n                        the effective maintenance of configuration items may be\n                        established by means of interviews with selected development\n                        staff. In conducting such interviews, the evaluator aims\n                        to gain a deeper understanding of how the CM system is used in\n                        practise as well as to confirm that the CM procedures are being\n                        applied as described in the CM documentation. Note that such\n                        interviews should complement rather than replace the examination\n                        of documentary evidence, and may not be necessary if the\n                        documentary evidence alone satisfies the requirement. However,\n                        given the wide scope of the CM plan it is possible that some\n                        aspects (e.g. roles and responsibilities) may not be clear from\n                        the CM plan and records alone.  This is one case where\n                        clarification may be necessary through interviews.\n\n                        It is expected that the evaluator will visit the\n                        development site in support of this activity.\n\n                        For guidance on site visits see, .', 'alc', 'alc_cmc', 'alc_cmc.4', 'alc_cmc.4.1e'),
('alc_cmc.4-5', ', ALC_CMC.4.6C, The evaluator shall examine the CM access control\n                        measures described in the CM plan (cf., ALC_CMC.4.10C, ) to determine that they\n                        are automated and effective in preventing unauthorised\n                        access to the configuration items.\n\n                        The evaluator may use a number of methods to determine\n                        that the CM access control measures are effective. For\n                        example, the evaluator may exercise the access control\n                        measures to ensure that the procedures could not be\n                        bypassed. The evaluator may use the outputs generated by\n                        the CM system procedures required by, . The evaluator may also witness a\n                        demonstration of the CM system to ensure that the access\n                        control measures employed are operating\n                        effectively.', 'alc', 'alc_cmc', 'alc_cmc.4', 'alc_cmc.4.1e'),
('alc_cmc.5-18', ', ALC_CMC.5.15C, The evaluator shall check the CM documentation to\n                        ascertain that it includes the CM system records\n                        identified by the CM plan.\n\n                        The output produced by the CM system should provide the\n                        evidence that the evaluator needs to be confident that\n                        the CM plan is being applied, and also that all\n                        configuration items are being maintained by the CM\n                        system as required by, . Example output could include\n                        change control forms, or configuration item access\n                        approval forms.', 'alc', 'alc_cmc', 'alc_cmc.5', 'alc_cmc.5.1e'),
('alc_cmc.5-19', ', EVAL-GUIDANCE-SAMPLING, The evaluator shall examine the evidence to determine\n                        that the CM system is being operated in accordance with\n                        the CM plan.\n\n                        The evaluator should select and examine a sample of\n                        evidence covering each type of CM-relevant operation\n                        that has been performed on a configuration item\n                        (e.g. creation, modification, deletion, reversion to an\n                        earlier version) to confirm that all operations of the\n                        CM system have been carried out in line with documented\n                        procedures. The evaluator confirms that the evidence\n                        includes all the information identified for that\n                        operation in the CM plan. Examination of the evidence\n                        may require access to a CM tool that is used. The\n                        evaluator may choose to sample the evidence.\n\n                        For guidance on sampling see, EVAL-GUIDANCE-SITE-VISITS, .\n\n                        Further confidence in the correct operation of the CM system and\n                        the effective maintenance of configuration items may be\n                        established by means of interviews with selected development\n                        staff. In conducting such interviews, the evaluator aims\n                        to gain a deeper understanding of how the CM system is used in\n                        practise as well as to confirm that the CM procedures are being\n                        applied as described in the CM documentation. Note that such\n                        interviews should complement rather than replace the examination\n                        of documentary evidence, and may not be necessary if the\n                        documentary evidence alone satisfies the requirement. However,\n                        given the wide scope of the CM plan it is possible that some\n                        aspects (e.g. roles and responsibilities) may not be clear from\n                        the CM plan and records alone.  This is one case where\n                        clarification may be necessary through interviews.\n\n                        It is expected that the evaluator will visit the\n                        development site in support of this activity.\n\n                        For guidance on site visits see, .', 'alc', 'alc_cmc', 'alc_cmc.5', 'alc_cmc.5.1e'),
('alc_del.1-1', ', The evaluator shall examine the delivery documentation\n                        to determine that it describes all procedures that are\n                        necessary to maintain security when distributing\n                        versions of the TOE or parts of it to the\n                        consumer.\n\n                        The delivery documentation describes proper procedures\n                        to maintain security of the TOE during transfer of the\n                        TOE or its component parts and to determine the\n                        identification of the TOE.\n\n                        The delivery documentation should cover the entire TOE,\n                        but may contain different procedures for different parts\n                        of the TOE. The evaluation should consider the totality\n                        of procedures.\n\n                        The delivery procedures should be applicable across all\n                        phases of delivery from the production environment to\n                        the installation environment (e.g. packaging, storage\n                        and distribution). Standard commercial practise for\n                        packaging and delivery may be acceptable. This includes\n                        shrink wrapped packaging, a security tape or a sealed\n                        envelope. For the distribution, physical (e.g. public\n                        mail or a private distribution service) or electronic\n                        (e.g. electronic mail or downloading off the Internet)\n                        procedures may be used.\n\n                        Cryptographic checksums or a software signature may be\n                        used by the developer to ensure that tampering or\n                        masquerading can be detected. Tamper proof seals\n                        additionally indicate if the confidentiality has been\n                        broken. For software TOEs, confidentiality might be\n                        assured by using encryption. If availability is of\n                        concern, a secure transportation might be\n                        required.\n\n                        Interpretation of the term ``necessary to maintain\n                        security\'\' will need to consider:, ', 'alc', 'alc_del', 'alc_del.1', 'alc_del.1.1e'),
('alc_dvs.1-1', ', ALC_DVS, The evaluator shall examine the development security\n                        documentation to determine that it details all security\n                        measures used in the development environment that are\n                        necessary to protect the confidentiality and integrity\n                        of the TOE design and implementation.\n\n                        The evaluator determines what is necessary by first referring to\n                        the ST for any information that may assist in the determination\n                        of necessary protection.\n\n                        If no explicit information is available from the ST the\n                        evaluator will need to make a determination of the\n                        necessary measures. In cases where the developer\'s\n                        measures are considered less than what is necessary, a\n                        clear justification should be provided for the\n                        assessment, based on a potential exploitable\n                        vulnerability.\n\n                        The following types of security measures are considered\n                        by the evaluator when examining the documentation:, ALC_DEL, The development security documentation should identify\n                        the locations at which development occurs, and describe\n                        the aspects of development performed, along with the\n                        security measures applied at each location and for\n                        transports between different locations. For example,\n                        development could occur at multiple facilities within a\n                        single building, multiple buildings at the same site, or\n                        at multiple sites. Transports of parts of the TOE or the\n                        unfinished TOE between different development sites are\n                        to be covered by, ,\n                        whereas the transport of the finished TOE to the\n                        consumer is dealt with in, .\n\n                        Development includes the production of the TOE.', 'alc', 'alc_dvs', 'alc_dvs.1', 'alc_dvs.1.1e'),
('alc_dvs.1-2', ', ALC_CMC, The evaluator shall examine the development\n                        confidentiality and integrity policies in order to\n                        determine the sufficiency of the security measures\n                        employed.\n\n                        The evaluator should examine whether the following is included\n                        in the policies:, ALC_CMC, The evaluator should determine that these policies are\n                        described in the development security documentation,\n                        that the security measures employed are consistent with\n                        the policies, and that they are complete.\n\n                        It should be noted that configuration management\n                        procedures will help protect the integrity of the TOE\n                        and the evaluator should avoid overlap with the\n                        work-units conducted for the, ALC_DVS, . For example, the CM documentation may\n                        describe the security procedures necessary for\n                        controlling the roles or individuals who should have\n                        access to the development environment and who may modify\n                        the TOE.\n\n                        Whereas the, requirements are fixed, those for the, ,\n                        mandating only necessary measures, are dependent on the nature of the TOE,\n                        and on information that may be provided in the ST. The evaluators would\n                        then determine that such a policy had been applied under this sub-activity.', 'alc', 'alc_dvs', 'alc_dvs.1', 'alc_dvs.1.1e'),
('alc_dvs.1-3', 'The evaluator shall examine the development security\n                        documentation and associated evidence to determine that\n                        the security measures are being applied.\n\n                        This work unit requires the evaluator to determine that\n                        the security measures described in the development\n                        security documentation are being followed, such that the\n                        integrity of the TOE and the confidentiality of\n                        associated documentation is being adequately\n                        protected. For example, this could be determined by\n                        examination of the documentary evidence\n                        provided. Documentary evidence should be supplemented by\n                        visiting the development environment. A visit to the\n                        development environment will allow the evaluator to:, EVAL-GUIDANCE-SITE-VISITS, A development site visit is a useful means of gaining\n                        confidence in the measures being used. Any decision not\n                        to make such a visit should be determined in\n                        consultation with the evaluation authority.\n\n                        For guidance on site visits see, .', 'alc', 'alc_dvs', 'alc_dvs.1', 'alc_dvs.1.2e'),
('alc_dvs.2-1', ', ALC_DVS, The evaluator shall examine the development security\n                        documentation to determine that it details all security\n                        measures used in the development environment that are\n                        necessary to protect the confidentiality and integrity\n                        of the TOE design and implementation.\n\n                        The evaluator determines what is necessary by first referring to\n                        the ST for any information that may assist in the determination\n                        of necessary protection.\n\n                        If no explicit information is available from the ST the\n                        evaluator will need to make a determination of the\n                        necessary measures. In cases where the developer\'s\n                        measures are considered less than what is necessary, a\n                        clear justification should be provided for the\n                        assessment, based on a potential exploitable\n                        vulnerability.\n\n                        The following types of security measures are considered\n                        by the evaluator when examining the documentation:, ALC_DEL, The development security documentation should identify\n                        the locations at which development occurs, and describe\n                        the aspects of development performed, along with the\n                        security measures applied at each location and for\n                        transports between different locations. For example,\n                        development could occur at multiple facilities within a\n                        single building, multiple buildings at the same site, or\n                        at multiple sites. Transports of parts of the TOE or the\n                        unfinished TOE between different development sites are\n                        to be covered by the, ,\n                        whereas the transport of the finished TOE to the\n                        consumer is dealt with in the, .\n\n                        Development includes the production of the TOE.', 'alc', 'alc_dvs', 'alc_dvs.2', 'alc_dvs.2.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('alc_dvs.2-2', ', AVA_VAN, The evaluator shall examine the development security\n                        documentation to determine that an appropriate\n                        justification is given why the security measures provide\n                        the necessary level of protection to maintain the\n                        confidentiality and integrity of the TOE.\n\n                        Since attacks on the TOE or its related information are\n                        assumed in different design and production stages,\n                        measures and procedures need to have an appropriate\n                        level necessary to prevent those attacks or to make them\n                        more difficult.\n\n                        Since this level depends on the overall attack potential\n                        claimed for the TOE (cf. the, component chosen), the development\n                        security documentation should justify the necessary\n                        level of protection to maintain the confidentiality and\n                        integrity of the TOE. This level has to be achieved by\n                        the security measures applied.\n\n                        The concept of protection measures should be consistent,\n                        and the justification should include an analysis of how\n                        the measures are mutually supportive. All aspects of\n                        development and production on all the different sites\n                        with all roles involved up to delivery of the TOE should\n                        be analysed.\n\n                        Justification may include an analysis of potential\n                        vulnerabilities taking the applied security measures\n                        into account.\n\n                        There may be a convincing argument showing that e.g., ', 'alc', 'alc_dvs', 'alc_dvs.2', 'alc_dvs.2.1e'),
('alc_dvs.2-3', ', ALC_CMC, The evaluator shall examine the development\n                        confidentiality and integrity policies in order to\n                        determine the sufficiency of the security measures\n                        employed.\n\n                        The evaluator should examine whether the following is included\n                        in the policies:, ALC_CMC, The evaluator should determine that these policies are\n                        described in the development security documentation,\n                        that the security measures employed are consistent with\n                        the policies, and that they are complete.\n\n                        It should be noted that configuration management\n                        procedures will help protect the integrity of the TOE\n                        and the evaluator should avoid overlap with the\n                        work-units conducted for the, ALC_DVS, . For example, the CM documentation may\n                        describe the security procedures necessary for\n                        controlling the roles or individuals who should have\n                        access to the development environment and who may modify\n                        the TOE.\n\n                        Whereas the, requirements are fixed, those for the, , mandating only necessary measures, are\n                        dependent on the nature of the TOE, and on information\n                        that may be provided in the ST. For example, the ST may\n                        identify a security objective for the development\n                        environment that requires the TOE to be developed by\n                        staff that has security clearance. The evaluators would\n                        then determine that such a policy had been applied under\n                        this sub-activity.', 'alc', 'alc_dvs', 'alc_dvs.2', 'alc_dvs.2.1e'),
('alc_dvs.2-4', 'The evaluator shall examine the development security\n                        documentation and associated evidence to determine that\n                        the security measures are being applied.\n\n                        This work unit requires the evaluator to determine that\n                        the security measures described in the development\n                        security documentation are being followed, such that the\n                        integrity of the TOE and the confidentiality of\n                        associated documentation is being adequately\n                        protected. For example, this could be determined by\n                        examination of the documentary evidence\n                        provided. Documentary evidence should be supplemented by\n                        visiting the development environment. A visit to the\n                        development environment will allow the evaluator to:, EVAL-GUIDANCE-SITE-VISITS, A development site visit is a useful means of gaining\n                        confidence in the measures being used. Any decision not\n                        to make such a visit should be determined in\n                        consultation with the evaluation authority.\n\n                        For guidance on site visits see, .', 'alc', 'alc_dvs', 'alc_dvs.2', 'alc_dvs.2.2e'),
('alc_flr.1-1', ', ALC_FLR, The evaluator shall examine the flaw remediation\n                        procedures documentation to determine that it describes\n                        the procedures used to track all reported security flaws\n                        in each release of the TOE.\n\n                        The procedures describe the actions that are taken by\n                        the developer from the time each suspected security flaw\n                        is reported to the time that it is resolved. This\n                        includes the flaw\'s entire time frame, from initial\n                        detection through ascertaining that the flaw is a\n                        security flaw, to resolution of the security\n                        flaw.\n\n                        If a flaw is discovered not to be security-relevant,\n                        there is no need (for the purposes of the, requirements) for the flaw\n                        remediation procedures to track it further; only that\n                        there be an explanation of why the flaw is not\n                        security-relevant.\n\n                        While these requirements do not mandate that there be a\n                        publicised means for TOE users to report security flaws,\n                        they do mandate that all security flaws that are\n                        reported be tracked. That is, a reported security flaw\n                        cannot be ignored simply because it comes from outside\n                        the developer\'s organisation.', 'alc', 'alc_flr', 'alc_flr.1', 'alc_flr.1.1e'),
('alc_flr.1-2', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would produce a description of each security\n                        flaw in terms of its nature and effects.\n\n                        The procedures identify the actions that are taken by\n                        the developer to describe the nature and effects of each\n                        security flaw in sufficient detail to be able to\n                        reproduce it. The description of the nature of a\n                        security flaw addresses whether it is an error in the\n                        documentation, a flaw in the design of the TSF, a flaw\n                        in the implementation of the TSF, etc. The description\n                        of the security flaw\'s effects identifies the portions\n                        of the TSF that are affected and how those portions are\n                        affected. For example, a security flaw in the\n                        implementation might be found that affects the\n                        identification and authentication enforced by the TSF by\n                        permitting authentication with the password\n                        ``BACK DOOR\'\'.', 'alc', 'alc_flr', 'alc_flr.1', 'alc_flr.1.1e'),
('alc_flr.1-3', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would identify the status of finding a\n                        correction to each security flaw.\n\n                        The flaw remediation procedures identify the different\n                        stages of security flaws. This differentiation includes\n                        at least: suspected security flaws that have been\n                        reported, suspected security flaws that have been\n                        confirmed to be security flaws, and security flaws whose\n                        solutions have been implemented. It is permissible that\n                        additional stages (e.g. flaws that have been reported\n                        but not yet investigated, flaws that are under\n                        investigation, security flaws for which a solution has\n                        been found but not yet implemented) be included.', 'alc', 'alc_flr', 'alc_flr.1', 'alc_flr.1.1e'),
('alc_flr.1-4', ', The evaluator shall check the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would identify the corrective action for each\n                        security flaw.\n\n\n                        Corrective action\n                        may consist of a\n                        repair to the hardware, firmware, or software portions\n                        of the TOE, a modification of TOE guidance, or\n                        both. Corrective action that constitutes modifications\n                        to TOE guidance (e.g. details of procedural measures to\n                        be taken to obviate the security flaw) includes both\n                        those measures serving as only an interim solution\n                        (until the repair is issued) as well as those serving as\n                        a permanent solution (where it is determined that the\n                        procedural measure is the best solution).\n\n                        If the source of the security flaw is a documentation\n                        error, the corrective action consists of an update of\n                        the affected TOE guidance. If the corrective action is a\n                        procedural measure, this measure will include an update\n                        made to the affected TOE guidance to reflect these\n                        corrective procedures.', 'alc', 'alc_flr', 'alc_flr.1', 'alc_flr.1.1e'),
('alc_flr.1-5', ', ALC_FLR.1-2, The evaluator shall examine the flaw remediation\n                        procedures documentation to determine that it describes\n                        a means of providing the TOE users with the necessary\n                        information on each security flaw.\n\n                        The\n                        necessary information\n                        about each\n                        security flaw consists of its description (not\n                        necessarily at the same level of detail as that provided\n                        as part of work unit, ), the prescribed corrective action,\n                        and any associated guidance on implementing the\n                        correction.\n\n                        TOE users may be provided with such information,\n                        correction, and documentation updates in any of several\n                        ways, such as their posting to a website, their being\n                        sent to TOE users, or arrangements made for the\n                        developer to install the correction. In cases where the\n                        means of providing this information requires action to\n                        be initiated by the TOE user, the evaluator examines any\n                        TOE guidance to ensure that it contains instructions for\n                        retrieving the information.\n\n                        The only metric for assessing the adequacy of the method\n                        used for providing the information, corrections and\n                        guidance is that there be a reasonable expectation that\n                        TOE users can obtain or receive it. For example,\n                        consider the method of dissemination where the requisite\n                        data is posted to a website for one month, and the TOE\n                        users know that this will happen and when this will\n                        happen. This may not be especially reasonable or\n                        effective (as, say, a permanent posting to the website),\n                        yet it is feasible that the TOE user could obtain the\n                        necessary information. On the other hand, if the\n                        information were posted to the website for only one\n                        hour, yet TOE users had no way of knowing this or when\n                        it would be posted, it is infeasible that they would\n                        ever get the necessary information.', 'alc', 'alc_flr', 'alc_flr.1', 'alc_flr.1.1e'),
('alc_flr.2-1', ', ALC_FLR, The evaluator shall examine the flaw remediation\n                        procedures documentation to determine that it describes\n                        the procedures used to track all reported security flaws\n                        in each release of the TOE.\n\n                        The procedures describe the actions that are taken by\n                        the developer from the time each suspected security flaw\n                        is reported to the time that it is resolved. This\n                        includes the flaw\'s entire time frame, from initial\n                        detection through ascertaining that the flaw is a\n                        security flaw, to resolution of the security\n                        flaw.\n\n                        If a flaw is discovered not to be security-relevant,\n                        there is no need (for the purposes of the, requirements) for the flaw\n                        remediation procedures to track it further; only that\n                        there be an explanation of why the flaw is not\n                        security-relevant.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-10', ', The evaluator shall examine the flaw remediation\n                        guidance to determine that the application of these\n                        procedures would result in a means for the TOE user to\n                        provide reports of suspected security flaws or requests\n                        for corrections to such flaws.\n\n                        The guidance ensures that TOE users have a means by\n                        which they can communicate with the TOE developer. By\n                        having a means of contact with the developer, the user\n                        can report security flaws, enquire about the status of\n                        security flaws, or request corrections to flaws.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-2', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would produce a description of each security\n                        flaw in terms of its nature and effects.\n\n                        The procedures identify the actions that are taken by\n                        the developer to describe the nature and effects of each\n                        security flaw in sufficient detail to be able to\n                        reproduce it. The description of the nature of a\n                        security flaw addresses whether it is an error in the\n                        documentation, a flaw in the design of the TSF, a flaw\n                        in the implementation of the TSF, etc. The description\n                        of the security flaw\'s effects identifies the portions\n                        of the TSF that are affected and how those portions are\n                        affected. For example, a security flaw in the\n                        implementation might be found that affects the\n                        identification and authentication enforced by the TSF by\n                        permitting authentication with the password\n                        ``BACKDOOR\'\'.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-3', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would identify the status of finding a\n                        correction to each security flaw.\n\n                        The flaw remediation procedures identify the different\n                        stages of security flaws. This differentiation includes\n                        at least: suspected security flaws that have been\n                        reported, suspected security flaws that have been\n                        confirmed to be security flaws, and security flaws whose\n                        solutions have been implemented. It is permissible that\n                        additional stages (e.g. flaws that have been reported\n                        but not yet investigated, flaws that are under\n                        investigation, security flaws for which a solution has\n                        been found but not yet implemented) be included.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-4', ', The evaluator shall check the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would identify the corrective action for each\n                        security flaw.\n\n\n                        Corrective action\n                        may consist of a\n                        repair to the hardware, firmware, or software portions\n                        of the TOE, a modification of TOE guidance, or\n                        both. Corrective action that constitutes modifications\n                        to TOE guidance (e.g. details of procedural measures to\n                        be taken to obviate the security flaw) includes both\n                        those measures serving as only an interim solution\n                        (until the repair is issued) as well as those serving as\n                        a permanent solution (where it is determined that the\n                        procedural measure is the best solution).\n\n                        If the source of the security flaw is a documentation\n                        error, the corrective action consists of an update of\n                        the affected TOE guidance. If the corrective action is a\n                        procedural measure, this measure will include an update\n                        made to the affected TOE guidance to reflect these\n                        corrective procedures.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-5', ', ALC_FLR.2-2, The evaluator shall examine the flaw remediation\n                        procedures documentation to determine that it describes\n                        a means of providing the TOE users with the necessary\n                        information on each security flaw.\n\n\n                        The necessary information\n                        about each\n                        security flaw consists of its description (not\n                        necessarily at the same level of detail as that provided\n                        as part of work unit, ), the prescribed corrective action,\n                        and any associated guidance on implementing the\n                        correction.\n\n                        TOE users may be provided with such information,\n                        correction, and documentation updates in any of several\n                        ways, such as their posting to a website, their being\n                        sent to TOE users, or arrangements made for the\n                        developer to install the correction. In cases where the\n                        means of providing this information requires action to\n                        be initiated by the TOE user, the evaluator examines any\n                        TOE guidance to ensure that it contains instructions for\n                        retrieving the information.\n\n                        The only metric for assessing the adequacy of the method\n                        used for providing the information, corrections and\n                        guidance is that there be a reasonable expectation that\n                        TOE users can obtain or receive it. For example,\n                        consider the method of dissemination where the requisite\n                        data is posted to a website for one month, and the TOE\n                        users know that this will happen and when this will\n                        happen. This may not be especially reasonable or\n                        effective (as, say, a permanent posting to the website),\n                        yet it is feasible that the TOE user could obtain the\n                        necessary information. On the other hand, if the\n                        information were posted to the website for only one\n                        hour, yet TOE users had no way of knowing this or when\n                        it would be posted, it is infeasible that they would\n                        ever get the necessary information.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-6', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that they describe procedures\n                        for the developer to accept reports of security flaws or\n                        requests for corrections to such flaws.\n\n                        The procedures ensure that TOE users have a means by\n                        which they can communicate with the TOE developer. By\n                        having a means of contact with the developer, the user\n                        can report security flaws, enquire about the status of\n                        security flaws, or request corrections to flaws. This\n                        means of contact may be part of a more general contact\n                        facility for reporting non-security related\n                        problems.\n\n                        The use of these procedures is not restricted to TOE\n                        users; however, only the TOE users are actively supplied\n                        with the details of these procedures. Others who might\n                        have access to or familiarity with the TOE can use the\n                        same procedures to submit reports to the developer, who\n                        is then expected to process them. Any means of\n                        submitting reports to the developer, other than those\n                        identified by the developer, are beyond the scope of\n                        this work unit; reports generated by other means need\n                        not be addressed.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-7', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would help to ensure every reported flaw is\n                        corrected.\n\n                        The flaw remediation procedures cover not only those\n                        security flaws discovered and reported by developer\n                        personnel, but also those reported by TOE users. The\n                        procedures are sufficiently detailed so that they\n                        describe how it is ensured that each reported security\n                        flaw is corrected. The procedures contain reasonable\n                        steps that show progress leading to the eventual,\n                        inevitable resolution.\n\n                        The procedures describe the process that is taken from\n                        the point at which the suspected security flaw is\n                        determined to be a security flaw to the point at which\n                        it is resolved.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-8', ', ALC_DEL, The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would help to ensure that the TOE users are\n                        issued remediation procedures for each security\n                        flaw.\n\n                        The procedures describe the process that is taken from\n                        the point at which a security flaw is resolved to the\n                        point at which the remediation procedures are\n                        provided. The procedures for delivering corrective\n                        actions should be consistent with the security\n                        objectives; they need not necessarily be identical to\n                        the procedures used for delivering the TOE, as\n                        documented to meet, ALC_DEL, , if\n                        included in the assurance requirements. For example, if\n                        the hardware portion of a TOE were originally delivered\n                        by bonded courier, updates to hardware resulting from\n                        flaw remediation would likewise be expected to be\n                        distributed by bonded courier. Updates unrelated to flaw\n                        remediation would follow the procedures set forth in the\n                        documentation meeting the, requirements.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.2-9', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would result in safeguards that the potential\n                        correction contains no adverse effects.\n\n                        Through analysis, testing, or a combination of the two,\n                        the developer may reduce the likelihood that adverse\n                        effects will be introduced when a security flaw is\n                        corrected. The evaluator assesses whether the procedures\n                        provide detail in how the necessary mix of analysis and\n                        testing actions is to be determined for a given\n                        correction.\n\n                        The evaluator also determines that, for instances where\n                        the source of the security flaw is a documentation\n                        problem, the procedures include the means of\n                        safeguarding against the introduction of contradictions\n                        with other documentation.', 'alc', 'alc_flr', 'alc_flr.2', 'alc_flr.2.1e'),
('alc_flr.3-1', ', ALC_FLR, The evaluator shall examine the flaw remediation\n                        procedures documentation to determine that it describes\n                        the procedures used to track all reported security flaws\n                        in each release of the TOE.\n\n                        The procedures describe the actions that are taken by\n                        the developer from the time each suspected security flaw\n                        is reported to the time that it is resolved. This\n                        includes the flaw\'s entire time frame, from initial\n                        detection through ascertaining that the flaw is a\n                        security flaw, to resolution of the security\n                        flaw.\n\n                        If a flaw is discovered not to be security-relevant,\n                        there is no need (for the purposes of the, requirements) for the flaw\n                        remediation procedures to track it further; only that\n                        there be an explanation of why the flaw is not\n                        security-relevant.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-10', ', ALC_DEL, The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would help to ensure that the TOE users are\n                        issued remediation procedures for each security\n                        flaw.\n                        The procedures describe the process that is taken\n                        from the point at which a security flaw is resolved to\n                        the point at which the remediation procedures are\n                        provided. The procedures for delivering remediation\n                        procedures should be consistent with the security\n                        objectives; they need not necessarily be identical to\n                        the procedures used for delivering the TOE, as\n                        documented to meet, ALC_DEL, , if\n                        included in the assurance requirements. For example, if\n                        the hardware portion of a TOE were originally delivered\n                        by bonded courier, updates to hardware resulting from\n                        flaw remediation would likewise be expected to be\n                        distributed by bonded courier. Updates unrelated to flaw\n                        remediation would follow the procedures set forth in the\n                        documentation meeting the, requirements.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-11', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would result in safeguards that the potential\n                        correction contains no adverse effects.\n\n                        Through analysis, testing, or a combination of the two,\n                        the developer may reduce the likelihood that adverse\n                        effects will be introduced when a security flaw is\n                        corrected. The evaluator assesses whether the procedures\n                        provide detail in how the necessary mix of analysis and\n                        testing actions is to be determined for a given\n                        correction.\n\n                        The evaluator also determines that, for instances where\n                        the source of the security flaw is a documentation\n                        problem, the procedures include the means of\n                        safeguarding against the introduction of contradictions\n                        with other documentation.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-12', ', The evaluator shall examine the flaw remediation\n                        guidance to determine that the application of these\n                        procedures would result in a means for the TOE user to\n                        provide reports of suspected security flaws or requests\n                        for corrections to such flaws.\n\n                        The guidance ensures that TOE users have a means by\n                        which they can communicate with the TOE developer. By\n                        having a means of contact with the developer, the user\n                        can report security flaws, enquire about the status of\n                        security flaws, or request corrections to flaws.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-13', ', The evaluator shall examine the flaw remediation\n                        guidance to determine that it describes a means of\n                        enabling the TOE users to register with the\n                        developer.\n\n\n                        Enabling the TOE users to register with the\n                        developer\n                        simply means having a way for each\n                        TOE user to provide the developer with a point of\n                        contact; this point of contact is to be used to\n                        provide the TOE user with information related to\n                        security flaws that might affect that TOE user, along\n                        with any corrections to the security flaw. Registering\n                        the TOE user may be accomplished as part of the\n                        standard procedures that TOE users undergo to identify\n                        themselves to the developer, for the purposes of\n                        registering a software licence, or for obtaining\n                        update and other useful information.\n\n                        There need not be one registered TOE user per\n                        installation of the TOE; it would be sufficient if there\n                        were one registered TOE user for an organisation. For\n                        example, a corporate TOE user might have a centralised\n                        acquisition office for all of its sites. In this case,\n                        the acquisition office would be a sufficient point of\n                        contact for all of that TOE user\'s sites, so that all of\n                        the TOE user\'s installations of the TOE have a\n                        registered point of contact.\n\n                        In either case, it must be possible to associate each\n                        TOE that is delivered with an organisation in order to\n                        ensure that there is a registered user for each TOE. For\n                        organisations that have many different addresses, this\n                        assures that there will be no user who is erroneously\n                        presumed to be covered by a registered TOE user.\n                        It should be noted that TOE users need not\n                        register; they must only be provided with a means of\n                        doing so. However, users who choose to register must be\n                        directly sent the information (or a notification of its\n                        availability).', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-14', ', The evaluator shall examine the flaw remediation\n                        guidance to determine that it identifies specific points\n                        of contact for user reports and enquiries about security\n                        issues involving the TOE.\n\n                        The guidance includes a means whereby registered TOE\n                        users can interact with the developer to report\n                        discovered security flaws in the TOE or to make\n                        enquiries regarding discovered security flaws in the\n                        TOE.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-2', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would produce a description of each security\n                        flaw in terms of its nature and effects.\n\n                        The procedures identify the actions that are taken by\n                        the developer to describe the nature and effects of each\n                        security flaw in sufficient detail to be able to\n                        reproduce it. The description of the nature of a\n                        security flaw addresses whether it is an error in the\n                        documentation, a flaw in the design of the TSF, a flaw\n                        in the implementation of the TSF, etc. The description\n                        of the security flaw\'s effects identifies the portions\n                        of the TSF that are affected and how those portions are\n                        affected. For example, a security flaw in the\n                        implementation might be found that affects the\n                        identification and authentication enforced by the TSF by\n                        permitting authentication with the password\n                        ``BACKDOOR\'\'.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-3', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would identify the status of finding a\n                        correction to each security flaw.\n\n                        The flaw remediation procedures identify the different\n                        stages of security flaws. This differentiation includes\n                        at least: suspected security flaws that have been\n                        reported, suspected security flaws that have been\n                        confirmed to be security flaws, and security flaws whose\n                        solutions have been implemented. It is permissible that\n                        additional stages (e.g. flaws that have been reported\n                        but not yet investigated, flaws that are under\n                        investigation, security flaws for which a solution has\n                        been found but not yet implemented) be included.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-4', ', The evaluator shall check the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would identify the corrective action for each\n                        security flaw.\n\n\n                        Corrective action\n                        may consist of a\n                        repair to the hardware, firmware, or software portions\n                        of the TOE, a modification of TOE guidance, or\n                        both. Corrective action that constitutes modifications\n                        to TOE guidance (e.g. details of procedural measures to\n                        be taken to obviate the security flaw) includes both\n                        those measures serving as only an interim solution\n                        (until the repair is issued) as well as those serving as\n                        a permanent solution (where it is determined that the\n                        procedural measure is the best solution).\n\n                        If the source of the security flaw is a documentation\n                        error, the corrective action consists of an update of\n                        the affected TOE guidance. If the corrective action is a\n                        procedural measure, this measure will include an update\n                        made to the affected TOE guidance to reflect these\n                        corrective procedures.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-5', ', ALC_FLR.3-2, The evaluator shall examine the flaw remediation\n                        procedures documentation to determine that it describes\n                        a means of providing the TOE users with the necessary\n                        information on each security flaw.\n\n\n                        The necessary information\n                        about each\n                        security flaw consists of its description (not\n                        necessarily at the same level of detail as that provided\n                        as part of work unit, ALC_FLR.3-12, ), the prescribed corrective action,\n                        and any associated guidance on implementing the\n                        correction.\n\n                        TOE users may be provided with such information,\n                        correction, and documentation updates in any of several\n                        ways, such as their posting to a website, their being\n                        sent to TOE users, or arrangements made for the\n                        developer to install the correction. In cases where the\n                        means of providing this information requires action to\n                        be initiated by the TOE user, the evaluator examines any\n                        TOE guidance to ensure that it contains instructions for\n                        retrieving the information.\n\n                        The only metric for assessing the adequacy of the method\n                        used for providing the information, corrections and\n                        guidance is that there be a reasonable expectation that\n                        TOE users can obtain or receive it. For example,\n                        consider the method of dissemination where the requisite\n                        data is posted to a website for one month, and the TOE\n                        users know that this will happen and when this will\n                        happen. This may not be especially reasonable or\n                        effective (as, say, a permanent posting to the website),\n                        yet it is feasible that the TOE user could obtain the\n                        necessary information. On the other hand, if the\n                        information were posted to the website for only one\n                        hour, yet TOE users had no way of knowing this or when\n                        it would be posted, it is infeasible that they would\n                        ever get the necessary information.\n\n                        For TOE users who register with the developer (see work\n                        unit, ), the\n                        passive availability of this information is not\n                        sufficient. Developers must actively send the\n                        information (or a notification of its availability) to\n                        registered TOE users.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-6', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would result in a means for the developer to\n                        receive from TOE user reports of suspected security\n                        flaws or requests for corrections to such flaws.\n\n                        The procedures ensure that TOE users have a means by\n                        which they can communicate with the TOE developer. By\n                        having a means of contact with the developer, the user\n                        can report security flaws, enquire about the status of\n                        security flaws, or request corrections to flaws. This\n                        means of contact may be part of a more general contact\n                        facility for reporting non-security related\n                        problems.\n\n                        The use of these procedures is not restricted to TOE\n                        users; however, only the TOE users are actively supplied\n                        with the details of these procedures. Others who might\n                        have access to or familiarity with the TOE can use the\n                        same procedures to submit reports to the developer, who\n                        is then expected to process them. Any means of\n                        submitting reports to the developer, other than those\n                        identified by the developer, are beyond the scope of\n                        this work unit; reports generated by other means need\n                        not be addressed.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-7', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would result in a timely means of providing\n                        the registered TOE users who might be affected with\n                        reports about, and associated corrections to, each\n                        security flaw.\n\n                        The issue of timeliness applies to the issuance of both\n                        security flaw reports and the associated\n                        corrections. However, these need not be issued at the\n                        same time. It is recognised that flaw reports should be\n                        generated and issued as soon as an interim solution is\n                        found, even if that solution is as drastic as turn off\n                        the TOE. Likewise, when a more permanent (and less\n                        drastic) solution is found, it should be issued without\n                        undue delay.\n\n                        It is unnecessary to restrict the recipients of the\n                        reports and associated corrections to only those TOE\n                        users who might be affected by the security flaw; it is\n                        permissible that all TOE users be given such reports and\n                        corrections for all security flaws, provided such is\n                        done in a timely manner.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-8', ', The evaluator shall examine the flaw remediation\n                        procedures to determine that the application of these\n                        procedures would result in automatic distribution of the\n                        reports and associated corrections to the registered TOE\n                        users who might be affected.\n\n\n                        Automatic distribution\n                        does not mean\n                        that human interaction with the distribution method is\n                        not permitted. In fact, the distribution method could\n                        consist entirely of manual procedures, perhaps through a\n                        closely monitored procedure with prescribed escalation\n                        upon the lack of issue of reports or corrections.\n\n                        It is unnecessary to restrict the recipients of the\n                        reports and associated corrections to only those TOE\n                        users who might be affected by the security flaw; it is\n                        permissible that all TOE users be given such reports and\n                        corrections for all security flaws, provided such is\n                        done automatically.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_flr.3-9', ', The evaluator shall examine the flaw remediation procedures to\n                        determine that the application of these procedures would help to\n                        ensure that every reported flaw is corrected.\n\n                        The flaw remediation procedures cover not only those\n                        security flaws discovered and reported by developer\n                        personnel, but also those reported by TOE users. The\n                        procedures are sufficiently detailed so that they\n                        describe how it is ensured that each reported security\n                        flaw is remediated. The procedures contain reasonable\n                        steps that show progress leading to the eventual,\n                        inevitable resolution.\n\n                        The procedures describe the process that is taken from\n                        the point at which the suspected security flaw is\n                        determined to be a security flaw to the point at which\n                        it is resolved.', 'alc', 'alc_flr', 'alc_flr.3', 'alc_flr.3.1e'),
('alc_tat.1-1', ', The evaluator shall examine the development tool\n                        documentation provided to determine that each\n                        development tools is well-defined.\n\n                        For example, a well-defined language, compiler or CAD\n                        system may be considered to be one that conforms to a\n                        recognised standard, such as the ISO standards. A\n                        well-defined language is one that has a clear and\n                        complete description of its syntax, and a detailed\n                        description of the semantics of each construct.', 'alc', 'alc_tat', 'alc_tat.1', 'alc_tat.1.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('alc_tat.1-2', ', ADV_IMP, The evaluator shall examine the documentation of each\n                        development tool to determine that it unambiguously\n                        defines the meaning of all statements as well as all\n                        conventions and directives used in the\n                        implementation.\n\n                        The development tool documentation (e.g. programming\n                        language specifications and user manuals) should cover\n                        all statements used in the implementation representation\n                        of the TOE, and for each such statement should provide a\n                        clear and unambiguous definition of the purpose and\n                        effect of that statement. This work may be performed in\n                        parallel with the evaluator\'s examination of the\n                        implementation representation performed during the, ADV_IMP, sub-activity. The key test the\n                        evaluator should apply is whether or not the\n                        documentation is sufficiently clear for the evaluator to\n                        be able to understand the implementation\n                        representation. The documentation should not assume (for\n                        example) that the reader is an expert in the programming\n                        language used.\n\n                        Reference to the use of a documented standard is an\n                        acceptable approach to meet this requirement, provided\n                        that the standard is available to the evaluator. Any\n                        differences from the standard should be\n                        documented.\n\n                        The critical test is whether the evaluator can\n                        understand the TOE source code when performing source\n                        code analysis covered in the, sub-activity.  However, the following\n                        checklist can additionally be used in searching for\n                        problem areas:, Most languages in common use, however well designed,\n                        will have some problematic constructs. If the\n                        implementation language is mostly well defined, but some\n                        problematic constructs exist, then an inconclusive\n                        verdict should be assigned, pending examination of the\n                        source code.\n\n                        The evaluator should verify, during the examination of\n                        source code, that any use of the problematic constructs\n                        does not introduce vulnerabilities. The evaluator should\n                        also ensure that constructs precluded by the documented\n                        standard are not used.\n\n                        The development tool documentation should define all\n                        conventions and directives used in the\n                        implementation.', 'alc', 'alc_tat', 'alc_tat.1', 'alc_tat.1.1e'),
('alc_tat.1-3', ', The evaluator shall examine the development tool\n                        documentation to determine that it unambiguously defines\n                        the meaning of all implementation-dependent\n                        options.\n\n                        The documentation of software development tools should\n                        include definitions of implementation-dependent options\n                        that may affect the meaning of the executable code, and\n                        those that are different from the standard language as\n                        documented. Where source code is provided to the\n                        evaluator, information should also be provided on\n                        compilation and linking options used.\n\n                        The documentation for hardware design and development\n                        tools should describe the use of all options that affect\n                        the output from the tools (e.g. detailed hardware\n                        specifications, or actual hardware).', 'alc', 'alc_tat', 'alc_tat.1', 'alc_tat.1.1e'),
('ate_cov.1-1', ', The evaluator shall examine the test coverage evidence\n                        to determine that the correspondence between the tests\n                        identified in the test documentation and the TSFIs\n                        described in the functional specification is\n                        accurate.\n\n                        Correspondence may take the form of a table or\n                        matrix. The coverage evidence required for this\n                        component will reveal the extent of coverage, rather\n                        than to show complete coverage. In cases where coverage\n                        is shown to be poor the evaluator should increase the\n                        level of independent testing to compensate.', 'ate', 'ate_cov', 'ate_cov.1', 'ate_cov.1.1e'),
('ate_cov.2-1', ', The evaluator shall examine the test coverage analysis\n                        to determine that the correspondence between the tests\n                        in the test documentation and the interfaces in the\n                        functional specification is accurate.\n\n                        A simple cross-table may be sufficient to show test\n                        correspondence. The identification of the tests and the\n                        interfaces presented in the test coverage analysis has\n                        to be unambiguous.\n\n                        The evaluator is reminded that this does not imply that\n                        all tests in the test documentation must map to\n                        interfaces in the functional specification.', 'ate', 'ate_cov', 'ate_cov.2', 'ate_cov.2.1e'),
('ate_cov.2-2', ', The evaluator shall examine the test plan to determine\n                        that the testing approach for each interface\n                        demonstrates the expected behaviour of that\n                        interface.\n\n                        Guidance on this work unit can be found in:, ', 'ate', 'ate_cov', 'ate_cov.2', 'ate_cov.2.1e'),
('ate_cov.2-3', ', The evaluator shall examine the test procedures to\n                        determine that the test prerequisites, test steps and\n                        expected result(s) adequately test each\n                        interface.\n\n                        Guidance on this work units, as it pertains to the\n                        functional specification, can be found in:, ', 'ate', 'ate_cov', 'ate_cov.2', 'ate_cov.2.1e'),
('ate_cov.2-4', ', The evaluator shall examine the test coverage analysis\n                        to determine that the correspondence between the\n                        interfaces in the functional specification and the tests\n                        in the test documentation is complete.\n\n                        All TSFIs that are described in the functional\n                        specification have to be present in the test coverage\n                        analysis and mapped to tests in order for completeness\n                        to be claimed, although exhaustive specification testing\n                        of interfaces is not required. Incomplete coverage would\n                        be evident if an interface was identified in the\n                        functional specification and no test was mapped to\n                        it.\n\n                        The evaluator is reminded that this does not imply that\n                        all tests in the test documentation must map to\n                        interfaces in the functional specification.', 'ate', 'ate_cov', 'ate_cov.2', 'ate_cov.2.1e'),
('ate_dpt.1-1', ', ADV_ARC, The evaluator shall examine the depth of testing\n                        analysis to determine that the descriptions of the\n                        behaviour of TSF subsystems and of their interactions is\n                        included within the test documentation.\n\n                        This work unit verifies the content of the\n                        correspondence between the tests and the descriptions in\n                        the TOE design. In cases where the description of the\n                        TSF\'s architectural soundness (in, ATE_DPT.1, ) cites specific mechanisms, this work\n                        unit also verifies the correspondence between the tests\n                        and the descriptions of the behaviour of such\n                        mechanisms.\n\n                        A simple cross-table may be sufficient to show test\n                        correspondence. The identification of the tests and the\n                        behaviour/interaction presented in the depth-of coverage\n                        analysis has to be unambiguous.\n\n                        When, ADV_TDS, is combined with a component of, ADV_TDS.3, , which includes descriptions at the module level\n                        (e.g., ADV_TDS.3, ), the level of detail needed to map\n                        the test cases to the behaviour of the subsystems may require\n                        information from the module description to be used. This is\n                        because, ADV_TDS.2, allows the description of details\n                        to be shifted from the subsystem level to the module level, or\n                        even to omit the subsystems altogether.\n                        In any case, the required level of detail in the provided\n                        reference to the tested behaviour can be defined as ``the level\n                        of detail required for the description of subsystem behaviour as\n                        defined by, ADV_TDS.2-4, (in particular work unit, )\'\'. It states that a detailed description of\n                        the behaviour typically discusses how the functionality is\n                        provided, in terms of what key data and data structures re\n                        present; what control relationships exist within a subsytem and\n                        how these elements work together to provide the SFR-enforcing\n                        behaviour.\n                        The evaluator is reminded that not all tests in the test\n                        documentation must map to a subsystem behaviour or\n                        interaction description.', 'ate', 'ate_dpt', 'ate_dpt.1', 'ate_dpt.1.1e'),
('ate_dpt.1-2', ', ATE_DPT.1, The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for the behaviour\n                        description demonstrates the behaviour of that subsystem\n                        as described in the TOE design.\n\n                        Guidance on this work unit can be found in:, ADV_TDS, When, ADV_TDS.3, is combined with a component of, ADV_TDS.3, , which includes descriptions at the module level\n                        (e.g., ADV_TDS.2, ), the level of detail needed to map\n                        the test cases to the behaviour of the subsystems may require\n                        information from the module description to be used. This is\n                        because, ADV_TDS.2-4, allows the description of details\n                        to be shifted from the subsystem level to the module level, or\n                        even to omit the subsystems altogether.\n                        In any case, the required level of detail in the provided\n                        reference to the tested behaviour can be defined as ``the level\n                        of detail required for the description of subsystem behaviour as\n                        defined by, (in particular work unit, )\'\'. It states that a detailed description of\n                        the behaviour typically discusses how the functionality is\n                        provided, in terms of what key data and data structures re\n                        present; what control relationships exist within a subsytem and\n                        how these elements work together to provide the SFR-enforcing\n                        behaviour.\n                        If TSF subsystem interfaces are described, the behaviour\n                        of those subsystems may be tested directly from those\n                        interfaces. Otherwise, the behaviour of those subsystems\n                        is tested from the TSFI interfaces. Or a combination of\n                        the two may be employed.  Whatever strategy is used the\n                        evaluator will consider its appropriateness for\n                        adequately testing the behaviour that is described in\n                        the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.1', 'ate_dpt.1.1e'),
('ate_dpt.1-3', ', The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for the behaviour\n                        description demonstrates the interactions among\n                        subsystems as described in the TOE design.\n\n                        While the previous work unit addresses behaviour of subsystems,\n                        this work unit addresses the interactions among\n                        subsystems.\n\n                        Guidance on this work unit can be found in:, If TSF subsystem interfaces are described, the\n                        interactions with other subsystems may be tested\n                        directly from those interfaces. Otherwise, the\n                        interactions among subsystems must be inferred from the\n                        TSFI interfaces. Whatever strategy is used the evaluator\n                        will consider its appropriateness for adequately testing\n                        the interactions among subsystems that are described in\n                        the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.1', 'ate_dpt.1.1e'),
('ate_dpt.1-4', ', ATE_DPT.1-1, The evaluator shall examine the test procedures to\n                        determine that all descriptions of TSF subsystem\n                        behaviour and interaction are tested.\n\n                        This work unit verifies the completeness of work unit, ATE_DPT.1, .  All descriptions\n                        of TSF subsystem behaviour and of interactions among TSF\n                        subsystems that are provided in the TOE design have to\n                        be tested.  Incomplete depth of testing would be evident\n                        if a description of TSF subsystem behaviour or of\n                        interactions among TSF subsystems was identified in the\n                        TOE design and no tests could be attributed to\n                        it.\n\n                        When, ADV_TDS, is combined with a component of, ADV_TDS.3, , which includes descriptions at the module level\n                        (e.g., ADV_TDS.3, ), the level of detail needed to map\n                        the test cases to the behaviour of the subsystems may require\n                        information from the module description to be used. This is\n                        because, ADV_TDS.2, allows the description of details\n                        to be shifted from the subsystem level to the module level, or\n                        even to omit the subsystems altogether.\n                        In any case, the required level of detail in the provided\n                        reference to the tested behaviour can be defined as ``the level\n                        of detail required for the description of subsystem behaviour as\n                        defined by, ADV_TDS.2-4, (in particular work unit, )\'\'. It states that a detailed description of\n                        the behaviour typically discusses how the functionality is\n                        provided, in terms of what key data and data structures re\n                        present; what control relationships exist within a subsytem and\n                        how these elements work together to provide the SFR-enforcing\n                        behaviour.\n                        The evaluator is reminded that this does not imply that all\n                        tests in the test documentation must map to the subsystem behaviour\n                        or interaction description in the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.1', 'ate_dpt.1.1e'),
('ate_dpt.2-1', ', ADV_ARC, The evaluator shall examine the depth of testing\n                        analysis to determine that descriptions of the behaviour\n                        of TSF subsystems and of their interactions are included\n                        within the test documentation.\n\n                        This work unit verifies the content of the\n                        correspondence between the tests and the descriptions in\n                        the TOE design. In cases where the description of the\n                        TSF\'s architectural soundness (in, ) cites specific mechanisms, this work\n                        unit also verifies the correspondence between the tests\n                        and the descriptions of the behaviour of such\n                        mechanisms.\n\n                        A simple cross-table may be sufficient to show test\n                        correspondence. The identification of the tests and the\n                        behaviour/interaction presented in the depth-of coverage\n                        analysis has to be unambiguous.\n\n                        The evaluator is reminded that not all tests in the test\n                        documentation must map to a subsystem behaviour or\n                        interaction description.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.2-2', ', The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for the behaviour\n                        description demonstrates the behaviour of that subsystem\n                        as described in the TOE design.\n\n                        Guidance on this work unit can be found in:, If TSF subsystem interfaces are described, the behaviour\n                        of those subsystems may be tested directly from those\n                        interfaces. Otherwise, the behaviour of those subsystems\n                        is tested from the TSFI interfaces. Or a combination of\n                        the two may be employed.  Whatever strategy is used the\n                        evaluator will consider its appropriateness for\n                        adequately testing the behaviour that is described in\n                        the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.2-3', ', The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for the behaviour\n                        description demonstrates the interactions among\n                        subsystems as described in the TOE design.\n\n                        While the previous work unit addresses behaviour of subsystems,\n                        this work unit addresses the interactions among\n                        subsystems.\n\n                        Guidance on this work unit can be found in:, If TSF subsystem interfaces are described, the\n                        interactions with other subsystems may be tested\n                        directly from those interfaces. Otherwise, the\n                        interactions among subsystems must be inferred from the\n                        TSFI interfaces. Whatever strategy is used the evaluator\n                        will consider its appropriateness for adequately testing\n                        the interactions among subsystems that are described in\n                        the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.2-4', ', ADV_ARC, The evaluator shall examine the depth of testing\n                        analysis to determine that the interfaces of\n                        SFR-enforcing modules are included within the test\n                        documentation.\n\n                        This work unit verifies the content of the\n                        correspondence between the tests and the descriptions in\n                        the TOE design. In cases where the description of the\n                        TSF\'s architectural soundness (in, ) cites specific mechanisms at the modular\n                        level, this work unit also verifies the correspondence\n                        between the tests and the descriptions of the behaviour\n                        of such mechanisms.\n\n                        A simple cross-table may be sufficient to show test\n                        correspondence. The identification of the tests and the\n                        SFR-enforcing modules presented in the depth-of coverage\n                        analysis has to be unambiguous.\n\n                        The evaluator is reminded that not all tests in the test\n                        documentation must map to the interfaces of SFR-enforcing modules.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.2-5', ', ATE_DPT.2-2, The evaluator shall examine the test plan, test prerequisites,\n                        test steps and expected result(s) to determine that the testing\n                        approach for each SFR-enforcing module interface demonstrates\n                        the expected behaviour of that interface.\n\n                        While work unit, ATE_DPT.2-4, addresses\n                        expected behaviour of subsystems, this work unit addresses\n                        expected behaviour of the SFR-enforcing module interfaces that\n                        are covered by, .\n\n                        Guidance on this work unit can be found in:, Testing of an interface may be performed directly\n                        at that interface, or at the external interfaces, or a\n                        combination of both. Whatever strategy is used the\n                        evaluator will consider its appropriateness for\n                        adequately testing the interfaces. Specifically the\n                        evaluator determines whether testing at the internal\n                        interfaces is necessary or whether these internal\n                        interfaces can be adequately tested (albeit implicitly)\n                        by exercising the external interfaces. This\n                        determination is left to the evaluator, as is its\n                        justification.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.2-6', ', ATE_DPT.2-1, The evaluator shall examine the test procedures to\n                        determine that all descriptions of TSF subsystem\n                        behaviour and interaction are tested.\n\n                        This work unit verifies the completeness of work unit, .  All descriptions\n                        of TSF subsystem behaviour and of interactions among TSF\n                        subsystems that are provided in the TOE design have to\n                        be tested.  Incomplete depth of testing would be evident\n                        if a description of TSF subsystem behaviour or of\n                        interactions among TSF subsystems was identified in the\n                        TOE design and no tests could be attributed to\n                        it.\n\n                        The evaluator is reminded that this does not imply that all\n                        tests in the test documentation must map to the subsystem behaviour\n                        or interaction description in the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.2-7', ', ATE_DPT.2-4, The evaluator shall examine the test procedures to\n                        determine that all interfaces of SFR-enforcing modules\n                        are tested.\n\n                        This work unit verifies the completeness of work unit, .  All interfaces\n                        of SFR-enforcing modules that are provided in the TOE\n                        design have to be tested.  Incomplete depth of testing\n                        would be evident if any interface of any SFR-enforcing\n                        modules was identified in the TOE design and no tests\n                        could be attributed to it.\n                        The evaluator is reminded that this does not imply\n                        that all tests in the test documentation must map to an\n                        interface of an SFR-enforcing module in the TOE\n                        design.', 'ate', 'ate_dpt', 'ate_dpt.2', 'ate_dpt.2.1e'),
('ate_dpt.3-1', ', The evaluator shall examine the depth of testing\n                        analysis to determine that descriptions of the behaviour\n                        of TSF subsystems and of their interactions are included\n                        within the test documentation.\n\n                        This work unit verifies the content of the\n                        correspondence between the tests and the descriptions in\n                        the TOE design. A simple cross-table may be sufficient\n                        to show test correspondence. The identification of the\n                        tests and the behaviour/interaction presented in the\n                        depth-of coverage analysis has to be unambiguous.\n\n                        The evaluator is reminded that not all tests in the test\n                        documentation must map to a subsystem behaviour or\n                        interaction description.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_dpt.3-2', ', The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for the behaviour\n                        description demonstrates the behaviour of that subsystem\n                        as described in the TOE design.\n\n                        Guidance on this work unit can be found in:, If TSF subsystem interfaces are provided, the behaviour\n                        of those subsystems may be performed directly from those\n                        interfaces. Otherwise, the behaviour of those subsystems\n                        is tested from the TSFI interfaces. Or a combination of\n                        the two may be employed.  Whatever strategy is used the\n                        evaluator will consider its appropriateness for\n                        adequately testing the behaviour that is described in\n                        the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_dpt.3-3', ', The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for the behaviour\n                        description demonstrates the interactions among\n                        subsystems as described in the TOE design.\n\n                        Guidance on this work unit can be found in:, While the previous work unit addresses behaviour of subsystems,\n                        this work unit addresses the interactions among\n                        subsystems.\n\n                        If TSF subsystem interfaces are provided, the\n                        interactions with other subsystems may be performed\n                        directly from those interfaces. Otherwise, the\n                        interactions among subsystems must be inferred from the\n                        TSFI interfaces. Whatever strategy is used the evaluator\n                        will consider its appropriateness for adequately testing\n                        the interactions among subsystems that are described in\n                        the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_dpt.3-4', ', The evaluator shall examine the depth of testing\n                        analysis to determine that the interfaces of TSF modules\n                        are included within the test documentation.\n\n                        This work unit verifies the content of the\n                        correspondence between the tests and the descriptions in\n                        the TOE design. A simple cross-table may be sufficient\n                        to show test correspondence. The identification of the\n                        tests and the behaviour/interaction presented in the\n                        depth-of coverage analysis has to be unambiguous.\n\n                        The evaluator is reminded that not all tests in the test\n                        documentation must map to a subsystem behaviour or\n                        interaction description.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_dpt.3-5', ', The evaluator shall examine the test plan, test\n                        prerequisites, test steps and expected result(s) to\n                        determine that the testing approach for each TSF module\n                        interface demonstrates the expected behaviour of that\n                        interface.\n\n                        Guidance on this work unit can be found in:, Testing of an interface may be performed directly\n                        at that interface, or at the external interfaces, or a\n                        combination of both. Whatever strategy is used the\n                        evaluator will consider its appropriateness for\n                        adequately testing the interfaces. Specifically the\n                        evaluator determines whether testing at the internal\n                        interfaces is necessary or whether these internal\n                        interfaces can be adequately tested (albeit implicitly)\n                        by exercising the external interfaces. This\n                        determination is left to the evaluator, as is its\n                        justification.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_dpt.3-6', ', ATE_DPT.3-1, The evaluator shall examine the test procedures to\n                        determine that all descriptions of TSF subsystem\n                        behaviour and interaction are tested.\n\n                        This work unit verifies the completeness of work unit, .  All descriptions\n                        of TSF subsystem behaviour and of interactions among TSF\n                        subsystems that are provided in the TOE design have to\n                        be tested.  Incomplete depth of testing would be evident\n                        if a description of TSF subsystem behaviour or of\n                        interactions among TSF subsystems was identified in the\n                        TOE design and no tests could be attributed to\n                        it.\n\n                        The evaluator is reminded that this does not imply that all\n                        tests in the test documentation must map to the subsystem behaviour\n                        or interaction description in the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_dpt.3-7', ', ATE_DPT.3-4, The evaluator shall examine the test procedures to determine\n                        that all interfaces of all TSF modules are tested.\n\n                        This work unit verifies the completeness of work unit, .  All interfaces\n                        of TSF modules that are provided in the TOE design have\n                        to be tested.  Incomplete depth of testing would be\n                        evident if any interface of any TSF module was\n                        identified in the TOE design and no tests could be\n                        attributed to it.\n                        The evaluator is reminded that this does not imply\n                        that all tests in the test documentation must map to an\n                        interface of a TSF module in the TOE design.', 'ate', 'ate_dpt', 'ate_dpt.3', 'ate_dpt.3.1e'),
('ate_fun.1-1', ', The evaluator shall check that the test documentation\n                        includes test plans, expected test results and actual\n                        test results.\n\n                        The evaluator checks that test plans, expected tests\n                        results and actual test results are included in the test\n                        documentation.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_fun.1-2', ', The evaluator shall examine the test plan to determine\n                        that it describes the scenarios for performing each\n                        test.\n\n                        The evaluator determines that the test plan provides\n                        information about the test configuration being used:\n                        both on the configuration of the TOE and on any test\n                        equipment being used. This information should be\n                        detailed enough to ensure that the test configuration is\n                        reproducible.\n\n                        The evaluator also determines that the test plan\n                        provides information about how to execute the test: any\n                        necessary automated set-up procedures (and whether they\n                        require privilege to run), inputs to be applied, how\n                        these inputs are applied, how output is obtained, any\n                        automated clean-up procedures (and whether they require\n                        privilege to run), etc.  This information should be\n                        detailed enough to ensure that the test is\n                        reproducible.\n\n                        The evaluator may wish to employ a sampling strategy\n                        when performing this work unit.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_fun.1-3', ', ALC_CMC, The evaluator shall examine the test plan to determine\n                        that the TOE test configuration is consistent with the\n                        ST.\n\n                        The TOE referred to in the developer\'s test plan should\n                        have the same unique reference as established by the, ACO, sub-activities and\n                        identified in the ST introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The evaluator verifies\n                        that all test configurations identified in the developer\n                        test documentation are consistent with the ST. For\n                        example, the ST might define configuration options that\n                        must be set, which could have an impact upon what\n                        constitutes the TOE by including or excluding additional\n                        portions. The evaluator verifies that all such\n                        variations of the TOE are considered.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        The evaluator may wish to employ a sampling strategy\n                        when performing this work unit.\n\n                        If this work unit is applied to a component TOE that\n                        might be used/integrated in a composed TOE (see, ), the following will apply.  In\n                        the instances that the component TOE under evaluation\n                        depends on other components in the operational\n                        environment to support their operation, the developer\n                        may wish to consider using the other component(s) that\n                        will be used in the composed TOE to fulfil the\n                        requirements of the operational environment as one of\n                        the test configurations.  This will reduce the amount an\n                        additional testing that will be required for the\n                        composed TOE evaluation.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_fun.1-4', ', The evaluator shall examine the test plans to determine\n                        that sufficient instructions are provided for any\n                        ordering dependencies.\n\n                        Some steps may have to be performed to establish initial\n                        conditions. For example, user accounts need to be added\n                        before they can be deleted. An example of ordering\n                        dependencies on the results of other tests is the need\n                        to perform actions in a test that will result in the\n                        generation of audit records, before performing a test to\n                        consider the searching and sorting of those audit\n                        records.  Another example of an ordering dependency\n                        would be where one test case generates a file of data to\n                        be used as input for another test case.\n\n                        The evaluator may wish to employ a sampling strategy\n                        when performing this work unit.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_fun.1-5', ', The evaluator shall examine the test documentation to\n                        determine that all expected tests results are\n                        included.\n\n                        The expected test results are needed to determine\n                        whether or not a test has been successfully\n                        performed. Expected test results are sufficient if they\n                        are unambiguous and consistent with expected behaviour\n                        given the testing approach.\n\n                        The evaluator may wish to employ a sampling strategy\n                        when performing this work unit.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_fun.1-6', ', The evaluator shall check that the actual test results\n                        in the test documentation are consistent with the\n                        expected test results in the test documentation.\n\n                        A comparison of the actual and expected test results\n                        provided by the developer will reveal any\n                        inconsistencies between the results. It may be that a\n                        direct comparison of actual results cannot be made until\n                        some data reduction or synthesis has been first\n                        performed. In such cases, the developer\'s test\n                        documentation should describe the process to reduce or\n                        synthesise the actual data.\n\n                        For example, the developer may need to test the contents\n                        of a message buffer after a network connection has\n                        occurred to determine the contents of the buffer. The\n                        message buffer will contain a binary number. This binary\n                        number would have to be converted to another form of\n                        data representation in order to make the test more\n                        meaningful. The conversion of this binary representation\n                        of data into a higher-level representation will have to\n                        be described by the developer in enough detail to allow\n                        an evaluator to perform the conversion process\n                        (i.e. synchronous or asynchronous transmission, number\n                        of stop bits, parity, etc.).\n\n                        It should be noted that the description of the process\n                        used to reduce or synthesise the actual data is used by\n                        the evaluator not to actually perform the necessary\n                        modification but to assess whether this process is\n                        correct. It is up to the developer to transform the\n                        expected test results into a format that allows an easy\n                        comparison with the actual test results.\n\n                        The evaluator may wish to employ a sampling strategy\n                        when performing this work unit.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_fun.1-7', ', The evaluator shall report the developer testing effort,\n                        outlining the testing approach, configuration, depth and\n                        results.\n\n                        The developer testing information recorded in the ETR allows the\n                        evaluator to convey the overall testing approach and effort\n                        expended on the testing of the TOE by the developer. The intent\n                        of providing this information is to give a meaningful overview\n                        of the developer testing effort. It is not intended that the\n                        information regarding developer testing in the ETR be an exact\n                        reproduction of specific test steps or results of individual\n                        tests. The intention is to provide enough detail to allow other\n                        evaluators and evaluation authorities to gain some insight about the\n                        developer\'s testing approach, amount of testing performed, TOE\n                        test configurations, and the overall results of the developer\n                        testing.\n\n                        Information that would typically be found in the ETR\n                        subclause regarding the developer testing effort is:, This list is by no means exhaustive and is only intended\n                        to provide some context as to the type of information\n                        that should be present in the ETR concerning the\n                        developer testing effort.', 'ate', 'ate_fun', 'ate_fun.1', 'ate_fun.1.1e'),
('ate_ind.1-1', ', ALC_CMC, The evaluator shall examine the TOE to determine that\n                        the test configuration is consistent with the\n                        configuration under evaluation as specified in the\n                        ST.\n\n                        The TOE provided by the developer should have the same\n                        unique reference as established by the, sub-activities and identified\n                        in the ST introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The TOE may comprise a\n                        number of distinct hardware and software entities that\n                        need to be tested in accordance with the ST. The\n                        evaluator verifies that all test configurations are\n                        consistent with the ST.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment and ensure they are\n                        met in the testing environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        If any test resources are used (e.g. meters, analysers)\n                        it will be the evaluator\'s responsibility to ensure that\n                        these resources are calibrated correctly.', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.1e'),
('ate_ind.1-2', ', AGD_PRE.1, The evaluator shall examine the TOE to determine that it\n                        has been installed properly and is in a known\n                        state.\n\n                        It is possible for the evaluator to determine the state\n                        of the TOE in a number of ways. For example, previous\n                        successful completion of the, AGD_PRE.1-3, sub-activity will satisfy this work unit\n                        if the evaluator still has confidence that the TOE being\n                        used for testing was installed properly and is in a\n                        known state. If this is not the case, then the evaluator\n                        should follow the developer\'s procedures to install and\n                        start up the TOE, using the supplied guidance\n                        only.\n\n                        If the evaluator has to perform the installation\n                        procedures because the TOE is in an unknown state, this\n                        work unit when successfully completed could satisfy work\n                        unit, .', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.1e'),
('ate_ind.1-3', 'The evaluator shall devise a test subset.\n\n                        The evaluator selects a test subset and testing strategy\n                        that is appropriate for the TOE. One extreme testing\n                        strategy would be to have the test subset contain as\n                        many interfaces as possible tested with little\n                        rigour. Another testing strategy would be to have the\n                        test subset contain a few interfaces based on their\n                        perceived relevance and rigorously test these\n                        interfaces.\n\n                        Typically the testing approach taken by the evaluator\n                        should fall somewhere between these two extremes. The\n                        evaluator should exercise most of the interfaces using\n                        at least one test, but testing need not demonstrate\n                        exhaustive specification testing.\n\n                        The evaluator, when selecting the subset of the\n                        interfaces to be tested, should consider the following\n                        factors:, The evaluator selects the interfaces to compose the\n                        subset. This selection will depend on a number of\n                        factors, and consideration of these factors may also\n                        influence the choice of test subset size:, This guidance articulates factors to consider during the\n                        selection process of an appropriate test subset, but\n                        these are by no means exhaustive.', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.2e'),
('ate_ind.1-4', 'The evaluator shall produce test documentation for the\n                    test subset that is sufficiently detailed to enable the\n                    tests to be reproducible.\n\n                    With an understanding of the expected behaviour of the\n                    TSF, from the ST and the functional specification, the\n                    evaluator has to determine the most feasible way to test\n                    the interface. Specifically the evaluator considers:, The evaluator may find it practical to test each\n                    interface using a series of test cases, where each test\n                    case will test a very specific aspect of expected\n                    behaviour.\n\n                    The evaluator\'s test documentation should specify the\n                    derivation of each test, tracing it back to the relevant\n                    interface(s).', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.2e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('ate_ind.1-5', '\n\n                    The evaluator shall conduct testing.\n\n                    The evaluator uses the test documentation developed as a\n                    basis for executing tests on the TOE. The test\n                    documentation is used as a basis for testing but this\n                    does not preclude the evaluator from performing\n                    additional ad hoc tests. The evaluator may devise new\n                    tests based on behaviour of the TOE discovered during\n                    testing. These new tests are recorded in the test\n                    documentation.\n                ', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.2e'),
('ate_ind.1-6', 'The evaluator shall record the following information\n                    about the tests that compose the test subset:, The level of detail should be such that another\n                    evaluator could repeat the tests and obtain an\n                    equivalent result. While some specific details of the\n                    test results may be different (e.g. time and date fields\n                    in an audit record) the overall result should be\n                    identical.\n\n                    There may be instances when it is unnecessary to provide\n                    all the information presented in this work unit\n                    (e.g. the actual test results of a test may not require\n                    any analysis before a comparison between the expected\n                    results can be made). The determination to omit this\n                    information is left to the evaluator, as is the\n                    justification.', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.2e'),
('ate_ind.1-7', '\n\n                    The evaluator shall check that all actual test results\n                    are consistent with the expected test results.\n\n                    Any differences in the actual and expected test results\n                    may indicate that the TOE does not perform as specified\n                    or that the evaluator test documentation may be\n                    incorrect. Unexpected actual results may require\n                    corrective maintenance to the TOE or test documentation\n                    and perhaps require re-running of impacted tests and\n                    modifying the test sample size and composition. This\n                    determination is left to the evaluator, as is its\n                    justification.\n                ', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.2e'),
('ate_ind.1-8', 'The evaluator shall report in the ETR the evaluator\n                    testing effort, outlining the testing approach,\n                    configuration, depth and results.\n\n                    The evaluator testing information reported in the ETR allows the\n                    evaluator to convey the overall testing approach and effort\n                    expended on the testing activity during the evaluation. The\n                    intent of providing this information is to give a meaningful\n                    overview of the testing effort. It is not intended that the\n                    information regarding testing in the ETR be an exact\n                    reproduction of specific test instructions or results of\n                    individual tests. The intention is to provide enough detail to\n                    allow other evaluators and evaluation authorities to gain some insight about\n                    the testing approach chosen, amount of testing performed, TOE\n                    test configurations, and the overall results of the testing\n                    activity.\n\n                    Information that would typically be found in the ETR\n                    subclause regarding the evaluator testing effort is:, This list is by no means exhaustive and is only intended\n                    to provide some context as to the type of information\n                    that should be present in the ETR concerning the testing\n                    the evaluator performed during the evaluation.', 'ate', 'ate_ind', 'ate_ind.1', 'ate_ind.1.2e'),
('ate_ind.2-1', ', ALC_CMC, The evaluator shall examine the TOE to determine that\n                        the test configuration is consistent with the\n                        configuration under evaluation as specified in the\n                        ST.\n\n                        The TOE provided by the developer and identified in the\n                        test plan should have the same unique reference as\n                        established by the, sub-activities and identified in the ST\n                        introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The TOE may comprise a\n                        number of distinct hardware and software entities that\n                        need to be tested in accordance with the ST. The\n                        evaluator verifies that all test configurations are\n                        consistent with the ST.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment and ensure they are\n                        met in the testing environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        If any test resources are used (e.g. meters, analysers)\n                        it will be the evaluator\'s responsibility to ensure that\n                        these resources are calibrated correctly.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.1e'),
('ate_ind.2-10', '\n\n                    The evaluator shall check that all actual test results\n                    are consistent with the expected test results.\n\n                    Any differences in the actual and expected test results\n                    may indicate that the TOE does not perform as specified\n                    or that the evaluator test documentation may be\n                    incorrect. Unexpected actual results may require\n                    corrective maintenance to the TOE or test documentation\n                    and perhaps require re-running of impacted tests and\n                    modifying the test sample size and composition. This\n                    determination is left to the evaluator, as is its\n                    justification.\n                ', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.3e'),
('ate_ind.2-11', 'The evaluator shall report in the ETR the evaluator\n                    testing effort, outlining the testing approach,\n                    configuration, depth and results.\n\n                    The evaluator testing information reported in the ETR allows the\n                    evaluator to convey the overall testing approach and effort\n                    expended on the testing activity during the evaluation. The\n                    intent of providing this information is to give a meaningful\n                    overview of the testing effort. It is not intended that the\n                    information regarding testing in the ETR be an exact\n                    reproduction of specific test instructions or results of\n                    individual tests. The intention is to provide enough detail to\n                    allow other evaluators and evaluation authorities to gain some insight about\n                    the testing approach chosen, amount of evaluator testing\n                    performed, amount of developer tests performed, TOE test\n                    configurations, and the overall results of the testing\n                    activity.\n\n                    Information that would typically be found in the ETR\n                    subclause regarding the evaluator testing effort is:, This list is by no means exhaustive and is only intended\n                    to provide some context as to the type of information\n                    that should be present in the ETR concerning the testing\n                    the evaluator performed during the evaluation.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.3e'),
('ate_ind.2-2', ', AGD_PRE.1, The evaluator shall examine the TOE to determine that it has been installed properly and is in a known state.\n\n                        It is possible for the evaluator to determine the state\n                        of the TOE in a number of ways. For example, previous\n                        successful completion of the, AGD_PRE.1-3, sub-activity will satisfy this work unit\n                        if the evaluator still has confidence that the TOE being\n                        used for testing was installed properly and is in a\n                        known state. If this is not the case, then the evaluator\n                        should follow the developer\'s procedures to install and\n                        start up the TOE, using the supplied guidance\n                        only.\n\n                        If the evaluator has to perform the installation\n                        procedures because the TOE is in an unknown state, this\n                        work unit when successfully completed could satisfy work\n                        unit, .', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.1e'),
('ate_ind.2-3', ', ATE_FUN, The evaluator shall examine the set of resources provided by the developer\n                        to determine that they are equivalent to the set of resources used by the\n                        developer to functionally test the TSF.\n\n                        The set of resource used by the developer is documented\n                        in the developer test plan, as considered in the, family. The resource set may\n                        include laboratory access and special test equipment,\n                        among others. Resources that are not identical to those\n                        used by the developer need to be equivalent in terms of\n                        any impact they may have on test results.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.1e'),
('ate_ind.2-4', 'The evaluator shall conduct testing using a sample of\n                        tests found in the developer test plan and\n                        procedures.\n\n                        The overall aim of this work unit is to perform a\n                        sufficient number of the developer tests to confirm the\n                        validity of the developer\'s test results. The evaluator\n                        has to decide on the size of the sample, and the\n                        developer tests that will compose the sample (see, EVAL-GUIDANCE-SAMPLING, ).\n\n                        All the developer tests can be traced back to specific\n                        interfaces. Therefore, the factors to consider in the\n                        selection of the tests to compose the sample are similar\n                        to those listed for subset selection in work-unit, ATE_IND.2-6, . Additionally, the\n                        evaluator may wish to employ a random sampling method to\n                        select developer tests to include in the sample.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.2e'),
('ate_ind.2-5', 'The evaluator shall check that all the actual test\n                        results are consistent with the expected test\n                        results.\n\n                        Inconsistencies between the developer\'s expected test\n                        results and actual test results will compel the\n                        evaluator to resolve the discrepancies. Inconsistencies\n                        encountered by the evaluator could be resolved by a\n                        valid explanation and resolution of the inconsistencies\n                        by the developer.\n\n                        If a satisfactory explanation or resolution can not be reached,\n                        the evaluator\'s confidence in the developer\'s test results may be\n                        lessened and it may be necessary for the evaluator to increase\n                        the sample size to the extent that the subset identified in work unit, ATE_IND.2-4, is adequately tested:\n                        deficiencies with the developer\'s tests need to result in either\n                        corrective action to the TOE by the developer (e.g., if the inconsistency\n                        is caused by incorrect behaviour) or to the developer\'s tests (e.g., if the\n                        inconsistency is caused by an incorrect test), or in the production of new\n                        tests by the evaluator.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.2e'),
('ate_ind.2-6', 'The evaluator shall devise a test subset.\n\n                        The evaluator selects a test subset and testing strategy\n                        that is appropriate for the TOE. One extreme testing\n                        strategy would be to have the test subset contain as\n                        many interfaces as possible tested with little\n                        rigour. Another testing strategy would be to have the\n                        test subset contain a few interfaces based on their\n                        perceived relevance and rigorously test these\n                        interfaces.\n\n                        Typically the testing approach taken by the evaluator\n                        should fall somewhere between these two extremes. The\n                        evaluator should exercise most of the interfaces using\n                        at least one test, but testing need not demonstrate\n                        exhaustive specification testing.\n\n                        The evaluator, when selecting the subset of the\n                        interfaces to be tested, should consider the following\n                        factors:, The evaluator selects the interfaces to compose the\n                        subset. This selection will depend on a number of\n                        factors, and consideration of these factors may also\n                        influence the choice of test subset size:, This guidance articulates factors to consider during the\n                        selection process of an appropriate test subset, but\n                        these are by no means exhaustive.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.3e'),
('ate_ind.2-7', 'The evaluator shall produce test documentation for the\n                    test subset that is sufficiently detailed to enable the\n                    tests to be reproducible.\n\n                    With an understanding of the expected behaviour of the\n                    TSF, from the ST, the functional specification, and the\n                    TOE design description, the evaluator has to determine\n                    the most feasible way to test the\n                    interface. Specifically the evaluator considers:, The evaluator may find it practical to test each\n                    interface using a series of test cases, where each test\n                    case will test a very specific aspect of expected\n                    behaviour of that interface.\n\n                    The evaluator\'s test documentation should specify the\n                    derivation of each test, tracing it back to the relevant\n                    interface(s).', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.3e'),
('ate_ind.2-8', '\n\n                    The evaluator shall conduct testing.\n\n                    The evaluator uses the test documentation developed as a\n                    basis for executing tests on the TOE. The test\n                    documentation is used as a basis for testing but this\n                    does not preclude the evaluator from performing\n                    additional ad hoc tests. The evaluator may devise new\n                    tests based on behaviour of the TOE discovered during\n                    testing. These new tests are recorded in the test\n                    documentation.\n                ', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.3e'),
('ate_ind.2-9', 'The evaluator shall record the following information\n                    about the tests that compose the test subset:, The level of detail should be such that another\n                    evaluator could repeat the tests and obtain an\n                    equivalent result. While some specific details of the\n                    test results may be different (e.g. time and date fields\n                    in an audit record) the overall result should be\n                    identical.\n\n                    There may be instances when it is unnecessary to provide\n                    all the information presented in this work unit\n                    (e.g. the actual test results of a test may not require\n                    any analysis before a comparison between the expected\n                    results can be made). The determination to omit this\n                    information is left to the evaluator, as is the\n                    justification.', 'ate', 'ate_ind', 'ate_ind.2', 'ate_ind.2.3e'),
('ava_van.1-1', ', ALC_CMC, The evaluator shall examine the TOE to determine that\n                        the test configuration is consistent with the\n                        configuration under evaluation as specified in the\n                        ST.\n\n                        The TOE provided by the developer and identified in the\n                        test plan should have the same unique reference as\n                        established by the, sub-activities and identified in the ST\n                        introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The TOE may comprise a\n                        number of distinct hardware and software entities that\n                        need to be tested in accordance with the ST. The\n                        evaluator verifies that all test configurations are\n                        consistent with the ST.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment and ensure they are\n                        met in the testing environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        If any test resources are used (e.g. meters, analysers)\n                        it will be the evaluator\'s responsibility to ensure that\n                        these resources are calibrated correctly.', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.1e'),
('ava_van.1-10', 'The evaluator shall examine the results of all\n                        penetration testing to determine that the TOE, in its\n                        operational environment, is resistant to an attacker\n                        possessing a Basic attack potential.\n\n                        If the results reveal that the TOE, in its operational\n                        environment, has vulnerabilities exploitable by an\n                        attacker possessing less than Enhanced-Basic attack\n                        potential, then this evaluator action fails.\n\n                        The guidance in, WEIGHTED_PARAMETERS, should be used to determine the attack\n                        potential required to exploit a particular vulnerability\n                        and whether it can therefore be exploited in the\n                        intended environment. It may not be necessary for the\n                        attack potential to be calculated in every instance,\n                        only if there is some doubt as to whether or not the\n                        vulnerability can be exploited by an attacker possessing\n                        an attack potential less than Enhanced-Basic.', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.1-11', 'The evaluator shall report in the ETR all exploitable\n                        vulnerabilities and residual vulnerabilities, detailing\n                        for each:, ', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.1-2', ', AGD_PRE.1, The evaluator shall examine the TOE to determine that it\n                        has been installed properly and is in a known\n                        state\n\n                        It is possible for the evaluator to determine the state\n                        of the TOE in a number of ways. For example, previous\n                        successful completion of the, AGD_PRE.1-3, sub-activity will satisfy this work unit\n                        if the evaluator still has confidence that the TOE being\n                        used for testing was installed properly and is in a\n                        known state. If this is not the case, then the evaluator\n                        should follow the developer\'s procedures to install and\n                        start up the TOE, using the supplied guidance\n                        only.\n\n                        If the evaluator has to perform the installation\n                        procedures because the TOE is in an unknown state, this\n                        work unit when successfully completed could satisfy work\n                        unit, .', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.1e'),
('ava_van.1-3', 'The evaluator shall examine sources of information\n                        publicly available to identify potential vulnerabilities\n                        in the TOE.\n\n                        The evaluator examines the sources of information\n                        publicly available to support the identification of\n                        possible potential vulnerabilities in the TOE. There are\n                        many sources of publicly available information, which\n                        should be considered, e.g. mailing lists and security\n                        forums on the world wide web that report known\n                        vulnerabilities in specified technologies.\n\n                        The evaluator should not constrain their consideration\n                        of publicly available information to the above, but\n                        should consider any other relevant information\n                        available.\n\n                        While examining the evidence provided the evaluator will\n                        use the information in the public domain to further\n                        search for potential vulnerabilities. Where the\n                        evaluators have identified areas of concern, the\n                        evaluator should consider information publicly available\n                        that relate to those areas of concern.\n\n                        The availability of information that may be readily\n                        available to an attacker that helps to identify and\n                        facilitate attacks effectively operates to substantially\n                        enhance the attack potential of a given attacker. The\n                        accessibility of vulnerability information and\n                        sophisticated attack tools on the Internet makes it more\n                        likely that this information will be used in attempts to\n                        identify potential vulnerabilities in the TOE and\n                        exploit them. Modern search tools make such information\n                        easily available to the evaluator, and the determination\n                        of resistance to published potential vulnerabilities and\n                        well known generic attacks can be achieved in a\n                        cost-effective manner.\n\n                        The search of the information publicly available should\n                        be focused on those sources that refer specifically to\n                        the product from which the TOE is derived. The\n                        extensiveness of this search should consider the\n                        following factors: TOE type, evaluator experience in\n                        this TOE type, expected attack potential and the level\n                        of, ADV, evidence available.\n\n                        The identification process is iterative, where the\n                        identification of one potential vulnerability may lead\n                        to identifying another area of concern that requires\n                        further investigation.\n\n                        The evaluator will report what actions were taken to\n                        identify potential vulnerabilities in the information\n                        publicly available. However, in this type of search, the\n                        evaluator may not be able to describe the steps in\n                        identifying potential vulnerabilities before the outset\n                        of the examination, as the approach may evolve as a\n                        result of findings during the search.\n\n                        The evaluator will report the evidence examined in\n                        completing the search for potential\n                        vulnerabilities.', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.2e'),
('ava_van.1-4', '\n\n                        The evaluator shall record in the ETR the identified\n                        potential vulnerabilities that are candidates for\n                        testing and applicable to the TOE in its operational\n                        environment.\n\n                        It may be identified that no further consideration of\n                        the potential vulnerability is required if for example\n                        the evaluator identifies that measures in the\n                        operational environment, either IT or non-IT, prevent\n                        exploitation of the potential vulnerability in that\n                        operational environment. For instance, restricting\n                        physical access to the TOE to authorised users only may\n                        effectively render a potential vulnerability to\n                        tampering unexploitable.\n\n                        The evaluator records any reasons for exclusion of\n                        potential vulnerabilities from further consideration if\n                        the evaluator determines that the potential\n                        vulnerability is not applicable in the operational\n                        environment. Otherwise the evaluator records the\n                        potential vulnerability for further\n                        consideration.\n\n                        A list of potential vulnerabilities applicable to the\n                        TOE in its operational environment, which can be used as\n                        an input into penetration testing activities, shall be\n                        reported in the ETR by the evaluators.\n                    ', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.2e'),
('ava_van.1-5', '\n\n                        The evaluator shall devise penetration tests, based on\n                        the independent search for potential\n                        vulnerabilities.\n\n                        The evaluator prepares for penetration testing as necessary to\n                        determine the susceptibility of the TOE, in its operational\n                        environment, to the potential vulnerabilities identified during\n                        the search of the sources of information publicly available.\n                        Any current information provided to the evaluator by a third\n                        party (e.g. evaluation authority) regarding known potential\n                        vulnerabilities will be considered by the evaluator, together\n                        with any encountered potential vulnerabilities resulting from\n                        the performance of other evaluation activities.\n\n                        The evaluator will probably find it practical to carry\n                        out penetration test using a series of test cases, where\n                        each test case will test for a specific potential\n                        vulnerability.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required a Basic attack potential. In\n                        some cases, however, it will be necessary to carry out a\n                        test before the exploitability can be determined. Where,\n                        as a result of evaluation expertise, the evaluator\n                        discovers a potential vulnerability that is beyond Basic\n                        attack potential, this is reported in the ETR as a\n                        residual vulnerability.\n                    ', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.1-6', 'The evaluator shall produce penetration test\n                        documentation for the tests based on the list of\n                        potential vulnerabilities in sufficient detail to enable\n                        the tests to be repeatable. The test documentation shall\n                        include:, The evaluator prepares for penetration testing based on\n                        the list of potential vulnerabilities identified during\n                        the search of the public domain.\n\n                        The evaluator is not expected to determine the\n                        exploitability for potential vulnerabilities beyond\n                        those for which a Basic attack potential is required to\n                        effect an attack. However, as a result of evaluation\n                        expertise, the evaluator may discover a potential\n                        vulnerability that is exploitable only by an attacker\n                        with greater than Basic attack potential. Such\n                        vulnerabilities are to be reported in the ETR as\n                        residual vulnerabilities.\n\n                        With an understanding of the potential vulnerability,\n                        the evaluator determines the most feasible way to test\n                        for the TOE\'s susceptibility. Specifically the evaluator\n                        considers:, The evaluator will probably find it practical to carry\n                        out penetration testing using a series of test cases,\n                        where each test case will test for a specific potential\n                        vulnerability.\n\n                        The intent of specifying this level of detail in the\n                        test documentation is to allow another evaluator to\n                        repeat the tests and obtain an equivalent result.', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.1-7', 'The evaluator shall conduct penetration testing.\n\n                        The evaluator uses the penetration test documentation\n                        resulting from work unit, AVA_VAN.1-5, as a basis for executing penetration tests\n                        on the TOE, but this does not preclude the evaluator\n                        from performing additional ad hoc penetration tests. If\n                        required, the evaluator may devise ad hoc tests as a\n                        result of information learnt during penetration testing\n                        that, if performed by the evaluator, are to be recorded\n                        in the penetration test documentation. Such tests may be\n                        required to follow up unexpected results or\n                        observations, or to investigate potential\n                        vulnerabilities suggested to the evaluator during the\n                        pre-planned testing.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required a Basic attack potential. In\n                        some cases, however, it will be necessary to carry out a\n                        test before the exploitability can be determined. Where,\n                        as a result of evaluation expertise, the evaluator\n                        discovers a potential vulnerability that is beyond Basic\n                        attack potential, this is reported in the ETR as a\n                        residual vulnerability.', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.1-8', '\n\n                        The evaluator shall record the actual results of the\n                        penetration tests.\n\n                        While some specific details of the actual test results\n                        may be different from those expected (e.g. time and date\n                        fields in an audit record) the overall result should be\n                        identical. Any unexpected test results should be\n                        investigated. The impact on the evaluation should be\n                        stated and justified.\n                    ', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.1-9', 'The evaluator shall report in the ETR the evaluator\n                        penetration testing effort, outlining the testing\n                        approach, configuration, depth and results.\n\n                        The penetration testing information reported in the ETR\n                        allows the evaluator to convey the overall penetration\n                        testing approach and effort expended on this\n                        sub-activity. The intent of providing this information\n                        is to give a meaningful overview of the evaluator\'s\n                        penetration testing effort. It is not intended that the\n                        information regarding penetration testing in the ETR be\n                        an exact reproduction of specific test steps or results\n                        of individual penetration tests. The intention is to\n                        provide enough detail to allow other evaluators and\n                        evaluation authorities to gain some insight about the\n                        penetration testing approach chosen, amount of\n                        penetration testing performed, TOE test configurations,\n                        and the overall results of the penetration testing\n                        activity.\n\n                        Information that would typically be found in the ETR\n                        subclause regarding evaluator penetration testing efforts\n                        is:, This list is by no means exhaustive and is only intended\n                        to provide some context as to the type of information\n                        that should be present in the ETR concerning the\n                        penetration testing the evaluator performed during the\n                        evaluation.', 'ava', 'ava_van', 'ava_van.1', 'ava_van.1.3e'),
('ava_van.2-1', ', ALC_CMC, The evaluator shall examine the TOE to determine that\n                        the test configuration is consistent with the\n                        configuration under evaluation as specified in the\n                        ST.\n\n                        The TOE provided by the developer and identified in the\n                        test plan should have the same unique reference as\n                        established by the, sub-activities and identified in the ST\n                        introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The TOE may comprise a\n                        number of distinct hardware and software entities that\n                        need to be tested in accordance with the ST. The\n                        evaluator verifies that all test configurations are\n                        consistent with the ST.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment and ensure they are\n                        met in the testing environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        If any test resources are used (e.g. meters, analysers)\n                        it will be the evaluator\'s responsibility to ensure that\n                        these resources are calibrated correctly.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.1e'),
('ava_van.2-10', 'The evaluator shall report in the ETR the evaluator\n                        penetration testing effort, outlining the testing\n                        approach, configuration, depth and results.\n\n                        The penetration testing information reported in the ETR\n                        allows the evaluator to convey the overall penetration\n                        testing approach and effort expended on this\n                        sub-activity. The intent of providing this information\n                        is to give a meaningful overview of the evaluator\'s\n                        penetration testing effort. It is not intended that the\n                        information regarding penetration testing in the ETR be\n                        an exact reproduction of specific test steps or results\n                        of individual penetration tests. The intention is to\n                        provide enough detail to allow other evaluators and\n                        evaluation authorities to gain some insight about the\n                        penetration testing approach chosen, amount of\n                        penetration testing performed, TOE test configurations,\n                        and the overall results of the penetration testing\n                        activity.\n\n                        Information that would typically be found in the ETR\n                        subclause regarding evaluator penetration testing efforts\n                        is:, This list is by no means exhaustive and is only intended\n                        to provide some context as to the type of information\n                        that should be present in the ETR concerning the\n                        penetration testing the evaluator performed during the\n                        evaluation.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.2-11', 'The evaluator shall examine the results of all\n                        penetration testing to determine that the TOE, in its\n                        operational environment, is resistant to an attacker\n                        possessing a Basic attack potential.\n\n                        If the results reveal that the TOE, in its operational\n                        environment, has vulnerabilities exploitable by an\n                        attacker possessing less than an Enhanced-Basic attack\n                        potential, then this evaluator action fails.\n\n                        The guidance in, WEIGHTED_PARAMETERS, should be used to determine the attack\n                        potential required to exploit a particular vulnerability\n                        and whether it can therefore be exploited in the\n                        intended environment. It may not be necessary for the\n                        attack potential to be calculated in every instance,\n                        only if there is some doubt as to whether or not the\n                        vulnerability can be exploited by an attacker possessing\n                        an attack potential less than Enhanced-Basic.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.2-12', 'The evaluator shall report in the ETR all exploitable\n                        vulnerabilities and residual vulnerabilities, detailing\n                        for each:, ', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.2-2', ', AGD_PRE.1, The evaluator shall examine the TOE to determine that it\n                        has been installed properly and is in a known\n                        state\n\n                        It is possible for the evaluator to determine the state\n                        of the TOE in a number of ways. For example, previous\n                        successful completion of the, AGD_PRE.1-3, sub-activity will satisfy this work unit\n                        if the evaluator still has confidence that the TOE being\n                        used for testing was installed properly and is in a\n                        known state. If this is not the case, then the evaluator\n                        should follow the developer\'s procedures to install and\n                        start up the TOE, using the supplied guidance\n                        only.\n\n                        If the evaluator has to perform the installation\n                        procedures because the TOE is in an unknown state, this\n                        work unit when successfully completed could satisfy work\n                        unit, .', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.1e'),
('ava_van.2-3', 'The evaluator shall examine sources of information\n                        publicly available to identify potential vulnerabilities\n                        in the TOE.\n\n                        The evaluator examines the sources of information\n                        publicly available to support the identification of\n                        possible potential vulnerabilities in the TOE. There are\n                        many sources of publicly available information which the\n                        evaluator should consider using items such as those\n                        available on the world wide web, including:, ADV, The evaluator should not constrain their consideration\n                        of publicly available information to the above, but\n                        should consider any other relevant information\n                        available.\n\n                        While examining the evidence provided the evaluator will\n                        use the information in the public domain to further\n                        search for potential vulnerabilities. Where the\n                        evaluators have identified areas of concern, the\n                        evaluator should consider information publicly available\n                        that relate to those areas of concern.\n\n                        The availability of information that may be readily\n                        available to an attacker that helps to identify and\n                        facilitate attacks may substantially enhance the attack\n                        potential of a given attacker. The accessibility of\n                        vulnerability information and sophisticated attack tools\n                        on the Internet makes it more likely that this\n                        information will be used in attempts to identify\n                        potential vulnerabilities in the TOE and exploit\n                        them. Modern search tools make such information easily\n                        available to the evaluator, and the determination of\n                        resistance to published potential vulnerabilities and\n                        well known generic attacks can be achieved in a\n                        cost-effective manner.\n\n                        The search of the information publicly available should\n                        be focused on those sources that refer specifically to\n                        the product from which the TOE is derived. The\n                        extensiveness of this search should consider the\n                        following factors: TOE type, evaluator experience in\n                        this TOE type, expected attack potential and the level\n                        of, evidence available.\n\n                        The identification process is iterative, where the\n                        identification of one potential vulnerability may lead\n                        to identifying another area of concern that requires\n                        further investigation.\n\n                        The evaluator will report what actions were taken to\n                        identify potential vulnerabilities in the\n                        evidence. However, in this type of search, the evaluator\n                        may not be able to describe the steps in identifying\n                        potential vulnerabilities before the outset of the\n                        examination, as the approach may evolve as a result of\n                        findings during the search.\n\n                        The evaluator will report the evidence examined in\n                        completing the search for potential\n                        vulnerabilities. This selection of evidence may be\n                        derived from those areas of concern identified by the\n                        evaluator, linked to the evidence the attacker is\n                        assumed to be able to obtain, or according to another\n                        rationale provided by the evaluator.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.2e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('ava_van.2-4', 'The evaluator shall conduct a search of ST, guidance\n                        documentation, functional specification, TOE design and\n                        security architecture description evidence to identify\n                        possible potential vulnerabilities in the TOE.\n\n                        A search of the evidence should be completed whereby\n                        specifications and documentation for the TOE are\n                        analysed and then potential vulnerabilities in the TOE\n                        are hypothesised, or speculated. The list of\n                        hypothesised potential vulnerabilities is then\n                        prioritised on the basis of the estimated probability\n                        that a potential vulnerability exists and, assuming an\n                        exploitable vulnerability does exist the attack\n                        potential required to exploit it, and on the extent of\n                        control or compromise it would provide. The prioritised\n                        list of potential vulnerabilities is used to direct\n                        penetration testing against the TOE.\n\n                        The security architecture description provides the\n                        developer vulnerability analysis, as it documents how\n                        the TSF protects itself from interference from untrusted\n                        subjects and prevents the bypass of security enforcement\n                        functionality. Therefore, the evaluator should use this\n                        description of the protection of the TSF as a basis for\n                        the search for possible ways to undermine the\n                        TSF.\n\n                        Subject to the SFRs the TOE is to meet in the\n                        operational environment, the evaluator\'s independent\n                        vulnerability analysis should consider generic potential\n                        vulnerabilities under each of the following headings:, AVA-VAN-ANNEX, Items b) - f) are explained in greater detail in, .\n\n                        The security architecture description should be\n                        considered in light of each of the above generic\n                        potential vulnerabilities. Each potential vulnerability\n                        should be considered to search for possible ways in\n                        which to defeat the TSF protection and undermine the\n                        TSF.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.3e'),
('ava_van.2-5', '\n\n                        The evaluator shall record in the ETR the identified\n                        potential vulnerabilities that are candidates for\n                        testing and applicable to the TOE in its operational\n                        environment.\n\n                        It may be identified that no further consideration of\n                        the potential vulnerability is required if for example\n                        the evaluator identifies that measures in the\n                        operational environment, either IT or non-IT, prevent\n                        exploitation of the potential vulnerability in that\n                        operational environment. For instance, restricting\n                        physical access to the TOE to authorised users only may\n                        effectively render a potential vulnerability to\n                        tampering unexploitable.\n\n                        The evaluator records any reasons for exclusion of\n                        potential vulnerabilities from further consideration if\n                        the evaluator determines that the potential\n                        vulnerability is not applicable in the operational\n                        environment. Otherwise the evaluator records the\n                        potential vulnerability for further\n                        consideration.\n\n                        A list of potential vulnerabilities applicable to the\n                        TOE in its operational environment, which can be used as\n                        an input into penetration testing activities, shall be\n                        reported in the ETR by the evaluators.\n                    ', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.3e'),
('ava_van.2-6', 'The evaluator shall devise penetration tests, based on\n                        the independent search for potential\n                        vulnerabilities.\n\n                        The evaluator prepares for penetration testing as necessary to\n                        determine the susceptibility of the TOE, in its operational\n                        environment, to the potential vulnerabilities identified during\n                        the search of the sources of information publicly available.\n                        Any current information provided to the evaluator by a third\n                        party (e.g. evaluation authority) regarding known potential\n                        vulnerabilities will be considered by the evaluator, together\n                        with any encountered potential vulnerabilities resulting from\n                        the performance of other evaluation activities.\n\n                        The evaluator is reminded that, as for considering the security\n                        architecture description in the search for vulnerabilities (as\n                        detailed in, AVA_VAN.2-4, ), testing should\n                        be performed to confirm the architectural properties. This is\n                        likely to require negative tests attempting to disprove the\n                        properties of the security architecture. In developing the\n                        strategy for penetration testing, the evaluator will ensure that\n                        each of the major characteristics of the security architecture\n                        description are tested, either in functional testing (as\n                        considered in, ATE, ) or evaluator\n                        penetration testing.\n\n                        The evaluator will probably find it practical to carry\n                        out penetration test using a series of test cases, where\n                        each test case will test for a specific potential\n                        vulnerability.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required a Basic attack potential. In\n                        some cases, however, it will be necessary to carry out a\n                        test before the exploitability can be determined. Where,\n                        as a result of evaluation expertise, the evaluator\n                        discovers an exploitable vulnerability that is beyond\n                        Basic attack potential, this is reported in the ETR as a\n                        residual vulnerability.\n\n                        Guidance on determining the necessary attack potential\n                        to exploit a potential vulnerability can be found in\n                        Annex, WEIGHTED_PARAMETERS, .\n\n                        Potential vulnerabilities hypothesised as exploitable\n                        only by attackers possessing Enhanced-Basic, Moderate or\n                        High attack potential do not result in a failure of this\n                        evaluator action. Where analysis supports the\n                        hypothesis, these need not be considered further as an\n                        input to penetration testing. However, such\n                        vulnerabilities are reported in the ETR as residual\n                        vulnerabilities.\n\n                        Potential vulnerabilities hypothesised as exploitable by\n                        an attacker possessing a Basic attack potential and\n                        resulting in a violation of the security objectives\n                        should be the highest priority potential vulnerabilities\n                        comprising the list used to direct penetration testing\n                        against the TOE.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.2-7', 'The evaluator shall produce penetration test\n                        documentation for the tests based on the list of\n                        potential vulnerabilities in sufficient detail to enable\n                        the tests to be repeatable. The test documentation shall\n                        include:, The evaluator prepares for penetration testing based on\n                        the list of potential vulnerabilities identified during\n                        the search of the public domain and the analysis of the\n                        evaluation evidence.\n\n                        The evaluator is not expected to determine the\n                        exploitability for potential vulnerabilities beyond\n                        those for which a Basic attack potential is required to\n                        effect an attack. However, as a result of evaluation\n                        expertise, the evaluator may discover a potential\n                        vulnerability that is exploitable only by an attacker\n                        with greater than Basic attack potential. Such\n                        vulnerabilities are to be reported in the ETR as\n                        residual vulnerabilities.\n\n                        With an understanding of the potential vulnerability,\n                        the evaluator determines the most feasible way to test\n                        for the TOE\'s susceptibility. Specifically the evaluator\n                        considers:, The evaluator will probably find it practical to carry\n                        out penetration testing using a series of test cases,\n                        where each test case will test for a specific potential\n                        vulnerability.\n\n                        The intent of specifying this level of detail in the\n                        test documentation is to allow another evaluator to\n                        repeat the tests and obtain an equivalent result.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.2-8', 'The evaluator shall conduct penetration testing.\n\n                        The evaluator uses the penetration test documentation\n                        resulting from work unit, AVA_VAN.2-6, as a basis for executing penetration tests\n                        on the TOE, but this does not preclude the evaluator\n                        from performing additional ad hoc penetration tests. If\n                        required, the evaluator may devise ad hoc tests as a\n                        result of information learnt during penetration testing\n                        that, if performed by the evaluator, are to be recorded\n                        in the penetration test documentation. Such tests may be\n                        required to follow up unexpected results or\n                        observations, or to investigate potential\n                        vulnerabilities suggested to the evaluator during the\n                        pre-planned testing.\n\n                        Should penetration testing show that a hypothesised\n                        potential vulnerability does not exist, then the\n                        evaluator should determine whether or not the\n                        evaluator\'s own analysis was incorrect, or if evaluation\n                        deliverables are incorrect or incomplete.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required a Basic attack potential. In\n                        some cases, however, it will be necessary to carry out a\n                        test before the exploitability can be determined. Where,\n                        as a result of evaluation expertise, the evaluator\n                        discovers an exploitable vulnerability that is beyond\n                        basic attack potential, this is reported in the ETR as a\n                        residual vulnerability.', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.2-9', '\n\n                        The evaluator shall record the actual results of the\n                        penetration tests.\n\n                        While some specific details of the actual test results\n                        may be different from those expected (e.g. time and date\n                        fields in an audit record) the overall result should be\n                        identical. Any unexpected test results should be\n                        investigated. The impact on the evaluation should be\n                        stated and justified.\n                    ', 'ava', 'ava_van', 'ava_van.2', 'ava_van.2.4e'),
('ava_van.3-1', ', ALC_CMC, The evaluator shall examine the TOE to determine that\n                        the test configuration is consistent with the\n                        configuration under evaluation as specified in the\n                        ST.\n\n                        The TOE provided by the developer and identified in the\n                        test plan should have the same unique reference as\n                        established by the, sub-activities and identified in the ST\n                        introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The TOE may comprise a\n                        number of distinct hardware and software entities that\n                        need to be tested in accordance with the ST. The\n                        evaluator verifies that all test configurations are\n                        consistent with the ST.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment and ensure they are\n                        met in the testing environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        If any test resources are used (e.g. meters, analysers)\n                        it will be the evaluator\'s responsibility to ensure that\n                        these resources are calibrated correctly.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.1e'),
('ava_van.3-10', 'The evaluator shall report in the ETR the evaluator\n                        penetration testing effort, outlining the testing\n                        approach, configuration, depth and results.\n\n                        The penetration testing information reported in the ETR\n                        allows the evaluator to convey the overall penetration\n                        testing approach and effort expended on this\n                        sub-activity. The intent of providing this information\n                        is to give a meaningful overview of the evaluator\'s\n                        penetration testing effort. It is not intended that the\n                        information regarding penetration testing in the ETR be\n                        an exact reproduction of specific test steps or results\n                        of individual penetration tests. The intention is to\n                        provide enough detail to allow other evaluators and\n                        evaluation authorities to gain some insight about the\n                        penetration testing approach chosen, amount of\n                        penetration testing performed, TOE test configurations,\n                        and the overall results of the penetration testing\n                        activity.\n\n                        Information that would typically be found in the ETR\n                        subclause regarding evaluator penetration testing efforts\n                        is:, This list is by no means exhaustive and is only intended\n                        to provide some context as to the type of information\n                        that should be present in the ETR concerning the\n                        penetration testing the evaluator performed during the\n                        evaluation.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.3-11', 'The evaluator shall examine the results of all\n                        penetration testing to determine that the TOE, in its\n                        operational environment, is resistant to an attacker\n                        possessing an Enhanced-Basic attack potential.\n\n                        If the results reveal that the TOE, in its operational\n                        environment, has vulnerabilities exploitable by an\n                        attacker possessing less than Moderate attack potential,\n                        then this evaluator action fails.\n\n                        The guidance in, WEIGHTED_PARAMETERS, should be used to determine the attack\n                        potential required to exploit a particular vulnerability\n                        and whether it can therefore be exploited in the\n                        intended environment. It may not be necessary for the\n                        attack potential to be calculated in every instance,\n                        only if there is some doubt as to whether or not the\n                        vulnerability can be exploited by an attacker possessing\n                        an attack potential less than Moderate.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.3-12', 'The evaluator shall report in the ETR all exploitable\n                        vulnerabilities and residual vulnerabilities, detailing\n                        for each:, ', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.3-2', ', AGD_PRE.1, The evaluator shall examine the TOE to determine that it\n                        has been installed properly and is in a known\n                        state\n\n                        It is possible for the evaluator to determine the state\n                        of the TOE in a number of ways. For example, previous\n                        successful completion of the, AGD_PRE.1-3, sub-activity will satisfy this work unit\n                        if the evaluator still has confidence that the TOE being\n                        used for testing was installed properly and is in a\n                        known state. If this is not the case, then the evaluator\n                        should follow the developer\'s procedures to install and\n                        start up the TOE, using the supplied guidance\n                        only.\n\n                        If the evaluator has to perform the installation\n                        procedures because the TOE is in an unknown state, this\n                        work unit when successfully completed could satisfy work\n                        unit, .', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.1e'),
('ava_van.3-3', 'The evaluator shall examine sources of information\n                        publicly available to identify potential vulnerabilities\n                        in the TOE.\n\n                        The evaluator examines the sources of information\n                        publicly available to support the identification of\n                        possible potential vulnerabilities in the TOE. There are\n                        many sources of publicly available information which the\n                        evaluator should consider using items such as those\n                        available on the world wide web, including:, ADV, The evaluator should not constrain their consideration\n                        of publicly available information to the above, but\n                        should consider any other relevant information\n                        available.\n\n                        While examining the evidence provided the evaluator will\n                        use the information in the public domain to further\n                        search for potential vulnerabilities. Where the\n                        evaluators have identified areas of concern, the\n                        evaluator should consider information publicly available\n                        that relate to those areas of concern.\n\n                        The availability of information that may be readily\n                        available to an attacker that helps to identify and\n                        facilitate attacks may substantially enhance the attack\n                        potential of a given attacker. The accessibility of\n                        vulnerability information and sophisticated attack tools\n                        on the Internet makes it more likely that this\n                        information will be used in attempts to identify\n                        potential vulnerabilities in the TOE and exploit\n                        them. Modern search tools make such information easily\n                        available to the evaluator, and the determination of\n                        resistance to published potential vulnerabilities and\n                        well known generic attacks can be achieved in a\n                        cost-effective manner.\n\n                        The search of the information publicly available should\n                        be focused on those sources that refer to the\n                        technologies used in the development of the product from\n                        which the TOE is derived. The extensiveness of this\n                        search should consider the following factors: TOE type,\n                        evaluator experience in this TOE type, expected attack\n                        potential and the level of, evidence available.\n\n                        The identification process is iterative, where the\n                        identification of one potential vulnerability may lead\n                        to identifying another area of concern that requires\n                        further investigation.\n\n                        The evaluator will report what actions were taken to\n                        identify potential vulnerabilities in the\n                        evidence. However, in this type of search, the evaluator\n                        may not be able to describe the steps in identifying\n                        potential vulnerabilities before the outset of the\n                        examination, as the approach may evolve as a result of\n                        findings during the search.\n\n                        The evaluator will report the evidence examined in\n                        completing the search for potential\n                        vulnerabilities. This selection of evidence may be\n                        derived from those areas of concern identified by the\n                        evaluator, linked to the evidence the attacker is\n                        assumed to be able to obtain, or according to another\n                        rationale provided by the evaluator.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.2e'),
('ava_van.3-4', 'The evaluator shall conduct a focused search of ST,\n                        guidance documentation, functional specification, TOE\n                        design, security architecture description and\n                        implementation representation to identify possible\n                        potential vulnerabilities in the TOE.\n\n                        A flaw hypothesis methodology needs to be used whereby\n                        specifications and development and guidance evidence are\n                        analysed and then potential vulnerabilities in the TOE are\n                        hypothesised, or speculated.\n\n                        The evaluator uses the knowledge of the TOE design and operation\n                        gained from the TOE deliverables to conduct a flaw hypothesis to\n                        identify potential flaws in the development of the TOE and\n                        potential errors in the specified method of operation of the\n                        TOE.\n\n                        The security architecture description provides the developer\n                        vulnerability analysis, as it documents how the TSF protects\n                        itself from interference from untrusted subjects and prevents\n                        the bypass of security enforcement functionality. Therefore, the\n                        evaluator should build upon the understanding of the TSF\n                        protection gained from the analysis of this evidence and then\n                        develop this in the knowledge gained from other development, ADV, evidence.\n\n\n                        The approach taken is directed by areas of concern\n                        identified during examination of the evidence during the\n                        conduct of evaluation activities and ensuring a\n                        representative sample of the development and guidance\n                        evidence provided for the evaluation is searched.\n\n                        For guidance on sampling see Annex, EVAL-GUIDANCE-SAMPLING, . This guidance\n                        should be considered when selecting the subset, giving\n                        reasons for:, AVA-VAN-ANNEX, The areas of concern may relate to the sufficiency of\n                        specific protection features detailed in the security\n                        architecture description.\n\n                        The evidence to be considered during the vulnerability analysis\n                        may be linked to the evidence the attacker is assumed to be able\n                        to obtain. For example, the developer may protect the TOE design\n                        and implementation representations, so the only information\n                        assumed to be available to an attacker is the functional\n                        specification and guidance (publicly available). So, although\n                        the objectives for assurance in the TOE ensure the TOE design\n                        and implementation representation requirements are met, these\n                        design representations may only be searched to further\n                        investigate areas of concerns.\n\n                        On the other hand, if the source is publicly available it would\n                        be reasonable to assume that the attacker has access to the\n                        source and can use this in attempts to attack the\n                        TOE. Therefore, the source should be considered in the focused\n                        examination approach.\n\n                        The following indicates examples for the selection of\n                        the subset of evidence to be considered:, This approach to identification of potential\n                        vulnerabilities is to take an ordered and planned\n                        approach; applying a system to the examination. The\n                        evaluator is to describe the method to be used in terms\n                        of what evidence will be considered, the information\n                        within the evidence that is to be examined, the manner\n                        in which this information is to be considered and the\n                        hypothesis that is to be created.\n\n                        The following provide some examples that a hypothesis\n                        may take:, For example, the evaluator may identify that interfaces\n                        are a potential area of weakness in the TOE and specify\n                        an approach to the search that ``all interface\n                        specifications provided in the functional specification\n                        and TOE design will be searched to hypothesise potential\n                        vulnerabilities\'\' and go on to explain the methods used\n                        in the hypothesis.\n\n                        The identification process is iterative, where the\n                        identification of one potential vulnerability may lead\n                        to identifying another area of concern that requires\n                        further investigation.\n\n                        The evaluator will report what actions were taken to\n                        identify potential vulnerabilities in the\n                        evidence. However, in this type of search, the evaluator\n                        may not be able to describe the steps in identifying\n                        potential vulnerabilities before the outset of the\n                        examination, as the approach may evolve as a result of\n                        findings during the search.\n\n                        The evaluator will report the evidence examine in\n                        completing the search for potential\n                        vulnerabilities. This selection of evidence may be\n                        derived from those areas of concern identified by the\n                        evaluator, linked to the evidence the attacker is\n                        assumed to be able to obtain, or according to another\n                        rationale provided by the evaluator.\n\n                        Subject to the SFRs the TOE is to meet in the\n                        operational environment, the evaluator\'s independent\n                        vulnerability analysis should consider generic potential\n                        vulnerabilities under each of the following headings:, Items b) - f) are explained in greater detail in, .\n\n                        The security architecture description should be\n                        considered in light of each of the above generic\n                        potential vulnerabilities. Each potential vulnerability\n                        should be considered to search for possible ways in\n                        which to defeat the TSF protection and undermine the\n                        TSF.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.3e'),
('ava_van.3-5', '\n\n                    The evaluator shall record in the ETR the identified\n                    potential vulnerabilities that are candidates for\n                    testing and applicable to the TOE in its operational\n                    environment.\n\n                    It may be identified that no further consideration of\n                    the potential vulnerability is required if for example\n                    the evaluator identifies that measures in the\n                    operational environment, either IT or non-IT, prevent\n                    exploitation of the potential vulnerability in that\n                    operational environment. For instance, restricting\n                    physical access to the TOE to authorised users only may\n                    effectively render a potential vulnerability to\n                    tampering unexploitable.\n\n                    The evaluator records any reasons for exclusion of\n                    potential vulnerabilities from further consideration if\n                    the evaluator determines that the potential\n                    vulnerability is not applicable in the operational\n                    environment. Otherwise the evaluator records the\n                    potential vulnerability for further\n                    consideration.\n\n                    A list of potential vulnerabilities applicable to the\n                    TOE in its operational environment, which can be used as\n                    an input into penetration testing activities, shall be\n                    reported in the ETR by the evaluators.\n                ', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.3e'),
('ava_van.3-6', 'The evaluator shall devise penetration tests, based on\n                        the independent search for potential\n                        vulnerabilities.\n\n                        The evaluator prepares for penetration testing as necessary to\n                        determine the susceptibility of the TOE, in its operational\n                        environment, to the potential vulnerabilities identified during\n                        the search of the sources of information publicly available.\n                        Any current information provided to the evaluator by a third\n                        party (e.g. evaluation authority) regarding known potential\n                        vulnerabilities will be considered by the evaluator, together\n                        with any encountered potential vulnerabilities resulting from\n                        the performance of other evaluation activities.\n\n                        The evaluator is reminded that, as for considering the security\n                        architecture description in the search for vulnerabilities (as\n                        detailed in, AVA_VAN.3-4, ), testing should\n                        be performed to confirm the architectural properties. If\n                        requirements from, ATE_DPT, are included in\n                        the SARs, the developer testing evidence will include testing\n                        performed to confirm the correct implementation of any specific\n                        mechanisms detailed in the security architecture\n                        description. However, the developer testing will not necessarily\n                        include testing of all aspects of the architectural properties\n                        that protect the TSF, as much of this testing will be negative\n                        testing in nature, attempting to disprove the properties. In\n                        developing the strategy for penetration testing, the evaluator\n                        will ensure that all aspects of the security architecture\n                        description are tested, either in functional testing (as\n                        considered in, ATE, ) or evaluator\n                        penetration testing.\n\n                        It will probably be practical to carry out penetration\n                        test using a series of test cases, where each test case\n                        will test for a specific potential vulnerability.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required an Enhanced-Basic attack\n                        potential. In some cases, however, it will be necessary\n                        to carry out a test before the exploitability can be\n                        determined. Where, as a result of evaluation expertise,\n                        the evaluator discovers an exploitable vulnerability\n                        that is beyond Enhanced-Basic attack potential, this is\n                        reported in the ETR as a residual vulnerability.\n\n                        Guidance on determining the necessary attack potential\n                        to exploit a potential vulnerability can be found in\n                        Annex, WEIGHTED_PARAMETERS, .\n\n                        Potential vulnerabilities hypothesised as exploitable\n                        only by attackers possessing Moderate or High attack\n                        potential do not result in a failure of this evaluator\n                        action. Where analysis supports the hypothesis, these\n                        need not be considered further as an input to\n                        penetration testing. However, such vulnerabilities are\n                        reported in the ETR as residual vulnerabilities.\n\n                        Potential vulnerabilities hypothesised as exploitable by\n                        an attacker possessing a Basic or Enhanced-Basic attack\n                        potential and resulting in a violation of the security\n                        objectives should be the highest priority potential\n                        vulnerabilities comprising the list used to direct\n                        penetration testing against the TOE.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.3-7', 'The evaluator shall produce penetration test\n                        documentation for the tests based on the list of\n                        potential vulnerabilities in sufficient detail to enable\n                        the tests to be repeatable. The test documentation shall\n                        include:, The evaluator prepares for penetration testing based on\n                        the list of potential vulnerabilities identified during\n                        the search of the public domain and the analysis of the\n                        evaluation evidence.\n\n                        The evaluator is not expected to determine the\n                        exploitability for potential vulnerabilities beyond\n                        those for which an Enhanced-Basic attack potential is\n                        required to effect an attack. However, as a result of\n                        evaluation expertise, the evaluator may discover a\n                        potential vulnerability that is exploitable only by an\n                        attacker with greater than Enhanced-Basic attack\n                        potential. Such vulnerabilities are to be reported in\n                        the ETR as residual vulnerabilities.\n\n                        With an understanding of the potential vulnerability,\n                        the evaluator determines the most feasible way to test\n                        for the TOE\'s susceptibility. Specifically the evaluator\n                        considers:, The evaluator will probably find it practical to carry\n                        out penetration testing using a series of test cases,\n                        where each test case will test for a specific potential\n                        vulnerability.\n\n                        The intent of specifying this level of detail in the\n                        test documentation is to allow another evaluator to\n                        repeat the tests and obtain an equivalent result.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.3-8', 'The evaluator shall conduct penetration testing.\n\n                        The evaluator uses the penetration test documentation\n                        resulting from work unit, AVA_VAN.3-6, as a basis for executing penetration tests\n                        on the TOE, but this does not preclude the evaluator\n                        from performing additional ad hoc penetration tests. If\n                        required, the evaluator may devise ad hoc tests as a\n                        result of information learnt during penetration testing\n                        that, if performed by the evaluator, are to be recorded\n                        in the penetration test documentation. Such tests may be\n                        required to follow up unexpected results or\n                        observations, or to investigate potential\n                        vulnerabilities suggested to the evaluator during the\n                        pre-planned testing.\n\n                        Should penetration testing show that a hypothesised\n                        potential vulnerability does not exist, then the\n                        evaluator should determine whether or not the\n                        evaluator\'s own analysis was incorrect, or if evaluation\n                        deliverables are incorrect or incomplete.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required an Enhanced-Basic attack\n                        potential. In some cases, however, it will be necessary\n                        to carry out a test before the exploitability can be\n                        determined. Where, as a result of evaluation expertise,\n                        the evaluator discovers an exploitable vulnerability\n                        that is beyond Enhanced-Basic attack potential, this is\n                        reported in the ETR as a residual vulnerability.', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.3-9', '\n\n                        The evaluator shall record the actual results of the\n                        penetration tests.\n\n                        While some specific details of the actual test results\n                        may be different from those expected (e.g. time and date\n                        fields in an audit record) the overall result should be\n                        identical. Any unexpected test results should be\n                        investigated. The impact on the evaluation should be\n                        stated and justified.\n                    ', 'ava', 'ava_van', 'ava_van.3', 'ava_van.3.4e'),
('ava_van.4-1', ', ALC_CMC, The evaluator shall examine the TOE to determine that\n                        the test configuration is consistent with the\n                        configuration under evaluation as specified in the\n                        ST.\n\n                        The TOE provided by the developer and identified in the\n                        test plan should have the same unique reference as\n                        established by the, sub-activities and identified in the ST\n                        introduction.\n\n                        It is possible for the ST to specify more than one\n                        configuration for evaluation. The TOE may comprise a\n                        number of distinct hardware and software entities that\n                        need to be tested in accordance with the ST. The\n                        evaluator verifies that all test configurations are\n                        consistent with the ST.\n\n                        The evaluator should consider the security objectives\n                        for the operational environment described in the ST that\n                        may apply to the test environment and ensure they are\n                        met in the testing environment. There may be some\n                        objectives for the operational environment that do not\n                        apply to the test environment. For example, an objective\n                        about user clearances may not apply; however, an\n                        objective about a single point of connection to a\n                        network would apply.\n\n                        If any test resources are used (e.g. meters, analysers)\n                        it will be the evaluator\'s responsibility to ensure that\n                        these resources are calibrated correctly.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.1e'),
('ava_van.4-10', 'The evaluator shall report in the ETR the evaluator\n                        penetration testing effort, outlining the testing\n                        approach, configuration, depth and results.\n\n                        The penetration testing information reported in the ETR\n                        allows the evaluator to convey the overall penetration\n                        testing approach and effort expended on this\n                        sub-activity. The intent of providing this information\n                        is to give a meaningful overview of the evaluator\'s\n                        penetration testing effort. It is not intended that the\n                        information regarding penetration testing in the ETR be\n                        an exact reproduction of specific test steps or results\n                        of individual penetration tests. The intention is to\n                        provide enough detail to allow other evaluators and\n                        evaluation authorities to gain some insight about the\n                        penetration testing approach chosen, amount of\n                        penetration testing performed, TOE test configurations,\n                        and the overall results of the penetration testing\n                        activity.\n\n                        Information that would typically be found in the ETR\n                        subclause regarding evaluator penetration testing efforts\n                        is:, This list is by no means exhaustive and is only intended\n                        to provide some context as to the type of information\n                        that should be present in the ETR concerning the\n                        penetration testing the evaluator performed during the\n                        evaluation.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e'),
('ava_van.4-11', 'The evaluator shall examine the results of all\n                        penetration testing to determine that the TOE, in its\n                        operational environment, is resistant to an attacker\n                        possessing a Moderate attack potential.\n\n                        If the results reveal that the TOE, in its operational\n                        environment, has vulnerabilities exploitable by an\n                        attacker possessing less than a High attack potential,\n                        then this evaluator action fails.\n\n                        The guidance in, WEIGHTED_PARAMETERS, should be used to determine the attack\n                        potential required to exploit a particular vulnerability\n                        and whether it can therefore be exploited in the\n                        intended environment. It may not be necessary for the\n                        attack potential to be calculated in every instance,\n                        only if there is some doubt as to whether or not the\n                        vulnerability can be exploited by an attacker possessing\n                        an attack potential less than High.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e'),
('ava_van.4-12', 'The evaluator shall report in the ETR all exploitable\n                        vulnerabilities and residual vulnerabilities, detailing\n                        for each:, ', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e'),
('ava_van.4-2', ', AGD_PRE.1, The evaluator shall examine the TOE to determine that it\n                        has been installed properly and is in a known\n                        state\n\n                        It is possible for the evaluator to determine the state\n                        of the TOE in a number of ways. For example, previous\n                        successful completion of the, AGD_PRE.1-3, sub-activity will satisfy this work unit\n                        if the evaluator still has confidence that the TOE being\n                        used for testing was installed properly and is in a\n                        known state. If this is not the case, then the evaluator\n                        should follow the developer\'s procedures to install and\n                        start up the TOE, using the supplied guidance\n                        only.\n\n                        If the evaluator has to perform the installation\n                        procedures because the TOE is in an unknown state, this\n                        work unit when successfully completed could satisfy work\n                        unit, .', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.1e');
INSERT INTO `mworkunit` (`id_mworkunit`, `testo`, `ida`, `idf`, `id_acomponent`, `id_aeevaluator`) VALUES
('ava_van.4-3', 'The evaluator shall examine sources of information\n                        publicly available to identify potential vulnerabilities\n                        in the TOE.\n\n                        The evaluator examines the sources of information\n                        publicly available to support the identification of\n                        possible potential vulnerabilities in the TOE. There are\n                        many sources of publicly available information which the\n                        evaluator should consider using items such as those\n                        available on the world wide web, including:, ADV, The evaluator should not constrain their consideration\n                        of publicly available information to the above, but\n                        should consider any other relevant information\n                        available.\n\n                        While examining the evidence provided the evaluator will\n                        use the information in the public domain to further\n                        search for potential vulnerabilities. Where the\n                        evaluators have identified areas of concern, the\n                        evaluator should consider information publicly available\n                        that relate to those areas of concern.\n\n                        The availability of information that may be readily\n                        available to an attacker that helps to identify and\n                        facilitate attacks may substantially enhance the attack\n                        potential of a given attacker. The accessibility of\n                        vulnerability information and sophisticated attack tools\n                        on the Internet makes it more likely that this\n                        information will be used in attempts to identify\n                        potential vulnerabilities in the TOE and exploit\n                        them. Modern search tools make such information easily\n                        available to the evaluator, and the determination of\n                        resistance to published potential vulnerabilities and\n                        well known generic attacks can be achieved in a\n                        cost-effective manner.\n\n                        The search of the information publicly available should\n                        be focused on those sources that refer to the\n                        technologies used in the development of the product from\n                        which the TOE is derived. The extensiveness of this\n                        search should consider the following factors: TOE type,\n                        evaluator experience in this TOE type, expected attack\n                        potential and the level of, evidence available.\n\n                        The identification process is iterative, where the\n                        identification of one potential vulnerability may lead\n                        to identifying another area of concern that requires\n                        further investigation.\n\n                        The evaluator will describe the approach to be taken to\n                        identify potential vulnerabilities in the publicly\n                        available material, detailing the search to be\n                        performed. This may be driven by factors such as areas\n                        of concern identified by the evaluator, linked to the\n                        evidence the attacker is assumed to be able to obtain.\n                        However, it is recognised that in this type of search\n                        the approach may further evolve as a result of findings\n                        during the search.  Therefore, the evaluator will also\n                        report any actions taken in addition to those described\n                        in the approach to further investigate issues thought to\n                        lead to potential vulnerabilities, and will report the\n                        evidence examined in completing the search for potential\n                        vulnerabilities.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.2e'),
('ava_van.4-4', 'The evaluator shall conduct a methodical analysis of ST,\n                        guidance documentation, functional specification, TOE\n                        design, security architecture description and\n                        implementation representation to identify possible\n                        potential vulnerabilities in the TOE.\n\n                        Guidance on methodical vulnerability analysis is\n                        provided in Annex, METHODICAL, .\n\n                        This approach to identification of potential\n                        vulnerabilities is to take an ordered and planned\n                        approach. A system is to be applied in the\n                        examination. The evaluator is to describe the method to\n                        be used in terms of the manner in which this information\n                        is to be considered and the hypothesis that is to be\n                        created.\n\n                        A flaw hypothesis methodology needs to be used whereby the ST,\n                        development (functional specification, TOE design and\n                        implementation representation) and guidance evidence are\n                        analysed and then vulnerabilities in the TOE are hypothesised,\n                        or speculated.\n\n                        The evaluator uses the knowledge of the TOE design and operation\n                        gained from the TOE deliverables to conduct a flaw hypothesis to\n                        identify potential flaws in the development of the TOE and\n                        potential errors in the specified method of operation of the\n                        TOE.\n\n                        The security architecture description provides the developer\n                        vulnerability analysis, as it documents how the TSF protects\n                        itself from interference from untrusted subjects and prevents\n                        the bypass of security enforcement functionality. Therefore, the\n                        evaluator should build upon the understanding of the TSF\n                        protection gained from the analysis of this evidence and then\n                        develop this in the knowledge gained from other development, ADV, evidence.\n\n                        The approach taken to the methodical search for vulnerabilities\n                        is to consider any areas of concern identified in the results of\n                        the evaluator\'s assessment of the development and guidance\n                        evidence. However, the evaluator should also consider each\n                        aspect of the security architecture analysis to search for any\n                        ways in which the protection of the TSF can be undermined. It\n                        may be helpful to structure the methodical analysis on the basis\n                        of the material presented in the security architecture\n                        description, introducing concerns from other, ADV, evidence as appropriate. The analysis can then be\n                        further developed to ensure all other material from the, ADV, evidence is considered.\n\n                        The following provide some examples of hypotheses that\n                        may be created when examining the evidence:, AVA_VAN.4-7, For example, the evaluator may identify that interfaces\n                        are a potential area of weakness in the TOE and specify\n                        an approach to the search that \'all interface\n                        specifications in the evidence provided will be searched\n                        to hypothesise potential vulnerabilities\' and go on to\n                        explain the methods used in the hypothesis.\n\n                        In addition, areas of concern the evaluator has identified\n                        during examination of the evidence during the conduct of\n                        evaluation activities. Areas of concern may also be identified\n                        during the conduct of other work units associated with this\n                        component, in particular, AVA_VAN.4-5, ,, AVA_VAN.4-6, and, AVA-VAN-ANNEX, where the development and conduct of penetration\n                        tests may identify further areas of concerns for investigation,\n                        or potential vulnerabilities.\n\n                        However, examination of only a subset of the development\n                        and guidance evidence or their contents is not permitted\n                        in this level of rigour. The approach description should\n                        provide a demonstration that the methodical approach\n                        used is complete, providing confidence that the approach\n                        used to search the deliverables has considered all of\n                        the information provided in those deliverables.\n\n                        This approach to identification of potential vulnerabilities is\n                        to take an ordered and planned approach; applying a system to\n                        the examination. The evaluator is to describe the method to be\n                        used in terms of how the evidence will be considered; the manner\n                        in which this information is to be considered and the hypothesis\n                        that is to be created. This approach should be agreed with the\n                        evaluation authority, and the evaluation authority may\n                        provide detail of any additional approaches the evaluator should\n                        take to the vulnerability analysis and identify any additional\n                        information that should be considered by the evaluator.\n\n                        Although a system to identifying potential\n                        vulnerabilities is predefined, the identification\n                        process may still be iterative, where the identification\n                        of one potential vulnerability may lead to identifying\n                        another area of concern that requires further\n                        investigation.\n\n                        Subject to the SFRs the TOE is to meet in the\n                        operational environment, the evaluator\'s independent\n                        vulnerability analysis should consider generic potential\n                        vulnerabilities under each of the following headings:, Items b) - f) are explained in greater detail in, .\n\n                        The security architecture description should be\n                        considered in light of each of the above generic\n                        potential vulnerabilities. Each potential vulnerability\n                        should be considered to search for possible ways in\n                        which to defeat the TSF protection and undermine the\n                        TSF.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.3e'),
('ava_van.4-5', '\n\n                        The evaluator shall record in the ETR the identified\n                        potential vulnerabilities that are candidates for\n                        testing and applicable to the TOE in its operational\n                        environment.\n\n                        It may be identified that no further consideration of\n                        the potential vulnerability is required if for example\n                        the evaluator identifies that measures in the\n                        operational environment, either IT or non-IT, prevent\n                        exploitation of the potential vulnerability in that\n                        operational environment. For instance, restricting\n                        physical access to the TOE to authorised users only may\n                        effectively render a potential vulnerability to\n                        tampering unexploitable.\n\n                        The evaluator records any reasons for exclusion of\n                        potential vulnerabilities from further consideration if\n                        the evaluator determines that the potential\n                        vulnerability is not applicable in the operational\n                        environment. Otherwise the evaluator records the\n                        potential vulnerability for further\n                        consideration.\n\n                        A list of potential vulnerabilities applicable to the\n                        TOE in its operational environment, which can be used as\n                        an input into penetration testing activities, shall be\n                        reported in the ETR by the evaluators.\n                    ', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.3e'),
('ava_van.4-6', 'The evaluator shall devise penetration tests, based on\n                        the independent search for potential\n                        vulnerabilities.\n\n                        The evaluator prepares for penetration testing as necessary to\n                        determine the susceptibility of the TOE, in its operational\n                        environment, to the potential vulnerabilities identified during\n                        the search of the sources of information publicly available.\n                        Any current information provided to the evaluator by a third\n                        party (e.g. evaluation authority) regarding known potential\n                        vulnerabilities will be considered by the evaluator, together\n                        with any encountered potential vulnerabilities resulting from\n                        the performance of other evaluation activities.\n\n                        The evaluator is reminded that, as for considering the\n                        security architecture description in the search for\n                        vulnerabilities (as detailed in, AVA_VAN.4-3, ), testing should be performed to confirm the\n                        architectural properties. If requirements from, ATE_DPT, are included in the SARs, the\n                        developer testing evidence will include testing\n                        performed to confirm the correct implementation of any\n                        specific mechanisms detailed in the security\n                        architecture description. However, the developer testing\n                        will not necessarily include testing of all aspects of\n                        the architectural properties that protect the TSF, as\n                        much of this testing will be negative testing in nature,\n                        attempting to disprove the properties. In developing the\n                        strategy for penetration testing, the evaluator will\n                        ensure that all aspects of the security architecture\n                        description are tested, either in functional testing (as\n                        considered in, ATE, ) or evaluator\n                        penetration testing.\n\n                        The evaluator will probably find it practical to carry\n                        out penetration test using a series of test cases, where\n                        each test case will test for a specific potential\n                        vulnerability.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required a Moderate attack\n                        potential. In some cases, however, it will be necessary\n                        to carry out a test before the exploitability can be\n                        determined. Where, as a result of evaluation expertise,\n                        the evaluator discovers an exploitable vulnerability\n                        that is beyond Moderate attack potential, this is\n                        reported in the ETR as a residual vulnerability.\n\n                        Guidance on determining the necessary attack potential\n                        to exploit a potential vulnerability can be found in\n                        Annex, WEIGHTED_PARAMETERS, .\n\n                        Potential vulnerabilities hypothesised as exploitable by\n                        an attacker possessing a Moderate (or less) attack\n                        potential and resulting in a violation of the security\n                        objectives should be the highest priority potential\n                        vulnerabilities comprising the list used to direct\n                        penetration testing against the TOE.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e'),
('ava_van.4-7', 'The evaluator shall produce penetration test\n                        documentation for the tests based on the list of\n                        potential vulnerabilities in sufficient detail to enable\n                        the tests to be repeatable. The test documentation shall\n                        include:, The evaluator prepares for penetration testing based on\n                        the list of potential vulnerabilities identified during\n                        the search of the public domain and the analysis of the\n                        evaluation evidence.\n\n                        The evaluator is not expected to determine the\n                        exploitability for potential vulnerabilities beyond\n                        those for which a Moderate attack potential is required\n                        to effect an attack. However, as a result of evaluation\n                        expertise, the evaluator may discover a potential\n                        vulnerability that is exploitable only by an attacker\n                        with greater than Moderate attack potential. Such\n                        vulnerabilities are to be reported in the ETR as\n                        residual vulnerabilities.\n\n                        With an understanding of the potential vulnerability,\n                        the evaluator determines the most feasible way to test\n                        for the TOE\'s susceptibility. Specifically the evaluator\n                        considers:, The evaluator will probably find it practical to carry\n                        out penetration testing using a series of test cases,\n                        where each test case will test for a specific potential\n                        vulnerability.\n\n                        The intent of specifying this level of detail in the\n                        test documentation is to allow another evaluator to\n                        repeat the tests and obtain an equivalent result.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e'),
('ava_van.4-8', 'The evaluator shall conduct penetration testing.\n\n                        The evaluator uses the penetration test documentation\n                        resulting from work unit, AVA_VAN.4-6, as a basis for executing penetration tests\n                        on the TOE, but this does not preclude the evaluator\n                        from performing additional ad hoc penetration tests. If\n                        required, the evaluator may devise ad hoc tests as a\n                        result of information learnt during penetration testing\n                        that, if performed by the evaluator, are to be recorded\n                        in the penetration test documentation. Such tests may be\n                        required to follow up unexpected results or\n                        observations, or to investigate potential\n                        vulnerabilities suggested to the evaluator during the\n                        pre-planned testing.\n\n                        Should penetration testing show that a hypothesised\n                        potential vulnerability does not exist, then the\n                        evaluator should determine whether or not the\n                        evaluator\'s own analysis was incorrect, or if evaluation\n                        deliverables are incorrect or incomplete.\n\n                        The evaluator is not expected to test for potential\n                        vulnerabilities (including those in the public domain)\n                        beyond those which required a Moderate attack\n                        potential. In some cases, however, it will be necessary\n                        to carry out a test before the exploitability can be\n                        determined. Where, as a result of evaluation expertise,\n                        the evaluator discovers an exploitable vulnerability\n                        that is beyond Moderate attack potential, this is\n                        reported in the ETR as a residual vulnerability.', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e'),
('ava_van.4-9', '\n\n                        The evaluator shall record the actual results of the\n                        penetration tests.\n\n                        While some specific details of the actual test results\n                        may be different from those expected (e.g. time and date\n                        fields in an audit record) the overall result should be\n                        identical. Any unexpected test results should be\n                        investigated. The impact on the evaluation should be\n                        stated and justified.\n                    ', 'ava', 'ava_van', 'ava_van.4', 'ava_van.4.4e');

-- --------------------------------------------------------

--
-- Table structure for table `para`
--

CREATE TABLE `para` (
  `id_para` varchar(100) NOT NULL,
  `type` varchar(100) DEFAULT NULL,
  `testo` varchar(1000) DEFAULT NULL,
  `id_xref` varchar(100) DEFAULT NULL,
  `id_url` varchar(100) DEFAULT NULL,
  `id_list` int(11) DEFAULT NULL,
  `id_bold` int(11) DEFAULT NULL,
  `id_italic` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `parasequence`
--

CREATE TABLE `parasequence` (
  `id_parasequence` varchar(100) NOT NULL,
  `id_subclausess` varchar(100) DEFAULT NULL,
  `id_para` varchar(100) DEFAULT NULL,
  `id_figure` varchar(100) DEFAULT NULL,
  `id_acronym` varchar(100) DEFAULT NULL,
  `id_biblioentry` varchar(100) DEFAULT NULL,
  `id_glossentry` varchar(100) DEFAULT NULL,
  `id_table` varchar(100) DEFAULT NULL,
  `id_example` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `relation`
--

CREATE TABLE `relation` (
  `id_padre` varchar(100) NOT NULL,
  `id_figlio` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `requirementsselectedlist`
--

CREATE TABLE `requirementsselectedlist` (
  `id` varchar(255) NOT NULL,
  `name` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `subclause`
--

CREATE TABLE `subclause` (
  `title` varchar(100) DEFAULT NULL,
  `id` varchar(100) NOT NULL,
  `idf` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `subclause`
--

INSERT INTO `subclause` (`title`, `id`, `idf`) VALUES
('Audit requirements in a distributed         environment', 'AUDIT-REQUIREMENTS-IN-A-DISTRIBUTED-ENVIRONMENT', 'fau');

-- --------------------------------------------------------

--
-- Table structure for table `subclausepara`
--

CREATE TABLE `subclausepara` (
  `type` varchar(10) DEFAULT NULL,
  `id` varchar(12) DEFAULT NULL,
  `para` varchar(10000) DEFAULT NULL,
  `idf` varchar(100) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `subclausepara`
--

INSERT INTO `subclausepara` (`type`, `id`, `para`, `idf`) VALUES
('normal', 'PGFID-852747', '[\n                    The implementation of audit requirements for networks and\n                    other large systems may differ significantly from those\n                    needed for stand-alone systems. Larger, more complex and\n                    active systems require more thought concerning which audit\n                    data to collect and how this should be managed, due to\n                    lowered feasibility of interpreting (or even storing) what\n                    gets collected. The traditional notion of a time-ordered list\n                    or ``trail\'\' of audited events may not\n                    be applicable in a global asynchronous network with\n                    arbitrarily many events occurring at once.]', 'AUDIT-REQUIREMENTS-IN-A-DISTRIBUTED-ENVIRONMENT'),
('normal', 'PGFID-852748', '[\n                    Also, different hosts and servers on a distributed TOE may\n                    have differing naming policies and values. Symbolic names\n                    presentation for audit review may require a net-wide\n                    convention to avoid redundancies and ``name\n                    clashes.\'\']', 'AUDIT-REQUIREMENTS-IN-A-DISTRIBUTED-ENVIRONMENT'),
('normal', 'PGFID-852749', '[\n                    A multi-object audit repository, portions of which are\n                    accessible by a potentially wide variety of authorised\n                    users, may be required if audit repositories are to serve a\n                    useful function in distributed systems.]', 'AUDIT-REQUIREMENTS-IN-A-DISTRIBUTED-ENVIRONMENT'),
('normal', 'PGFID-852750', '[\n                    Finally, misuse of authority by authorised users should be\n                    addressed by systematically avoiding local storage of audit\n                    data pertaining to administrator actions.]', 'AUDIT-REQUIREMENTS-IN-A-DISTRIBUTED-ENVIRONMENT');

-- --------------------------------------------------------

--
-- Table structure for table `subclausess`
--

CREATE TABLE `subclausess` (
  `id_subclausess` varchar(100) NOT NULL,
  `title` varchar(100) DEFAULT NULL,
  `testo` varchar(60000) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `subclausess`
--

INSERT INTO `subclausess` (`id_subclausess`, `title`, `testo`) VALUES
('aco_cor_1_development', 'Development', 'The reliance information identifies the interfaces in\n                            the dependent component that are to be matched by the\n                            base component. If an interface identified in the\n                            reliance information is not identified in the\n                            development information, then the composition\n                            rationale is to provide a justification of how the\n                            base component provides the required\n                            interfaces.\n\n                            If an interface identified in the reliance information\n                            is identified in the development information, but\n                            there are inconsistencies between the descriptions,\n                            further analysis is required. The evaluator identifies\n                            the differences in use of the base component as\n                            considered in the base component evaluation and the\n                            composed TOE evaluation. The evaluator will devise\n                            testing to be performed (during the conduct of, ACO_CTT, ) to test the\n                            interface.\n\n                            The patch status of the base and dependent components\n                            as used in the composed TOE should be compared to the\n                            patch status of the components during the component\n                            evaluations. If any patches have been applied to the\n                            components, the composition rationale is to include\n                            details of the patches, including any potential impact\n                            to the SFRs of the evaluated component. The evaluator\n                            should consider the details of the changes provided\n                            and verify the accuracy of the potential impact of the\n                            change on the component SFRs. The evaluator should\n                            then consider whether the changes made by the patch\n                            should be verified through testing, and will identify\n                            the necessary testing approach.  The testing may take\n                            the form of repeating the applicable\n                            evaluator/developer testing performed for the\n                            component evaluation of the component or it may be\n                            necessary for the evaluator to devise new tests to\n                            confirm the modified component.\n\n                            If any of the individual components have been the\n                            subject of assurance continuity activities since the\n                            completion of the component evaluation, the evaluator\n                            will consider the changes assessed in the assurance\n                            continuity activities during the independent\n                            vulnerability analysis activity for the composed TOE\n                            (in, ACO_VUL, ).'),
('aco_cor_1_guidance', 'Guidance', 'The guidance for the composed TOE is likely to make\n                            substantial reference out to the guidance for the\n                            individual components.  The minimal guidance expected\n                            to be necessary is the identification of any ordering\n                            dependencies in the application of guidance for the\n                            dependent and base components, particularly during the\n                            preparation (installation) of the composed TOE.\n\n                            In addition to the application of the, AGD_PRE, and, AGD_OPE, families to the guidance for the\n                            composed TOE, it is necessary to analyse the\n                            consistency between the guidance for the components\n                            and the composed TOE, to identify any\n                            deviations.\n\n                            If the composed TOE guidance refers out to the base\n                            component and dependent component guidance, then the\n                            consideration for consistency is limited to\n                            consistency between the guidance documentation\n                            provided for each of the components (i.e. consistency\n                            between the base component guidance and the dependent\n                            component guidance).  However, if additional guidance\n                            is provided for the composed TOE, to that provided for\n                            the components, greater analysis is required, as\n                            consistency is also required between the guidance\n                            documentation for the components and guidance\n                            documentation for the composed TOE.\n\n\n                            Consistent\n                            in this instance is\n                            understood to mean that either the guidance is the\n                            same or it places additional constraints on the\n                            operation of the individual components when combined,\n                            in a similar manner to\n                            refinement\n                            of\n                            functional/assurance components.\n\n                            With the information available (that used as input for, ACO_DEV, or the development\n                            aspects discussed above) the evaluator may be able to\n                            determine all possible impacts of the deviation from\n                            the configuration of the base component specified in\n                            the component evaluation.  However, for high EALs\n                            (where evaluation of the base component included, ADV_TDS, requirements) it is\n                            possible that, unless detailed design abstractions for\n                            the base component are delivered as part of the\n                            development information for the composed TOE, the\n                            possible impacts of the modification to the guidance\n                            cannot be fully determined as the internals are\n                            unknown.  In this case the evaluator will report the\n                            residual risk of the analysis.\n\n                            These residual risks are to be included in any public\n                            evaluation report for the composed TOE.\n\n                            The evaluator will note these variances in the\n                            guidance for input into evaluator independent testing\n                            activities (, ACO_CTT, ).\n\n                            The guidance for the composed TOE may add to the\n                            guidance for the components, particularly in terms of\n                            installation and the ordering of installation steps\n                            for the base component in relation to the installation\n                            steps for the dependent component.  The ordering of\n                            the steps for the installation of the individual\n                            components should not change, however they may need to\n                            be interleaved.  The evaluator will examine this\n                            guidance to ensure that it still meets the requirement\n                            of the, AGD_PRE, activity\n                            performed during the evaluations of the\n                            components.\n\n                            It may be the case that the reliance information\n                            identifies that interfaces of the base component, in\n                            addition to those identified as TSFIs of the base\n                            component, are relied upon by the dependent component\n                            are identified in the reliance information. It may be\n                            necessary for guidance to be provided for the use of\n                            any such additional interfaces in the base\n                            component. Provided the consumer of the composed TOE\n                            is to receive the guidance documentation for the base\n                            component, then the results of the, AGD_PRE, and, AGD_OPE, verdicts for the base component can be reused for\n                            those interfaces considered in the evaluation of the\n                            base component. However, for the additional interfaces\n                            relied upon by the dependent component, the evaluator\n                            will need to determine that the guidance documentation\n                            for the base component meets the requirements of, AGD_PRE, and, AGD_OPE, , as applied in the base component\n                            evaluations.\n\n                            For those interfaces considered during the base\n                            component evaluation, and therefore, for which\n                            assurance has already been gained, the evaluator will\n                            ensure that the guidance for the use of each interface\n                            for the composed TOE is consistent with that provided\n                            for the base component. To determine the guidance for\n                            the composed TOE is consistent with that for the base\n                            component, the evaluator should perform a mapping for\n                            each interface to the guidance provided for both the\n                            composed TOE and the base component. The evaluator\n                            then compares the guidance to determine\n                            consistency.\n\n                            Examples of additional constraints provided in\n                            composed TOE guidance that would be considered to be\n                            consistent with component guidance are (guidance for a\n                            component is given followed by an example of guidance\n                            for a composed TOE that would be considered to provide\n                            additional constraints):, AGD_PRE.1-3, If the guidance for the composed TOE deviates (is not\n                            a refinement) from that provided for the base\n                            component, the evaluator will assess the potential\n                            risks of the modification to the guidance. The\n                            evaluator will use the information available\n                            (including that provided in the public domain, the\n                            architectural description of the base component in the\n                            public evaluation report (e.g. certification report),\n                            the context of the guidance from the remainder of the\n                            guidance documentation) to identify likely impact of\n                            the modification to the guidance on the SFRs of the\n                            composed TOE.\n\n                            If during the dependent component evaluation the trial\n                            installation used the base component to satisfy the\n                            environment requirements of the dependent component\n                            this work unit for the composed TOE is considered to\n                            be satisfied. If the base component was not used in\n                            satisfaction of the work unit, AGD_PRE.1-3, during the dependent component\n                            evaluation, the evaluator will apply the user\n                            procedures provided for the composed TOE to prepare\n                            the composed TOE, in accordance with the guidance\n                            specified in, . This will allow the evaluator to\n                            determine that the preparative guidance provided for\n                            the composed TOE is sufficient to prepare the composed\n                            TOE and its operational environment securely.'),
('aco_cor_1_life-cycle', 'Life-cycle', ', , '),
('aco_cor_1_test', 'Tests', 'The composed TOE will have been tested during the\n                            conduct of the, ATE, activities\n                            for evaluation of the dependent component, as the\n                            configurations used for testing of the dependent\n                            component should have included the base component to\n                            satisfy the requirements for IT in the operational\n                            environment. If the base component was not used in the\n                            testing of the dependent component for the dependent\n                            component evaluation, or the configuration of either\n                            component varied from their evaluated configurations,\n                            then the developer testing performed for evaluation of\n                            the dependent component to satisfy the, ATE, requirements is to be repeated\n                            on the composed TOE.'),
('ase-app-reuse-pp', 'Re-using the evaluation results of certified PPs', 'While evaluating an ST that is based on one or more\n                certified PPs, it may be possible to re-use the fact that\n                these PPs were certified. The potential for re-use of the\n                result of a certified PP is greater if the ST does not add\n                threats, OSPs, assumptions, security objectives and/or\n                security requirements to those of the PP. If the ST\n                contains much more than the certified PP, re-use may not be\n                useful at all.\n\n                The evaluator is allowed to re-use the PP evaluation results\n                by doing certain analyses only partially or not at all if\n                these analyses or parts thereof were already done as part of\n                the PP evaluation. While doing this, the evaluator should\n                assume that the analyses in the PP were performed\n                correctly.\n\n                An example would be where the PP contains a set of security\n                requirements, and these were determined to be internally\n                consistent during the PP evaluation. If the ST uses the\n                exact same requirements, the consistency analysis does not\n                have to be repeated during the ST evaluation. If the ST adds\n                one or more requirements, or performs operations on these\n                requirements, the analysis will have to be\n                repeated. However, it may be possible to save work in this\n                consistency analysis by using the fact that the original\n                requirements are internally consistent. If the original\n                requirements are internally consistent, the evaluator only\n                has to determine that:, The evaluator notes in the ETR each case where analyses are\n                not done or only partially done for this reason.'),
('ase-app-reuse-pp2', 'Re-using the evaluation results of certified PPs', 'While evaluating a PP that is based on one or more certified\n                PPs, it may be possible to re-use the fact that these PPs were\n                certified. The potential for re-use of the result of a certified\n                PP is greater if the PP under evaluation does not add threats,\n                OSPs, security objectives and/or security requirements to those\n                of the PP that conformance is being claimed to. If the PP under\n                evaluation contains much more than the certified PP, re-use may\n                not be useful at all.\n\n                The evaluator is allowed to re-use the PP evaluation results\n                by doing certain analyses only partially or not at all if\n                these analyses or parts thereof were already done as part of\n                the PP evaluation. While doing this, the evaluator should\n                assume that the analyses in the PP were performed\n                correctly.\n\n                An example would be where the PP that conformance is being\n                claimed to contains a set of security requirements, and these\n                were determined to be internally consistent during its\n                evaluation. If the PP under evaluation uses the exact same\n                requirements, the consistency analysis does not have to be\n                repeated during the PP evaluation. If the PP under evaluation\n                adds one or more requirements, or performs operations on these\n                requirements, the analysis will have to be repeated. However, it\n                may be possible to save work in this consistency analysis by\n                using the fact that the original requirements are internally\n                consistent. If the original requirements are internally\n                consistent, the evaluator only has to determine that:, The evaluator notes in the ETR each case where analyses\n                are not done or only partially done for this reason.'),
('ate_sc_man1', 'Understanding the expected behaviour of the TOE', '\n\n                Before the adequacy of test documentation can be accurately\n                evaluated, or before new tests can be created, the evaluator\n                has to understand the desired expected behaviour of a\n                security function in the context of the requirements it is\n                to satisfy.\n\n                As mentioned earlier, the evaluator may choose to subset the\n                TSF and TSFI according to SFRs (audit, authentication, etc.)\n                in the ST and focus on one subset at a time. The evaluator\n                examines each ST requirement and the relevant parts of the\n                functional specification and guidance documentation to gain\n                an understanding of the way the related TSFI is expected to\n                behave. Similarly, the evaluator examines the relevant parts\n                of the TOE design and security architecture documentation to\n                gain an understanding of the way the related modules or\n                subsystems of the TSF are expected to behave.\n\n                With an understanding of the expected behaviour, the\n                evaluator examines the test plan to gain an understanding of\n                the testing approach. In most cases, the testing approach\n                will entail a TSFI being stimulated and its responses\n                observed. Externally-visible functionality can be tested\n                directly; however, in cases where functionality is not\n                visible external to the TOE (for example, testing the\n                residual information protection functionality), other means\n                will need to be employed.\n            '),
('ate_sc_man2', 'Testing vs. alternate approaches to verify the expected behaviour of functionality', 'In cases where it is impractical or inadequate to test\n                specific functionality (where it provides no\n                externally-visible TSFI), the test plan should identify the\n                alternate approach to verify expected behaviour. It is the\n                evaluator\'s responsibility to determine the suitability of\n                the alternate approach. However, the following should be\n                considered when assessing the suitability of alternate\n                approaches:, It should be emphasised that supplementing the testing\n                effort with alternate approaches should only be undertaken\n                when both the developer and evaluator determine that there\n                exists no other practical means to test the expected\n                behaviour.'),
('ate_sc_man3', 'Verifying the adequacy of tests', '\n\n                Test pre-requisites are necessary to establish the required\n                initial conditions for the test. They may be expressed in\n                terms of parameters that must be set or in terms of test\n                ordering in cases where the completion of one test\n                establishes the necessary pre-requisites for another\n                test. The evaluator must determine that the pre-requisites\n                are complete and appropriate in that they will not bias the\n                observed test results towards the expected test\n                results.\n\n                The test steps and expected results specify the actions and\n                parameters to be applied to the TSFI as well as how the\n                expected results should be verified and what they are. The\n                evaluator must determine that the test steps and expected\n                results are consistent with the descriptions of the TSFI in\n                the functional specification. This means that each\n                characteristic of the TSFI behaviour explicitly described in\n                the functional specification should have tests and expected\n                results to verify that behaviour.\n\n                The overall aim of this testing activity is to determine\n                that each subsystem, module, and TSFI has been sufficiently\n                tested against the behavioural claims in the functional\n                specification, TOE design, and architecture description.  At\n                the higher assurance levels, testing also includes bounds\n                testing and negative testing. The test procedures will\n                provide insight as to how the TSFIs, modules, and subsystems\n                have been exercised by the developer during testing. The\n                evaluator uses this information when developing additional\n                tests to independently test the TSF.\n            '),
('fsp-components', 'Components of this Family', 'Increasing assurance through increased completeness and\n                    accuracy in the interface specification is reflected in\n                    the documentation required from the developer as detailed\n                    in the various hierarchical components of this\n                    family.\n\n                    At, ADV_FSP.1, , the only\n                    documentation required is a characterisation of all TSFIs\n                    and a high level description of SFR-enforcing and\n                    SFR-supporting TSFIs. To provide some assurance that the\n                    ``important\'\' aspects of the TSF have been correctly\n                    characterised at the TSFIs, the developer is required to\n                    provide the purpose and method of use, parameters for the\n                    SFR-enforcing and SFR-supporting TSFIs.\n\n                    At, ADV_FSP.2, , the developer is\n                    required to provide the purpose, method of use,\n                    parameters, and parameter descriptions for all\n                    TSFIs. Additionally, for the SFR-enforcing TSFIs the\n                    developer has to describe the SFR-enforcing actions and\n                    direct error messages.\n\n                    At, ADV_FSP.3, , the developer must now,\n                    in addition to the information required at, ADV_FSP.2, , provide enough information about the SFR-supporting\n                    and SFR-non-interfering actions to show that they are not\n                    SFR-enforcing. Further, the developer must now document all of\n                    the direct error messages resulting from the invocation of\n                    SFR-enforcing TSFIs.\n\n                    At, ADV_FSP.4, , all TSFIs - whether\n                    SFR-enforcing, SFR-supporting, SFR-non-interfering - must\n                    be described to the same degree, including all of the\n                    direct error messages.\n\n                    At, ADV_FSP.5, , the TSFIs descriptions\n                    also include error messages that do not result from an\n                    invocation of a TSFI.\n\n                    At, ADV_FSP.6, , in addition to the\n                    information required by, ADV_FSP.5, , all\n                    remaining error messages are included. The developer must also\n                    provide a formal description of the TSFI. This provides an\n                    alternative view of the TSFI that may expose inconsistencies or\n                    incomplete specification.'),
('Interface-details', 'Detail about the Interfaces', 'The requirements define collections of details about TSFI\n                    to be provided.  For the purposes of the requirements,\n                    interfaces are specified (in varying degrees of detail) in\n                    terms of their purpose, method of use, parameters,\n                    parameter descriptions, and error messages.\n\n                    The\n                    purpose\n                    of an interface is a\n                    high-level description of the general goal of the\n                    interface (e.g. process GUI commands, receive network\n                    packets, provide printer output, etc.)\n\n                    The interface\'s\n                    method of use\n                    describes\n                    how the interface is supposed to be used. This description\n                    should be built around the various interactions available\n                    at that interface. For instance, if the interface were a Unix\n                    command shell,\n                    ls\n                    ,\n                    mv\n\n                    and\n                    cp\n                    would be interactions for that\n                    interface.  For each interaction the method of use\n                    describes what the interaction does, both for behaviour\n                    seen at the interface (e.g. the programmer calling the\n                    API, the Windows users changing a setting in the registry,\n                    etc.)  as well as behaviour at other interfaces\n                    (e.g. generating an audit record).\n\n\n                    Parameters\n                    are explicit inputs to and\n                    outputs from an interface that control the behaviour of\n                    that interface. For example, parameters are the arguments\n                    supplied to an API; the various fields in a packet for a\n                    given network protocol; the individual key values in the\n                    Windows Registry; the signals across a set of pins on a\n                    chip; the flags that can be set for the\n\n                    ls\n                    , etc. The parameters are\n                    ``identified\'\' with a simple list of what they are.\n\n                    A\n                    parameter description\n                    tells what the\n                    parameter is in some meaningful way. For instance, an\n                    acceptable parameter description for interface\n\n                    foo(i)\n                    would be ``parameter i is an\n                    integer that indicates the number of users currently\n                    logged in to the system\'\'. A description such as\n                    ``parameter i is an integer\'\' is not an acceptable.\n\n                    The description of an interface\'s\n                    actions\n\n                    describes what the interface does. This is more detailed\n                    than the purpose in that, while the ``purpose\'\' reveals\n                    why one might want to use it, the ``actions\'\' reveals\n                    everything that it does. These actions might be related to\n                    the SFRs or not. In cases where the interface\'s action is\n                    not related to SFRs, its description is said to be\n\n                    summarised\n                    , meaning the description\n                    merely makes clear that it is indeed not SFR-related.\n\n                    The\n                    error message description\n                    identifies\n                    the condition that generated it, what the message is, and\n                    the meaning of any error codes. An error message is\n                    generated by the TSF to signify that a problem or\n                    irregularity of some degree has been encountered. The\n                    requirements in this family refer to different kinds of\n                    error messages:, EXAMPLE-FUNCTIONAL-SPEC, An example functional specification is provided in, .'),
('subsystem-details', 'Detail about the Subsystems and Modules', 'The requirements define collections of details about\n                    subsystems and modules to be provided:, TDS_ANNEX, Subsystems and modules, and\n                    ``SFR-enforcing\'\', etc. are all further explained in\n                    greater detail in, .');

-- --------------------------------------------------------

--
-- Table structure for table `url`
--

CREATE TABLE `url` (
  `id_url` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `xref`
--

CREATE TABLE `xref` (
  `id_xref` varchar(100) NOT NULL,
  `showw` varchar(100) DEFAULT NULL,
  `ida` varchar(4) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `xref`
--

INSERT INTO `xref` (`id_xref`, `showw`, `ida`) VALUES
('ace-class-decomposition', 'link', NULL),
('ace_cco.1', 'link', NULL),
('ace_mco.1', 'link', NULL),
('aco', 'link', NULL),
('aco-annex', 'link', NULL),
('aco-family-interaction', 'link', NULL),
('aco-interactions-IT-entities', 'link', NULL),
('aco_cor', 'id', NULL),
('aco_cor.1-1', 'link', NULL),
('aco_cor.1-2', 'link', NULL),
('aco_cor.1-3', 'link', NULL),
('aco_ctt', 'id', NULL),
('aco_ctt.1.1e', 'link', NULL),
('aco_dev', 'id', NULL),
('aco_dev.1', 'link', NULL),
('aco_dev.1-2', 'link', NULL),
('aco_dev.2-4', 'link', NULL),
('aco_dev.3', 'link', NULL),
('aco_dev.3-6', 'link', NULL),
('aco_rel', 'id', NULL),
('aco_rel.1-1', 'link', NULL),
('aco_rel.1-2', 'link', NULL),
('aco_rel.2-1', 'link', NULL),
('aco_rel.2-2', 'link', NULL),
('aco_rel.2-3', 'id', NULL),
('aco_vul', 'id', NULL),
('aco_vul.1.4e', 'id', NULL),
('aco_vul.2.5e', 'id', NULL),
('aco_vul.3.5e', 'id', NULL),
('adv', 'id', NULL),
('adv-relationships', 'id', NULL),
('adv_arc', 'id', NULL),
('adv_arc.1-4', 'id', NULL),
('adv_fsp', 'id', NULL),
('adv_fsp.1', 'link', NULL),
('adv_fsp.1-1', 'link', NULL),
('adv_fsp.1-5', 'id', NULL),
('adv_fsp.2', 'link', NULL),
('adv_fsp.2-6', 'link', NULL),
('adv_fsp.2-8', 'id', NULL),
('adv_fsp.3', 'link', NULL),
('adv_fsp.3-6', 'link', NULL),
('adv_fsp.3-7', 'id', NULL),
('adv_fsp.3-8', 'id', NULL),
('adv_fsp.3-9', 'id', NULL),
('adv_fsp.4', 'link', NULL),
('adv_fsp.4-10', 'link', NULL),
('adv_fsp.5', 'link', NULL),
('adv_fsp.5-11', 'link', NULL),
('adv_fsp.5-13', 'link', NULL),
('adv_fsp.5-9', 'link', NULL),
('adv_fsp.6', 'link', NULL),
('adv_imp', 'id', NULL),
('adv_imp.1-1', 'link', NULL),
('adv_int', 'id', NULL),
('adv_int.1', 'link', NULL),
('adv_int.1-1', 'id', NULL),
('adv_int.1.1d', 'id', NULL),
('adv_int.2-1', 'id', NULL),
('adv_spm', 'id', NULL),
('adv_spm.1-10', 'link', NULL),
('adv_spm.1-3', 'link', NULL),
('adv_spm.1-5', 'link', NULL),
('adv_spm.1-6', 'link', NULL),
('adv_spm.1-7', 'link', NULL),
('adv_spm.1.1d', 'link', NULL),
('adv_tds', 'id', NULL),
('adv_tds.1', 'link', NULL),
('adv_tds.1-1', 'link', NULL),
('adv_tds.1-2', 'link', NULL),
('adv_tds.1.4c', 'id', NULL),
('adv_tds.2', 'link', NULL),
('adv_tds.2-1', 'link', NULL),
('adv_tds.2-2', 'link', NULL),
('adv_tds.2-4', 'link', NULL),
('adv_tds.2-7', 'link', NULL),
('adv_tds.3', 'link', NULL),
('adv_tds.3-1', 'link', NULL),
('adv_tds.3-10', 'link', NULL),
('adv_tds.3-2', 'link', NULL),
('adv_tds.3.10c', 'link', NULL),
('adv_tds.3.2d', 'link', NULL),
('adv_tds.4-1', 'link', NULL),
('adv_tds.4-12', 'link', NULL),
('adv_tds.4-17', 'link', NULL),
('adv_tds.4-2', 'link', NULL),
('adv_tds.4-4', 'link', NULL),
('adv_tds.4-8', 'link', NULL),
('adv_tds.4.10c', 'link', NULL),
('adv_tds.4.2d', 'link', NULL),
('agd', 'title', NULL),
('agd_ope', 'link', NULL),
('agd_ope.1.1c', 'title', NULL),
('agd_ope.1.3c', 'title', NULL),
('agd_ope.1.4c', 'title', NULL),
('agd_ope.1.7c', 'title', NULL),
('agd_pre', 'link', NULL),
('agd_pre.1', 'link', NULL),
('agd_pre.1-3', 'link', NULL),
('alc', 'none', NULL),
('alc_cmc', 'title', NULL),
('alc_cmc.1', 'link', NULL),
('alc_cmc.2.3c', 'title', NULL),
('alc_cmc.3', 'title', NULL),
('alc_cmc.3.7c', 'title', NULL),
('alc_cmc.3.8c', 'title', NULL),
('alc_cmc.4', 'title', NULL),
('alc_cmc.4-5', 'title', NULL),
('alc_cmc.4.10c', 'title', NULL),
('alc_cmc.4.5c', 'title', NULL),
('alc_cmc.4.6c', 'title', NULL),
('alc_cmc.4.9c', 'title', NULL),
('alc_cmc.5.10c', 'title', NULL),
('alc_cmc.5.12c', 'title', NULL),
('alc_cmc.5.15c', 'title', NULL),
('alc_cmc.5.16c', 'title', NULL),
('alc_cmc.5.2e', 'id', NULL),
('alc_cms', 'title', NULL),
('alc_cms.1.1c', 'title', NULL),
('alc_cms.2', 'link', NULL),
('alc_cms.2.1c', 'title', NULL),
('alc_cms.2.3c', 'title', NULL),
('alc_cms.3.1c', 'title', NULL),
('alc_cms.4', 'title', NULL),
('alc_cms.4.1c', 'title', NULL),
('alc_cms.5.1c', 'title', NULL),
('alc_del', 'link', NULL),
('alc_dvs', 'title', NULL),
('alc_flr', 'link', NULL),
('alc_flr.1-2', 'title', NULL),
('alc_flr.2-2', 'title', NULL),
('alc_flr.3-12', 'title', NULL),
('alc_flr.3-2', 'title', NULL),
('alc_lcd', 'title', NULL),
('alc_lcd.1', 'title', NULL),
('alc_tat', 'id', NULL),
('alc_tat.1.2c', 'title', NULL),
('alc_tat.2', 'id', NULL),
('alc_tat.2.3d', 'title', NULL),
('alc_tat.3', 'id', NULL),
('alc_tat.3.3d', 'title', NULL),
('ape', 'id', NULL),
('ape_ccl', 'id', NULL),
('ape_ecd', 'id', NULL),
('ape_int', 'id', NULL),
('ape_obj', 'id', NULL),
('ape_req', 'id', NULL),
('ape_spd', 'id', NULL),
('ap_factors', 'link', NULL),
('ap_rating', 'link', NULL),
('arc_annex', 'title', NULL),
('ase', 'id', NULL),
('ase-app-reuse-pp2', 'link', NULL),
('ase_ccl.1.6c', 'link', NULL),
('ase_spd', 'link', NULL),
('assurance-class-structure', 'none', NULL),
('assurance-component-structure', 'none', NULL),
('assurance-family-structure', 'none', NULL),
('assurance-requirements-cap-structure', 'link', NULL),
('ate', 'id', NULL),
('ate_cov', 'link', NULL),
('ate_dpt', 'link', NULL),
('ate_dpt.1', 'link', NULL),
('ate_dpt.1-1', 'title', NULL),
('ate_dpt.2-1', 'title', NULL),
('ate_dpt.2-2', 'id', NULL),
('ate_dpt.2-4', 'id', NULL),
('ate_dpt.3-1', 'title', NULL),
('ate_dpt.3-4', 'title', NULL),
('ate_fun', 'link', NULL),
('ate_fun.1.1e', 'link', NULL),
('ate_fun.1.3c', 'id', NULL),
('ate_ind', 'id', NULL),
('ate_ind.2', 'link', NULL),
('ate_ind.2-1', 'link', NULL),
('ate_ind.2-2', 'link', NULL),
('ate_ind.2-3', 'link', NULL),
('ate_ind.2-4', 'link', NULL),
('ate_ind.2-6', 'link', NULL),
('ate_ind.2.2e', 'link', NULL),
('ate_ind.2.3e', 'link', NULL),
('ate_sc_man1', 'link', NULL),
('ate_sc_man2', 'link', NULL),
('ate_sc_man3', 'title', NULL),
('ava', 'id', NULL),
('ava-van-annex', 'link', NULL),
('ava_van', 'id', NULL),
('ava_van.1', 'link', NULL),
('ava_van.1-2', 'link', NULL),
('ava_van.1-5', 'link', NULL),
('ava_van.1.1e', 'link', NULL),
('ava_van.1.3e', 'link', NULL),
('ava_van.2', 'link', NULL),
('ava_van.2-2', 'link', NULL),
('ava_van.2-4', 'id', NULL),
('ava_van.2-6', 'link', NULL),
('ava_van.2.1e', 'link', NULL),
('ava_van.2.3e', 'link', NULL),
('ava_van.2.4e', 'link', NULL),
('ava_van.3', 'link', NULL),
('ava_van.3-2', 'link', NULL),
('ava_van.3-4', 'id', NULL),
('ava_van.3-6', 'link', NULL),
('ava_van.3.1e', 'link', NULL),
('ava_van.3.3e', 'link', NULL),
('ava_van.3.4e', 'link', NULL),
('ava_van.4-3', 'id', NULL),
('ava_van.4-5', 'link', NULL),
('ava_van.4-6', 'link', NULL),
('ava_van.4-7', 'link', NULL),
('capclause', 'link', NULL),
('component-changes-highlighting', 'none', NULL),
('component-structure', 'none', NULL),
('components-operations', 'none', NULL),
('eval-guidance-sampling', 'title', NULL),
('eval-guidance-site-visits', 'title', NULL),
('evaluation_of_a_ppconfiguration', 'link', NULL),
('example-functional-spec', 'link', NULL),
('family-structure', 'none', NULL),
('fau_gen.1', 'link', NULL),
('fco_nro.2', 'link', NULL),
('fdp_acc', 'link', NULL),
('fdp_acc.1', 'id', NULL),
('fdp_ifc', 'link', NULL),
('fdp_rip', 'link', NULL),
('fdp_rip.1', 'link', NULL),
('fdp_rol.1', 'link', NULL),
('fia', 'link', NULL),
('fia_sos.1', 'id', NULL),
('fia_uau.1', 'id', NULL),
('fia_uid', 'link', NULL),
('fia_uid.1', 'id', NULL),
('focused', 'link', NULL),
('formal_methods_annex', 'link', NULL),
('fpr_ano.2', 'id', NULL),
('fpr_uno', 'link', NULL),
('fpr_uno.1', 'link', NULL),
('methodical', 'link', NULL),
('security-functional-components-class-structure', 'none', NULL),
('Security-Requirements-Annex', 'none', NULL),
('Specification-of-Protection-Profiles', 'none', NULL),
('Specification-of-Security-Targets', 'none', NULL),
('table-pp-assurance', 'link', NULL),
('tds_annex', 'title', NULL),
('TSFI-determination', 'title', NULL),
('weighted_parameters', 'link', NULL),
('when_to_use_ap', 'none', NULL);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `acapplicationnotes`
--
ALTER TABLE `acapplicationnotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `acintroduction`
--
ALTER TABLE `acintroduction`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `aclass`
--
ALTER TABLE `aclass`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `acoapplicationnotes`
--
ALTER TABLE `acoapplicationnotes`
  ADD PRIMARY KEY (`id_acoapplicationnotes`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `acodependsoncomponent`
--
ALTER TABLE `acodependsoncomponent`
  ADD PRIMARY KEY (`id_acodependsoncomponent`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `acohierarchical`
--
ALTER TABLE `acohierarchical`
  ADD PRIMARY KEY (`id_acohierarchical`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `acomponent`
--
ALTER TABLE `acomponent`
  ADD PRIMARY KEY (`id_acomponent`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `acoobjectives`
--
ALTER TABLE `acoobjectives`
  ADD PRIMARY KEY (`id_acoobjectives`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `acoverview`
--
ALTER TABLE `acoverview`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `aecontent`
--
ALTER TABLE `aecontent`
  ADD PRIMARY KEY (`id_aecontent`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`),
  ADD KEY `id_acomponent` (`id_acomponent`);

--
-- Indexes for table `aedcelement`
--
ALTER TABLE `aedcelement`
  ADD PRIMARY KEY (`id_aedcelement`);

--
-- Indexes for table `aedeveloper`
--
ALTER TABLE `aedeveloper`
  ADD PRIMARY KEY (`id_aedeveloper`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`),
  ADD KEY `id_acomponent` (`id_acomponent`);

--
-- Indexes for table `aeevaluator`
--
ALTER TABLE `aeevaluator`
  ADD PRIMARY KEY (`id_aeevaluator`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`),
  ADD KEY `id_acomponent` (`id_acomponent`);

--
-- Indexes for table `afamily`
--
ALTER TABLE `afamily`
  ADD PRIMARY KEY (`id_afamily`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `afapplicationnotes`
--
ALTER TABLE `afapplicationnotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `aflevellingcriteria`
--
ALTER TABLE `aflevellingcriteria`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `afobjectives`
--
ALTER TABLE `afobjectives`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `afoverview`
--
ALTER TABLE `afoverview`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `bold`
--
ALTER TABLE `bold`
  ADD PRIMARY KEY (`id_bold`);

--
-- Indexes for table `eal`
--
ALTER TABLE `eal`
  ADD PRIMARY KEY (`id_eal`);

--
-- Indexes for table `ealassurancecomponents`
--
ALTER TABLE `ealassurancecomponents`
  ADD PRIMARY KEY (`id_ealassurancecomponents`),
  ADD KEY `id_eal` (`id_eal`);

--
-- Indexes for table `ealcomponent`
--
ALTER TABLE `ealcomponent`
  ADD PRIMARY KEY (`acomponent`),
  ADD KEY `id_eal` (`id_eal`);

--
-- Indexes for table `ealobjectives`
--
ALTER TABLE `ealobjectives`
  ADD PRIMARY KEY (`id_ealobjectives`),
  ADD KEY `id_eal` (`id_eal`);

--
-- Indexes for table `fcinformativenotes`
--
ALTER TABLE `fcinformativenotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcintroduction`
--
ALTER TABLE `fcintroduction`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fclass`
--
ALTER TABLE `fclass`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `fcoaudit`
--
ALTER TABLE `fcoaudit`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcodependencies`
--
ALTER TABLE `fcodependencies`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcoevaluatornotes`
--
ALTER TABLE `fcoevaluatornotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcohierarchical`
--
ALTER TABLE `fcohierarchical`
  ADD UNIQUE KEY `fcomponent` (`fcomponent`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcolevelling`
--
ALTER TABLE `fcolevelling`
  ADD UNIQUE KEY `id` (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcomanagement`
--
ALTER TABLE `fcomanagement`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcomponent`
--
ALTER TABLE `fcomponent`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcorationale`
--
ALTER TABLE `fcorationale`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `fcousernotes`
--
ALTER TABLE `fcousernotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `feassignmentitem`
--
ALTER TABLE `feassignmentitem`
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `feassignmentnotes`
--
ALTER TABLE `feassignmentnotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `felement`
--
ALTER TABLE `felement`
  ADD PRIMARY KEY (`idr`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `ffamily`
--
ALTER TABLE `ffamily`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `ffbehaviour`
--
ALTER TABLE `ffbehaviour`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `ffevaluatornotes`
--
ALTER TABLE `ffevaluatornotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `ffusernotes`
--
ALTER TABLE `ffusernotes`
  ADD UNIQUE KEY `id` (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `item`
--
ALTER TABLE `item`
  ADD PRIMARY KEY (`id_item`);

--
-- Indexes for table `list`
--
ALTER TABLE `list`
  ADD PRIMARY KEY (`id_list`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `listassurancerequirements`
--
ALTER TABLE `listassurancerequirements`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `listfco`
--
ALTER TABLE `listfco`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `listitems`
--
ALTER TABLE `listitems`
  ADD UNIQUE KEY `id` (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `listitemsfcousernotes`
--
ALTER TABLE `listitemsfcousernotes`
  ADD UNIQUE KEY `id` (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `listitemsffusernotes`
--
ALTER TABLE `listitemsffusernotes`
  ADD UNIQUE KEY `id` (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `listOfAcOverview`
--
ALTER TABLE `listOfAcOverview`
  ADD PRIMARY KEY (`id_listOfAcOverview`);

--
-- Indexes for table `listOfMaApplicationNotes`
--
ALTER TABLE `listOfMaApplicationNotes`
  ADD PRIMARY KEY (`id_listOfMaApplicationNotes`);

--
-- Indexes for table `listOfMaIntroduction`
--
ALTER TABLE `listOfMaIntroduction`
  ADD PRIMARY KEY (`id_listOfMaIntroduction`);

--
-- Indexes for table `maapplicationnotes`
--
ALTER TABLE `maapplicationnotes`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `maintroduction`
--
ALTER TABLE `maintroduction`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `maobjectives`
--
ALTER TABLE `maobjectives`
  ADD PRIMARY KEY (`id`),
  ADD KEY `ida` (`ida`);

--
-- Indexes for table `msaapplicationnotes`
--
ALTER TABLE `msaapplicationnotes`
  ADD PRIMARY KEY (`id_msaapplicationnotes`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `msainput`
--
ALTER TABLE `msainput`
  ADD PRIMARY KEY (`id_msainput`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `msaobjectives`
--
ALTER TABLE `msaobjectives`
  ADD PRIMARY KEY (`id_msaobjectives`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `mworkunit`
--
ALTER TABLE `mworkunit`
  ADD PRIMARY KEY (`id_mworkunit`),
  ADD KEY `ida` (`ida`),
  ADD KEY `idf` (`idf`),
  ADD KEY `id_acomponent` (`id_acomponent`),
  ADD KEY `id_aeevaluator` (`id_aeevaluator`);

--
-- Indexes for table `para`
--
ALTER TABLE `para`
  ADD PRIMARY KEY (`id_para`);

--
-- Indexes for table `parasequence`
--
ALTER TABLE `parasequence`
  ADD PRIMARY KEY (`id_parasequence`),
  ADD KEY `id_subclausess` (`id_subclausess`),
  ADD KEY `id_para` (`id_para`),
  ADD KEY `id_figure` (`id_figure`),
  ADD KEY `id_acronym` (`id_acronym`),
  ADD KEY `id_biblioentry` (`id_biblioentry`),
  ADD KEY `id_glossentry` (`id_glossentry`),
  ADD KEY `id_table` (`id_table`),
  ADD KEY `id_example` (`id_example`);

--
-- Indexes for table `relation`
--
ALTER TABLE `relation`
  ADD PRIMARY KEY (`id_padre`,`id_figlio`);

--
-- Indexes for table `requirementsselectedlist`
--
ALTER TABLE `requirementsselectedlist`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `subclause`
--
ALTER TABLE `subclause`
  ADD PRIMARY KEY (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `subclausepara`
--
ALTER TABLE `subclausepara`
  ADD UNIQUE KEY `id` (`id`),
  ADD KEY `idf` (`idf`);

--
-- Indexes for table `subclausess`
--
ALTER TABLE `subclausess`
  ADD PRIMARY KEY (`id_subclausess`);

--
-- Indexes for table `url`
--
ALTER TABLE `url`
  ADD PRIMARY KEY (`id_url`);

--
-- Indexes for table `xref`
--
ALTER TABLE `xref`
  ADD PRIMARY KEY (`id_xref`),
  ADD KEY `ida` (`ida`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `bold`
--
ALTER TABLE `bold`
  MODIFY `id_bold` int(11) NOT NULL AUTO_INCREMENT;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `acapplicationnotes`
--
ALTER TABLE `acapplicationnotes`
  ADD CONSTRAINT `acapplicationnotes_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `acintroduction`
--
ALTER TABLE `acintroduction`
  ADD CONSTRAINT `acintroduction_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `acoapplicationnotes`
--
ALTER TABLE `acoapplicationnotes`
  ADD CONSTRAINT `acoapplicationnotes_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `acoapplicationnotes_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `acodependsoncomponent`
--
ALTER TABLE `acodependsoncomponent`
  ADD CONSTRAINT `acodependsoncomponent_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `acodependsoncomponent_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `acohierarchical`
--
ALTER TABLE `acohierarchical`
  ADD CONSTRAINT `acohierarchical_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `acohierarchical_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `acomponent`
--
ALTER TABLE `acomponent`
  ADD CONSTRAINT `acomponent_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `acomponent_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `acoobjectives`
--
ALTER TABLE `acoobjectives`
  ADD CONSTRAINT `acoobjectives_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `acoobjectives_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `acoverview`
--
ALTER TABLE `acoverview`
  ADD CONSTRAINT `acoverview_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `aecontent`
--
ALTER TABLE `aecontent`
  ADD CONSTRAINT `aecontent_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `aecontent_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `aecontent_ibfk_3` FOREIGN KEY (`id_acomponent`) REFERENCES `acomponent` (`id_acomponent`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `aedeveloper`
--
ALTER TABLE `aedeveloper`
  ADD CONSTRAINT `aedeveloper_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `aedeveloper_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `aedeveloper_ibfk_3` FOREIGN KEY (`id_acomponent`) REFERENCES `acomponent` (`id_acomponent`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `aeevaluator`
--
ALTER TABLE `aeevaluator`
  ADD CONSTRAINT `aeevaluator_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `aeevaluator_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `aeevaluator_ibfk_3` FOREIGN KEY (`id_acomponent`) REFERENCES `acomponent` (`id_acomponent`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `afamily`
--
ALTER TABLE `afamily`
  ADD CONSTRAINT `afamily_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `afapplicationnotes`
--
ALTER TABLE `afapplicationnotes`
  ADD CONSTRAINT `afapplicationnotes_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `afapplicationnotes_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `aflevellingcriteria`
--
ALTER TABLE `aflevellingcriteria`
  ADD CONSTRAINT `aflevellingcriteria_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `aflevellingcriteria_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `afobjectives`
--
ALTER TABLE `afobjectives`
  ADD CONSTRAINT `afobjectives_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `afobjectives_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `afoverview`
--
ALTER TABLE `afoverview`
  ADD CONSTRAINT `afoverview_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `afoverview_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `ealassurancecomponents`
--
ALTER TABLE `ealassurancecomponents`
  ADD CONSTRAINT `ealassurancecomponents_ibfk_1` FOREIGN KEY (`id_eal`) REFERENCES `eal` (`id_eal`);

--
-- Constraints for table `ealcomponent`
--
ALTER TABLE `ealcomponent`
  ADD CONSTRAINT `ealcomponent_ibfk_1` FOREIGN KEY (`id_eal`) REFERENCES `eal` (`id_eal`);

--
-- Constraints for table `ealobjectives`
--
ALTER TABLE `ealobjectives`
  ADD CONSTRAINT `ealobjectives_ibfk_1` FOREIGN KEY (`id_eal`) REFERENCES `eal` (`id_eal`);

--
-- Constraints for table `fcinformativenotes`
--
ALTER TABLE `fcinformativenotes`
  ADD CONSTRAINT `fcinformativenotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fclass` (`id`);

--
-- Constraints for table `fcintroduction`
--
ALTER TABLE `fcintroduction`
  ADD CONSTRAINT `fcintroduction_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fclass` (`id`);

--
-- Constraints for table `fcoaudit`
--
ALTER TABLE `fcoaudit`
  ADD CONSTRAINT `fcoaudit_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `fcodependencies`
--
ALTER TABLE `fcodependencies`
  ADD CONSTRAINT `fcodependencies_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`);

--
-- Constraints for table `fcoevaluatornotes`
--
ALTER TABLE `fcoevaluatornotes`
  ADD CONSTRAINT `fcoevaluatornotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `fcohierarchical`
--
ALTER TABLE `fcohierarchical`
  ADD CONSTRAINT `fcohierarchical_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`);

--
-- Constraints for table `fcolevelling`
--
ALTER TABLE `fcolevelling`
  ADD CONSTRAINT `fcolevelling_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `fcomanagement`
--
ALTER TABLE `fcomanagement`
  ADD CONSTRAINT `fcomanagement_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `fcomponent`
--
ALTER TABLE `fcomponent`
  ADD CONSTRAINT `fcomponent_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `ffamily` (`id`);

--
-- Constraints for table `fcorationale`
--
ALTER TABLE `fcorationale`
  ADD CONSTRAINT `fcorationale_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `fcousernotes`
--
ALTER TABLE `fcousernotes`
  ADD CONSTRAINT `fcousernotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `feassignmentitem`
--
ALTER TABLE `feassignmentitem`
  ADD CONSTRAINT `feassignmentitem_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `felement` (`idr`) ON UPDATE CASCADE;

--
-- Constraints for table `feassignmentnotes`
--
ALTER TABLE `feassignmentnotes`
  ADD CONSTRAINT `feassignmentnotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `felement` (`idr`) ON UPDATE CASCADE;

--
-- Constraints for table `felement`
--
ALTER TABLE `felement`
  ADD CONSTRAINT `felement_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcomponent` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `ffamily`
--
ALTER TABLE `ffamily`
  ADD CONSTRAINT `ffamily_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fclass` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `ffbehaviour`
--
ALTER TABLE `ffbehaviour`
  ADD CONSTRAINT `ffbehaviour_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `ffamily` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `ffevaluatornotes`
--
ALTER TABLE `ffevaluatornotes`
  ADD CONSTRAINT `ffevaluatornotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `ffamily` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `ffusernotes`
--
ALTER TABLE `ffusernotes`
  ADD CONSTRAINT `ffusernotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `ffamily` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `list`
--
ALTER TABLE `list`
  ADD CONSTRAINT `list_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `listitems`
--
ALTER TABLE `listitems`
  ADD CONSTRAINT `listitems_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcinformativenotes` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `listitemsfcousernotes`
--
ALTER TABLE `listitemsfcousernotes`
  ADD CONSTRAINT `listitemsfcousernotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fcousernotes` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `listitemsffusernotes`
--
ALTER TABLE `listitemsffusernotes`
  ADD CONSTRAINT `listitemsffusernotes_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `ffusernotes` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `maapplicationnotes`
--
ALTER TABLE `maapplicationnotes`
  ADD CONSTRAINT `maapplicationnotes_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `maintroduction`
--
ALTER TABLE `maintroduction`
  ADD CONSTRAINT `maintroduction_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `maobjectives`
--
ALTER TABLE `maobjectives`
  ADD CONSTRAINT `maobjectives_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`);

--
-- Constraints for table `msaapplicationnotes`
--
ALTER TABLE `msaapplicationnotes`
  ADD CONSTRAINT `msaapplicationnotes_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `msaapplicationnotes_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `msainput`
--
ALTER TABLE `msainput`
  ADD CONSTRAINT `msainput_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `msainput_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `msaobjectives`
--
ALTER TABLE `msaobjectives`
  ADD CONSTRAINT `msaobjectives_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `msaobjectives_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `mworkunit`
--
ALTER TABLE `mworkunit`
  ADD CONSTRAINT `mworkunit_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`),
  ADD CONSTRAINT `mworkunit_ibfk_2` FOREIGN KEY (`idf`) REFERENCES `afamily` (`id_afamily`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `mworkunit_ibfk_3` FOREIGN KEY (`id_acomponent`) REFERENCES `acomponent` (`id_acomponent`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `mworkunit_ibfk_4` FOREIGN KEY (`id_aeevaluator`) REFERENCES `aeevaluator` (`id_aeevaluator`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `parasequence`
--
ALTER TABLE `parasequence`
  ADD CONSTRAINT `parasequence_ibfk_1` FOREIGN KEY (`id_subclausess`) REFERENCES `subclausess` (`id_subclausess`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_2` FOREIGN KEY (`id_para`) REFERENCES `para` (`id_para`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_3` FOREIGN KEY (`id_figure`) REFERENCES `figure` (`id_figure`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_4` FOREIGN KEY (`id_acronym`) REFERENCES `acronym` (`id_acronym`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_5` FOREIGN KEY (`id_biblioentry`) REFERENCES `biblioentry` (`id_biblioentry`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_6` FOREIGN KEY (`id_glossentry`) REFERENCES `glossentry` (`id_glossentry`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_7` FOREIGN KEY (`id_table`) REFERENCES `tablee` (`id_table`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `parasequence_ibfk_8` FOREIGN KEY (`id_example`) REFERENCES `example` (`id_example`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Constraints for table `subclause`
--
ALTER TABLE `subclause`
  ADD CONSTRAINT `subclause_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `fclass` (`id`);

--
-- Constraints for table `subclausepara`
--
ALTER TABLE `subclausepara`
  ADD CONSTRAINT `subclausepara_ibfk_1` FOREIGN KEY (`idf`) REFERENCES `subclause` (`id`) ON UPDATE CASCADE;

--
-- Constraints for table `xref`
--
ALTER TABLE `xref`
  ADD CONSTRAINT `xref_ibfk_1` FOREIGN KEY (`ida`) REFERENCES `aclass` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
